;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Wed Dec 11 16:27:34 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$5


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$11)

$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$9


$C$DW$12	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$12, DW_AT_name("latch_dac")
	.dwattr $C$DW$12, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$12, DW_AT_declaration
	.dwattr $C$DW$12, DW_AT_external
	.dwendtag $C$DW$12


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwendtag $C$DW$13


$C$DW$14	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$14, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$14, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$14, DW_AT_declaration
	.dwattr $C$DW$14, DW_AT_external
$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$14


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("conf_default")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("ad7738_init")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwendtag $C$DW$17


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$36)

$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$18


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("SPICAN_T0_RTS")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("dac_setmode")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$23


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("maf_rst")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("velf_rst")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27

$C$DW$28	.dwtag  DW_TAG_variable
	.dwattr $C$DW$28, DW_AT_name("UNITS")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external

$C$DW$29	.dwtag  DW_TAG_variable
	.dwattr $C$DW$29, DW_AT_name("METHOD")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external

$C$DW$30	.dwtag  DW_TAG_variable
	.dwattr $C$DW$30, DW_AT_name("BAUD")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$337)
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("BITMAP")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("LPV")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("INTERFACE")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("ds1820start")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwendtag $C$DW$34


$C$DW$35	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$35, DW_AT_name("configCAN")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwendtag $C$DW$35


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("SPICANInit")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("extio_init")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("gpio_init")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("ssr_set")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$36)

$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$39


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$42


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("lcd_init")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwendtag $C$DW$44


$C$DW$45	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$45, DW_AT_name("lcd_clear")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwendtag $C$DW$45


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("led_init")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("led_set")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$36)

$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$47


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwendtag $C$DW$50


$C$DW$51	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$51, DW_AT_name("delay_us")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$51


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("InitECan")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwendtag $C$DW$53


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("flash_init")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwendtag $C$DW$55


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("shunt_switch")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$56


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("reboot")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwendtag $C$DW$58


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("sys_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$163)

$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$60


$C$DW$63	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$63, DW_AT_name("lcd_puts")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$163)

$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$63


$C$DW$66	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$66, DW_AT_name("scia_init")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$66


$C$DW$68	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$68, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$68

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$70	.dwtag  DW_TAG_variable
	.dwattr $C$DW$70, DW_AT_name("cmd_mode")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$70, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$70, DW_AT_external


$C$DW$71	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$71, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$71, DW_AT_declaration
	.dwattr $C$DW$71, DW_AT_external
	.dwendtag $C$DW$71


$C$DW$72	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$72, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$163)

$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$72


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("scia_puts")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$75


$C$DW$77	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$77, DW_AT_name("sprintf")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$163)

$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$179)

$C$DW$80	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$77


$C$DW$81	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$81, DW_AT_name("SPICANRead")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$81


$C$DW$83	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$83, DW_AT_name("scia_getparam")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$163)

$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$163)

$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$83

$C$DW$87	.dwtag  DW_TAG_variable
	.dwattr $C$DW$87, DW_AT_name("port4004")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external

$C$DW$88	.dwtag  DW_TAG_variable
	.dwattr $C$DW$88, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external


$C$DW$89	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$89, DW_AT_name("atoi")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
$C$DW$90	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$89

$C$DW$91	.dwtag  DW_TAG_variable
	.dwattr $C$DW$91, DW_AT_name("port400e")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$92	.dwtag  DW_TAG_variable
	.dwattr $C$DW$92, DW_AT_name("autoidchanged")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$92, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$92, DW_AT_external

$C$DW$93	.dwtag  DW_TAG_variable
	.dwattr $C$DW$93, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external

$C$DW$94	.dwtag  DW_TAG_variable
	.dwattr $C$DW$94, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external

$C$DW$95	.dwtag  DW_TAG_variable
	.dwattr $C$DW$95, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external

$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external

$C$DW$97	.dwtag  DW_TAG_variable
	.dwattr $C$DW$97, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("conf_write")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwendtag $C$DW$101


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwendtag $C$DW$102


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
$C$DW$106	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$105


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("conf_read")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwendtag $C$DW$107


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("tagdetect")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$108


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$163)

$C$DW$112	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$110


$C$DW$113	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$113, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$113, DW_AT_declaration
	.dwattr $C$DW$113, DW_AT_external
	.dwendtag $C$DW$113


$C$DW$114	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$114, DW_AT_name("strtod")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$179)

$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$357)

	.dwendtag $C$DW$114

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$117	.dwtag  DW_TAG_variable
	.dwattr $C$DW$117, DW_AT_name("VEL_U")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$117, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$117, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$118	.dwtag  DW_TAG_variable
	.dwattr $C$DW$118, DW_AT_name("POS_U")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$118, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$118, DW_AT_external


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$119


$C$DW$121	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$121, DW_AT_name("memcpy")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$121, DW_AT_declaration
	.dwattr $C$DW$121, DW_AT_external
$C$DW$122	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$3)

$C$DW$123	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$148)

$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$121


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("atol")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$125


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
	.dwendtag $C$DW$127


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("ds1820read")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
	.dwendtag $C$DW$128


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("prod_getnext")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
	.dwendtag $C$DW$129

$C$DW$130	.dwtag  DW_TAG_variable
	.dwattr $C$DW$130, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external

$C$DW$131	.dwtag  DW_TAG_variable
	.dwattr $C$DW$131, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
	.dwendtag $C$DW$133


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("strlen")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
$C$DW$135	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$134


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
	.dwendtag $C$DW$136


$C$DW$137	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$137, DW_AT_name("prod_getavail")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external
	.dwendtag $C$DW$137

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$138	.dwtag  DW_TAG_variable
	.dwattr $C$DW$138, DW_AT_name("autoid")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$138, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$138, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("tagwasthere")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$139, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$139, DW_AT_external


$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("tagid")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$140, DW_AT_declaration
	.dwattr $C$DW$140, DW_AT_external
$C$DW$141	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$140

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("rtc")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$142, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$142, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$143, DW_AT_declaration
	.dwattr $C$DW$143, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$144	.dwtag  DW_TAG_variable
	.dwattr $C$DW$144, DW_AT_name("tsensor")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$144, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$144, DW_AT_external

$C$DW$145	.dwtag  DW_TAG_variable
	.dwattr $C$DW$145, DW_AT_name("_ctypes_")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$146	.dwtag  DW_TAG_variable
	.dwattr $C$DW$146, DW_AT_name("fileOb")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$146, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$146, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("Fatfs")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$147, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$147, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("conf_data")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\326802 C:\\Users\\ebenton\\AppData\\Local\\Temp\\326804 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\3268012 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$149	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$149, DW_AT_name("update_units")
	.dwattr $C$DW$149, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$149, DW_AT_high_pc(0x00)
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$149, DW_AT_external
	.dwattr $C$DW$149, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$149, DW_AT_TI_begin_line(0x17a7)
	.dwattr $C$DW$149, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$149, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6055,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("buff")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6055 | void update_units(void) {                                              
; 6057 | int l;                                                                 
; 6058 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6060,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6060 | lcd_clear();                                                           
; 6061 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$151, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6060| 
        ; call occurs [#_lcd_clear] ; [] |6060| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6062,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6062 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6062| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6062| 
        ADDL      XAR4,ACC              ; [CPU_] |6062| 
        MOV       AL,AR1                ; [CPU_] |6062| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6062| 
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$152, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6062| 
        ; call occurs [#_lcd_puts] ; [] |6062| 
	.dwpsn	file "../Source/prod.c",line 6063,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6063 | switch (conf_data.vfd[l].what) {                                       
; 6064 | case VFD_LOAD:                                                         
; 6065 | case VFD_PEAK:                                                         
; 6066 | case VFD_VALL:                                                         
; 6067 | case VFD_POSI:                                                         
; 6068 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6063| 
        CMPB      AL,#4                 ; [CPU_] |6063| 
        B         $C$L2,LOS             ; [CPU_] |6063| 
        ; branchcc occurs ; [] |6063| 
        CMPB      AL,#5                 ; [CPU_] |6063| 
        B         $C$L8,EQ              ; [CPU_] |6063| 
        ; branchcc occurs ; [] |6063| 
        CMPB      AL,#6                 ; [CPU_] |6063| 
        B         $C$L7,EQ              ; [CPU_] |6063| 
        ; branchcc occurs ; [] |6063| 
        B         $C$L10,UNC            ; [CPU_] |6063| 
        ; branch occurs ; [] |6063| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6069,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6069 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6069| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6069| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6069| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6069| 
        ADDB      AL,#1                 ; [CPU_] |6069| 
        MOVL      XAR4,XAR3             ; [CPU_] |6069| 
        MOV       *-SP[3],AL            ; [CPU_] |6069| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("_sprintf")
	.dwattr $C$DW$153, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6069| 
        ; call occurs [#_sprintf] ; [] |6069| 
	.dwpsn	file "../Source/prod.c",line 6070,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6070 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6070| 
        ADD       AL,AR1                ; [CPU_] |6070| 
        MOVL      XAR4,XAR3             ; [CPU_] |6070| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6070| 
        ; call occurs [#_lcd_puts] ; [] |6070| 
	.dwpsn	file "../Source/prod.c",line 6071,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6071 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6071| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6071| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6071| 
        B         $C$L3,EQ              ; [CPU_] |6071| 
        ; branchcc occurs ; [] |6071| 
	.dwpsn	file "../Source/prod.c",line 6072,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6072 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6072| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6072| 
        ADD       AL,AR1                ; [CPU_] |6072| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6072| 
        ; call occurs [#_lcd_puts] ; [] |6072| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6075,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6075 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6076 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6075| 
        CMPB      AL,#3                 ; [CPU_] |6075| 
        B         $C$L6,EQ              ; [CPU_] |6075| 
        ; branchcc occurs ; [] |6075| 
	.dwpsn	file "../Source/prod.c",line 6077,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6077 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6078 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6079 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6077| 
        CMPB      AL,#4                 ; [CPU_] |6077| 
        B         $C$L5,EQ              ; [CPU_] |6077| 
        ; branchcc occurs ; [] |6077| 
	.dwpsn	file "../Source/prod.c",line 6080,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6080 | lcd_puts(                                                              
; 6081 |                 (char*) UNITS[0x0f                                     
; 6082 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6083 |                 18 + 20 * l);                                          
; 6085 | break;                                                                 
; 6086 | case VFD_LIMIT:                                                        
; 6087 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6088 | lcd_puts(buff, 5 + 20 * l);                                            
; 6089 | break;                                                                 
; 6090 | case VFD_TEMP:                                                         
; 6091 | #if(VFD==1)                                                            
; 6092 | buff[0] = 0xb0;                                                        
; 6093 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6080| 
        MOV       T,#10                 ; [CPU_] |6080| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6080| 
        ADDL      ACC,XAR6              ; [CPU_] |6080| 
        MOVL      XAR4,ACC              ; [CPU_] |6080| 
        MOVB      XAR0,#42              ; [CPU_] |6080| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6080| 
        MPYB      ACC,T,#152            ; [CPU_] |6080| 
        ADDL      ACC,XAR6              ; [CPU_] |6080| 
        MOVL      XAR4,ACC              ; [CPU_] |6080| 
        MOVB      XAR0,#125             ; [CPU_] |6080| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6080| 
        ANDB      AL,#0x0f              ; [CPU_] |6080| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6080| 
        MOV       ACC,AL << 1           ; [CPU_] |6080| 
        ADDL      XAR4,ACC              ; [CPU_] |6080| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6080| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6080| 
        B         $C$L9,UNC             ; [CPU_] |6080| 
        ; branch occurs ; [] |6080| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6078,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6078| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6078| 
	.dwpsn	file "../Source/prod.c",line 6079,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6079| 
        ; branch occurs ; [] |6079| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6076,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6076| 
	.dwpsn	file "../Source/prod.c",line 6077,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6077| 
        ; branch occurs ; [] |6077| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6094,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6094 | buff[0] = 0xdf;                                                        
; 6095 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6094| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6094| 
	.dwpsn	file "../Source/prod.c",line 6096,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6096 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6096| 
	.dwpsn	file "../Source/prod.c",line 6097,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6097 | buff[2] = '\0';                                                        
; 6098 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6097| 
	.dwpsn	file "../Source/prod.c",line 6099,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6099 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6099| 
        ; branch occurs ; [] |6099| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6087,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6087| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6087| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6087| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6087| 
        ADDB      AL,#1                 ; [CPU_] |6087| 
        MOVL      XAR4,XAR3             ; [CPU_] |6087| 
        MOV       *-SP[3],AL            ; [CPU_] |6087| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_sprintf")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6087| 
        ; call occurs [#_sprintf] ; [] |6087| 
	.dwpsn	file "../Source/prod.c",line 6088,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6088| 
        MOVL      XAR4,XAR3             ; [CPU_] |6088| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6088| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6088| 
        ; call occurs [#_lcd_puts] ; [] |6088| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6061,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6061| 
        SUBB      XAR6,#1               ; [CPU_U] |6061| 
        MOVZ      AR0,AR6               ; [CPU_] |6061| 
        ADDB      XAR2,#3               ; [CPU_] |6061| 
        ADDB      XAR1,#20              ; [CPU_] |6061| 
        MOV       *-SP[4],AR6           ; [CPU_] |6061| 
        CMP       AR0,#-1               ; [CPU_] |6061| 
        B         $C$L1,NEQ             ; [CPU_] |6061| 
        ; branchcc occurs ; [] |6061| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$149, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$149, DW_AT_TI_end_line(0x17d6)
	.dwattr $C$DW$149, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$149

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$159	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$159, DW_AT_name("print_vfd")
	.dwattr $C$DW$159, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$159, DW_AT_high_pc(0x00)
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$159, DW_AT_external
	.dwattr $C$DW$159, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$159, DW_AT_TI_begin_line(0x1732)
	.dwattr $C$DW$159, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$159, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5938,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$160	.dwtag  DW_TAG_variable
	.dwattr $C$DW$160, DW_AT_name("buff")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5938 | void print_vfd(void) {                                                 
; 5939 | int l;                                                                 
; 5940 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$161	.dwtag  DW_TAG_variable
	.dwattr $C$DW$161, DW_AT_name("l")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5942,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5942| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("_scia_puts")
	.dwattr $C$DW$162, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5942| 
        ; call occurs [#_scia_puts] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5943,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5943 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5943| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5944,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5944 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5944| 
        MOVB      AL,#1                 ; [CPU_] |5944| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5944| 
        ADD       AL,AR1                ; [CPU_] |5944| 
        MOV       *-SP[3],AL            ; [CPU_] |5944| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5944| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5944| 
        ADDL      XAR4,ACC              ; [CPU_] |5944| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5944| 
        MOVL      XAR4,XAR3             ; [CPU_] |5944| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5944| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("_sprintf")
	.dwattr $C$DW$163, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5944| 
        ; call occurs [#_sprintf] ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5945,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5945| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5945| 
        ; call occurs [#_scia_puts] ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5947,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5947 | switch (conf_data.vfd[l].what) {                                       
; 5948 | case VFD_LOAD:                                                         
; 5949 | case VFD_PEAK:                                                         
; 5950 | case VFD_VALL:                                                         
; 5951 | case VFD_POSI:                                                         
; 5952 | case VFD_VELO:                                                         
; 5953 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5954 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5955 |         scia_puts(buff);                                               
; 5956 |         break;                                                         
; 5957 | case VFD_LIMIT:                                                        
; 5958 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5959 |         scia_puts(buff);                                               
; 5960 |         break;                                                         
; 5961 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5947| 
        CMPB      AL,#4                 ; [CPU_] |5947| 
        B         $C$L13,LOS            ; [CPU_] |5947| 
        ; branchcc occurs ; [] |5947| 
        CMPB      AL,#5                 ; [CPU_] |5947| 
        B         $C$L12,EQ             ; [CPU_] |5947| 
        ; branchcc occurs ; [] |5947| 
        CMPB      AL,#6                 ; [CPU_] |5947| 
        B         $C$L16,NEQ            ; [CPU_] |5947| 
        ; branchcc occurs ; [] |5947| 
	.dwpsn	file "../Source/prod.c",line 5962,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5962 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5962| 
	.dwpsn	file "../Source/prod.c",line 5963,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5963 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5963| 
        ; branch occurs ; [] |5963| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5958,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5958| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5958| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5958| 
        ADDB      AL,#1                 ; [CPU_] |5958| 
        MOV       *-SP[3],AL            ; [CPU_] |5958| 
	.dwpsn	file "../Source/prod.c",line 5960,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5960| 
        ; branch occurs ; [] |5960| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5953,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5953| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5953| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5953| 
        ADDB      AL,#1                 ; [CPU_] |5953| 
        MOV       *-SP[3],AL            ; [CPU_] |5953| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5953| 
        MOV       *-SP[4],AL            ; [CPU_] |5953| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5953| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("_sprintf")
	.dwattr $C$DW$165, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5953| 
        ; call occurs [#_sprintf] ; [] |5953| 
	.dwpsn	file "../Source/prod.c",line 5955,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5955| 
$C$L15:    
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5955| 
        ; call occurs [#_scia_puts] ; [] |5955| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5965,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5965| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5965| 
        ; call occurs [#_scia_puts] ; [] |5965| 
	.dwpsn	file "../Source/prod.c",line 5943,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5943| 
        ADDB      XAR2,#3               ; [CPU_] |5943| 
        MOV       AL,AR1                ; [CPU_] |5943| 
        CMPB      AL,#4                 ; [CPU_] |5943| 
        B         $C$L11,LT             ; [CPU_] |5943| 
        ; branchcc occurs ; [] |5943| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$159, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$159, DW_AT_TI_end_line(0x174f)
	.dwattr $C$DW$159, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$159

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$169	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$169, DW_AT_name("print_sensor")
	.dwattr $C$DW$169, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$169, DW_AT_high_pc(0x00)
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$169, DW_AT_external
	.dwattr $C$DW$169, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$169, DW_AT_TI_begin_line(0x16db)
	.dwattr $C$DW$169, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$169, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5851,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$170	.dwtag  DW_TAG_variable
	.dwattr $C$DW$170, DW_AT_name("buff")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$171	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$171, DW_AT_name("ss")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$172	.dwtag  DW_TAG_variable
	.dwattr $C$DW$172, DW_AT_name("ss")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$197)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$173	.dwtag  DW_TAG_variable
	.dwattr $C$DW$173, DW_AT_name("j")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg0]

$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("j")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_breg20 -7]

$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("j")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_breg20 -7]

$C$DW$176	.dwtag  DW_TAG_variable
	.dwattr $C$DW$176, DW_AT_name("j")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_breg20 -7]

$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("j")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5851 | void print_sensor(int ss) {                                            
; 5852 | int j;                                                                 
; 5853 | static char buff[100];                                                 
; 5855 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5851| 
	.dwpsn	file "../Source/prod.c",line 5856,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5856 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5857 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5858 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5856| 
        MPYB      P,T,#152              ; [CPU_] |5856| 
        MOVL      ACC,XAR3              ; [CPU_] |5856| 
        ADDL      ACC,P                 ; [CPU_] |5856| 
        MOVL      XAR2,ACC              ; [CPU_] |5856| 
        MOVB      XAR0,#118             ; [CPU_] |5856| 
        MOVL      *-SP[12],P            ; [CPU_] |5856| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5856| 
        B         $C$L28,EQ             ; [CPU_] |5856| 
        ; branchcc occurs ; [] |5856| 
	.dwpsn	file "../Source/prod.c",line 5859,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5859 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5859| 
        MOVL      ACC,XAR2              ; [CPU_] |5859| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5859| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5859| 
        ADDB      ACC,#82               ; [CPU_] |5859| 
        MOVL      XAR4,XAR1             ; [CPU_] |5859| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5859| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_sprintf")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5859| 
        ; call occurs [#_sprintf] ; [] |5859| 
	.dwpsn	file "../Source/prod.c",line 5860,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5860 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5860| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5860| 
        ; call occurs [#_scia_puts] ; [] |5860| 
	.dwpsn	file "../Source/prod.c",line 5861,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5861 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5861| 
        MOVL      ACC,XAR2              ; [CPU_] |5861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5861| 
        ADDB      ACC,#98               ; [CPU_] |5861| 
        MOVL      XAR4,XAR1             ; [CPU_] |5861| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5861| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_sprintf")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5861| 
        ; call occurs [#_sprintf] ; [] |5861| 
	.dwpsn	file "../Source/prod.c",line 5862,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5862 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5862| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5863,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5863 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5864 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5863| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5863| 
        MOVL      XAR4,XAR2             ; [CPU_] |5863| 
        ADDB      XAR4,#114             ; [CPU_] |5863| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5863| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5863| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5863| 
        MOVL      XAR4,XAR1             ; [CPU_] |5863| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5863| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_sprintf")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5863| 
        ; call occurs [#_sprintf] ; [] |5863| 
	.dwpsn	file "../Source/prod.c",line 5865,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5865 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5865| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5865| 
        ; call occurs [#_scia_puts] ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5866,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5866 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5867 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5866| 
        MOVB      XAR0,#118             ; [CPU_] |5866| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5866| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5866| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5866| 
        ADDL      XAR4,ACC              ; [CPU_] |5866| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5866| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5866| 
        MOVL      XAR4,XAR1             ; [CPU_] |5866| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_sprintf")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5866| 
        ; call occurs [#_sprintf] ; [] |5866| 
	.dwpsn	file "../Source/prod.c",line 5868,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5868 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5868| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5868| 
        ; call occurs [#_scia_puts] ; [] |5868| 
	.dwpsn	file "../Source/prod.c",line 5869,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5869 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5870 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5869| 
        MOVB      XAR0,#124             ; [CPU_] |5869| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5869| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5869| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5869| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5869| 
        ANDB      AL,#0x0f              ; [CPU_] |5869| 
        MOV       ACC,AL << 1           ; [CPU_] |5869| 
        ADDL      XAR4,ACC              ; [CPU_] |5869| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5869| 
        MOVL      XAR4,XAR1             ; [CPU_] |5869| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5869| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_sprintf")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5869| 
        ; call occurs [#_sprintf] ; [] |5869| 
	.dwpsn	file "../Source/prod.c",line 5871,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5871 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5871| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5871| 
        ; call occurs [#_scia_puts] ; [] |5871| 
	.dwpsn	file "../Source/prod.c",line 5872,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5872 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5873 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5872| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5872| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5872| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5872| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5872| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5872| 
        MOV       ACC,AL << 1           ; [CPU_] |5872| 
        ADDL      ACC,XAR6              ; [CPU_] |5872| 
        MOVL      XAR4,ACC              ; [CPU_] |5872| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5872| 
        MOVL      XAR4,XAR1             ; [CPU_] |5872| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5872| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5872| 
        ; call occurs [#_sprintf] ; [] |5872| 
	.dwpsn	file "../Source/prod.c",line 5874,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5874 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5874| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5874| 
        ; call occurs [#_scia_puts] ; [] |5874| 
	.dwpsn	file "../Source/prod.c",line 5875,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5875 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5876 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5875| 
        MOVB      XAR0,#126             ; [CPU_] |5875| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5875| 
        MOVL      XAR4,XAR1             ; [CPU_] |5875| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5875| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5875| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5875| 
        ; call occurs [#_sprintf] ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5877,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5877 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5877| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5877| 
        ; call occurs [#_scia_puts] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5878,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5878 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5879 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5878| 
        MOVB      XAR0,#122             ; [CPU_] |5878| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5878| 
        MOVL      XAR4,XAR1             ; [CPU_] |5878| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5878| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5878| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5878| 
        ; call occurs [#_sprintf] ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5880,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5880 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5880| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5880| 
        ; call occurs [#_scia_puts] ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5881,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5881 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5882 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5881| 
        MOVB      XAR0,#222             ; [CPU_] |5881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5881| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5881| 
        MOVL      XAR4,XAR1             ; [CPU_] |5881| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5881| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5881| 
        ; call occurs [#_sprintf] ; [] |5881| 
	.dwpsn	file "../Source/prod.c",line 5883,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5883 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5883| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5883| 
        ; call occurs [#_scia_puts] ; [] |5883| 
	.dwpsn	file "../Source/prod.c",line 5884,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5884 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5885 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5884| 
        MOVB      XAR0,#224             ; [CPU_] |5884| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5884| 
        MOVL      XAR4,XAR1             ; [CPU_] |5884| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5884| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5884| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5884| 
        ; call occurs [#_sprintf] ; [] |5884| 
	.dwpsn	file "../Source/prod.c",line 5886,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5886 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5886| 
        ; call occurs [#_scia_puts] ; [] |5886| 
	.dwpsn	file "../Source/prod.c",line 5887,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5887 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5888 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5887| 
        MOVB      XAR0,#228             ; [CPU_] |5887| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5887| 
        MOVL      XAR4,XAR1             ; [CPU_] |5887| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5887| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5887| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5887| 
        ; call occurs [#_sprintf] ; [] |5887| 
	.dwpsn	file "../Source/prod.c",line 5889,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5889 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5889| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5889| 
        ; call occurs [#_scia_puts] ; [] |5889| 
	.dwpsn	file "../Source/prod.c",line 5890,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5890 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5891 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5890| 
        MOVB      XAR0,#230             ; [CPU_] |5890| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5890| 
        MOVL      XAR4,XAR1             ; [CPU_] |5890| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5890| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5890| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5890| 
        ; call occurs [#_sprintf] ; [] |5890| 
	.dwpsn	file "../Source/prod.c",line 5892,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5892 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5892| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5892| 
        ; call occurs [#_scia_puts] ; [] |5892| 
	.dwpsn	file "../Source/prod.c",line 5894,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5894 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5895 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5896 |                         conf_data.sensor[ss].points);                  
; 5897 |         scia_puts(buff);                                               
; 5899 |         scia_puts("  Point:");                                         
; 5900 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5901 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5902 |                 scia_puts(buff);                                       
; 5904 |         scia_puts("\r\n  Mass: ");                                     
; 5905 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5906 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5907 |                 scia_puts(buff);                                       
; 5909 |         scia_puts("\r\n  Count:");                                     
; 5910 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5911 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5912 |                 scia_puts(buff);                                       
; 5914 |         scia_puts("\r\n  Slope:    ");                                 
; 5915 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5916 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5917 |                 scia_puts(buff);                                       
; 5919 |         scia_puts("\r\n  Intercept:");                                 
; 5920 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5921 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5922 |                 scia_puts(buff);                                       
; 5924 |         scia_puts("\r\n");                                             
; 5925 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5894| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5894| 
        CMPB      AL,#2                 ; [CPU_] |5894| 
        B         $C$L17,EQ             ; [CPU_] |5894| 
        ; branchcc occurs ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5926,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5926 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5927 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5926| 
        MOVB      XAR0,#178             ; [CPU_] |5926| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5926| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5926| 
        MOVL      XAR4,XAR1             ; [CPU_] |5926| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5926| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5926| 
        ; call occurs [#_sprintf] ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5928,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5928| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5928| 
        ; call occurs [#_scia_puts] ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5929,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5929 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5930 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5929| 
        MOVB      XAR0,#200             ; [CPU_] |5929| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5929| 
        MOVL      XAR4,XAR1             ; [CPU_] |5929| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5929| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5929| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5929| 
        ; call occurs [#_sprintf] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5931,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5931 | scia_puts(buff);                                                       
; 5934 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
        B         $C$L29,UNC            ; [CPU_] |5931| 
        ; branch occurs ; [] |5931| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5895,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5895| 
        MOVB      XAR0,#128             ; [CPU_] |5895| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5895| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5895| 
        MOVL      XAR4,XAR1             ; [CPU_] |5895| 
        MOV       *-SP[3],AL            ; [CPU_] |5895| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5895| 
        ; call occurs [#_sprintf] ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5897,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5897| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5897| 
        ; call occurs [#_scia_puts] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5899,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5899| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5899| 
        ; call occurs [#_scia_puts] ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5900,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5900| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5900,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5900| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5900| 
        B         $C$L27,LT             ; [CPU_] |5900| 
        ; branchcc occurs ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5904,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5904| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5904| 
        ; call occurs [#_scia_puts] ; [] |5904| 
	.dwpsn	file "../Source/prod.c",line 5905,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5905| 
        MOV       *-SP[7],AL            ; [CPU_] |5905| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5905,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5905| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5905| 
        B         $C$L26,LT             ; [CPU_] |5905| 
        ; branchcc occurs ; [] |5905| 
	.dwpsn	file "../Source/prod.c",line 5909,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5909| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5909| 
        ; call occurs [#_scia_puts] ; [] |5909| 
	.dwpsn	file "../Source/prod.c",line 5910,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5910| 
        MOV       *-SP[7],AL            ; [CPU_] |5910| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5910,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5910| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5910| 
        B         $C$L25,LT             ; [CPU_] |5910| 
        ; branchcc occurs ; [] |5910| 
	.dwpsn	file "../Source/prod.c",line 5914,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5914| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5914| 
        ; call occurs [#_scia_puts] ; [] |5914| 
	.dwpsn	file "../Source/prod.c",line 5915,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5915| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5915,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5915| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5915| 
        ADDB      AL,#-1                ; [CPU_] |5915| 
        CMP       AL,*-SP[7]            ; [CPU_] |5915| 
        B         $C$L24,GT             ; [CPU_] |5915| 
        ; branchcc occurs ; [] |5915| 
	.dwpsn	file "../Source/prod.c",line 5919,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5919| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5919| 
        ; call occurs [#_scia_puts] ; [] |5919| 
	.dwpsn	file "../Source/prod.c",line 5920,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5920| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5920,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5920| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5920| 
        ADDB      AL,#-1                ; [CPU_] |5920| 
        CMP       AL,*-SP[7]            ; [CPU_] |5920| 
        B         $C$L23,GT             ; [CPU_] |5920| 
        ; branchcc occurs ; [] |5920| 
	.dwpsn	file "../Source/prod.c",line 5924,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5924| 
	.dwpsn	file "../Source/prod.c",line 5925,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5925| 
        ; branch occurs ; [] |5925| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5921,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5921| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5921| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5921| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5921| 
        MOV       ACC,AL << 1           ; [CPU_] |5921| 
        ADDL      ACC,XAR6              ; [CPU_] |5921| 
        ADDL      ACC,XAR3              ; [CPU_] |5921| 
        MOVL      XAR4,ACC              ; [CPU_] |5921| 
        MOVB      XAR0,#200             ; [CPU_] |5921| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5921| 
        MOVL      XAR4,XAR1             ; [CPU_] |5921| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5921| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_sprintf")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5921| 
        ; call occurs [#_sprintf] ; [] |5921| 
	.dwpsn	file "../Source/prod.c",line 5922,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5922| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5922| 
        ; call occurs [#_scia_puts] ; [] |5922| 
	.dwpsn	file "../Source/prod.c",line 5920,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5920| 
        B         $C$L22,UNC            ; [CPU_] |5920| 
        ; branch occurs ; [] |5920| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5916,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5916| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5916| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5916| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5916| 
        MOV       ACC,AL << 1           ; [CPU_] |5916| 
        ADDL      ACC,XAR6              ; [CPU_] |5916| 
        ADDL      ACC,XAR3              ; [CPU_] |5916| 
        MOVL      XAR4,ACC              ; [CPU_] |5916| 
        MOVB      XAR0,#178             ; [CPU_] |5916| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5916| 
        MOVL      XAR4,XAR1             ; [CPU_] |5916| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5916| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_sprintf")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5916| 
        ; call occurs [#_sprintf] ; [] |5916| 
	.dwpsn	file "../Source/prod.c",line 5917,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5917| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5917| 
        ; call occurs [#_scia_puts] ; [] |5917| 
	.dwpsn	file "../Source/prod.c",line 5915,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5915| 
        B         $C$L21,UNC            ; [CPU_] |5915| 
        ; branch occurs ; [] |5915| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5911,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5911| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5911| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5911| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5911| 
        ADDL      ACC,XAR6              ; [CPU_] |5911| 
        ADDL      ACC,XAR3              ; [CPU_] |5911| 
        MOVL      XAR4,ACC              ; [CPU_] |5911| 
        MOVB      XAR0,#154             ; [CPU_] |5911| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5911| 
        MOVL      XAR4,XAR1             ; [CPU_] |5911| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5911| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5911| 
        ; call occurs [#_sprintf] ; [] |5911| 
	.dwpsn	file "../Source/prod.c",line 5912,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5912| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5912| 
        ; call occurs [#_scia_puts] ; [] |5912| 
	.dwpsn	file "../Source/prod.c",line 5910,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5910| 
	.dwpsn	file "../Source/prod.c",line 5912,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5912| 
	.dwpsn	file "../Source/prod.c",line 5910,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5910| 
        ; branch occurs ; [] |5910| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5906,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5906| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5906| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5906| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5906| 
        ADDL      ACC,XAR6              ; [CPU_] |5906| 
        ADDL      ACC,XAR3              ; [CPU_] |5906| 
        MOVL      XAR4,ACC              ; [CPU_] |5906| 
        MOVB      XAR0,#130             ; [CPU_] |5906| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5906| 
        MOVL      XAR4,XAR1             ; [CPU_] |5906| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5906| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_sprintf")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5906| 
        ; call occurs [#_sprintf] ; [] |5906| 
	.dwpsn	file "../Source/prod.c",line 5907,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5907| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5907| 
        ; call occurs [#_scia_puts] ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5905,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5905| 
	.dwpsn	file "../Source/prod.c",line 5907,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5907| 
	.dwpsn	file "../Source/prod.c",line 5905,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5905| 
        ; branch occurs ; [] |5905| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5901,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5901| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5901| 
        ADD       AH,AL                 ; [CPU_] |5901| 
        MOV       *-SP[7],AH            ; [CPU_] |5901| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5901| 
        MOVL      XAR4,XAR1             ; [CPU_] |5901| 
        MOV       *-SP[3],AH            ; [CPU_] |5901| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5901| 
        ; call occurs [#_sprintf] ; [] |5901| 
	.dwpsn	file "../Source/prod.c",line 5902,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5902| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5902| 
        ; call occurs [#_scia_puts] ; [] |5902| 
        MOV       AL,*-SP[7]            ; [CPU_] |5902| 
	.dwpsn	file "../Source/prod.c",line 5900,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5900| 
        ; branch occurs ; [] |5900| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5857,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5857| 
$C$L29:    
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5857| 
        ; call occurs [#_scia_puts] ; [] |5857| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$169, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$169, DW_AT_TI_end_line(0x172f)
	.dwattr $C$DW$169, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$169

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$224	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$224, DW_AT_name("print_limits")
	.dwattr $C$DW$224, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$224, DW_AT_high_pc(0x00)
	.dwattr $C$DW$224, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$224, DW_AT_external
	.dwattr $C$DW$224, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$224, DW_AT_TI_begin_line(0x1776)
	.dwattr $C$DW$224, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$224, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6006,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$225	.dwtag  DW_TAG_variable
	.dwattr $C$DW$225, DW_AT_name("buff")
	.dwattr $C$DW$225, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$225, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$225, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6006 | void print_limits(void) {                                              
; 6007 | int ii;                                                                
; 6008 | static char buff[64];                                                  
; 6009 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$226	.dwtag  DW_TAG_variable
	.dwattr $C$DW$226, DW_AT_name("ii")
	.dwattr $C$DW$226, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$226, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$226, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$227	.dwtag  DW_TAG_variable
	.dwattr $C$DW$227, DW_AT_name("up")
	.dwattr $C$DW$227, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$227, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$227, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6011,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6011 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6011| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_scia_puts")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6011| 
        ; call occurs [#_scia_puts] ; [] |6011| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6013,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6013 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6013| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6014,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6014| 
        MOVB      AL,#1                 ; [CPU_] |6014| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6014| 
        ADD       AL,*-SP[9]            ; [CPU_] |6014| 
        MOVL      XAR4,XAR2             ; [CPU_] |6014| 
        MOV       *-SP[3],AL            ; [CPU_] |6014| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_sprintf")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6014| 
        ; call occurs [#_sprintf] ; [] |6014| 
	.dwpsn	file "../Source/prod.c",line 6015,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6015 | scia_puts(buff);                                                       
; 6017 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6015| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_scia_puts")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6015| 
        ; call occurs [#_scia_puts] ; [] |6015| 
	.dwpsn	file "../Source/prod.c",line 6019,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6019 | switch (conf_data.lim[ii].what) {                                      
; 6020 | case VFD_LOAD:                                                         
; 6021 | case VFD_PEAK:                                                         
; 6022 | case VFD_VALL:                                                         
; 6023 |         up =                                                           
; 6024 |                         UNITS[0x0f                                     
; 6025 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6026 |         break;                                                         
; 6027 | case VFD_POSI:                                                         
; 6028 |         up = POS_U;                                                    
; 6029 |         break;                                                         
; 6030 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6019| 
        B         $C$L40,NTC            ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6019| 
        CMPB      AL,#2                 ; [CPU_] |6019| 
        B         $C$L32,LOS            ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        CMPB      AL,#3                 ; [CPU_] |6019| 
        B         $C$L31,EQ             ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        CMPB      AL,#4                 ; [CPU_] |6019| 
        B         $C$L33,NEQ            ; [CPU_] |6019| 
        ; branchcc occurs ; [] |6019| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6031,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6031 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6031| 
	.dwpsn	file "../Source/prod.c",line 6032,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6032 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6032| 
        ; branch occurs ; [] |6032| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6028,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6028| 
	.dwpsn	file "../Source/prod.c",line 6029,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6029| 
        ; branch occurs ; [] |6029| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6023,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6023| 
        MOV       T,#10                 ; [CPU_] |6023| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6023| 
        ADDL      ACC,XAR6              ; [CPU_] |6023| 
        MOVL      XAR4,ACC              ; [CPU_] |6023| 
        MOVB      XAR0,#42              ; [CPU_] |6023| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6023| 
        MPYB      ACC,T,#152            ; [CPU_] |6023| 
        ADDL      ACC,XAR6              ; [CPU_] |6023| 
        MOVL      XAR4,ACC              ; [CPU_] |6023| 
        MOVB      XAR0,#125             ; [CPU_] |6023| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6023| 
        ANDB      AL,#0x0f              ; [CPU_] |6023| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6023| 
        MOV       ACC,AL << 1           ; [CPU_] |6023| 
        ADDL      XAR4,ACC              ; [CPU_] |6023| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6023| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6035,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6035 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6036 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6035| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6035| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6035| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6035| 
        ADDL      XAR4,ACC              ; [CPU_] |6035| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6035| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6035| 
        MOVL      XAR4,XAR2             ; [CPU_] |6035| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6035| 
        ADDB      AL,#1                 ; [CPU_] |6035| 
        MOV       *-SP[5],AL            ; [CPU_] |6035| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_sprintf")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6035| 
        ; call occurs [#_sprintf] ; [] |6035| 
	.dwpsn	file "../Source/prod.c",line 6037,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6037 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6037| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6037| 
        ; call occurs [#_scia_puts] ; [] |6037| 
	.dwpsn	file "../Source/prod.c",line 6038,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6038 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6039 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6040 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6041 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6038| 
        B         $C$L34,TC             ; [CPU_] |6038| 
        ; branchcc occurs ; [] |6038| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6038| 
        B         $C$L35,UNC            ; [CPU_] |6038| 
        ; branch occurs ; [] |6038| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6038| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6038| 
        B         $C$L36,TC             ; [CPU_] |6038| 
        ; branchcc occurs ; [] |6038| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6038| 
        B         $C$L37,UNC            ; [CPU_] |6038| 
        ; branch occurs ; [] |6038| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6038| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6038| 
        B         $C$L38,TC             ; [CPU_] |6038| 
        ; branchcc occurs ; [] |6038| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6038| 
        B         $C$L39,UNC            ; [CPU_] |6038| 
        ; branch occurs ; [] |6038| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6038| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6038| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6038| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6038| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6038| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6038| 
        MOVL      XAR4,XAR2             ; [CPU_] |6038| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_sprintf")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6038| 
        ; call occurs [#_sprintf] ; [] |6038| 
	.dwpsn	file "../Source/prod.c",line 6042,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6042 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6042| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6042| 
        ; call occurs [#_scia_puts] ; [] |6042| 
	.dwpsn	file "../Source/prod.c",line 6043,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6043 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6044 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6043| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6043| 
        MOVL      XAR4,XAR2             ; [CPU_] |6043| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6043| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6043| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6043| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6043| 
        ; call occurs [#_sprintf] ; [] |6043| 
	.dwpsn	file "../Source/prod.c",line 6045,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6045 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6045| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6045| 
        ; call occurs [#_scia_puts] ; [] |6045| 
	.dwpsn	file "../Source/prod.c",line 6046,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6046 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6047 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6046| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6046| 
        MOVL      XAR4,XAR2             ; [CPU_] |6046| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6046| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6046| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6046| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6046| 
        ; call occurs [#_sprintf] ; [] |6046| 
	.dwpsn	file "../Source/prod.c",line 6048,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6048 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6048| 
	.dwpsn	file "../Source/prod.c",line 6049,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6049 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6049| 
        ; branch occurs ; [] |6049| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6050,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6050 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6050| 
$C$L41:    
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6050| 
        ; call occurs [#_scia_puts] ; [] |6050| 
	.dwpsn	file "../Source/prod.c",line 6013,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6013| 
        INC       *-SP[9]               ; [CPU_] |6013| 
        MOV       AL,*-SP[9]            ; [CPU_] |6013| 
        CMPB      AL,#4                 ; [CPU_] |6013| 
        B         $C$L30,LT             ; [CPU_] |6013| 
        ; branchcc occurs ; [] |6013| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$224, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$224, DW_AT_TI_end_line(0x17a5)
	.dwattr $C$DW$224, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$224

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$240	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$240, DW_AT_name("print_dac")
	.dwattr $C$DW$240, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$240, DW_AT_high_pc(0x00)
	.dwattr $C$DW$240, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$240, DW_AT_external
	.dwattr $C$DW$240, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$240, DW_AT_TI_begin_line(0x1752)
	.dwattr $C$DW$240, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$240, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5970,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$241	.dwtag  DW_TAG_variable
	.dwattr $C$DW$241, DW_AT_name("buff")
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$241, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$241, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5970 | void print_dac(void) {                                                 
; 5971 | int l;                                                                 
; 5972 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$242	.dwtag  DW_TAG_variable
	.dwattr $C$DW$242, DW_AT_name("l")
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$242, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$242, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5974,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5974 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5974| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_scia_puts")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5974| 
        ; call occurs [#_scia_puts] ; [] |5974| 
	.dwpsn	file "../Source/prod.c",line 5976,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5976 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5976| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5977,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5977 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5977| 
        MOVB      AL,#1                 ; [CPU_] |5977| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5977| 
        ADD       AL,AR1                ; [CPU_] |5977| 
        MOV       *-SP[3],AL            ; [CPU_] |5977| 
        MOVL      XAR4,XAR3             ; [CPU_] |5977| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_sprintf")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5977| 
        ; call occurs [#_sprintf] ; [] |5977| 
	.dwpsn	file "../Source/prod.c",line 5978,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5978 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5978| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_scia_puts")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5978| 
        ; call occurs [#_scia_puts] ; [] |5978| 
	.dwpsn	file "../Source/prod.c",line 5980,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5980 | sprintf(buff,                                                          
; 5981 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5982 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5983 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5980| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5980| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5980| 
        MOVL      XAR4,XAR3             ; [CPU_] |5980| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5980| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5980| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5980| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5980| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5980| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_sprintf")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5980| 
        ; call occurs [#_sprintf] ; [] |5980| 
	.dwpsn	file "../Source/prod.c",line 5984,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5984 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5984| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5984| 
        ; call occurs [#_scia_puts] ; [] |5984| 
	.dwpsn	file "../Source/prod.c",line 5986,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5986 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5986| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5986| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5986| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5986| 
        ADDL      XAR4,ACC              ; [CPU_] |5986| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5986| 
        MOVL      XAR4,XAR3             ; [CPU_] |5986| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5986| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_sprintf")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5986| 
        ; call occurs [#_sprintf] ; [] |5986| 
	.dwpsn	file "../Source/prod.c",line 5987,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5987 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5987| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_scia_puts")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5987| 
        ; call occurs [#_scia_puts] ; [] |5987| 
	.dwpsn	file "../Source/prod.c",line 5989,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5989 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5989| 
        CMPB      AL,#7                 ; [CPU_] |5989| 
        B         $C$L43,EQ             ; [CPU_] |5989| 
        ; branchcc occurs ; [] |5989| 
	.dwpsn	file "../Source/prod.c",line 5990,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5990 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5990| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5990| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5990| 
        ADDB      AL,#1                 ; [CPU_] |5990| 
        MOVL      XAR4,XAR3             ; [CPU_] |5990| 
        MOV       *-SP[3],AL            ; [CPU_] |5990| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5990| 
        ; call occurs [#_sprintf] ; [] |5990| 
	.dwpsn	file "../Source/prod.c",line 5991,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5991 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5991| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5991| 
        ; call occurs [#_scia_puts] ; [] |5991| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5994,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5994 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5995 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5996 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5997 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 5998 |         scia_puts(buff);                                               
; 5999 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5994| 
        CMPB      AL,#3                 ; [CPU_] |5994| 
        B         $C$L44,EQ             ; [CPU_] |5994| 
        ; branchcc occurs ; [] |5994| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5994| 
        CMPB      AL,#4                 ; [CPU_] |5994| 
        B         $C$L44,EQ             ; [CPU_] |5994| 
        ; branchcc occurs ; [] |5994| 
	.dwpsn	file "../Source/prod.c",line 6000,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6000 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6000| 
        B         $C$L45,UNC            ; [CPU_] |6000| 
        ; branch occurs ; [] |6000| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5996,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5996| 
        MOVB      XAR0,#8               ; [CPU_] |5996| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5996| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5996| 
        MOVB      XAR0,#10              ; [CPU_] |5996| 
        MOVL      XAR4,XAR3             ; [CPU_] |5996| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5996| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5996| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5996| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5996| 
        ; call occurs [#_sprintf] ; [] |5996| 
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5998| 
$C$L45:    
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5998| 
        ; call occurs [#_scia_puts] ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 5976,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5976| 
        ADDB      XAR2,#12              ; [CPU_] |5976| 
        MOV       AL,AR1                ; [CPU_] |5976| 
        CMPB      AL,#4                 ; [CPU_] |5976| 
        B         $C$L42,LT             ; [CPU_] |5976| 
        ; branchcc occurs ; [] |5976| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$240, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$240, DW_AT_TI_end_line(0x1773)
	.dwattr $C$DW$240, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$240

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$255	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$255, DW_AT_name("print_channel")
	.dwattr $C$DW$255, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$255, DW_AT_high_pc(0x00)
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$255, DW_AT_external
	.dwattr $C$DW$255, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$255, DW_AT_TI_begin_line(0x16c0)
	.dwattr $C$DW$255, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$255, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5824,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$256	.dwtag  DW_TAG_variable
	.dwattr $C$DW$256, DW_AT_name("buff")
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$256, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$256, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$257	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$257, DW_AT_name("ch")
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$257, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$257, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$258	.dwtag  DW_TAG_variable
	.dwattr $C$DW$258, DW_AT_name("ch")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$258, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5824 | void print_channel(Uint16 ch) {                                        
; 5825 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5824| 
	.dwpsn	file "../Source/prod.c",line 5827,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5827 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5827| 
        MOVZ      AR1,AR2               ; [CPU_] |5827| 
        MOVB      AH,#1                 ; [CPU_] |5827| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5827| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5827| 
        ADD       AH,AR1                ; [CPU_] |5827| 
        MOVL      XAR4,XAR3             ; [CPU_] |5827| 
        MOV       *-SP[3],AH            ; [CPU_] |5827| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("_sprintf")
	.dwattr $C$DW$259, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5827| 
        ; call occurs [#_sprintf] ; [] |5827| 
	.dwpsn	file "../Source/prod.c",line 5828,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5828 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5828| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("_scia_puts")
	.dwattr $C$DW$260, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5828| 
        ; call occurs [#_scia_puts] ; [] |5828| 
	.dwpsn	file "../Source/prod.c",line 5830,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5830| 
        MOV       T,AR1                 ; [CPU_] |5830| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5830| 
        MPYU      ACC,T,AL              ; [CPU_] |5830| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5830| 
        ADDL      XAR1,ACC              ; [CPU_] |5830| 
        MOVB      XAR0,#44              ; [CPU_] |5830| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5830| 
        MOVL      XAR4,XAR3             ; [CPU_] |5830| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5830| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5830| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_sprintf")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5830| 
        ; call occurs [#_sprintf] ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5831,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5831 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5831| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5831| 
        ; call occurs [#_scia_puts] ; [] |5831| 
	.dwpsn	file "../Source/prod.c",line 5841,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5841 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5841| 
        MOVB      XAR0,#42              ; [CPU_] |5841| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5841| 
        MOVL      XAR4,XAR3             ; [CPU_] |5841| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5841| 
        ADDB      AL,#1                 ; [CPU_] |5841| 
        MOV       *-SP[3],AL            ; [CPU_] |5841| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_sprintf")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5841| 
        ; call occurs [#_sprintf] ; [] |5841| 
	.dwpsn	file "../Source/prod.c",line 5842,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5842| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5842| 
        ; call occurs [#_scia_puts] ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5844,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5844 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5844| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5844| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5844| 
        B         $C$L46,EQ             ; [CPU_] |5844| 
        ; branchcc occurs ; [] |5844| 
	.dwpsn	file "../Source/prod.c",line 5845,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5845| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5845| 
        ; call occurs [#_scia_puts] ; [] |5845| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$255, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$255, DW_AT_TI_end_line(0x16d7)
	.dwattr $C$DW$255, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$255

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$267	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$267, DW_AT_name("matchTag")
	.dwattr $C$DW$267, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$267, DW_AT_high_pc(0x00)
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$267, DW_AT_external
	.dwattr $C$DW$267, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$267, DW_AT_TI_begin_line(0x169c)
	.dwattr $C$DW$267, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$267, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5788,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$268	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$268, DW_AT_name("ch")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$268, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5788 | void matchTag(Uint16 ch) {                                             
; 5789 | Uint16 sns;                                                            
; 5790 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$269	.dwtag  DW_TAG_variable
	.dwattr $C$DW$269, DW_AT_name("ch")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("sns")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("tag")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5792,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5792 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5792| 
	.dwpsn	file "../Source/prod.c",line 5788,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5788| 
	.dwpsn	file "../Source/prod.c",line 5792,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5792| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5792| 
        MOVL      XAR1,ACC              ; [CPU_] |5792| 
	.dwpsn	file "../Source/prod.c",line 5794,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5794 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5794| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5794| 
	.dwpsn	file "../Source/prod.c",line 5792,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5792| 
	.dwpsn	file "../Source/prod.c",line 5794,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5795 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5794| 
        B         $C$L50,EQ             ; [CPU_] |5794| 
        ; branchcc occurs ; [] |5794| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5794| 
        B         $C$L50,HIS            ; [CPU_] |5794| 
        ; branchcc occurs ; [] |5794| 
	.dwpsn	file "../Source/prod.c",line 5798,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5798 | tag = tagid(ch);                                                       
; 5799 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5800 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$272, DW_AT_name("_tagid")
	.dwattr $C$DW$272, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5798| 
        ; call occurs [#_tagid] ; [] |5798| 
        MOVB      XAR6,#0               ; [CPU_] |5798| 
        MOVL      XAR3,ACC              ; [CPU_] |5798| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5798| 
        MOV       *-SP[2],#0            ; [CPU_] |5798| 
        MOV       *-SP[1],#0            ; [CPU_] |5798| 
$C$DW$273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$273, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$273, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5798| 
        ; call occurs [#ULL$$CMP] ; [] |5798| 
        CMPB      AL,#0                 ; [CPU_] |5798| 
        B         $C$L50,EQ             ; [CPU_] |5798| 
        ; branchcc occurs ; [] |5798| 
        MOVB      ACC,#0                ; [CPU_] |5798| 
        SUBB      ACC,#1                ; [CPU_] |5798| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5798| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5798| 
        MOVL      ACC,XAR3              ; [CPU_] |5798| 
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$274, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5798| 
        ; call occurs [#ULL$$CMP] ; [] |5798| 
        CMPB      AL,#0                 ; [CPU_] |5798| 
        B         $C$L50,EQ             ; [CPU_] |5798| 
        ; branchcc occurs ; [] |5798| 
	.dwpsn	file "../Source/prod.c",line 5801,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5801 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5801| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5801| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5801| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5803,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5803 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5805 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5803| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5806,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5806 | continue;                       // not calibrated                      
; 5809 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5806| 
        B         $C$L48,EQ             ; [CPU_] |5806| 
        ; branchcc occurs ; [] |5806| 
	.dwpsn	file "../Source/prod.c",line 5810,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5810 | continue;                       // doesn't match, skip                 
; 5813 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5810| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5810| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5810| 
        MOVL      ACC,XAR3              ; [CPU_] |5810| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5810| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$275, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5810| 
        ; call occurs [#ULL$$CMP] ; [] |5810| 
        CMPB      AL,#0                 ; [CPU_] |5810| 
        B         $C$L49,EQ             ; [CPU_] |5810| 
        ; branchcc occurs ; [] |5810| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5803,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5803| 
        MOVL      XAR0,ACC              ; [CPU_] |5803| 
        ADDB      XAR4,#1               ; [CPU_] |5803| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5803| 
        ; branchcc occurs ; [] |5803| 
        B         $C$L50,UNC            ; [CPU_] |5803| 
        ; branch occurs ; [] |5803| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5814,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5814 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5814| 
	.dwpsn	file "../Source/prod.c",line 5815,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5815 | conf_data.ch[ch].ci = sns;                                             
; 5817 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5815| 
        MOV       T,*-SP[5]             ; [CPU_] |5815| 
        MPYU      ACC,T,AL              ; [CPU_] |5815| 
        ADDL      ACC,XAR2              ; [CPU_] |5815| 
        MOVL      XAR5,ACC              ; [CPU_] |5815| 
        MOVB      XAR0,#42              ; [CPU_] |5815| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5815| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$267, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$267, DW_AT_TI_end_line(0x16bc)
	.dwattr $C$DW$267, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$267

	.sect	".text"
	.clink
	.global	_main

$C$DW$277	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$277, DW_AT_name("main")
	.dwattr $C$DW$277, DW_AT_low_pc(_main)
	.dwattr $C$DW$277, DW_AT_high_pc(0x00)
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$277, DW_AT_external
	.dwattr $C$DW$277, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$277, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$277, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$277, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$278	.dwtag  DW_TAG_variable
	.dwattr $C$DW$278, DW_AT_name("buff")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$278, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$279	.dwtag  DW_TAG_variable
	.dwattr $C$DW$279, DW_AT_name("cmdbuff")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U141
;* AR1   assigned to $O$U325
;* AR1   assigned to $O$U354
;* AR1   assigned to $O$U563
;* AR1   assigned to $O$U691
;* AR1   assigned to $O$U790
;* AR1   assigned to $O$U827
;* AR5   assigned to $O$U843
;* AL    assigned to $O$U1002
;* AR1   assigned to $O$U980
;* AR1   assigned to $O$U1071
;* AR1   assigned to $O$U970
;* AR6   assigned to $O$U1272
;* AR1   assigned to $O$U1298
;* AR7   assigned to $O$U1534
;* XT    assigned to $O$U1561
;* PL    assigned to $O$U1562
;* AR5   assigned to $O$U1586
;* PL    assigned to $O$U1591
;* PL    assigned to $O$U1598
;* AR7   assigned to $O$U1600
;* AR5   assigned to $O$U1601
;* AR5   assigned to $O$U1615
;* XT    assigned to $O$U1657
;* PL    assigned to $O$U1658
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("ccp")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_breg20 -104]

$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("tempft")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -12]

$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("templg")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -14]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("ds_ct")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -47]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("ds_sn")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -49]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("ds_bm")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -50]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("ds_dec")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -51]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("ds_dn")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -52]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_stop")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -53]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_en")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -54]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("bincmdresult")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -47]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("line")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -55]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("daccbm")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -56]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("tempvalue")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -106]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("scale")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -16]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("unsaved")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -48]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("tagch")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -143]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("ss")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -57]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("ch")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -58]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("version")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U254
;* AR1   assigned to $O$U254
;* AR5   assigned to $O$U254
;* AR5   assigned to $O$U254
;* AR5   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR7   assigned to $O$U254
;* AR7   assigned to $O$U254
;* AR7   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR5   assigned to $O$U254
;* AR5   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR1   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR5   assigned to $O$U254
;* AR1   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR1   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR4   assigned to $O$U254
;* AR1   assigned to $O$U254
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U422
;* AR1   assigned to $O$U422
;* AR1   assigned to $O$U422
;* AR1   assigned to $O$U400
;* AR1   assigned to $O$U400
;* AR1   assigned to $O$U400
;* AR1   assigned to $O$U400
;* AR1   assigned to $O$U400
;* AR5   assigned to $O$U400
;* AR7   assigned to $O$U400
;* AR1   assigned to $O$U291
;* AR1   assigned to $O$U584
;* AR1   assigned to $O$U584
;* AR1   assigned to $O$U629
;* AR1   assigned to $O$U629
;* AR4   assigned to $O$K818
;* AR4   assigned to $O$K818
;* AR1   assigned to $O$K818
;* AR4   assigned to $O$K818
;* AR1   assigned to $O$K818
;* AR1   assigned to $O$K818
;* AR1   assigned to $O$K818
;* AR1   assigned to $O$K818
;* AR5   assigned to $O$K818
;* AR5   assigned to $O$K818
;* AR1   assigned to $O$K818
;* AR1   assigned to $O$U872
;* AR1   assigned to $O$U872
;* AR1   assigned to $O$U895
;* AR3   assigned to $O$U895
;* AR1   assigned to $O$U895
;* AR6   assigned to $O$U852
;* AL    assigned to $O$U852
;* AR1   assigned to $O$U921
;* AR1   assigned to $O$U921
;* AR1   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR5   assigned to $O$U1001
;* AR5   assigned to $O$U1001
;* AR5   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR4   assigned to $O$U1001
;* AR4   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR7   assigned to $O$U1001
;* AR1   assigned to $O$K308
;* AR7   assigned to $O$U1137
;* AR7   assigned to $O$U1137
;* AR7   assigned to $O$U1137
;* AR7   assigned to $O$U1137
;* AR4   assigned to $O$U1139
;* AR4   assigned to $O$U1139
;* AR4   assigned to $O$U1139
;* AR4   assigned to $O$U1139
;* AR3   assigned to $O$U1173
;* AR1   assigned to $O$U1173
;* AR1   assigned to $O$U1173
;* AR1   assigned to $O$U1179
;* AR4   assigned to $O$U1191
;* AR4   assigned to $O$U1188
;* AR7   assigned to $O$U1188
;* PL    assigned to $O$U1188
;* AR7   assigned to $O$U1188
;* AR4   assigned to $O$U1188
;* AR5   assigned to $O$U1248
;* AR4   assigned to $O$U1248
;* AR5   assigned to $O$U1327
;* AR5   assigned to $O$U1327
;* AR4   assigned to $O$U1323
;* AR4   assigned to $O$U1323
;* AR5   assigned to $O$U1382
;* AR5   assigned to $O$U1382
;* PL    assigned to $O$U1388
;* AR0   assigned to $O$U1388
;* AR1   assigned to $O$U1389
;* AR7   assigned to $O$U1389
;* AR0   assigned to $O$U1425
;* AR5   assigned to $O$U1425
;* PL    assigned to $O$U1428
;* AR1   assigned to $O$U1428
;* AR1   assigned to $O$U1429
;* AR7   assigned to $O$U1429
;* AR5   assigned to $O$U1467
;* AR5   assigned to $O$U1467
;* AR0   assigned to $O$U1502
;* AR5   assigned to $O$U1502
;* AR4   assigned to $O$U1537
;* AR1   assigned to $O$U1537
;* AR5   assigned to $O$U1537
;* AR5   assigned to $O$U1537
;* AR4   assigned to $O$U1626
;* AR5   assigned to $O$U1626
;* AR4   assigned to $O$U1626
;* AR5   assigned to $O$U1635
;* AR3   assigned to _intp
$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("intp")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("intp")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("tempint")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("tempint")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("temp16")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg10]

$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("temp16")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_breg20 -59]

$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("temp32")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("temp32")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("cmethod")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg6]

$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("cmethod")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("flash_ret")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("flash_ret")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("flash_ret")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("flash_ret")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("slen")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("slen")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("slen")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("slen")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("slen")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("pt")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("pt")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg0]

$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("pt")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_breg20 -59]

$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("pt")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("pt")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg12]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("wtp")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("wtp")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("wtp")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("wtp")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg12]

$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("cmdlen")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("cmdlen")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg0]

$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("cmdlen")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_breg20 -47]

$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("cmdlen")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("cmdlen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg0]

$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("k")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_breg20 -59]

$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("k")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_breg20 -60]

$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("k")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_breg20 -60]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("k")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("k")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_reg16]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -59]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_reg2]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("j")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg10]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("j")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -47]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -47]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg6]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -47]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -47]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -47]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -60]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -60]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -47]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -59]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -61]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -48]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -48]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -48]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -48]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -48]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -48]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -47]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("i")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("i")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg0]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg18]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg0]

$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_breg20 -47]

$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_breg20 -47]

$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg16]

$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg16]

$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("volt")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_breg20 -24]

$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("dsum")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$352)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_breg20 -32]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("dacc")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$306)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -35]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("sampcnt")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$333)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -38]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("data")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$472, DW_AT_name("_sys_init")
	.dwattr $C$DW$472, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$473, DW_AT_name("_delay_us")
	.dwattr $C$DW$473, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_gpio_init")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_extio_init")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_InitECan")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_configCAN")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_memcpy")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_memcpy")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_flash_init")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_led_init")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_lcd_init")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_ssr_set")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_ssr_set")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_ssr_set")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_ssr_set")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_conf_read")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_conf_default")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_conf_write")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_delay_us")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_sprintf")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_sprintf")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_led_set")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_led_set")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_led_set")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_delay_us")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_led_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_conf_write")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_led_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_led_set")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_led_set")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_sprintf")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_led_set")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_led_set")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_sprintf")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_led_set")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_sprintf")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_scia_init")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[47]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_puts")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_delay_us")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_scia_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_delay_us")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[47]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_puts")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_delay_us")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_puts")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_delay_us")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_puts")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_delay_us")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_scia_puts")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_delay_us")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_delay_us")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_led_set")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_led_set")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_update_units")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | char data[8];                                                          
; 598 | int n;                                                                 
; 599 | Uint16 res;                                                            
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 601,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 601 | SPICANInit();                                                          
; 602 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |601| 
        ; call occurs [#_SPICANInit] ; [] |601| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 604,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 604 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |604| 
	.dwpsn	file "../Source/prod.c",line 607,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 607 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |607| 
        ; call occurs [#_SPICANReadStat] ; [] |607| 
        MOV       *-SP[46],AL           ; [CPU_] |607| 
	.dwpsn	file "../Source/prod.c",line 608,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 608 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |608| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |608| 
        ; call occurs [#_SPICANRead] ; [] |608| 
        MOV       *-SP[45],AL           ; [CPU_] |608| 
	.dwpsn	file "../Source/prod.c",line 609,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 609 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |609| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |609| 
        ; call occurs [#_SPICANRead] ; [] |609| 
        MOV       *-SP[44],AL           ; [CPU_] |609| 
	.dwpsn	file "../Source/prod.c",line 610,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 610 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |610| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |610| 
        ; call occurs [#_SPICANRead] ; [] |610| 
        MOV       *-SP[43],AL           ; [CPU_] |610| 
	.dwpsn	file "../Source/prod.c",line 611,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 611 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |611| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |611| 
        ; call occurs [#_SPICANRead] ; [] |611| 
        MOV       *-SP[42],AL           ; [CPU_] |611| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |612| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |612| 
        ; call occurs [#_SPICANRead] ; [] |612| 
        MOV       *-SP[41],AL           ; [CPU_] |612| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 613 | data[6] = SPICANRead(0x70);                                            
; 614 | //      data[7] = SPICANRead(0x30);                                    
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |613| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |613| 
        ; call occurs [#_SPICANRead] ; [] |613| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |616| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
        MOV       *-SP[40],AL           ; [CPU_] |613| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |616| 
        MOVB      AL,#161               ; [CPU_] |616| 
        SUBB      XAR4,#46              ; [CPU_U] |616| 
        MOVZ      AR4,AR4               ; [CPU_] |616| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |616| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 617 | SPICAN_T0_RTS();                                                       
;----------------------------------------------------------------------
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_SPICAN_T0_RTS       ; [CPU_] |617| 
        ; call occurs [#_SPICAN_T0_RTS] ; [] |617| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 619 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[46]              ; [CPU_] |619| 
	.dwpsn	file "../Source/prod.c",line 620,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 620 | data[1] = data[1] + 1;                                                 
; 621 | data[2] = data[2] + 1;                                                 
; 622 | data[3] = data[3] + 1;                                                 
; 623 | data[4] = data[4] + 1;                                                 
; 624 | data[5] = data[5] + 1;                                                 
; 625 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |620| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 627 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 621,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |621| 
	.dwpsn	file "../Source/prod.c",line 622,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |622| 
	.dwpsn	file "../Source/prod.c",line 623,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |623| 
	.dwpsn	file "../Source/prod.c",line 624,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |624| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |627| 
        ; call occurs [#_SPICANRead] ; [] |627| 
        MOV       *-SP[46],AL           ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 628 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |628| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |628| 
        ; call occurs [#_SPICANRead] ; [] |628| 
        MOV       *-SP[45],AL           ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 629 | data[2] = SPICANRead(SPICAN_TXB0D0 + 2);                               
;----------------------------------------------------------------------
        MOVB      AL,#56                ; [CPU_] |629| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |629| 
        ; call occurs [#_SPICANRead] ; [] |629| 
        MOV       *-SP[44],AL           ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 630 | data[3] = SPICANRead(SPICAN_TXB0D0 + 3);                               
;----------------------------------------------------------------------
        MOVB      AL,#57                ; [CPU_] |630| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |630| 
        ; call occurs [#_SPICANRead] ; [] |630| 
        MOV       *-SP[43],AL           ; [CPU_] |630| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 631 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |631| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |631| 
        ; call occurs [#_SPICANRead] ; [] |631| 
        MOV       *-SP[42],AL           ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |632| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |632| 
        ; call occurs [#_SPICANRead] ; [] |632| 
        MOV       *-SP[41],AL           ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 633,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 633 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 635 | for (;;) {                                                             
; 637 |         // data[7] = SPICANRXStatus();                                 
; 641 |         // check SW2 for reset command                                 
; 642 |         if (!(0x0010 & INBTTN)) {                                      
; 644 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 645 |                 ad7738_resetpeak(0x0f);                                
; 646 |                 ad7738_resetvall(0x0f);                                
; 648 | #if(0)                                                                 
; 649 |                 // DEBUG: tagid                                        
; 650 |                 lcd_clear();                                           
; 651 |                 for( i = 0; i < 4; i++ )                               
; 653 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 654 |                         lcd_puts( buff, i * 20 );                      
; 656 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 658 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 660 |                 // DEBUG: tagid                                        
; 661 |                 update_units();                                        
; 662 | #endif                                                                 
; 666 | #ifdef SDHCCARD                                                        
; 667 |         // write to SD card file if flag set                           
; 668 |         if( sd_write && fp )                                           
; 670 |                 if( prod_getavail() > 31 || sd_close )                 
; 672 |                         led_set( LED2, LED_RED );                      
; 674 |                         k = 32;                                        
; 676 |                         while( prod_getavail() && k-- )                
; 678 |                                 wtp = prod_getnext();                  
; 680 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 682 |                                         intp = (Uint16*)&wtp->adw[i];  
; 684 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 686 |                                         for( j = 0; j < 2; j++ )       
; 688 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 689 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 690 |                                                 intp++;                
; 693 |                                 sd_cnt++;                              
; 696 |                         if( sd_close )                                 
; 698 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 699 |                                 if( res )                              
; 701 |                                         sprintf( buff, "%02X ", res ); 
; 702 |                                         scia_puts( buff );             
; 705 |                                 res = f_close( fp );                   
; 706 |                                 fp = NULL;                             
; 708 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 709 |                                 scia_puts( buff );                     
; 711 |                                 sd_write = 0;                          
; 712 |                                 sd_close = 0;                          
; 715 |                         led_set( LED2, LED_OFF );                      
; 718 | #endif                                                                 
; 720 |         //=============================================================
;     | =====================//                                                
; 721 |         // update the vfd
;     |                          //                                            
; 722 |         //=============================================================
;     | =====================//                                                
; 723 |         // if there is new "monitor data" ready                        
; 724 |         if (ad7738_monrdy()) {                                         
; 725 |                 // clear the ready flag                                
; 726 |                 ad7738_monclr();                                       
; 728 |                 // display the appropriate data                        
; 729 |                 switch (conf_data.vfd[line].what) {                    
; 730 |                 case VFD_LOAD:                                         
; 731 |                         wtp = ad7738_getmon();                         
; 732 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 733 |                         goto VFD_LINE_BUFF;                            
; 735 |                 case VFD_PEAK:                                         
; 736 |                         wtp = ad7738_getpeak();                        
; 737 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 738 |                         goto VFD_LINE_BUFF;                            
; 740 |                 case VFD_VALL:                                         
; 741 |                         wtp = ad7738_getvall();                        
; 742 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 743 |                         goto VFD_LINE_BUFF;                            
; 745 |                 case VFD_POSI:                                         
; 746 |                         wtp = ad7738_getmon();                         
; 747 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 748 |                         goto VFD_LINE_BUFF;                            
; 750 |                 case VFD_VELO:                                         
; 751 |                         wtp = ad7738_getmon();                         
; 752 |                         //wtp = ad7738_getpeak();                      
; 753 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 755 |                         // display appropriate decimal points          
; 756 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 757 |                         case 0:                                        
; 758 |                                 sprintf(buff, "%10.0f", tempft);       
; 759 |                                 break;                                 
; 760 |                         case 1:                                        
; 761 |                                 sprintf(buff, "%10.1f", tempft);       
; 762 |                                 break;                                 
; 763 |                         case 2:                                        
; 764 |                                 sprintf(buff, "%10.2f", tempft);       
; 765 |                                 break;                                 
; 766 |                         case 3:                                        
; 767 |                                 sprintf(buff, "%10.3f", tempft);       
; 768 |                                 break;                                 
; 769 |                         case 4:                                        
; 770 |                                 sprintf(buff, "%10.4f", tempft);       
; 771 |                                 break;                                 
; 772 |                         case 5:                                        
; 773 |                                 sprintf(buff, "%10.5f", tempft);       
; 774 |                                 break;                                 
; 776 |                         break;                                         
; 778 |                 case VFD_LIMIT:                                        
; 779 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 780 |                         sprintf(buff, "  %s",                          
; 781 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 782 |                         break;                                         
; 783 |                 case VFD_TEMP:                                         
; 784 |                         sprintf(buff, "%10.1f", tempvalue);            
; 785 |                         break;                                         
; 788 |                 // print to LCD                                        
; 789 |                 lcd_puts(buff, 7 + 20 * line);                         
; 791 |                 line++;                                                
; 792 |                 if (line >= VFD_MAX) {                                 
; 793 |                         line = 0;                                      
; 797 |         //=============================================================
;     | =====================//                                                
; 798 |         // temperature sensor reading
;     |                  //                                                    
; 799 |         //=============================================================
;     | =====================//                                                
; 801 |         // if its time to start a temp conversion...                   
; 802 |         if (ad7738_tempstart()) {                                      
; 803 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 806 |         // if its time to start a temp reading...                      
; 807 |         else if (ad7738_tempread()) {                                  
; 808 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 809 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 812 |         //=============================================================
;     | =====================//                                                
; 813 |         // Auto ID detection
;     |                  //                                                    
; 814 |         //=============================================================
;     | =====================//                                                
; 815 |         // check for changes in the load cells connected by "TAG ID"   
; 816 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 817 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 819 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 821 |                                 // new loadcell just plugged in        
; 822 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 823 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 825 |                                         DINT;                          
; 826 |                                         maf_rst();                     
; 827 |                                         ad7738_setcal();               
; 828 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 829 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 830 |                                         EINT;                          
; 832 |                                         lcd_clear();                   
; 833 |                                         update_units();                
; 834 |                                         autoidchanged = 1;             
; 837 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 838 |                 } else {                                               
; 840 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 842 |                         if (autoid[tagch]) {                           
; 843 |                                 autoid[tagch] = 0;                     
; 844 |                                 lcd_clear();                           
; 845 |                                 update_units();                        
; 846 |                                 autoidchanged = 1;                     
; 850 |                 tagch++;                                               
; 851 |                 if (tagch >= CHS_MAX) {                                
; 852 |                         tagch = 0;                                     
; 856 |         //=============================================================
;     | =====================//                                                
; 857 |         // Data streamming
;     |                          //                                            
; 858 |         //=============================================================
;     | =====================//                                                
; 859 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 860 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 861 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 862 |                 //      taking into account decimation, etc.           
; 863 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 865 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 867 |                         ds_ct = 0;                                     
; 868 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 869 |                         j = 0;                                         
; 870 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 871 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 872 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 873 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 874 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 875 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 876 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 878 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 879 |                                 wtp = prod_getnext();                  
; 880 |                                 if (--k) {                             
; 881 |                                         continue;
;     |          // decimation                                                 
; 883 |                                 k = ds_dec;                            
; 884 |                                 ds_ct++;                               
; 886 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 887 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 888 |                                         if (ds_bm & ch) {              
; 889 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 890 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 891 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 892 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 893 |                                                         intp++;        
; 896 |                                         ch <<= 1;
;     |          // next channel                                               
; 899 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 900 |                                         if (ds_bm & ch) {              
; 901 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 902 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 903 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 904 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 905 |                                                         intp++;        
; 908 |                                         ch <<= 1;
;     |          // next channel                                               
; 911 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 912 |                                         if (ds_bm & ch) {              
; 913 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 914 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 915 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 916 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 917 |                                                         intp++;        
; 920 |                                         ch <<= 1;
;     |          // next channel                                               
; 924 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 926 |                         if (ds_stop) {                                 
; 927 |                                 ds_en = 0;                             
; 930 |                         scia_send_bin(buff, j);         // send data   
; 932 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 933 |                 } else if (ad7738_getlimitchgd()) {                    
; 934 |                         j = 0;                                         
; 935 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 936 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 937 |                         for (i = 0; i < LIM_MAX; i++) {                
; 938 |                                 buff[j++] = ad7738_getlimitst(i);      
; 940 |                         scia_send_bin(buff, j);         // send data   
; 941 |                 } else if (autoidchanged) {                            
; 942 |                         autoidchanged = 0;                             
; 944 |                         j = 0;                                         
; 945 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 946 |                         buff[j++] = GetAutoId;                  // 1,  
; 947 |                         buff[j++] = conf_data.tagiden;                 
; 948 |                         for (i = 0; i < CHS_MAX; i++) {                
; 949 |                                 buff[j++] = autoid[i];                 
; 951 |                         scia_send_bin(buff, j);         // send data   
; 957 |         //=============================================================
;     | =====================//                                                
; 958 |         // serial command processing
;     |                  //                                                    
; 959 |         //=============================================================
;     | =====================//                                                
; 961 |         //=============================================================
;     | =====================//                                                
; 962 |         // Check for available command in the command buffer
;     |                  //                                                    
; 963 |         //=============================================================
;     | =====================//                                                
; 964 |         if (0 == scia_rx_getcmds()) {                                  
; 965 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 968 |         //=============================================================
;     | =====================//                                                
; 969 |         // Read one command from command buffer
;     |                  //                                                    
; 970 |         //=============================================================
;     | =====================//                                                
; 971 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 973 |         //=============================================================
;     | =====================//                                                
; 974 |         // Empty command
;     |                          //                                            
; 975 |         //=============================================================
;     | =====================//                                                
; 976 |         if (0 == cmdlen) {                                             
; 977 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 978 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 979 |                 continue;                                              
; 982 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 984 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 985 |                 // ASCII command mode processing
;     |                                  //                                    
; 986 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 988 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 991 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 992 |                 // Current configuration print out
;     |                          //                                            
; 993 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 995 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1059 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1061 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1063 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1066 |                         case 'A':                               // all 
; 1068 |                                 version = VERSION;                     
; 1069 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1070 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1071 |                                 scia_puts(buff);                       
; 1072 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1073 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1074 |                                 scia_puts(buff);                       
; 1075 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1076 |                                 scia_puts(buff);                       
; 1077 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1078 |                                                 conf_data.uname);      
; 1079 |                                 scia_puts(buff);                       
; 1081 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1082 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1083 |                                 scia_puts(buff);                       
; 1084 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1085 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1086 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1087 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1088 |                                         scia_puts(buff);               
; 1090 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1091 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1092 |                                 scia_puts(buff);                       
; 1094 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1095 |                                                 conf_data.filter);     
; 1096 |                                 scia_puts(buff);                       
; 1098 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1099 |                                         scia_puts("\r\n");             
; 1100 |                                         print_channel(ch);
;     |          // channel info                                               
; 1101 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1104 |                                 scia_puts("\r\n");                     
; 1105 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1106 |                                                 conf_data.velfilter);  
; 1107 |                                 scia_puts(buff);                       
; 1108 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1109 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1110 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1111 |                                         scia_puts(buff);               
; 1113 |                                 print_vfd();                           
; 1114 |                                 print_dac();                           
; 1115 |                                 print_limits();                        
; 1116 |                                 break;                                 
; 1118 |                         case 'S':
;     |  // sensor list                                                        
; 1120 |                                 scia_puts("\r\n");                     
; 1122 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1123 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1124 |                                         scia_puts(buff);               
; 1125 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1127 |                                 break;                                 
; 1129 |                         case 'D':
;     |  // Display settings                                                   
; 1131 |                                 print_vfd();                           
; 1132 |                                 break;                                 
; 1134 |                         case 'O':
;     |  // DAC settings                                                       
; 1136 |                                 print_dac();                           
; 1137 |                                 break;                                 
; 1139 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1141 |                                 print_limits();                        
; 1142 |                                 break;                                 
; 1144 |                         default:                                       
; 1145 |                                 goto INVALIDCMD;                       
; 1148 |                         break;                                         
; 1150 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1151 |                         // Unit config commands
;     |                                  //                                    
; 1152 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1153 |                 case 'U':                                       // Unit
; 1155 |                         if (cmdlen < 2) {                              
; 1156 |                                 goto INVALIDCMD;                       
; 1159 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1162 |                         case 'S':
;     |  // unit serial number                                                 
; 1164 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1165 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1166 |                                 conf_data.usn = atol(cmdbuff);         
; 1168 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1169 |                                 scia_puts(buff);                       
; 1170 |                                 unsaved = 1;                           
; 1171 |                                 break;                                 
; 1173 |                         case 'N':
;     |  // unit name                                                          
; 1175 |                                 j = sizeof(conf_data.uname) - 1;       
; 1176 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1177 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1178 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1180 |                                         cmdlen = j;                    
; 1181 |                                         cmdbuff[j] = '\0';             
; 1183 |                                 // also copy the null terminater       
; 1184 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1185 |                                                 cmdlen + 1);           
; 1186 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1188 |                                 scia_puts(cmdbuff);                    
; 1189 |                                 scia_puts("\r\n");                     
; 1190 |                                 unsaved = 1;                           
; 1191 |                                 break;                                 
; 1193 |                         case 'C':
;     |  // current sensor                                                     
; 1195 |                                 // channel number                      
; 1196 |                                 j = CHS_MAX;                           
; 1197 |                                 do {                                   
; 1198 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1199 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1200 |                                         ch = atoi(cmdbuff);            
; 1201 |                                         scia_puts(cmdbuff);            
; 1202 |                                         if (ch > 0 && ch <= j) {       
; 1203 |                                                 break;
;     |          // valid input channel number                                 
; 1205 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1206 |                                 } while (j);                           
; 1207 |                                 scia_puts("\r\n");                     
; 1208 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1210 |                                 // sensor number                       
; 1211 |                                 j = SENSPCH;                           
; 1212 |                                 do {                                   
; 1213 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1214 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1215 |                                         ss = atoi(cmdbuff);            
; 1216 |                                         scia_puts(cmdbuff);            
; 1217 |                                         if (ss > 0 && ss <= j) {       
; 1218 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1220 |                                                 break;                 
; 1222 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1223 |                                 } while (j);                           
; 1224 |                                 scia_puts("\r\n");                     
; 1225 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1227 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1228 |                                                 ch + 1, ss + 1);       
; 1229 |                                 scia_puts(buff);                       
; 1230 |                                 print_sensor(ss);                      
; 1231 |                                 unsaved = 1;                           
; 1233 |                                 DINT;                                  
; 1234 |                                 conf_data.ch[ch].ci = ss;              
; 1235 |                                 ad7738_setcal();                       
; 1237 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1238 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1239 |                                 EINT;                                  
; 1241 |                                 update_units();                        
; 1242 |                                 break;                                 
; 1244 |                         case 'I':
;     |  // interface                                                          
; 1246 |                                 for (j = 0; j < 4; j++) {              
; 1247 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1248 |                                         scia_puts(buff);               
; 1249 |                                         if (j < 3) {                   
; 1250 |                                                 scia_puts(", ");       
; 1253 |                                 scia_puts("\r\n");                     
; 1254 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1255 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1256 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1257 |                                 scia_puts(cmdbuff);                    
; 1258 |                                 scia_puts("\r\n");                     
; 1259 |                                 if (cmdlen == 0) {                     
; 1260 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1261 |                                         break;                         
; 1263 |                                 pt = atoi(cmdbuff);                    
; 1264 |                                 if (pt > 3) {                          
; 1265 |                                         scia_puts(                     
; 1266 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1267 |                                         break;                         
; 1269 |                                 conf_data.rxdir = pt;                  
; 1270 |                                 sprintf(buff,                          
; 1271 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1272 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1273 |                                 scia_puts(buff);                       
; 1274 |                                 scia_puts(                             
; 1275 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1276 |                                 unsaved = 1;                           
; 1277 |                                 break;                                 
; 1279 |                         case 'B':
;     |  // baudrate                                                           
; 1281 |                                 if (conf_data.rxdir == SDIR_USB        
; 1282 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1283 |                                         scia_puts(                     
; 1284 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1285 |                                         break;                         
; 1288 |                                 for (j = 0; j < 8; j++) {              
; 1289 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1290 |                                         scia_puts(buff);               
; 1291 |                                         if (j < 7) {                   
; 1292 |                                                 scia_puts(", ");       
; 1295 |                                 scia_puts("\r\n");                     
; 1296 |                                 cmdlen = sprintf(buff,                 
; 1297 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1298 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1299 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1300 |                                 scia_puts(cmdbuff);                    
; 1301 |                                 scia_puts("\r\n");                     
; 1302 |                                 if (cmdlen == 0) {                     
; 1303 |                                         scia_puts(                     
; 1304 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1305 |                                         break;                         
; 1307 |                                 pt = atoi(cmdbuff);                    
; 1308 |                                 if (pt > 7) {                          
; 1309 |                                         scia_puts(                     
; 1310 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1311 |                                         break;                         
; 1313 |                                 conf_data.baud = pt;                   
; 1314 |                                 sprintf(buff,                          
; 1315 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1316 |                                                 BAUD[conf_data.baud]); 
; 1317 |                                 scia_puts(buff);                       
; 1318 |                                 scia_puts(                             
; 1319 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1320 |                                 unsaved = 1;                           
; 1321 |                                 break;                                 
; 1323 |                         case 'F':
;     |  // averaging filter size                                              
; 1325 |                                 j = MAF_MAX;                           
; 1326 |                                 do {                                   
; 1327 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1328 |                                                         j);            
; 1329 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1330 |                                         i = atoi(cmdbuff);             
; 1331 |                                         scia_puts(cmdbuff);            
; 1332 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1333 |                                                 break;
;     |          // valid number input                                         
; 1335 |                                         scia_puts(                     
; 1336 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1337 |                                 } while (j);                           
; 1338 |                                 scia_puts("\r\n");                     
; 1340 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1341 |                                                 i);                    
; 1342 |                                 scia_puts(buff);                       
; 1343 |                                 unsaved = 1;                           
; 1345 |                                 // update new value                    
; 1346 |                                 DINT;                                  
; 1347 |                                 conf_data.filter = i;                  
; 1348 |                                 maf_rst();                             
; 1349 |                                 EINT;                                  
; 1350 |                                 break;                                 
; 1352 |                         case 'W':
;     |  // diff window ratio                                                  
; 1354 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1355 |                                                 conf_data.diffwin);    
; 1356 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1357 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1358 |                                 scia_puts(cmdbuff);                    
; 1359 |                                 scia_puts("\r\n");                     
; 1361 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1362 |                                                 conf_data.diffwin);    
; 1363 |                                 scia_puts(buff);                       
; 1364 |                                 unsaved = 1;                           
; 1366 |                                 DINT;                                  
; 1367 |                                 ad7738_setcal();                       
; 1368 |                                 maf_rst();                             
; 1369 |                                 EINT;                                  
; 1370 |                                 break;                                 
; 1372 |                         default:                                       
; 1373 |                                 goto INVALIDCMD;                       
; 1376 |                         break;                                         
; 1378 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1379 |                         // Board calibration
;     |                                  //                                    
; 1380 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1381 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1383 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1384 |                                 goto INVALIDCMD;                       
; 1387 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1388 |                                 goto INVALIDCMD;                       
; 1389 |                                 // invalid calibration method          
; 1392 |                         // channel index                               
; 1393 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1394 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1395 |                                 goto INVALIDCMD;                       
; 1396 |                                 // invalid channel number              
; 1398 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1400 |                         volt[0] = 0;                                   
; 1401 |                         volt[1] = 0;                                   
; 1402 |                         for (j = 3; j < cmdlen; j++) {                 
; 1403 |                                 if (cmdbuff[j] == 'X') {               
; 1404 |                                         j++;                           
; 1405 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1408 |                                 if (cmdbuff[j] == 'Y') {               
; 1409 |                                         j++;                           
; 1410 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1414 |                         if (volt[0] == volt[1]) {                      
; 1415 |                                 goto INVALIDCMD;                       
; 1416 |                                 // invalid parameters                  
; 1419 |                         lcd_clear();                                   
; 1420 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1421 |                         lcd_puts(buff, 20);                            
; 1422 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1423 |                         lcd_puts(buff, 40);                            
; 1424 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1425 |                         lcd_puts(buff, 60);                            
; 1427 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1430 |                         case 'C':
;     |  // board ADC calibration                                              
; 1432 |                                 lcd_puts("Board Calibration...", 0);   
; 1434 |                                 sprintf(buff,                          
; 1435 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1436 |                                                 ch + 1);               
; 1437 |                                 scia_puts(buff);                       
; 1449 |                                 for (j = 0; j < 2; j++) {              
; 1450 |                                         sprintf(buff,                  
; 1451 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1452 |                                                         volt[j]);      
; 1453 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1454 |                                         scia_puts("Reading ... ");     
; 1456 |                                         dsum[j] = 0;                   
; 1457 |                                         sampcnt = CAL_SAMPLES;         
; 1458 |                                         while (sampcnt--) {            
; 1459 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1460 |                                                         delay_us(1);
;     |                  // wait                                               
; 1462 |                                                 cntp = ad7738_getraw();
; 1463 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1466 |                                         scia_puts("done\r\n");         
; 1469 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1470 |                                                 / (dsum[1] - dsum[0]); 
; 1472 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1473 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1474 |                                 scia_puts(buff);                       
; 1475 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1476 |                                 break;                                 
; 1478 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1480 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1481 |                                                 || volt[1] < -10) {    
; 1482 |                                         lcd_clear();                   
; 1483 |                                         update_units();                
; 1484 |                                         goto INVALIDCMD;               
; 1485 |                                         // invalid parameters          
; 1488 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1490 |                                 sprintf(buff,                          
; 1491 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1492 |                                                 ch + 1);               
; 1493 |                                 scia_puts(buff);                       
; 1494 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1495 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1497 |                                 for (j = 0; j < 2; j++) {              
; 1498 |                                         if (volt[j] < 0) {             
; 1499 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1500 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1501 |                                         } else {                       
; 1502 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1503 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1505 |                                         if (dsum[0] <= 0) {            
; 1506 |                                                 dacc[j] = 0;           
; 1507 |                                         } else if (dsum[0] >= 0xffff) {
; 1508 |                                                 dacc[j] = 0xffff;      
; 1509 |                                         } else {                       
; 1510 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1513 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1514 |                                         scia_puts(buff);               
; 1515 |                                         cmdbuff[0] = '\0';             
; 1517 |                                         do {                           
; 1518 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1519 |                                                 latch_dac();           
; 1521 |                                                 do {                   
; 1522 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1523 | 
;     |  sizeof(cmdbuff));                                                     
; 1524 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1525 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1527 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1528 |                                                         break;
;     |                  // done                                               
; 1531 |                                                 i = atoi(cmdbuff + 1); 
; 1532 |                                                 if (i == 0) {          
; 1533 |                                                         i = 1;         
; 1536 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1538 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1539 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1540 |                                                         } else {       
; 1541 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1543 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1545 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1546 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1547 |                                                         } else {       
; 1548 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1551 |                                         } while (i);                   
; 1553 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1554 |                                         scia_puts(buff);               
; 1557 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1559 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1560 |                                 cmdbuff[0] = '\0';                     
; 1562 |                                 do {                                   
; 1563 |                                         mcbsp_xmit(dacc[2], ch);       
; 1564 |                                         latch_dac();                   
; 1566 |                                         do {                           
; 1567 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1568 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1569 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1571 |                                         if ('S' == cmdbuff[0]) {       
; 1572 |                                                 break;
;     |          // done                                                       
; 1575 |                                         i = atoi(cmdbuff + 1);         
; 1576 |                                         if (i == 0) {                  
; 1577 |                                                 i = 1;                 
; 1580 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1582 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1583 |                                                         dacc[2] += i;  
; 1584 |                                                 } else {               
; 1585 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1587 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1589 |                                                 if (dacc[2] >= i) {    
; 1590 |                                                         dacc[2] -= i;  
; 1591 |                                                 } else {               
; 1592 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1595 |                                 } while (i);                           
; 1597 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1598 |                                 scia_puts(buff);                       
; 1600 |                                 // do the calculations                 
; 1601 |                                 if (volt[0] < 0) {                     
; 1602 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1603 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1604 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1605 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1606 |                                 } else {                               
; 1607 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1608 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1609 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1610 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1612 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1614 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1616 |                                 sprintf(buff,                          
; 1617 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1618 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1619 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1620 |                                 scia_puts(buff);                       
; 1622 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1623 |                                 break;                                 
; 1625 |                         default:                                       
; 1626 |                                 goto INVALIDCMD;                       
; 1629 |                         unsaved = 1;                                   
; 1630 |                         lcd_clear();                                   
; 1631 |                         update_units();                                
; 1633 |                         DINT;                                          
; 1634 |                         ad7738_setcal();                               
; 1635 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1636 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1637 |                         EINT;                                          
; 1638 |                         break;                                         
; 1640 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1641 |                         // Channel sensor calibration
;     |                                  //                                    
; 1642 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1643 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1645 |                         if (cmdlen < 2) {                              
; 1646 |                                 goto INVALIDCMD;                       
; 1649 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1650 |                                         && 'S' != cmdbuff[1]) {        
; 1651 |                                 goto INVALIDCMD;                       
; 1652 |                                 // invalid calibration method          
; 1654 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1656 |                         lcd_clear();                                   
; 1657 |                         lcd_puts("Sensor Calibration..", 0);           
; 1659 |                         // === read informations ====                  
; 1660 |                         // channel number                              
; 1661 |                         j = CHS_MAX;                                   
; 1662 |                         do {                                           
; 1663 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1664 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1665 |                                 ch = atoi(cmdbuff);                    
; 1666 |                                 scia_puts(cmdbuff);                    
; 1667 |                                 if (ch > 0 && ch <= j) {               
; 1668 |                                         break;
;     |  // valid input channel number                                         
; 1670 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1671 |                         } while (j);                                   
; 1672 |                         scia_puts("\r\n");                             
; 1673 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1675 |                         // sensor number                               
; 1676 |                         j = SENSPCH;                                   
; 1677 |                         do {                                           
; 1678 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1679 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1680 |                                 ss = atoi(cmdbuff);                    
; 1681 |                                 scia_puts(cmdbuff);                    
; 1682 |                                 if (ss > 0 && ss <= j) {               
; 1683 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1685 |                                         break;                         
; 1687 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1688 |                         } while (j);                                   
; 1689 |                         scia_puts("\r\n");                             
; 1690 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1692 |                         // put on the vfd                              
; 1693 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1694 |                         lcd_puts(buff, 20);                            
; 1696 |                         // sensor serial number                        
; 1697 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1698 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1699 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1700 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1702 |                                 cmdlen = j;                            
; 1703 |                                 cmdbuff[j] = '\0';                     
; 1705 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1706 |                         scia_puts(cmdbuff);                            
; 1707 |                         scia_puts("\r\n");                             
; 1709 |                         // sensor label                                
; 1710 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1711 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1712 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1713 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1715 |                                 cmdlen = j;                            
; 1716 |                                 cmdbuff[j] = '\0';                     
; 1718 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1719 |                         scia_puts(cmdbuff);                            
; 1720 |                         scia_puts("\r\n");                             
; 1722 |                         // unit                                        
; 1723 |                         for (j = 0; j < 7; j++) {                      
; 1724 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1726 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1727 |                         scia_puts(buff);                               
; 1728 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1729 |                                         sizeof(cmdbuff));              
; 1730 |                         tsensor.unit = atoi(cmdbuff);                  
; 1732 |                         switch (tsensor.unit) {                        
; 1733 |                         case 0:                                 // lb  
; 1734 |                         case 1:                                 // kg  
; 1735 |                                 tsensor.unit |= 0x10;                  
; 1736 |                                 break;                                 
; 1737 |                         case 2:                                 // in  
; 1738 |                         case 3:                                 // cm  
; 1739 |                         case 4:                                 // mm  
; 1740 |                                 tsensor.unit |= 0x20;                  
; 1741 |                                 break;                                 
; 1742 |                         case 5:                                 // ps  
; 1743 |                                 tsensor.unit |= 0x30;                  
; 1744 |                                 break;                                 
; 1745 |                         case 6:                                 // nm  
; 1746 |                                 tsensor.unit |= 0x40;                  
; 1747 |                                 break;                                 
; 1748 |                         case 7:                                        
; 1749 |                         case 8:                                        
; 1750 |                         case 15:                                       
; 1751 |                                 tsensor.unit |= 0xf0;                  
; 1752 |                                 break;                                 
; 1753 |                         default:                                       
; 1754 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1755 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1756 |                                 break;                                 
; 1758 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1759 |                         tsensor.ufactor = 1;                    // 1:1 
; 1761 |                         scia_puts(cmdbuff);                            
; 1762 |                         scia_puts("\r\n");                             
; 1764 |                         // range                                       
; 1765 |                         j = 1;                                         
; 1766 |                         do {                                           
; 1767 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1768 |                                 tsensor.range = atof(cmdbuff);         
; 1769 |                                 if (tsensor.range != 0) {              
; 1770 |                                         break;                         
; 1772 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1773 |                         } while (j);                                   
; 1774 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1775 |                         scia_puts(cmdbuff);                            
; 1776 |                         scia_puts("\r\n");                             
; 1778 |                         tsensor.tagid = tagid(ch);                     
; 1780 |                         if (tsensor.tagid == 0) {                      
; 1781 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1782 |                         } else {                                       
; 1783 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1785 |                         scia_puts(buff);                               
; 1787 |                         switch (cmethod)
;     |  // on method code                                                     
; 1790 |                         case 'V':
;     |  // mv/v cal                                                           
; 1792 |                                 lcd_puts("Method: mv/v", 40);          
; 1794 |                                 tsensor.method = MD_RUN_MVV;           
; 1795 |                                 tsensor.points = 1;                    
; 1797 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1798 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1799 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1800 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1801 |                                 if (tsensor.slope[0] == 0) {           
; 1802 |                                         tsensor.slope[0] = 1;          
; 1804 |                                 scia_puts(cmdbuff);                    
; 1805 |                                 scia_puts("\r\n");                     
; 1807 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1808 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1810 |                                 scia_puts("Reading ... ");             
; 1812 |                                 dsum[0] = 0;                           
; 1813 |                                 sampcnt = CAL_SAMPLES;                 
; 1814 |                                 while (sampcnt--) {                    
; 1815 |                                         while (0 == ad7738_rawrdy()) { 
; 1816 |                                                 delay_us(1);
;     |          // wait                                                       
; 1819 |                                         cntp = ad7738_getraw();        
; 1820 |                                         dsum[0] += cntp->adc[ch];      
; 1822 |                                 scia_puts("done\r\n");                 
; 1824 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1825 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1826 |                                 break;                                 
; 1828 |                         case 'M':
;     |  // mass cal                                                           
; 1830 |                                 tsensor.method = MD_RUN_MAS;           
; 1832 |                                 // calibration points for mass cal only
; 1833 |                                 j = PNT_MAX;                           
; 1834 |                                 do {                                   
; 1835 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1836 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1837 |                                         tsensor.points = atoi(cmdbuff);
; 1838 |                                         scia_puts(cmdbuff);            
; 1839 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1840 |                                                 break;                 
; 1842 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1844 |                                 } while (j);                           
; 1845 |                                 scia_puts("\r\n");                     
; 1847 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1848 |                                 lcd_puts(buff, 40);                    
; 1850 |                                 // calculate the default point values  
; 1851 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1852 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1853 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1856 |                                 // read in value with default provided 
; 1857 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1858 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1859 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1860 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1862 |                                         // zero length response set the
;     |  default                                                               
; 1863 |                                         if (cmdlen > 0) {              
; 1864 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1866 |                                         scia_puts(cmdbuff);            
; 1867 |                                         scia_puts("\r\n");             
; 1870 |                                 // TODO: sort the list of points       
; 1872 |                                 // read adc count for each point       
; 1873 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1874 |                                         sprintf(buff,                  
; 1875 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1876 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1877 |                                                         j + 1);        
; 1878 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1879 |                                         scia_puts("Reading ... ");     
; 1881 |                                         dsum[0] = 0;                   
; 1882 |                                         sampcnt = CAL_SAMPLES;         
; 1883 |                                         while (sampcnt--) {            
; 1884 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1885 |                                                         delay_us(1);
;     |                  // wait                                               
; 1888 |                                                 cntp = ad7738_getraw();
; 1889 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1891 |                                         scia_puts("done\r\n");         
; 1892 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1895 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1896 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1897 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1898 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1899 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1900 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1901 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1902 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1903 | 
;     |  * tsensor.adc[j];                                                     
; 1905 |                                 break;                                 
; 1907 |                         case 'S':
;     |  // shunt cal                                                          
; 1909 |                                 lcd_puts("Method: shunt", 40);         
; 1911 |                                 tsensor.method = MD_RUN_SHT;           
; 1912 |                                 tsensor.points = 1;                    
; 1914 |                                 sprintf(buff,                          
; 1915 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1916 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1917 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1918 |                                 scia_puts(cmdbuff);                    
; 1919 |                                 scale = atof(cmdbuff);                 
; 1920 |                                 if (scale == 0) {                      
; 1921 |                                         scale = 1.46;                  
; 1922 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1924 |                                 scia_puts("\r\n");                     
; 1926 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1927 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1929 |                                 scia_puts("Reading ... ");             
; 1931 |                                 for (j = 0; j < 2; j++) {              
; 1932 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1934 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1935 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1936 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1938 |                                                 DINT;                  
; 1939 |                                                 maf_rst();             
; 1940 |                                                 EINT;                  
; 1941 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1944 |                                         dsum[j] = 0;                   
; 1945 |                                         sampcnt = CAL_SAMPLES;         
; 1946 |                                         while (sampcnt--) {            
; 1947 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1948 |                                                         delay_us(1);
;     |                  // wait                                               
; 1951 |                                                 cntp = ad7738_getraw();
; 1952 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1956 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1957 |                                 DINT;                                  
; 1958 |                                 maf_rst();                             
; 1959 |                                 EINT;                                  
; 1961 |                                 scia_puts("done\r\n");                 
; 1963 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1964 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1965 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1966 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1967 |                                 break;                                 
; 1969 |                         default:                                       
; 1970 |                                 lcd_clear();                           
; 1971 |                                 update_units();                        
; 1972 |                                 goto INVALIDCMD;                       
; 1975 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1976 |                         scia_getparam(                                 
; 1977 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1978 |                                         cmdbuff, sizeof(cmdbuff));     
; 1979 |                         scia_puts("Reading ... ");                     
; 1981 |                         for (j = 0; j < 2; j++) {                      
; 1982 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1984 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1985 |                                         for (i = 0; i < 50; i++) {     
; 1986 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1988 |                                         DINT;                          
; 1989 |                                         maf_rst();                     
; 1990 |                                         EINT;                          
; 1991 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1994 |                                 dsum[j] = 0;                           
; 1995 |                                 sampcnt = CAL_SAMPLES;                 
; 1996 |                                 while (sampcnt--) {                    
; 1997 |                                         while (0 == ad7738_rawrdy()) { 
; 1998 |                                                 delay_us(1);
;     |          // wait                                                       
; 2001 |                                         cntp = ad7738_getraw();        
; 2002 |                                         dsum[j] += cntp->adc[ch];      
; 2004 |                                 dsum[j] /= CAL_SAMPLES;                
; 2006 |                                 pt = 0;                                
; 2007 |                                 if (tsensor.points > 2) {              
; 2008 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2009 |                                                 pt++;                  
; 2012 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2013 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2016 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2017 |                         DINT;                                          
; 2018 |                         maf_rst();                                     
; 2019 |                         EINT;                                          
; 2021 |                         scia_puts("done\r\n");                         
; 2023 |                         tsensor.shunt = volt[1] - volt[0];             
; 2025 |                         // setup some other members of the structure   
; 2026 |                         tsensor.tare = 0;                              
; 2027 |                         tsensor.dacgain = 1;                           
; 2028 |                         tsensor.dacoff = 0;                            
; 2029 |                         tsensor.ch = ch;                               
; 2031 |                         DINT;                                          
; 2032 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2033 |                                         sizeof(sconf_t));              
; 2035 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2037 |                         ad7738_setcal();                               
; 2038 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2039 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2040 |                         EINT;                                          
; 2042 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2043 |                                         ch + 1, ss + 1);               
; 2044 |                         scia_puts(buff);                               
; 2045 |                         print_sensor(ss);                              
; 2047 |                         unsaved = 1;                                   
; 2048 |                         lcd_clear();                                   
; 2049 |                         update_units();                                
; 2050 |                         break;                                         
; 2052 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2053 |                         // sensor config commands
;     |                                          //                            
; 2054 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2055 |                 case 'S':                               // sensor      
; 2057 |                         if (cmdlen < 2) {                              
; 2058 |                                 goto INVALIDCMD;                       
; 2061 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2062 |                                         && 'D' != cmdbuff[1]) {        
; 2063 |                                 goto INVALIDCMD;                       
; 2064 |                                 // invalid command                     
; 2066 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2086 |                         // sensor number                               
; 2087 |                         j = SENSPCH;                                   
; 2088 |                         do {                                           
; 2089 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2090 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2091 |                                 ss = atoi(cmdbuff);                    
; 2092 |                                 scia_puts(cmdbuff);                    
; 2093 |                                 if (ss > 0 && ss <= j) {               
; 2094 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2096 |                                         break;                         
; 2098 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2099 |                         } while (j);                                   
; 2100 |                         scia_puts("\r\n");                             
; 2101 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2103 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2106 |                         case 'N':
;     |  // change sensor label                                                
; 2108 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2109 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2110 |                                                 ss + 1, j);            
; 2111 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2112 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2114 |                                         cmdlen = j;                    
; 2115 |                                         cmdbuff[j] = '\0';             
; 2117 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2118 |                                                 cmdlen + 1);           
; 2119 |                                 scia_puts(cmdbuff);                    
; 2120 |                                 scia_puts("\r\n");                     
; 2121 |                                 unsaved = 1;                           
; 2123 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2124 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2125 |                                 scia_puts(buff);                       
; 2126 |                                 break;                                 
; 2128 |                         case 'U':
;     |  // change the output unit                                             
; 2130 |                                 scale = 0;                             
; 2132 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2133 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2135 |                                         do {                           
; 2136 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2137 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2138 |                                                 j = atoi(cmdbuff);     
; 2139 |                                                 scia_puts(cmdbuff);    
; 2140 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2141 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2143 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2144 |                                         scia_puts("\r\n");             
; 2146 |                                         switch (j) {                   
; 2147 |                                         case 0:                        
; 2148 |                                                 scale = 1;             
; 2149 |                                                 j |= 0x10;             
; 2150 |                                                 break;                 
; 2151 |                                         case 1:                        
; 2152 |                                                 scale = LB_TO_KG;      
; 2153 |                                                 j |= 0x10;             
; 2154 |                                                 break;                 
; 2155 |                                         case 7:                        
; 2156 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2157 |                                                 j |= 0xf0;             
; 2158 |                                                 break;                 
; 2160 |                                         break;                         
; 2162 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2164 |                                         do {                           
; 2165 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2166 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2167 |                                                 j = atoi(cmdbuff);     
; 2168 |                                                 scia_puts(cmdbuff);    
; 2169 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2170 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2172 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2173 |                                         scia_puts("\r\n");             
; 2175 |                                         switch (j) {                   
; 2176 |                                         case 0:                        
; 2177 |                                                 scale = 1.0 / LB_TO_KG;
; 2178 |                                                 j |= 0x10;             
; 2179 |                                                 break;                 
; 2180 |                                         case 1:                        
; 2181 |                                                 scale = 1;             
; 2182 |                                                 j |= 0x10;             
; 2183 |                                                 break;                 
; 2184 |                                         case 7:                        
; 2185 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2186 |                                                 j |= 0xf0;             
; 2187 |                                                 break;                 
; 2189 |                                         break;                         
; 2191 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2193 |                                         do {                           
; 2194 |                                                 scia_getparam(         
; 2195 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2196 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2197 |                                                 j = atoi(cmdbuff);     
; 2198 |                                                 scia_puts(cmdbuff);    
; 2199 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2200 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2202 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2203 |                                         scia_puts("\r\n");             
; 2205 |                                         switch (j) {                   
; 2206 |                                         case 2:                        
; 2207 |                                                 scale = 1;             
; 2208 |                                                 j |= 0x20;             
; 2209 |                                                 break;                 
; 2210 |                                         case 3:                        
; 2211 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2212 |                                                 j |= 0x20;             
; 2213 |                                                 break;                 
; 2214 |                                         case 4:                        
; 2215 |                                                 scale = IN_TO_MM;      
; 2216 |                                                 j |= 0x20;             
; 2217 |                                                 break;                 
; 2218 |                                         case 7:                        
; 2219 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2220 |                                                 j |= 0xf0;             
; 2221 |                                                 break;                 
; 2223 |                                         break;                         
; 2225 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2227 |                                         do {                           
; 2228 |                                                 scia_getparam(         
; 2229 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2230 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2231 |                                                 j = atoi(cmdbuff);     
; 2232 |                                                 scia_puts(cmdbuff);    
; 2233 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2234 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2236 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2237 |                                         scia_puts("\r\n");             
; 2239 |                                         switch (j) {                   
; 2240 |                                         case 2:                        
; 2241 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2242 |                                                 j |= 0x20;             
; 2243 |                                                 break;                 
; 2244 |                                         case 3:                        
; 2245 |                                                 scale = 1;             
; 2246 |                                                 j |= 0x20;             
; 2247 |                                                 break;                 
; 2248 |                                         case 4:                        
; 2249 |                                                 scale = 10;            
; 2250 |                                                 j |= 0x20;             
; 2251 |                                                 break;                 
; 2252 |                                         case 7:                        
; 2253 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2254 |                                                 j |= 0xf0;             
; 2255 |                                                 break;                 
; 2257 |                                         break;                         
; 2259 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2261 |                                         do {                           
; 2262 |                                                 scia_getparam(         
; 2263 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2264 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2265 |                                                 j = atoi(cmdbuff);     
; 2266 |                                                 scia_puts(cmdbuff);    
; 2267 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2268 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2270 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2271 |                                         scia_puts("\r\n");             
; 2273 |                                         switch (j) {                   
; 2274 |                                         case 2:                        
; 2275 |                                                 scale = 1.0 / IN_TO_MM;
; 2276 |                                                 j |= 0x20;             
; 2277 |                                                 break;                 
; 2278 |                                         case 3:                        
; 2279 |                                                 scale = 0.1;           
; 2280 |                                                 j |= 0x20;             
; 2281 |                                                 break;                 
; 2282 |                                         case 4:                        
; 2283 |                                                 scale = 1;             
; 2284 |                                                 j |= 0x20;             
; 2285 |                                                 break;                 
; 2286 |                                         case 7:                        
; 2287 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2288 |                                                 j |= 0xf0;             
; 2289 |                                                 break;                 
; 2291 |                                         break;                         
; 2293 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2295 |                                         do {                           
; 2296 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2297 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2298 |                                                 j = atoi(cmdbuff);     
; 2299 |                                                 scia_puts(cmdbuff);    
; 2300 |                                                 if (j != 5 && j != 7) {
; 2301 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2303 |                                         } while (j != 5 && j != 7);    
; 2304 |                                         scia_puts("\r\n");             
; 2306 |                                         switch (j) {                   
; 2307 |                                         case 5:                        
; 2308 |                                                 scale = 1;             
; 2309 |                                                 j |= 0x30;             
; 2310 |                                                 break;                 
; 2311 |                                         case 7:                        
; 2312 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2313 |                                                 j |= 0xf0;             
; 2314 |                                                 break;                 
; 2316 |                                         break;                         
; 2318 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2320 |                                         do {                           
; 2321 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2322 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2323 |                                                 j = atoi(cmdbuff);     
; 2324 |                                                 scia_puts(cmdbuff);    
; 2325 |                                                 if (j != 6 && j != 7) {
; 2326 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2328 |                                         } while (j != 6 && j != 7);    
; 2329 |                                         scia_puts("\r\n");             
; 2331 |                                         switch (j) {                   
; 2332 |                                         case 6:                        
; 2333 |                                                 scale = 1;             
; 2334 |                                                 j |= 0x40;             
; 2335 |                                                 break;                 
; 2336 |                                         case 7:                        
; 2337 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2338 |                                                 j |= 0xf0;             
; 2339 |                                                 break;                 
; 2341 |                                         break;                         
; 2343 |                                 default:                               
; 2344 |                                         break;                         
; 2347 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2348 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2349 |                                         break;                         
; 2352 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2353 |                                         scia_puts(                     
; 2354 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2355 |                                         break;                         
; 2358 |                                 conf_data.sensor[ss].ounit = j;        
; 2359 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2360 |                                 unsaved = 1;                           
; 2362 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2363 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2364 |                                 scia_puts(buff);                       
; 2366 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2367 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2368 |                                                 update_units();        
; 2369 |                                                 DINT;                  
; 2370 |                                                 ad7738_setcal();       
; 2371 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2372 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2373 |                                                 EINT;                  
; 2376 |                                 break;                                 
; 2378 |                         case 'B':
;     |  // change percent base                                                
; 2380 |                                 // base                                
; 2381 |                                 j = 1;                                 
; 2382 |                                 do {                                   
; 2383 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2384 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2385 |                                         scale = atof(cmdbuff);         
; 2386 |                                         scia_puts(cmdbuff);            
; 2387 |                                         if (scale != 0) {              
; 2388 |                                                 break;                 
; 2390 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2391 |                                 } while (j);                           
; 2392 |                                 scia_puts("\r\n");                     
; 2393 |                                 conf_data.sensor[ss].base = scale;     
; 2394 |                                 unsaved = 1;                           
; 2396 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2397 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2398 |                                 scia_puts(buff);                       
; 2400 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2401 |                                         // output unit is percent      
; 2402 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2403 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2405 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2406 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2407 |                                                         // changed is f
;     | or the current sensor                                                  
; 2408 |                                                         DINT;          
; 2409 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2410 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2411 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2412 |                                                         EINT;          
; 2416 |                                 break;                                 
; 2418 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2420 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2421 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2422 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2423 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2424 |                                 scia_puts(cmdbuff);                    
; 2425 |                                 scia_puts("\r\n");                     
; 2427 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2428 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2429 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2430 |                                 scia_puts(cmdbuff);                    
; 2431 |                                 scia_puts("\r\n");                     
; 2432 |                                 unsaved = 1;                           
; 2434 |                                 sprintf(buff,                          
; 2435 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2436 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2437 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2438 |                                 scia_puts(buff);                       
; 2440 |                                 DINT;                                  
; 2441 |                                 ad7738_setcal();                       
; 2442 |                                 EINT;                                  
; 2443 |                                 break;                                 
; 2445 |                         default:                                       
; 2446 |                                 goto INVALIDCMD;                       
; 2449 |                         break;                                         
; 2451 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2452 |                         // Encoder config commands
;     |                                  //                                    
; 2453 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2454 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2456 |                         if (cmdlen < 2) {                              
; 2457 |                                 goto INVALIDCMD;                       
; 2460 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2463 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2465 |                                 j = MAF_MAX;                           
; 2466 |                                 do {                                   
; 2467 |                                         sprintf(buff,                  
; 2468 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2469 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2470 |                                         i = atoi(cmdbuff);             
; 2471 |                                         scia_puts(cmdbuff);            
; 2472 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2473 |                                                 break;
;     |          // valid number input                                         
; 2475 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2476 |                                 } while (j);                           
; 2477 |                                 scia_puts("\r\n");                     
; 2479 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2480 |                                                 i);                    
; 2481 |                                 scia_puts(buff);                       
; 2482 |                                 unsaved = 1;                           
; 2484 |                                 // update new value                    
; 2485 |                                 DINT;                                  
; 2486 |                                 conf_data.velfilter = i;               
; 2487 |                                 ad7738_setcal();                       
; 2488 |                                 velf_rst();                            
; 2489 |                                 EINT;                                  
; 2490 |                                 break;                                 
; 2492 |                         case 'P':
;     |  // count per inch                                                     
; 2494 |                                 // channel number                      
; 2495 |                                 j = ENC_MAX;                           
; 2496 |                                 do {                                   
; 2497 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2498 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2499 |                                         ss = atoi(cmdbuff);            
; 2500 |                                         scia_puts(cmdbuff);            
; 2501 |                                         if (ss > 0 && ss <= j) {       
; 2502 |                                                 break;
;     |          // valid input line number                                    
; 2504 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2505 |                                 } while (j);                           
; 2506 |                                 scia_puts("\r\n");                     
; 2507 |                                 ss--;
;     |  // line number, convert to index                                      
; 2509 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2510 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2511 |                                 templg = atol(cmdbuff);                
; 2512 |                                 scia_puts(cmdbuff);                    
; 2513 |                                 scia_puts("\r\n");                     
; 2514 |                                 if (templg == 0) {                     
; 2515 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2516 |                                         break;                         
; 2518 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2519 |                                                 ss + 1, templg);       
; 2520 |                                 scia_puts(buff);                       
; 2521 |                                 unsaved = 1;                           
; 2523 |                                 // update new value                    
; 2524 |                                 DINT;                                  
; 2525 |                                 conf_data.cntperin[ss] = templg;       
; 2526 |                                 ad7738_setcal();                       
; 2527 |                                 velf_rst();                            
; 2528 |                                 EINT;                                  
; 2529 |                                 break;                                 
; 2531 |                         break;                                         
; 2533 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2534 |                         // Display command
;     |                                  //                                    
; 2535 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2536 |                 case 'D':                                              
; 2538 |                         if (cmdlen < 2) {                              
; 2539 |                                 goto INVALIDCMD;                       
; 2542 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2544 |                         case 'S':
;     |  // selection                                                          
; 2546 |                                 // line number                         
; 2547 |                                 j = VFD_MAX;                           
; 2548 |                                 do {                                   
; 2549 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2550 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2551 |                                         ss = atoi(cmdbuff);            
; 2552 |                                         scia_puts(cmdbuff);            
; 2553 |                                         if (ss > 0 && ss <= j) {       
; 2554 |                                                 break;
;     |          // valid input line number                                    
; 2556 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2557 |                                 } while (j);                           
; 2558 |                                 scia_puts("\r\n");                     
; 2559 |                                 ss--;
;     |  // line number, convert to index                                      
; 2561 |                                 // what                                
; 2562 |                                 for (j = 0; j < 7; j++) {              
; 2563 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2564 |                                         scia_puts(buff);               
; 2565 |                                         if (j < 6) {                   
; 2566 |                                                 scia_puts(", ");       
; 2569 |                                 scia_puts("\r\n");                     
; 2570 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2571 |                                                 ss + 1);               
; 2572 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2573 |                                 pt = atoi(cmdbuff);                    
; 2574 |                                 if (pt >= 7) {                         
; 2575 |                                         pt = 0;                        
; 2576 |                                         scia_puts(                     
; 2577 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2579 |                                 scia_puts(cmdbuff);                    
; 2580 |                                 scia_puts("\r\n");                     
; 2581 |                                 conf_data.vfd[ss].what = pt;           
; 2583 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2585 |                                 case VFD_LOAD:                         
; 2586 |                                 case VFD_PEAK:                         
; 2587 |                                 case VFD_VALL:                         
; 2589 |                                         j = CHS_MAX;                   
; 2590 |                                         goto VFD_CHANNEL;              
; 2592 |                                 case VFD_POSI:                         
; 2593 |                                 case VFD_VELO:                         
; 2595 |                                         j = ENC_MAX;                   
; 2597 |                                         VFD_CHANNEL:                   
; 2598 |                                         // channel number              
; 2599 |                                         do {                           
; 2600 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2601 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2602 |                                                 ch = atoi(cmdbuff);    
; 2603 |                                                 scia_puts(cmdbuff);    
; 2604 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2605 |                                                         break;
;     |          // valid input channel number                                 
; 2607 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2608 |                                         } while (j);                   
; 2609 |                                         scia_puts("\r\n");             
; 2610 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2611 |                                         conf_data.vfd[ss].ch = ch;     
; 2613 |                                         // digits after decimal point  
; 2614 |                                         j = 1;                         
; 2615 |                                         do {                           
; 2616 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2617 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2618 |                                                 i = atoi(cmdbuff);     
; 2619 |                                                 if (i >= 0 && i <= 5) {
; 2620 |                                                         break;         
; 2622 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2623 |                                         } while (j);                   
; 2624 |                                         scia_puts(cmdbuff);            
; 2625 |                                         scia_puts("\r\n");             
; 2626 |                                         conf_data.vfd[ss].adec = i;    
; 2628 |                                         sprintf(buff,                  
; 2629 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2630 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2631 |                                         scia_puts(buff);               
; 2632 |                                         break;                         
; 2634 |                                 case VFD_LIMIT:                        
; 2635 |                                         // channel number              
; 2636 |                                         j = CHS_MAX;                   
; 2637 |                                         do {                           
; 2638 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2639 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2640 |                                                 ch = atoi(cmdbuff);    
; 2641 |                                                 scia_puts(cmdbuff);    
; 2642 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2643 |                                                         break;
;     |          // valid input channel number                                 
; 2645 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2646 |                                         } while (j);                   
; 2647 |                                         scia_puts("\r\n");             
; 2648 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2649 |                                         conf_data.vfd[ss].ch = ch;     
; 2651 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2652 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2653 |                                         scia_puts(buff);               
; 2654 |                                         break;                         
; 2655 |                                 case VFD_TEMP:                         
; 2656 |                                         // no more info                
; 2657 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2658 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2659 |                                         scia_puts(buff);               
; 2660 |                                         break;                         
; 2663 |                                 lcd_clear();                           
; 2664 |                                 update_units();                        
; 2665 |                                 unsaved = 1;                           
; 2666 |                                 break;                                 
; 2668 |                         default:                                       
; 2669 |                                 goto INVALIDCMD;                       
; 2672 |                         break;                                         
; 2674 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2675 |                         // DAC out command
;     |                                  //                                    
; 2676 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2677 |                 case 'O':                                              
; 2679 |                         if (cmdlen < 2) {                              
; 2680 |                                 goto INVALIDCMD;                       
; 2683 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2685 |                         case 'S':
;     |  // selection                                                          
; 2687 |                                 // DAC channel number                  
; 2688 |                                 j = DAC_MAX;                           
; 2689 |                                 do {                                   
; 2690 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2691 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2692 |                                         ss = atoi(cmdbuff);            
; 2693 |                                         scia_puts(cmdbuff);            
; 2694 |                                         if (ss > 0 && ss <= j) {       
; 2695 |                                                 break;
;     |          // valid input channel number                                 
; 2697 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2698 |                                 } while (j);                           
; 2699 |                                 scia_puts("\r\n");                     
; 2700 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2702 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2703 |                                 for (j = 0; j < 5; j++) {              
; 2704 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2705 |                                         scia_puts(buff);               
; 2706 |                                         scia_puts(", ");               
; 2708 |                                 j = 7;                                 
; 2709 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2710 |                                 scia_puts(buff);                       
; 2711 |                                 scia_puts("\r\n");                     
; 2712 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2713 |                                                 ss + 1);               
; 2714 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2715 |                                 pt = atoi(cmdbuff);                    
; 2716 |                                 if (pt >= 5 && pt != 7) {              
; 2717 |                                         pt = 0;                        
; 2718 |                                         scia_puts(                     
; 2719 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2721 |                                 scia_puts(cmdbuff);                    
; 2722 |                                 scia_puts("\r\n");                     
; 2723 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2725 |                                 if ( VFD_VOLT != pt) {                 
; 2727 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2728 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2729 |                                                 j = CHS_MAX;           
; 2730 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2731 |                                                 j = ENC_MAX;           
; 2734 |                                         // linked load/... channel numb
;     | er                                                                     
; 2735 |                                         do {                           
; 2736 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2737 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2738 |                                                 ch = atoi(cmdbuff);    
; 2739 |                                                 scia_puts(cmdbuff);    
; 2740 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2741 |                                                         break;
;     |          // valid input channel number                                 
; 2743 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2744 |                                         } while (j);                   
; 2745 |                                         scia_puts("\r\n");             
; 2746 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2747 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2749 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2750 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2751 |                                                 // gain                
; 2752 |                                                 if ( VFD_POSI == pt) { 
; 2753 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2754 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2755 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2757 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2758 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2759 |                                                 scia_puts(cmdbuff);    
; 2760 |                                                 scia_puts("\r\n");     
; 2762 |                                                 // offset              
; 2763 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2764 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2765 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2766 |                                                 scia_puts(cmdbuff);    
; 2767 |                                                 scia_puts("\r\n");     
; 2771 |                                 unsaved = 1;                           
; 2773 |                                 // print result                        
; 2774 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2775 |                                                 LPV[pt]);              
; 2776 |                                 scia_puts(buff);                       
; 2778 |                                 if ( VFD_VOLT == pt) {                 
; 2779 |                                         scia_puts("\r\n");             
; 2780 |                                 } else {                               
; 2781 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2782 |                                         scia_puts(buff);               
; 2784 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2785 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2786 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2787 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2788 |                                                 scia_puts(buff);       
; 2792 |                                 DINT;                                  
; 2793 |                                 ad7738_setcal();                       
; 2794 |                                 EINT;                                  
; 2795 |                                 break;                                 
; 2797 |                         case 'D':
;     |  // direct voltage output                                              
; 2799 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2800 |                                                 || 'V' != cmdbuff[3]) {
; 2801 |                                         goto INVALIDCMD;               
; 2804 |                                 // channel index                       
; 2805 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2806 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2807 |                                         goto INVALIDCMD;               
; 2808 |                                         // invalid channel number      
; 2810 |                                 ss--;
;     |  // change to zero based index                                         
; 2812 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2813 |                                         goto INVALIDCMD;               
; 2814 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2817 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2818 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2819 |                                         goto INVALIDCMD;               
; 2820 |                                         // invalid voltage             
; 2823 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2824 |                                 if (volt[0] < 0) {                     
; 2825 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2826 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2827 |                                 } else {                               
; 2828 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2829 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2832 |                                 if (dsum[0] <= 0) {                    
; 2833 |                                         dacc[0] = 0;                   
; 2834 |                                 } else if (dsum[0] >= 0xffff) {        
; 2835 |                                         dacc[0] = 0xffff;              
; 2836 |                                 } else {                               
; 2837 |                                         dacc[0] = (Uint16) dsum[0];    
; 2840 |                                 mcbsp_xmit(dacc[0], ss);               
; 2841 |                                 latch_dac();                           
; 2843 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2844 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2845 |                                 scia_puts(buff);                       
; 2847 |                                 break;                                 
; 2849 |                         default:                                       
; 2850 |                                 goto INVALIDCMD;                       
; 2853 |                         break;                                         
; 2855 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2856 |                         // LIMIT command
;     |                                          //                            
; 2857 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2858 |                 case 'L':                                              
; 2860 |                         if (cmdlen < 2) {                              
; 2861 |                                 goto INVALIDCMD;                       
; 2864 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2866 |                         case 'S':
;     |  // selection                                                          
; 2868 |                                 // LIMIT channel number                
; 2869 |                                 j = LIM_MAX;                           
; 2870 |                                 do {                                   
; 2871 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2872 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2873 |                                         ss = atoi(cmdbuff);            
; 2874 |                                         scia_puts(cmdbuff);            
; 2875 |                                         if (ss > 0 && ss <= j) {       
; 2876 |                                                 break;
;     |          // valid input channel number                                 
; 2878 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2879 |                                 } while (j);                           
; 2880 |                                 scia_puts("\r\n");                     
; 2881 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2883 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2884 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2885 |                                 scia_puts(cmdbuff);                    
; 2886 |                                 scia_puts("\r\n");                     
; 2888 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2890 |                                         // set on flag                 
; 2891 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2893 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2894 |                                         for (j = 0; j < 5; j++) {      
; 2895 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2896 |                                                 scia_puts(buff);       
; 2897 |                                                 if (j < 4) {           
; 2898 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2901 |                                         scia_puts("\r\n");             
; 2902 |                                         sprintf(buff,                  
; 2903 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2904 |                                                         ss + 1);       
; 2905 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2906 |                                         pt = atoi(cmdbuff);            
; 2907 |                                         if (pt >= 5) {                 
; 2908 |                                                 pt = 0;                
; 2909 |                                                 scia_puts(             
; 2910 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2912 |                                         scia_puts(cmdbuff);            
; 2913 |                                         scia_puts("\r\n");             
; 2914 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2916 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2917 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2918 |                                                 j = CHS_MAX;           
; 2919 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2920 |                                                 j = ENC_MAX;           
; 2923 |                                         // linked load/... channel numb
;     | er                                                                     
; 2924 |                                         do {                           
; 2925 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2926 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2927 |                                                 ch = atoi(cmdbuff);    
; 2928 |                                                 scia_puts(cmdbuff);    
; 2929 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2930 |                                                         break;
;     |          // valid input channel number                                 
; 2932 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2933 |                                         } while (j);                   
; 2934 |                                         scia_puts("\r\n");             
; 2935 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2936 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2938 |                                         // NO/NC                       
; 2939 |                                         scia_getparam(                 
; 2940 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2941 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2942 |                                         scia_puts(cmdbuff);            
; 2943 |                                         scia_puts("\r\n");             
; 2945 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2947 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2948 |                                         } else {                       
; 2949 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2952 |                                         scia_getparam(                 
; 2953 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2954 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2955 |                                         scia_puts(cmdbuff);            
; 2956 |                                         scia_puts("\r\n");             
; 2958 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2960 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2961 |                                         } else {                       
; 2962 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2965 |                                         scia_getparam(                 
; 2966 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2967 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2968 |                                         scia_puts(cmdbuff);            
; 2969 |                                         scia_puts("\r\n");             
; 2971 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2973 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2974 |                                         } else {                       
; 2975 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2978 |                                         // unit (output)               
; 2979 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2980 |                                         case VFD_LOAD:                 
; 2981 |                                         case VFD_PEAK:                 
; 2982 |                                         case VFD_VALL:                 
; 2983 |                                                 ccp =                  
; 2984 |                                                                 UNITS[0
;     | x0f                                                                    
; 2985 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2986 |                                                 break;                 
; 2987 |                                         case VFD_POSI:                 
; 2988 |                                                 ccp = POS_U;           
; 2989 |                                                 break;                 
; 2990 |                                         case VFD_VELO:                 
; 2991 |                                                 ccp = VEL_U;           
; 2992 |                                                 break;                 
; 2995 |                                         // set value                   
; 2996 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2997 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2998 |                                         scia_puts(cmdbuff);            
; 2999 |                                         scia_puts("\r\n");             
; 3001 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3002 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3003 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3005 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3006 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3007 |                                         scia_puts(cmdbuff);            
; 3008 |                                         scia_puts("\r\n");             
; 3010 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3011 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3012 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3013 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3015 |                                         // print result                
; 3016 |                                         sprintf(buff,                  
; 3017 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3018 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3019 |                                         scia_puts(buff);               
; 3021 |                                         sprintf(buff,                  
; 3022 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3023 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3024 | 
;     |  "NC" : "NO",                                                          
; 3025 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3026 | 
;     |  "ON" : "OFF",                                                         
; 3027 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3028 |                                         scia_puts(buff);               
; 3029 |                                         sprintf(buff,                  
; 3030 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3031 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3032 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3033 |                                         scia_puts(buff);               
; 3035 |                                 } else
;     |  // turn off                                                           
; 3037 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3038 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3041 |                                 unsaved = 1;                           
; 3043 |                                 DINT;                                  
; 3044 |                                 ad7738_setcal();                       
; 3045 |                                 EINT;                                  
; 3046 |                                 break;                                 
; 3048 |                         default:                                       
; 3049 |                                 goto INVALIDCMD;                       
; 3052 |                         break;                                         
; 3054 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3055 |                         // reset commands
;     |                                          //                            
; 3056 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3057 |                 case 'R':                                              
; 3059 |                         if (cmdlen < 2) {                              
; 3060 |                                 goto INVALIDCMD;                       
; 3063 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3065 |                         case 'T':
;     |  // tare                                                               
; 3067 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3068 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3069 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3070 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3071 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3072 |                                 } else {                               
; 3073 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3074 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3075 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3077 |                                 break;                                 
; 3079 |                         case 'P':
;     |  // peak                                                               
; 3081 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3082 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3083 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3084 |                                 } else {                               
; 3085 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3087 |                                 break;                                 
; 3089 |                         case 'V':
;     |  // valley                                                             
; 3091 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3092 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3093 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3094 |                                 } else {                               
; 3095 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3097 |                                 break;                                 
; 3099 |                         case 'S':
;     |  // shunt switch                                                       
; 3101 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3102 |                                         shunt_switch(1);               
; 3103 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3104 |                                 } else {                               
; 3105 |                                         shunt_switch(0);               
; 3106 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3108 |                                 break;                                 
; 3110 |                         case 'L':
;     |  // limit                                                              
; 3112 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3113 |                                 ch--;                                  
; 3115 |                                 ad7738_resetlimit(ch);                 
; 3116 |                                 break;                                 
; 3118 |                         case 'I':
;     |  // posItion                                                           
; 3120 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3121 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3122 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3123 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3124 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3125 |                                 } else {                               
; 3126 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3127 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3128 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3130 |                                 break;                                 
; 3132 |                         default:                                       
; 3133 |                                 goto INVALIDCMD;                       
; 3135 |                         break;                                         
; 3137 | #ifdef SDHCCARD                                                        
; 3139 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3140 |                         // Stream to SD Card
;     |                                  //                                    
; 3141 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3142 |                         case 'W':// Write control                      
; 3144 |                         if( cmdlen < 2 )                               
; 3146 |                                 goto INVALIDCMD;                       
; 3149 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3151 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3153 |                                 if( cmdlen < 3 )                       
; 3155 |                                         goto INVALIDCMD;               
; 3158 |                                 if( sd_write )                         
; 3160 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3161 |                                         break;                         
; 3164 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3165 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3167 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3169 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3170 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3172 |                                 if( !res )                             
; 3174 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3175 |                                         if( res || cmdlen != temp16 )  
; 3177 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3178 |                                                 scia_puts( buff );     
; 3179 |                                                 f_close( fp );         
; 3180 |                                                 fp = NULL;             
; 3181 |                                                 break;                 
; 3198 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3200 |                                         if( res )                      
; 3202 |                                                 f_close( fp );         
; 3203 |                                                 fp = NULL;             
; 3204 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3205 |                                                 break;                 
; 3208 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3209 |                                         scia_puts( buff );             
; 3211 |                                         prod_init();                   
; 3212 |                                         sd_write = 1;                  
; 3213 |                                         sd_cnt = 0;                    
; 3214 |                                         break;                         
; 3217 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3218 |                                 scia_puts( buff );                     
; 3219 |                                 break;                                 
; 3221 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3223 |                                 if( sd_write )                         
; 3225 |                                         sd_close = 1;                  
; 3226 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3227 |                                         break;                         
; 3229 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3230 |                                 break;                                 
; 3232 |                                 case 'L':
;     |          // list files                                                 
; 3234 |                                 if( sd_write )                         
; 3236 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3237 |                                         break;                         
; 3240 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3241 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3243 |                                 res = f_opendir(&dir, "0:");           
; 3244 |                                 if (res)                               
; 3246 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3247 |                                         scia_puts( buff );             
; 3248 |                                         break;                         
; 3251 |                                 p1 = s1 = s2 = 0;                      
; 3252 |                                 for(;;)                                
; 3254 |                                         res = f_readdir(&dir, &Finfo); 
; 3255 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3256 |                                         break;                         
; 3257 |                                         if (Finfo.fattrib & AM_DIR)    
; 3259 |                                                 s2++;                  
; 3261 |                                         else                           
; 3263 |                                                 s1++;                  
; 3264 |                                                 p1 += Finfo.fsize;     
; 3266 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3267 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3268 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3269 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3270 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3271 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3272 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3273 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3274 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3275 |                                         scia_puts( buff );             
; 3277 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3278 |                                 scia_puts( buff );                     
; 3279 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3281 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3282 |                                         scia_puts( buff );             
; 3284 |                                 break;                                 
; 3286 |                                 case 'G':
;     |          // get a file                                                 
; 3288 |                                 if( sd_write )                         
; 3290 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3291 |                                         break;                         
; 3294 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3295 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3297 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3299 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3300 |                                 res = f_open( fp, buff, FA_READ );     
; 3301 |                                 if (res)                               
; 3303 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3304 |                                         scia_puts( buff );             
; 3305 |                                         break;                         
; 3308 |                                 do                                     
; 3310 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3311 |                                         scia_send( buff, temp16 );     
; 3312 |                                 }while( !res && temp16 == 512 );       
; 3314 |                                 f_close( fp );                         
; 3315 |                                 fp = NULL;                             
; 3316 |                                 break;                                 
; 3318 |                                 case 'R':
;     |          // remove a file                                              
; 3320 |                                 if( sd_write )                         
; 3322 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3323 |                                         break;                         
; 3326 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3327 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3329 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3331 |                                 res = f_unlink( buff );                
; 3333 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3334 |                                 scia_puts( buff );                     
; 3335 |                                 break;                                 
; 3337 |                                 default:                               
; 3338 |                                 goto INVALIDCMD;                       
; 3341 |                         break;                                         
; 3342 | #endif                                                                 
; 3344 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3345 |                         // Flash memory access commands
;     |                                    //                                  
; 3346 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3347 |                 case 'F':                                       // flas
;     | h access                                                               
; 3349 |                         if (cmdlen < 2) {                              
; 3350 |                                 goto INVALIDCMD;                       
; 3353 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3355 |                         case 'W':
;     |  // write flash                                                        
; 3357 |                                 if (unsaved) {                         
; 3358 |                                         // flash writing               
; 3359 |                                         lcd_clear();                   
; 3360 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3361 |                                         scia_puts("Flash writing..."); 
; 3363 |                                         for (i = 0; i < 50; i++) {     
; 3364 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3367 |                                         DINT;                          
; 3368 |                                         flash_ret = conf_write();      
; 3369 |                                         EINT;                          
; 3371 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3372 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3373 |                                                 unsaved = 0;           
; 3374 |                                         } else {                       
; 3375 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3377 |                                         lcd_clear();                   
; 3378 |                                         update_units();                
; 3379 |                                         break;                         
; 3381 |                                 scia_puts(                             
; 3382 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3383 |                                 break;                                 
; 3385 |                         case 'R':
;     |  // read flash                                                         
; 3387 |                                 // flash reading                       
; 3388 |                                 conf_read();                           
; 3390 |                                 DINT;                                  
; 3391 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3392 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3393 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3394 |                                 EINT;                                  
; 3396 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3397 |                                 unsaved = 0;                           
; 3399 |                                 update_units();                        
; 3401 |                                 break;                                 
; 3403 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3405 |                                 conf_default();                        
; 3407 |                                 // flash writing                       
; 3408 |                                 lcd_clear();                           
; 3409 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3410 |                                 scia_puts("Flash write...");           
; 3412 |                                 for (i = 0; i < 50; i++) {             
; 3413 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3416 |                                 DINT;                                  
; 3417 |                                 flash_ret = conf_write();              
; 3418 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3419 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3420 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3421 |                                 EINT;                                  
; 3423 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3424 |                                         scia_puts(                     
; 3425 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3426 |                                         unsaved = 0;                   
; 3427 |                                 } else {                               
; 3428 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3430 |                                 lcd_clear();                           
; 3431 |                                 update_units();                        
; 3432 |                                 break;                                 
; 3434 |                         default:                                       
; 3435 |                                 goto INVALIDCMD;                       
; 3438 |                         break;                                         
; 3440 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3441 |                         // Help manu
;     |                                  //                                    
; 3442 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3443 |                 case 'H':                               // help menu   
; 3445 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3447 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3448 |                         scia_puts(                                     
; 3449 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3450 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3451 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3452 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3453 |                         scia_puts("\r\n");                             
; 3455 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3456 |                         scia_puts("UN          Set unit name.\r\n");   
; 3457 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3458 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3459 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3460 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3461 |                         scia_puts("\r\n");                             
; 3463 |                         scia_puts(                                     
; 3464 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3465 |                         scia_puts(                                     
; 3466 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3467 |                         scia_puts("\r\n");                             
; 3469 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3470 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3471 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3472 |                         scia_puts("\r\n");                             
; 3474 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3475 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3476 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3477 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3478 |                         scia_puts("\r\n");                             
; 3480 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3481 |                         scia_puts(                                     
; 3482 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3483 |                         scia_puts("\r\n");                             
; 3485 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3486 |                         scia_puts("\r\n");                             
; 3488 |                         scia_puts(                                     
; 3489 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3490 |                         scia_puts(                                     
; 3491 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3492 |                         scia_puts("\r\n");                             
; 3494 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3495 |                         scia_puts("\r\n");                             
; 3497 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3498 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3499 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3500 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3501 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3502 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3503 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3504 |                         scia_puts("\r\n");                             
; 3506 | #ifdef SDHCCARD                                                        
; 3507 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3508 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3509 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3510 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3511 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3512 |                         scia_puts( "\r\n" );                           
; 3513 | #endif                                                                 
; 3515 |                         scia_puts(                                     
; 3516 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3517 |                         scia_puts(                                     
; 3518 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3519 |                         scia_puts(                                     
; 3520 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3521 |                         scia_puts("\r\n");                             
; 3523 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3525 |                         // not implemented                             
; 3526 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3528 |                         scia_puts("\r\n");                             
; 3530 |                         break;                                         
; 3532 |                 case 'X':                                              
; 3534 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3536 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3538 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3541 |                         cmd_mode = SCI_MODE_BIN;                       
; 3542 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3544 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3546 |                         break;                                         
; 3548 |                 case 'Z':                                              
; 3550 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3552 |                         for (i = 0; i < 100; i++)       // 2s          
; 3554 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3557 |                         reboot();                                      
; 3558 |                         break;                                         
; 3582 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3583 |                         // Invalid commands
;     |                                  //                                    
; 3584 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3585 |                 default:                                               
; 3587 |                         INVALIDCMD:                                    
; 3589 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3590 |                         scia_puts(cmdbuff);                            
; 3591 |                         scia_puts("\", ignored.\r\n");                 
; 3592 |                         break;                                         
; 3594 |                 } // switch on 1st byte                                
; 3596 |                 if (unsaved) {                                         
; 3597 |                         scia_puts(                                     
; 3598 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3601 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3602 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3603 |                 // BIN command mode processing
;     |                          //                                            
; 3604 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3606 |                 // ------------------------------------------------    
; 3607 |                 // DEBUG: put received command on LCD                  
; 3616 |                 // ------------------------------------------------    
; 3617 |                 if (cmdlen < 2) {                                      
; 3618 |                         // INVALID COMMAND, less than 2 byte           
; 3619 |                         // may need to send NACK back                  
; 3620 |                         continue;                                      
; 3623 |                 for (i = 0; i < 2; i++) {                              
; 3624 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3627 |                 j = 2;                                  // buff length 
; 3628 |                 bincmdresult = Error_UnImpl;                           
; 3630 |                 // DEBUG, sending the command back                     
; 3631 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3633 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3635 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3638 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3753 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3755 |                 case CheckAddress:                                     
; 3757 |                         buff[j++] = 0;                                 
; 3758 |                         bincmdresult = OK_SendResult;                  
; 3759 |                         break;                                         
; 3761 |                 case SetAddress:                                       
; 3763 |                         buff[j] = cmdbuff[j];                          
; 3764 |                         j++;                                           
; 3765 |                         bincmdresult = OK_SendResult;                  
; 3766 |                         break;                                         
; 3768 |                 case RemoveAddress:                                    
; 3770 |                         buff[j] = cmdbuff[j];                          
; 3771 |                         j++;                                           
; 3772 |                         bincmdresult = OK_SendResult;                  
; 3773 |                         break;                                         
; 3775 |                 case GetUnitInfo:                                      
; 3777 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3778 |                         for (i = 0; i < 2; i++) {                      
; 3779 |                                 buff[j++] = 0xff & *intp;              
; 3780 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3781 |                                 intp++;                                
; 3784 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3785 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3787 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3788 |                         for (i = 0; i < 2; i++) {                      
; 3789 |                                 buff[j++] = 0xff & *intp;              
; 3790 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3791 |                                 intp++;                                
; 3794 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3795 |                         buff[j++] = slen;                              
; 3796 |                         for (i = 0; i < slen; i++) {                   
; 3797 |                                 buff[j++] = conf_data.uname[i]; // name
; 3799 |                         bincmdresult = OK_SendResult;                  
; 3801 |                         break;                                         
; 3803 |                 case SetUnitSN:                                        
; 3805 |                         if (cmdlen < 6) {                              
; 3806 |                                 bincmdresult = Error_Invalid;          
; 3807 |                                 break;                                 
; 3810 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3811 |                         for (i = 0; i < 2; i++) {                      
; 3812 |                                 *intp = cmdbuff[j];                    
; 3813 |                                 buff[j++] = 0xff & *intp;              
; 3814 |                                 *intp += cmdbuff[j] << 8;              
; 3815 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3816 |                                 intp++;                                
; 3818 |                         unsaved = 1;                                   
; 3820 |                         bincmdresult = OK_SendResult;                  
; 3821 |                         break;                                         
; 3823 |                 case SetUnitName:                                      
; 3825 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3826 |                                 bincmdresult = Error_Invalid;          
; 3827 |                                 break;                                 
; 3830 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3831 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3833 |                         conf_data.uname[i] = '\0';                     
; 3834 |                         unsaved = 1;                                   
; 3836 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3837 |                         buff[j++] = slen;                              
; 3838 |                         for (i = 0; i < slen; i++) {                   
; 3839 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3841 |                         bincmdresult = OK_SendResult;                  
; 3842 |                         break;                                         
; 3844 |                 case GetInterface:                                     
; 3846 |                         buff[j++] = conf_data.rxdir;                   
; 3848 |                         if (conf_data.rxdir == SDIR_RS485              
; 3849 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3850 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3851 |                                 for (i = 0; i < 2; i++) {              
; 3852 |                                         buff[j++] = 0xff & *intp;      
; 3853 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3854 |                                         intp++;                        
; 3857 |                         bincmdresult = OK_SendResult;                  
; 3858 |                         break;                                         
; 3860 |                 case SetInterface:                                     
; 3862 |                         if (cmdlen < 3) {                              
; 3863 |                                 bincmdresult = Error_Invalid;          
; 3864 |                                 break;                                 
; 3866 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3867 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3868 |                                 bincmdresult = Error_Invalid;          
; 3869 |                                 break;                                 
; 3872 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3873 |                                 if (cmdlen < 7) {                      
; 3874 |                                         bincmdresult = Error_Invalid;  
; 3875 |                                         break;                         
; 3878 |                                 temp32 = 0;                            
; 3879 |                                 for (k = 6; k > 2; k--) {              
; 3880 |                                         temp32 += cmdbuff[k];          
; 3881 |                                         temp32 <<= 8;                  
; 3884 |                                 for (i = 0; i < 8; i++) {              
; 3885 |                                         if (temp32 == BAUD[i]) {       
; 3886 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3887 |                                                 break;                 
; 3890 |                                 if (i == 8) {                          
; 3891 |                                         bincmdresult = Error_Invalid;  
; 3892 |                                         break;                         
; 3896 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3898 |                         while (j < cmdlen) {                           
; 3899 |                                 buff[j] = cmdbuff[j];                  
; 3900 |                                 j++;                                   
; 3902 |                         unsaved = 1;                                   
; 3903 |                         bincmdresult = OK_SendResult;                  
; 3904 |                         break;                                         
; 3906 |                 case GetChannel:                                       
; 3908 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3909 |                                 bincmdresult = Error_Invalid;          
; 3910 |                                 break;                                 
; 3912 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3914 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3916 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3918 |                                 buff[j++] = 0;                         
; 3921 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3922 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3924 |                                 buff[j++] = 0xff & *intp;              
; 3925 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3926 |                                 intp++;                                
; 3929 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3930 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3932 |                                 buff[j++] = 0xff & *intp;              
; 3933 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3934 |                                 intp++;                                
; 3937 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3938 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3940 |                                 buff[j++] = 0xff & *intp;              
; 3941 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3942 |                                 intp++;                                
; 3945 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3946 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3948 |                                 buff[j++] = 0xff & *intp;              
; 3949 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3950 |                                 intp++;                                
; 3953 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3954 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3956 |                                 buff[j++] = 0xff & *intp;              
; 3957 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3958 |                                 intp++;                                
; 3961 |                         bincmdresult = OK_SendResult;                  
; 3962 |                         break;                                         
; 3964 |                 case GetSensor:                                        
; 3966 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3967 |                                 bincmdresult = Error_Invalid;          
; 3968 |                                 break;                                 
; 3970 |                         ss = cmdbuff[2];                               
; 3971 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3973 |                         // sensor serial name                          
; 3974 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3975 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3976 |                         for (i = 0; i < slen; i++) {                   
; 3977 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3980 |                         // sensor name/label                           
; 3981 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3982 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3983 |                         for (i = 0; i < slen; i++) {                   
; 3984 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3987 |                         // TAGID                                       
; 3988 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3989 |                         for (i = 0; i < 4; i++) {                      
; 3990 |                                 buff[j++] = 0xff & *intp;              
; 3991 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3992 |                                 intp++;                                
; 3995 |                         // Method                                      
; 3996 |                         buff[j++] = conf_data.sensor[ss].method;       
; 3998 |                         // Date                                        
; 3999 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4000 |                         for (i = 0; i < 2; i++) {                      
; 4001 |                                 buff[j++] = 0xff & *intp;              
; 4002 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4003 |                                 intp++;                                
; 4006 |                         // Range                                       
; 4007 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4008 |                         for (i = 0; i < 2; i++) {                      
; 4009 |                                 buff[j++] = 0xff & *intp;              
; 4010 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4011 |                                 intp++;                                
; 4014 |                         // Unit                                        
; 4015 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4017 |                         // Output Unit                                 
; 4018 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4020 |                         // Unit Factor                                 
; 4021 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4022 |                         for (i = 0; i < 2; i++) {                      
; 4023 |                                 buff[j++] = 0xff & *intp;              
; 4024 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4025 |                                 intp++;                                
; 4028 |                         // calibration points.                         
; 4029 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4030 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4031 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4032 |                                         // mass point                  
; 4033 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4034 |                                         for (i = 0; i < 2; i++) {      
; 4035 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4036 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4037 |                                                 intp++;                
; 4039 |                                         // adc counts point            
; 4040 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4041 |                                         for (i = 0; i < 2; i++) {      
; 4042 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4043 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4044 |                                                 intp++;                
; 4048 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4049 |                                         // slope point                 
; 4050 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4051 |                                         for (i = 0; i < 2; i++) {      
; 4052 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4053 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4054 |                                                 intp++;                
; 4056 |                                         // intercept point             
; 4057 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4058 |                                         for (i = 0; i < 2; i++) {      
; 4059 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4060 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4061 |                                                 intp++;                
; 4064 |                         } else {                                       
; 4065 |                                 buff[j++] = 0;                         
; 4066 |                                 // slope                               
; 4067 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4068 |                                 for (i = 0; i < 2; i++) {              
; 4069 |                                         buff[j++] = 0xff & *intp;      
; 4070 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4071 |                                         intp++;                        
; 4073 |                                 // intercept                           
; 4074 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4075 |                                 for (i = 0; i < 2; i++) {              
; 4076 |                                         buff[j++] = 0xff & *intp;      
; 4077 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4078 |                                         intp++;                        
; 4082 |                         // shunt                                       
; 4083 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4084 |                         for (i = 0; i < 2; i++) {                      
; 4085 |                                 buff[j++] = 0xff & *intp;              
; 4086 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4087 |                                 intp++;                                
; 4090 |                         // base                                        
; 4091 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4092 |                         for (i = 0; i < 2; i++) {                      
; 4093 |                                 buff[j++] = 0xff & *intp;              
; 4094 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4095 |                                 intp++;                                
; 4098 |                         // DAC calibration gain                        
; 4099 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4100 |                         for (i = 0; i < 2; i++) {                      
; 4101 |                                 buff[j++] = 0xff & *intp;              
; 4102 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4103 |                                 intp++;                                
; 4106 |                         // DAC calibration offset                      
; 4107 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4108 |                         for (i = 0; i < 2; i++) {                      
; 4109 |                                 buff[j++] = 0xff & *intp;              
; 4110 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4111 |                                 intp++;                                
; 4114 |                         // channel calibrated on                       
; 4115 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4117 |                         bincmdresult = OK_SendResult;                  
; 4118 |                         break;                                         
; 4120 |                 case GetQEPChannels:                                   
; 4122 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4123 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4124 |                                 for (i = 0; i < 2; i++) {              
; 4125 |                                         buff[j++] = 0xff & *intp;      
; 4126 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4127 |                                         intp++;                        
; 4131 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4132 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4134 |                         bincmdresult = OK_SendResult;                  
; 4135 |                         break;                                         
; 4137 |                 case GetCurSensor:                                     
; 4139 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4140 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4143 |                         bincmdresult = OK_SendResult;                  
; 4144 |                         break;                                         
; 4146 |                 case GetAFilterSize:                                   
; 4148 |                         // filter size                                 
; 4149 |                         intp = (Uint16*) &conf_data.filter;            
; 4150 |                         buff[j++] = 0xff & *intp;                      
; 4151 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4152 |                         // filter window                               
; 4153 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4154 |                         for (i = 0; i < 2; i++) {                      
; 4155 |                                 buff[j++] = 0xff & *intp;              
; 4156 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4157 |                                 intp++;                                
; 4159 |                         bincmdresult = OK_SendResult;                  
; 4160 |                         break;                                         
; 4162 |                 case GetAutoId:                                        
; 4164 |                         buff[j++] = conf_data.tagiden;                 
; 4165 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4166 |                                 buff[j++] = autoid[i];                 
; 4168 |                         bincmdresult = OK_SendResult;                  
; 4169 |                         break;                                         
; 4171 |                 case GetDisplay:                                       
; 4173 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4174 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4175 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4176 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4178 |                         bincmdresult = OK_SendResult;                  
; 4179 |                         break;                                         
; 4181 |                 case GetDAC:                                           
; 4183 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4184 |                                 buff[j++] = conf_data.dac[i].what;     
; 4185 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4187 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4188 |                                 //{                                    
; 4189 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4190 |                                 //}                                    
; 4191 |                                 //else                                 
; 4192 |                                 //{                                    
; 4193 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4194 |                                 //}                                    
; 4195 |                                 for (k = 0; k < 2; k++) {              
; 4196 |                                         buff[j++] = 0xff & *intp;      
; 4197 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4198 |                                         intp++;                        
; 4200 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4201 |                                 //{                                    
; 4202 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4203 |                                 //}                                    
; 4204 |                                 //else                                 
; 4205 |                                 //{                                    
; 4206 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4207 |                                 //}                                    
; 4208 |                                 for (k = 0; k < 2; k++) {              
; 4209 |                                         buff[j++] = 0xff & *intp;      
; 4210 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4211 |                                         intp++;                        
; 4213 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4214 |                                 for (k = 0; k < 2; k++) {              
; 4215 |                                         buff[j++] = 0xff & *intp;      
; 4216 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4217 |                                         intp++;                        
; 4219 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4220 |                                 for (k = 0; k < 2; k++) {              
; 4221 |                                         buff[j++] = 0xff & *intp;      
; 4222 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4223 |                                         intp++;                        
; 4225 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4226 |                                 for (k = 0; k < 2; k++) {              
; 4227 |                                         buff[j++] = 0xff & *intp;      
; 4228 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4229 |                                         intp++;                        
; 4232 |                         bincmdresult = OK_SendResult;                  
; 4233 |                         break;                                         
; 4235 |                 case GetLIMIT:                                         
; 4237 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4238 |                                 buff[j++] = conf_data.lim[i].what;     
; 4239 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4240 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4242 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4243 |                                 for (k = 0; k < 2; k++) {              
; 4244 |                                         buff[j++] = 0xff & *intp;      
; 4245 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4246 |                                         intp++;                        
; 4248 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4249 |                                 for (k = 0; k < 2; k++) {              
; 4250 |                                         buff[j++] = 0xff & *intp;      
; 4251 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4252 |                                         intp++;                        
; 4255 |                         bincmdresult = OK_SendResult;                  
; 4256 |                         break;                                         
; 4258 |                 case GetLIMITStatus:                                   
; 4260 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4261 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4263 |                         bincmdresult = OK_SendResult;                  
; 4264 |                         break;                                         
; 4266 |                         // Heat Cal commands.                          
; 4267 |                 case GetTCLoadA:                                       
; 4268 |                 case GetTCLoadB:                                       
; 4269 |                 case GetTCLoadC:                                       
; 4270 |                 case GetTCLoadD:                                       
; 4272 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4273 |                         intp = (Uint16*) &temp16;                      
; 4274 |                         buff[j++] = 0xff & *intp;                      
; 4275 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4277 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4278 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4279 |                         intp = (Uint16*) &templg;                      
; 4280 |                         for (i = 0; i < 2; i++) {                      
; 4281 |                                 buff[j++] = 0xff & *intp;              
; 4282 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4283 |                                 intp++;                                
; 4285 |                         bincmdresult = OK_SendResult;                  
; 4286 |                         break;                                         
; 4288 |                 case GetTCTemp:                                        
; 4290 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4291 |                         intp = (Uint16*) &temp16;                      
; 4292 |                         buff[j++] = 0xff & *intp;                      
; 4293 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4294 |                         bincmdresult = OK_SendResult;                  
; 4295 |                         break;                                         
; 4297 |                 case GetTCStatus:                                      
; 4299 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4300 |                         for (i = 0; i < 2; i++) {                      
; 4301 |                                 buff[j++] = 0xff & *intp;              
; 4302 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4303 |                                 intp++;                                
; 4306 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4307 |                                 temp16 = 0x80;                         
; 4308 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4309 |                                         temp16 |= 0x01;                
; 4311 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4312 |                                         temp16 |= 0x02;                
; 4314 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4315 |                                         temp16 |= 0x04;                
; 4317 |                                 buff[j++] = 0xff & temp16;             
; 4319 |                         bincmdresult = OK_SendResult;                  
; 4320 |                         break;                                         
; 4322 |                 case GetTCParam:                                       
; 4324 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4325 |                                 bincmdresult = Error_Invalid;          
; 4326 |                                 break;                                 
; 4329 |                         ch = cmdbuff[2];                               
; 4330 |                         buff[j++] = ch;                                
; 4332 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4333 |                         for (k = 0; k < 2; k++) {                      
; 4334 |                                 buff[j++] = 0xff & *intp;              
; 4335 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4336 |                                 intp++;                                
; 4338 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4339 |                         for (k = 0; k < 2; k++) {                      
; 4340 |                                 buff[j++] = 0xff & *intp;              
; 4341 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4342 |                                 intp++;                                
; 4344 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4345 |                         for (k = 0; k < 2; k++) {                      
; 4346 |                                 buff[j++] = 0xff & *intp;              
; 4347 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4348 |                                 intp++;                                
; 4350 |                         bincmdresult = OK_SendResult;                  
; 4351 |                         break;                                         
; 4353 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4354 | #if 1                                                                  
; 4355 |                 case Open_SSR_IN1:                                     
; 4356 |                         ssr_set(0, SSR_OPEN);                          
; 4357 |                         break;                                         
; 4359 |                 case Close_SSR_IN1:                                    
; 4360 |                         ssr_set(0, SSR_CLOSE);                         
; 4361 |                         break;                                         
; 4362 | #endif                                                                 
; 4364 |                 case SetTCParam:                                       
; 4366 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4367 |                                 bincmdresult = Error_Invalid;          
; 4368 |                                 break;                                 
; 4371 |                         ch = cmdbuff[2];                               
; 4372 |                         buff[j++] = ch;                                
; 4374 |                         k = 3;                                         
; 4375 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4376 |                         for (i = 0; i < 2; i++) {                      
; 4377 |                                 *intp = cmdbuff[k++];                  
; 4378 |                                 *intp += cmdbuff[k++] << 8;            
; 4379 |                                 intp++;                                
; 4381 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4382 |                         for (i = 0; i < 2; i++) {                      
; 4383 |                                 *intp = cmdbuff[k++];                  
; 4384 |                                 *intp += cmdbuff[k++] << 8;            
; 4385 |                                 intp++;                                
; 4387 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4388 |                         for (i = 0; i < 2; i++) {                      
; 4389 |                                 *intp = cmdbuff[k++];                  
; 4390 |                                 *intp += cmdbuff[k++] << 8;            
; 4391 |                                 intp++;                                
; 4394 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4395 |                         for (k = 0; k < 2; k++) {                      
; 4396 |                                 buff[j++] = 0xff & *intp;              
; 4397 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4398 |                                 intp++;                                
; 4400 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4401 |                         for (k = 0; k < 2; k++) {                      
; 4402 |                                 buff[j++] = 0xff & *intp;              
; 4403 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4404 |                                 intp++;                                
; 4406 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4407 |                         for (k = 0; k < 2; k++) {                      
; 4408 |                                 buff[j++] = 0xff & *intp;              
; 4409 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4410 |                                 intp++;                                
; 4412 |                         unsaved = 1;                                   
; 4413 |                         bincmdresult = OK_SendResult;                  
; 4414 |                         break;                                         
; 4416 |                 case SetBCalParam:                                     
; 4418 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4419 |                                         || cmdbuff[3] != 2) {          
; 4420 |                                 bincmdresult = Error_Invalid;          
; 4421 |                                 break;                                 
; 4424 |                         ch = cmdbuff[2];                               
; 4425 |                         buff[j++] = ch;                                
; 4426 |                         buff[j] = cmdbuff[j++];                        
; 4428 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4429 |                                 intp = (Uint16*) &volt[k];             
; 4430 |                                 for (i = 0; i < 2; i++) {              
; 4431 |                                         *intp = cmdbuff[j];            
; 4432 |                                         buff[j++] = 0xff & *intp;      
; 4433 |                                         *intp += cmdbuff[j] << 8;      
; 4434 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4435 |                                         intp++;                        
; 4438 |                         bincmdresult = OK_SendResult;                  
; 4439 |                         break;                                         
; 4441 |                 case StartBCRead:                                      
; 4443 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4444 |                                         || cmdbuff[3] >= 2) {          
; 4445 |                                 bincmdresult = Error_Invalid;          
; 4446 |                                 break;                                 
; 4449 |                         k = cmdbuff[3];                                
; 4450 |                         intp = (Uint16*) &tempft;                      
; 4451 |                         for (i = 0; i < 2; i++) {                      
; 4452 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4453 |                                 intp++;                                
; 4455 |                         if (volt[k] != tempft) {                       
; 4456 |                                 bincmdresult = Error_Invalid;          
; 4457 |                                 break;                                 
; 4459 |                         lcd_clear();                                   
; 4460 |                         lcd_puts("Board Calibration...", 0);           
; 4461 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4462 |                         lcd_puts(buff, 20);                            
; 4463 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4464 |                         lcd_puts(buff, 40);                            
; 4465 |                         lcd_puts("Reading ... ", 60);                  
; 4467 |                         dsum[k] = 0;                                   
; 4468 |                         sampcnt = CAL_SAMPLES;                         
; 4469 |                         while (sampcnt--) {                            
; 4470 |                                 while (0 == ad7738_rawrdy()) {         
; 4471 |                                         delay_us(1);
;     |  // wait                                                               
; 4473 |                                 cntp = ad7738_getraw();                
; 4474 |                                 dsum[k] += cntp->adc[ch];              
; 4476 |                         if (1 == k) {                                  
; 4477 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4478 |                                                 / (dsum[1] - dsum[0]); 
; 4480 |                                 unsaved = 1;                           
; 4481 |                                 DINT;                                  
; 4482 |                                 ad7738_setcal();                       
; 4483 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4484 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4485 |                                 EINT;                                  
; 4487 |                         for (i = 0; i < cmdlen; i++) {                 
; 4488 |                                 buff[i] = cmdbuff[i];                  
; 4490 |                         j = cmdlen;                                    
; 4491 |                         bincmdresult = OK_SendResult;                  
; 4493 |                         lcd_clear();                                   
; 4494 |                         update_units();                                
; 4495 |                         break;                                         
; 4497 |                 case SetDCalParam:                                     
; 4499 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4500 |                                         || (0x07 | daccbm) != 0x07) {  
; 4501 |                                 bincmdresult = Error_Invalid;          
; 4502 |                                 break;                                 
; 4504 |                         ch = cmdbuff[2];                               
; 4505 |                         buff[j++] = ch;                                
; 4507 |                         for (k = 0; k < 3; k++) {                      
; 4508 |                                 intp = (Uint16*) &volt[k];             
; 4509 |                                 for (i = 0; i < 2; i++) {              
; 4510 |                                         *intp = cmdbuff[j];            
; 4511 |                                         buff[j++] = 0xff & *intp;      
; 4512 |                                         *intp += cmdbuff[j] << 8;      
; 4513 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4514 |                                         intp++;                        
; 4518 |                         // order: - o +                                
; 4519 |                         // do the calculations                         
; 4520 |                         conf_data.dac[ch].dslopen =                    
; 4521 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4522 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4523 |                         conf_data.dac[ch].dslopep =                    
; 4524 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4525 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4526 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4527 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4529 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4530 |                         daccbm = 0;                                    
; 4532 |                         unsaved = 1;                                   
; 4534 |                         DINT;                                          
; 4535 |                         ad7738_setcal();                               
; 4536 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4537 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4538 |                         EINT;                                          
; 4540 |                         bincmdresult = OK_SendResult;                  
; 4541 |                         break;                                         
; 4543 |                 case StartDCRead:                                      
; 4545 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4546 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4547 |                                 bincmdresult = Error_Invalid;          
; 4548 |                                 break;                                 
; 4551 |                         if (daccbm == 0) {                             
; 4552 |                                 ch = cmdbuff[2];                       
; 4553 |                         } else {                                       
; 4554 |                                 if (ch != cmdbuff[2]) {                
; 4555 |                                         bincmdresult = Error_Invalid;  
; 4556 |                                         break;                         
; 4559 |                         buff[j++] = ch;                                
; 4560 |                         k = cmdbuff[j];                                
; 4561 |                         buff[j++] = k;                                 
; 4563 |                         intp = (Uint16*) &volt[k];                     
; 4564 |                         for (i = 0; i < 2; i++) {                      
; 4565 |                                 *intp = cmdbuff[j];                    
; 4566 |                                 buff[j++] = 0xff & *intp;              
; 4567 |                                 *intp += cmdbuff[j] << 8;              
; 4568 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4569 |                                 intp++;                                
; 4571 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4572 |                                 bincmdresult = Error_Invalid;          
; 4573 |                                 break;                                 
; 4576 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4577 |                         if (dsum[0] <= 0) {                            
; 4578 |                                 dacc[k] = 0;                           
; 4579 |                         } else if (dsum[0] >= 0xffff) {                
; 4580 |                                 dacc[k] = 0xffff;                      
; 4581 |                         } else {                                       
; 4582 |                                 dacc[k] = (Uint16) dsum[0];            
; 4585 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4587 |                         mcbsp_xmit(dacc[k], ch);                       
; 4588 |                         latch_dac();                                   
; 4590 |                         daccbm |= (0x1 << k);                          
; 4592 |                         bincmdresult = OK_SendResult;                  
; 4593 |                         break;                                         
; 4595 |                 case SetSensorCalPa:                                   
; 4597 |                         if (cmdlen < 20) {                             
; 4598 |                                 bincmdresult = Error_Invalid;          
; 4599 |                                 break;                                 
; 4601 |                         k = 2;                                         
; 4602 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4603 |                         ss = cmdbuff[k++];              // sensor index
; 4604 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4605 |                                 bincmdresult = Error_Invalid;          
; 4606 |                                 break;                                 
; 4609 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4610 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4611 |                                 bincmdresult = Error_Invalid;          
; 4612 |                                 break;                                 
; 4614 |                         for (i = 0; i < tempint; i++) {                
; 4615 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4617 |                         tsensor.ssn[i] = '\0';                         
; 4619 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4620 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4621 |                                 bincmdresult = Error_Invalid;          
; 4622 |                                 break;                                 
; 4624 |                         for (i = 0; i < tempint; i++) {                
; 4625 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4627 |                         tsensor.slbl[i] = '\0';                        
; 4629 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4631 |                         intp = (Uint16*) &tsensor.date; // date        
; 4632 |                         for (i = 0; i < 2; i++) {                      
; 4633 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4634 |                                 k += 2;                                
; 4635 |                                 intp++;                                
; 4638 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4639 |                         for (i = 0; i < 2; i++) {                      
; 4640 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4641 |                                 k += 2;                                
; 4642 |                                 intp++;                                
; 4644 |                         tsensor.base = tsensor.range;                  
; 4646 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4647 |                         switch (tsensor.unit) {                        
; 4648 |                         case 0:                                 // lb  
; 4649 |                         case 1:                                 // kg  
; 4650 |                                 tsensor.unit |= UNIT_WT;               
; 4651 |                                 break;                                 
; 4652 |                         case 2:                                 // in  
; 4653 |                         case 3:                                 // cm  
; 4654 |                         case 4:                                 // mm  
; 4655 |                                 tsensor.unit |= UNIT_LT;               
; 4656 |                                 break;                                 
; 4657 |                         case 5:                                 // ps  
; 4658 |                                 tsensor.unit |= UNIT_PR;               
; 4659 |                                 break;                                 
; 4660 |                         case 6:                                 // nm  
; 4661 |                                 tsensor.unit |= UNIT_TQ;               
; 4662 |                                 break;                                 
; 4663 |                         case 7:                                        
; 4664 |                         case 8:                                        
; 4665 |                         case 15:                                       
; 4666 |                                 tsensor.unit |= 0xf0;                  
; 4667 |                                 break;                                 
; 4668 |                         default:                                       
; 4669 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4670 |                                 break;                                 
; 4672 |                         tsensor.ounit = tsensor.unit;                  
; 4673 |                         tsensor.ufactor = 1;                           
; 4675 |                         switch (tsensor.method) {                      
; 4676 |                         case MD_RUN_MVV:                               
; 4678 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4679 |                                 for (i = 0; i < 2; i++) {              
; 4680 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4681 |                                         k += 2;                        
; 4682 |                                         intp++;                        
; 4684 |                                 if (tsensor.slope[0] == 0) {           
; 4685 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4687 |                                 tsensor.points = 1;                    
; 4688 |                                 break;                                 
; 4690 |                         case MD_RUN_MAS:                               
; 4692 |                                 tsensor.points = cmdbuff[k++];         
; 4693 |                                 if (tsensor.points > PNT_MAX) {        
; 4694 |                                         tsensor.method = MD_UNCALED;   
; 4695 |                                         break;                         
; 4698 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4699 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4700 |                                         for (i = 0; i < 2; i++) {      
; 4701 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4702 |                                                 k += 2;                
; 4703 |                                                 intp++;                
; 4706 |                                 break;                                 
; 4708 |                         case MD_RUN_SHT:                               
; 4710 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4711 |                                 for (i = 0; i < 2; i++) {              
; 4712 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4713 |                                         k += 2;                        
; 4714 |                                         intp++;                        
; 4716 |                                 if (scale == 0) {                      
; 4717 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4719 |                                 tsensor.points = 1;                    
; 4720 |                                 break;                                 
; 4722 |                         default:                                       
; 4724 |                                 tsensor.method = MD_UNCALED;           
; 4725 |                                 break;                                 
; 4728 |                         if (tsensor.method == MD_UNCALED) {            
; 4729 |                                 bincmdresult = Error_Invalid;          
; 4730 |                                 break;                                 
; 4732 |                         tsensor.tare = 0;                              
; 4733 |                         tsensor.dacgain = 1;                           
; 4734 |                         tsensor.dacoff = 0;                            
; 4735 |                         tsensor.ch = ch;                               
; 4737 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4738 |                                 buff[j] = cmdbuff[j++];                
; 4740 |                         bincmdresult = OK_SendResult;                  
; 4741 |                         break;                                         
; 4743 |                 case StartSCRead:                                      
; 4745 |                         if (cmdlen < 5) {                              
; 4746 |                                 bincmdresult = Error_Invalid;          
; 4747 |                                 break;                                 
; 4749 |                         k = 2;                                         
; 4750 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4751 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4752 |                                 bincmdresult = Error_Invalid;          
; 4753 |                                 break;                                 
; 4756 |                         lcd_clear();                                   
; 4757 |                         lcd_puts("Sensor Calibration..", 0);           
; 4758 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4759 |                         lcd_puts(buff, 20);                            
; 4760 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4761 |                         lcd_puts(buff, 40);                            
; 4763 |                         switch (tsensor.method) {                      
; 4765 |                         case MD_RUN_MVV:                               
; 4767 |                                 lcd_puts("Reading zero point...", 60); 
; 4769 |                                 dsum[0] = 0;                           
; 4770 |                                 sampcnt = CAL_SAMPLES;                 
; 4771 |                                 while (sampcnt--) {                    
; 4772 |                                         while (0 == ad7738_rawrdy()) { 
; 4773 |                                                 delay_us(1);
;     |          // wait                                                       
; 4776 |                                         cntp = ad7738_getraw();        
; 4777 |                                         dsum[0] += cntp->adc[ch];      
; 4779 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4780 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4782 |                                 bincmdresult = OK_SendResult;          
; 4783 |                                 break;                                 
; 4785 |                         case MD_RUN_MAS:                               
; 4787 |                                 pt = cmdbuff[k++];                     
; 4788 |                                 intp = (Uint16*) &scale;               
; 4789 |                                 for (i = 0; i < 2; i++) {              
; 4790 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4791 |                                         k += 2;                        
; 4792 |                                         intp++;                        
; 4794 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4795 |                                         bincmdresult = Error_Invalid;  
; 4796 |                                         break;                         
; 4798 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4799 |                                 lcd_puts(buff, 60);                    
; 4801 |                                 dsum[0] = 0;                           
; 4802 |                                 sampcnt = CAL_SAMPLES;                 
; 4803 |                                 while (sampcnt--) {                    
; 4804 |                                         while (0 == ad7738_rawrdy()) { 
; 4805 |                                                 delay_us(1);
;     |          // wait                                                       
; 4808 |                                         cntp = ad7738_getraw();        
; 4809 |                                         dsum[0] += cntp->adc[ch];      
; 4811 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4813 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4815 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4816 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4817 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4818 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4819 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4820 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4821 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4822 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4823 | 
;     |          * tsensor.adc[k];                                             
; 4827 |                                 bincmdresult = OK_SendResult;          
; 4828 |                                 break;                                 
; 4830 |                         case MD_RUN_SHT:                               
; 4832 |                                 lcd_puts("Reading zero point...", 60); 
; 4834 |                                 for (k = 0; k < 2; k++) {              
; 4835 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4837 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4838 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4839 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4841 |                                                 DINT;                  
; 4842 |                                                 maf_rst();             
; 4843 |                                                 EINT;                  
; 4844 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4847 |                                         dsum[k] = 0;                   
; 4848 |                                         sampcnt = CAL_SAMPLES;         
; 4849 |                                         while (sampcnt--) {            
; 4850 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4851 |                                                         delay_us(1);
;     |                  // wait                                               
; 4854 |                                                 cntp = ad7738_getraw();
; 4855 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4859 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4860 |                                 DINT;                                  
; 4861 |                                 maf_rst();                             
; 4862 |                                 EINT;                                  
; 4864 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4865 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4866 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4867 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4869 |                                 bincmdresult = OK_SendResult;          
; 4870 |                                 break;                                 
; 4872 |                         default:                                       
; 4874 |                                 bincmdresult = Error_Invalid;          
; 4875 |                                 break;                                 
; 4877 |                         lcd_clear();                                   
; 4878 |                         update_units();                                
; 4880 |                         if (bincmdresult != OK_SendResult) {           
; 4881 |                                 break;                                 
; 4883 |                         for (i = 0; i < cmdlen; i++) {                 
; 4884 |                                 buff[i] = cmdbuff[i];                  
; 4886 |                         j = cmdlen;                                    
; 4887 |                         break;                                         
; 4889 |                 case StartSCShuntRd:                                   
; 4891 |                         if (cmdlen < 5) {                              
; 4892 |                                 bincmdresult = Error_Invalid;          
; 4893 |                                 break;                                 
; 4895 |                         k = 2;                                         
; 4896 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4897 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4898 |                                 bincmdresult = Error_Invalid;          
; 4899 |                                 break;                                 
; 4902 |                         lcd_clear();                                   
; 4903 |                         lcd_puts("Sensor Calibration..", 0);           
; 4904 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4905 |                         lcd_puts(buff, 20);                            
; 4906 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4907 |                         lcd_puts(buff, 40);                            
; 4908 |                         lcd_puts("Reading shunt value...", 60);        
; 4910 |                         for (k = 0; k < 2; k++) {                      
; 4911 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4913 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4914 |                                         for (i = 0; i < 50; i++) {     
; 4915 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4917 |                                         DINT;                          
; 4918 |                                         maf_rst();                     
; 4919 |                                         EINT;                          
; 4920 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4923 |                                 dsum[k] = 0;                           
; 4924 |                                 sampcnt = CAL_SAMPLES;                 
; 4925 |                                 while (sampcnt--) {                    
; 4926 |                                         while (0 == ad7738_rawrdy()) { 
; 4927 |                                                 delay_us(1);
;     |          // wait                                                       
; 4930 |                                         cntp = ad7738_getraw();        
; 4931 |                                         dsum[k] += cntp->adc[ch];      
; 4933 |                                 dsum[k] /= CAL_SAMPLES;                
; 4935 |                                 pt = 0;                                
; 4936 |                                 if (tsensor.points > 2) {              
; 4937 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4938 |                                                 pt++;                  
; 4941 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4942 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4945 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4946 |                         DINT;                                          
; 4947 |                         maf_rst();                                     
; 4948 |                         EINT;                                          
; 4950 |                         tsensor.shunt = volt[1] - volt[0];             
; 4952 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4954 |                         DINT;                                          
; 4955 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4956 |                                         sizeof(sconf_t));              
; 4958 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4960 |                         ad7738_setcal();                               
; 4961 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4962 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4963 |                         EINT;                                          
; 4965 |                         unsaved = 1;                                   
; 4967 |                         lcd_clear();                                   
; 4968 |                         update_units();                                
; 4970 |                         for (i = 0; i < cmdlen; i++) {                 
; 4971 |                                 buff[i] = cmdbuff[i];                  
; 4973 |                         j = cmdlen;                                    
; 4974 |                         bincmdresult = OK_SendResult;                  
; 4975 |                         break;                                         
; 4977 |                 case SetSensorName:                                    
; 4979 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4980 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4981 |                                 bincmdresult = Error_Invalid;          
; 4982 |                                 break;                                 
; 4984 |                         ss = cmdbuff[2];                               
; 4985 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4987 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4988 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4989 |                         for (i = 0; i < slen; i++) {                   
; 4990 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4992 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4993 |                         unsaved = 1;                                   
; 4995 |                         // sensor name/label                           
; 4996 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4997 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4998 |                         for (i = 0; i < slen; i++) {                   
; 4999 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5002 |                         bincmdresult = OK_SendResult;                  
; 5003 |                         break;                                         
; 5005 |                 case SetSensorOUnit:                                   
; 5007 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5008 |                                 bincmdresult = Error_Invalid;          
; 5009 |                                 break;                                 
; 5012 |                         ss = cmdbuff[2];                               
; 5013 |                         pt = cmdbuff[3];                               
; 5015 |                         if (pt != UNIT_PC                              
; 5016 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5017 |                                 bincmdresult = Error_Invalid;          
; 5018 |                                 break;                                 
; 5021 |                         conf_data.sensor[ss].ounit = pt;               
; 5022 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5023 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5025 |                         if (pt == UNIT_PC) {                           
; 5026 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5027 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5028 |                         } else if (conf_data.sensor[ss].ounit          
; 5029 |                                         == conf_data.sensor[ss].unit) {
; 5030 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5031 |                         } else {                                       
; 5032 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5033 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5035 |                                         if (pt == UNIT_KG) {           
; 5036 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5038 |                                         break;                         
; 5040 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5042 |                                         if (pt == UNIT_LB) {           
; 5043 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5045 |                                         break;                         
; 5047 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5049 |                                         switch (pt) {                  
; 5050 |                                         case UNIT_CM:                  
; 5051 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5052 |                                                 break;                 
; 5053 |                                         case UNIT_MM:                  
; 5054 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5055 |                                                 break;                 
; 5057 |                                         break;                         
; 5059 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5061 |                                         switch (pt) {                  
; 5062 |                                         case UNIT_IN:                  
; 5063 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5064 |                                                 break;                 
; 5065 |                                         case UNIT_MM:                  
; 5066 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5067 |                                                 break;                 
; 5069 |                                         break;                         
; 5071 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5073 |                                         switch (pt) {                  
; 5074 |                                         case UNIT_IN:                  
; 5075 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5076 |                                                 break;                 
; 5077 |                                         case UNIT_CM:                  
; 5078 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5079 |                                                 break;                 
; 5081 |                                         break;                         
; 5083 |                                 default:                               
; 5085 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5086 |                                         break;                         
; 5090 |                         unsaved = 1;                                   
; 5092 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5093 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5094 |                                         update_units();                
; 5095 |                                         DINT;                          
; 5096 |                                         ad7738_setcal();               
; 5097 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5098 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5099 |                                         EINT;                          
; 5103 |                         bincmdresult = OK_SendResult;                  
; 5104 |                         break;                                         
; 5106 |                 case SetSensorBase:                                    
; 5108 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5109 |                                 bincmdresult = Error_Invalid;          
; 5110 |                                 break;                                 
; 5112 |                         ss = cmdbuff[2];                               
; 5113 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5115 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5116 |                         for (i = 0; i < 2; i++) {                      
; 5117 |                                 *intp = cmdbuff[j];                    
; 5118 |                                 buff[j++] = 0xff & *intp;              
; 5119 |                                 *intp += cmdbuff[j] << 8;              
; 5120 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5121 |                                 intp++;                                
; 5123 |                         unsaved = 1;                                   
; 5125 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5126 |                                 // output unit is percent              
; 5127 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5128 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5130 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5131 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5132 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5133 |                                                 DINT;                  
; 5134 |                                                 ad7738_setcal();       
; 5135 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5136 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5137 |                                                 EINT;                  
; 5142 |                         bincmdresult = OK_SendResult;                  
; 5143 |                         break;                                         
; 5145 |                 case SetQEPChannels:                                   
; 5147 |                         if (cmdlen < 6) {                              
; 5148 |                                 bincmdresult = Error_Invalid;          
; 5149 |                                 break;                                 
; 5152 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5153 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5154 |                                 for (i = 0; i < 2; i++) {              
; 5155 |                                         *intp = cmdbuff[j];            
; 5156 |                                         buff[j++] = 0xff & *intp;      
; 5157 |                                         *intp += cmdbuff[j] << 8;      
; 5158 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5159 |                                         intp++;                        
; 5163 |                         conf_data.velfilter = cmdbuff[j];              
; 5164 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5165 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5166 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5168 |                         unsaved = 1;                                   
; 5170 |                         DINT;                                          
; 5171 |                         ad7738_setcal();                               
; 5172 |                         velf_rst();                                    
; 5173 |                         EINT;                                          
; 5175 |                         bincmdresult = OK_SendResult;                  
; 5176 |                         break;                                         
; 5178 |                         //case SetEnCntperin: // not needed            
; 5179 |                         //break;                                       
; 5181 |                 case SetCurSensor:                                     
; 5183 |                         if (cmdlen < 4||                               
; 5184 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5185 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5186 |                                 bincmdresult = Error_Invalid;          
; 5187 |                                 break;                                 
; 5190 |                         ch = cmdbuff[2];                               
; 5191 |                         ss = cmdbuff[3];                               
; 5193 |                         if (autoid[ch]) {                              
; 5194 |                                 bincmdresult = Error_Exe;              
; 5195 |                                 break;                                 
; 5198 |                         DINT;                                          
; 5199 |                         conf_data.ch[ch].ci = ss;                      
; 5200 |                         ad7738_setcal();                               
; 5202 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5203 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5204 |                         EINT;                                          
; 5206 |                         update_units();                                
; 5207 |                         unsaved = 1;                                   
; 5209 |                         buff[j++] = ch;                                
; 5210 |                         buff[j++] = ss;                                
; 5211 |                         bincmdresult = OK_SendResult;                  
; 5212 |                         break;                                         
; 5214 |                 case SetAFilterSize:                                   
; 5216 |                         if (cmdlen < 4) {                              
; 5217 |                                 bincmdresult = Error_Invalid;          
; 5218 |                                 break;                                 
; 5221 |                         // filter length                               
; 5222 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5223 |                         if (temp16 > MAF_MAX) {                        
; 5224 |                                 bincmdresult = Error_Invalid;          
; 5225 |                                 break;                                 
; 5228 |                         // filter diff window                          
; 5229 |                         intp = (Uint16*) &tempft;                      
; 5230 |                         for (i = 0; i < 2; i++) {                      
; 5231 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5232 |                                 intp++;                                
; 5235 |                         DINT;                                          
; 5236 |                         conf_data.filter = temp16;                     
; 5237 |                         conf_data.diffwin = tempft;                    
; 5238 |                         maf_rst();                                     
; 5239 |                         EINT;                                          
; 5241 |                         unsaved = 1;                                   
; 5243 |                         buff[j++] = 0xff & temp16;                     
; 5244 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5246 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5247 |                         buff[j++] = 0xff & intp[0];                    
; 5248 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5249 |                         buff[j++] = 0xff & intp[1];                    
; 5250 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5252 |                         bincmdresult = OK_SendResult;                  
; 5253 |                         break;                                         
; 5255 |                 case SetAutoId:                                        
; 5257 |                         if (cmdlen < 3) {                              
; 5258 |                                 bincmdresult = Error_Invalid;          
; 5259 |                                 break;                                 
; 5262 |                         conf_data.tagiden = cmdbuff[2];                
; 5263 |                         if (!conf_data.tagiden) {                      
; 5264 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5265 |                                         tagwasthere[i] = 0;            
; 5266 |                                         autoid[i] = 0;                 
; 5268 |                                 update_units();                        
; 5270 |                         unsaved = 1;                                   
; 5272 |                         buff[j] = cmdbuff[j++];                        
; 5273 |                         bincmdresult = OK_SendResult;                  
; 5274 |                         break;                                         
; 5276 |                 case SetDisplayLine:                                   
; 5278 |                         if (cmdlen < 14) {                             
; 5279 |                                 bincmdresult = Error_Invalid;          
; 5280 |                                 break;                                 
; 5283 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5284 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5285 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5286 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5287 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5288 |                                         || cmdbuff[13] > 5) {          
; 5289 |                                 bincmdresult = Error_Invalid;          
; 5290 |                                 break;                                 
; 5293 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5294 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5295 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5296 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5297 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5298 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5299 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5301 |                         unsaved = 1;                                   
; 5303 |                         lcd_clear();                                   
; 5304 |                         update_units();                                
; 5305 |                         bincmdresult = OK_SendResult;                  
; 5306 |                         break;                                         
; 5308 |                 case SetDACCh:                                         
; 5310 |                         if (cmdlen < 42) {                             
; 5311 |                                 bincmdresult = Error_Invalid;          
; 5312 |                                 break;                                 
; 5315 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5316 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5317 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5318 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5319 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5320 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5321 |                                 bincmdresult = Error_Invalid;          
; 5322 |                                 break;                                 
; 5325 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5326 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5327 |                                 buff[j++] = conf_data.dac[i].what;     
; 5328 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5329 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5331 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5332 |                                 //{                                    
; 5333 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5334 |                                 //}                                    
; 5335 |                                 //else                                 
; 5336 |                                 //{                                    
; 5337 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5338 |                                 //}                                    
; 5339 |                                 for (k = 0; k < 2; k++) {              
; 5340 |                                         *intp = cmdbuff[j];            
; 5341 |                                         buff[j++] = 0xff & *intp;      
; 5342 |                                         *intp += cmdbuff[j] << 8;      
; 5343 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5344 |                                         intp++;                        
; 5347 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5348 |                                 //{                                    
; 5349 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5350 |                                 //}                                    
; 5351 |                                 //else                                 
; 5352 |                                 //{                                    
; 5353 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5354 |                                 //}                                    
; 5355 |                                 for (k = 0; k < 2; k++) {              
; 5356 |                                         *intp = cmdbuff[j];            
; 5357 |                                         buff[j++] = 0xff & *intp;      
; 5358 |                                         *intp += cmdbuff[j] << 8;      
; 5359 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5360 |                                         intp++;                        
; 5363 |                         unsaved = 1;                                   
; 5365 |                         DINT;                                          
; 5366 |                         ad7738_setcal();                               
; 5367 |                         EINT;                                          
; 5368 |                         bincmdresult = OK_SendResult;                  
; 5369 |                         break;                                         
; 5371 |                 case SetLIMITCh:                                       
; 5373 |                         if (cmdlen < 46) {                             
; 5374 |                                 bincmdresult = Error_Invalid;          
; 5375 |                                 break;                                 
; 5378 |                         if (cmdbuff[2]                                 
; 5379 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5380 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5381 |                                 bincmdresult = Error_Invalid;          
; 5382 |                                 break;                                 
; 5385 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5386 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5387 |                                 buff[j++] = conf_data.lim[i].what;     
; 5388 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5389 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5390 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5391 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5393 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5394 |                                 for (k = 0; k < 2; k++) {              
; 5395 |                                         *intp = cmdbuff[j];            
; 5396 |                                         buff[j++] = 0xff & *intp;      
; 5397 |                                         *intp += cmdbuff[j] << 8;      
; 5398 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5399 |                                         intp++;                        
; 5401 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5402 |                                 for (k = 0; k < 2; k++) {              
; 5403 |                                         *intp = cmdbuff[j];            
; 5404 |                                         buff[j++] = 0xff & *intp;      
; 5405 |                                         *intp += cmdbuff[j] << 8;      
; 5406 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5407 |                                         intp++;                        
; 5410 |                         unsaved = 1;                                   
; 5412 |                         DINT;                                          
; 5413 |                         ad7738_setcal();                               
; 5414 |                         EINT;                                          
; 5416 |                         bincmdresult = OK_SendResult;                  
; 5417 |                         break;                                         
; 5419 |                 case Tare:                                             
; 5421 |                         if (cmdlen < 3) {                              
; 5422 |                                 //bincmdresult = Error_Invalid;        
; 5423 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5424 |                                 ad7738_resetpeak(0xff);                
; 5425 |                                 ad7738_resetvall(0xff);                
; 5426 |                                 unsaved = 1;                           
; 5428 |                                 buff[j++] = 0xff;                      
; 5429 |                                 bincmdresult = OK_SendResult;          
; 5430 |                                 break;                                 
; 5433 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5434 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5435 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5436 |                         unsaved = 1;                                   
; 5438 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5439 |                         bincmdresult = OK_SendResult;                  
; 5440 |                         break;                                         
; 5442 |                 case ResetPkVly:                                       
; 5444 |                         if (cmdlen < 3) {                              
; 5445 |                                 bincmdresult = Error_Invalid;          
; 5446 |                                 break;                                 
; 5449 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5450 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5451 |                         unsaved = 1;                                   
; 5453 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5454 |                         bincmdresult = OK_SendResult;                  
; 5455 |                         break;                                         
; 5457 |                 case ResetPk:                                          
; 5459 |                         if (cmdlen < 3) {                              
; 5460 |                                 bincmdresult = Error_Invalid;          
; 5461 |                                 break;                                 
; 5464 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5465 |                         unsaved = 1;                                   
; 5467 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5468 |                         bincmdresult = OK_SendResult;                  
; 5469 |                         break;                                         
; 5471 |                 case ResetVly:                                         
; 5473 |                         if (cmdlen < 3) {                              
; 5474 |                                 bincmdresult = Error_Invalid;          
; 5475 |                                 break;                                 
; 5478 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5479 |                         unsaved = 1;                                   
; 5481 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5482 |                         bincmdresult = OK_SendResult;                  
; 5483 |                         break;                                         
; 5485 |                 case ResetLIMIT:                                       
; 5487 |                         if (cmdlen < 3) {                              
; 5488 |                                 bincmdresult = Error_Invalid;          
; 5489 |                                 break;                                 
; 5492 |                         k = 0x01;                                      
; 5493 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5494 |                                 if (k & cmdbuff[2]) {                  
; 5495 |                                         ad7738_resetlimit(i);          
; 5497 |                                 k <<= 1;                               
; 5499 |                         unsaved = 1;                                   
; 5501 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5502 |                         bincmdresult = OK_SendResult;                  
; 5503 |                         break;                                         
; 5505 |                 case ResetPosition:                                    
; 5507 |                         if (cmdlen < 3) {                              
; 5508 |                                 bincmdresult = Error_Invalid;          
; 5509 |                                 break;                                 
; 5512 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5513 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5514 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5515 |                         unsaved = 1;                                   
; 5517 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5518 |                         bincmdresult = OK_SendResult;                  
; 5519 |                         break;                                         
; 5521 |                 case SetShuntSwitch:                                   
; 5523 |                         if (cmdlen < 3) {                              
; 5524 |                                 bincmdresult = Error_Invalid;          
; 5525 |                                 break;                                 
; 5528 |                         shunt_switch(cmdbuff[2]);                      
; 5529 |                         unsaved = 1;                                   
; 5531 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5532 |                         bincmdresult = OK_SendResult;                  
; 5533 |                         break;                                         
; 5535 |                 case SetDirectVolt:                                    
; 5537 |                         if (cmdlen < 7) {                              
; 5538 |                                 bincmdresult = Error_Invalid;          
; 5539 |                                 break;                                 
; 5542 |                         ss = cmdbuff[j];                               
; 5543 |                         buff[j++] = ss;                                
; 5545 |                         intp = (Uint16*) &volt[0];                     
; 5546 |                         for (k = 0; k < 2; k++) {                      
; 5547 |                                 *intp = cmdbuff[j];                    
; 5548 |                                 buff[j++] = 0xff & *intp;              
; 5549 |                                 *intp += cmdbuff[j] << 8;              
; 5550 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5551 |                                 intp++;                                
; 5554 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5555 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5556 |                                 bincmdresult = Error_Invalid;          
; 5557 |                                 break;                                 
; 5560 |                         if (volt[0] < 0) {                             
; 5561 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5562 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5563 |                         } else {                                       
; 5564 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5565 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5568 |                         if (dsum[0] <= 0) {                            
; 5569 |                                 dacc[0] = 0;                           
; 5570 |                         } else if (dsum[0] >= 0xffff) {                
; 5571 |                                 dacc[0] = 0xffff;                      
; 5572 |                         } else {                                       
; 5573 |                                 dacc[0] = (Uint16) dsum[0];            
; 5576 |                         mcbsp_xmit(dacc[0], ss);                       
; 5577 |                         latch_dac();                                   
; 5579 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5580 |                         buff[j++] = 0xff & dacc[0];                    
; 5581 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5583 |                         bincmdresult = OK_SendResult;                  
; 5584 |                         break;                                         
; 5586 |                 case GetAllFlash:                                      
; 5588 |                         break;                                         
; 5590 |                 case SetAllFlash:                                      
; 5592 |                         break;                                         
; 5594 |                 case FlashMemWrite:                                    
; 5596 |                         bincmdresult = OK_SendResult;                  
; 5597 |                         if (unsaved) {                                 
; 5598 |                                 // flash writing                       
; 5599 |                                 lcd_clear();                           
; 5600 |                                 lcd_puts("Flash writing...", 0);       
; 5602 |                                 for (i = 0; i < 50; i++) {             
; 5603 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5606 |                                 DINT;                                  
; 5607 |                                 flash_ret = conf_write();              
; 5608 |                                 EINT;                                  
; 5610 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5611 |                                         lcd_puts("Done", 16);          
; 5612 |                                         unsaved = 0;                   
; 5613 |                                 } else {                               
; 5614 |                                         lcd_puts("Fail", 16);          
; 5615 |                                         bincmdresult = Error_Exe;      
; 5618 |                                 for (i = 0; i < 50; i++) {             
; 5619 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5621 |                                 lcd_clear();                           
; 5622 |                                 update_units();                        
; 5624 |                         break;                                         
; 5626 |                 case FlashMemDefault:                                  
; 5628 |                         conf_default();                                
; 5630 |                         // flash writing                               
; 5631 |                         lcd_clear();                                   
; 5632 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5634 |                         for (i = 0; i < 50; i++) {                     
; 5635 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5638 |                         DINT;                                          
; 5639 |                         flash_ret = conf_write();                      
; 5640 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5641 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5642 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5643 |                         EINT;                                          
; 5645 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5646 |                                 lcd_puts("Done", 31);                  
; 5647 |                                 unsaved = 0;                           
; 5648 |                                 bincmdresult = OK_SendResult;          
; 5649 |                         } else {                                       
; 5650 |                                 lcd_puts("Fail", 31);                  
; 5651 |                                 bincmdresult = Error_Exe;              
; 5653 |                         for (i = 0; i < 50; i++) {                     
; 5654 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5656 |                         lcd_clear();                                   
; 5657 |                         update_units();                                
; 5659 |                         break;                                         
; 5661 |                 case FlashMemRead:                                     
; 5663 |                         // flash reading                               
; 5664 |                         conf_read();                                   
; 5666 |                         DINT;                                          
; 5667 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5668 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5669 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5670 |                         EINT;                                          
; 5672 |                         unsaved = 0;                                   
; 5673 |                         update_units();                                
; 5674 |                         bincmdresult = OK_SendResult;                  
; 5675 |                         break;                                         
; 5677 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |633| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |633| 
        ; call occurs [#_SPICANRead] ; [] |633| 
        MOVL      XAR0,#40              ; [CPU_] |633| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |633| 
        MOV       *-SP[40],AL           ; [CPU_] |633| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |592| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5679,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5679 | if (cmdlen < 6) {                                                      
; 5680 |         bincmdresult = Error_Invalid;                                  
; 5681 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5679| 
        B         $C$L320,LO            ; [CPU_] |5679| 
        ; branchcc occurs ; [] |5679| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5684,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5684 | ds_dn = cmdbuff[2];                                                    
; 5685 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5684| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5686 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5684,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5684| 
        ADDB      ACC,#2                ; [CPU_] |5684| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5684| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5687 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5684,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5684| 
        MOV       *-SP[52],AL           ; [CPU_] |5684| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5686| 
        ADDB      ACC,#4                ; [CPU_] |5686| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5688 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5686| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5686| 
        MOV       *-SP[51],AL           ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5690 | tempint = 0;                                                           
; 5691 | k = 0x01;                                                              
; 5692 | for (i = 0; i < 8; i++) {                                              
; 5693 |         if (ds_bm & k) {                                               
; 5694 |                 tempint++;                                             
; 5696 |         k <<= 1;                                                       
; 5699 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5700 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5701 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5702 | //                                      ds_en = 0;                     
; 5703 | //                                      bincmdresult = Error_Invalid;  
; 5704 | //                                      break;                         
; 5705 | //                              }                                      
; 5707 | ds_en = 1;                                                             
; 5708 | ds_stop = 0;                                                           
; 5709 | ds_sn = 0;                                                             
; 5711 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5712 | //                              ad7738_setlimitchgd();                 
; 5714 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5688| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5688| 
        MOV       *-SP[50],AL           ; [CPU_] |5688| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5715,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5715 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5715| 
	.dwpsn	file "../Source/prod.c",line 5707,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5707| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5708| 
	.dwpsn	file "../Source/prod.c",line 5709,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5709| 
	.dwpsn	file "../Source/prod.c",line 5716,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5716 | j++;                                                                   
; 5718 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5716| 
	.dwpsn	file "../Source/prod.c",line 5719,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5719 | break;                                                                 
; 5721 | case StopStream:                                                       
; 5723 | ds_stop = 1;                                                           
; 5724 | bincmdresult = OK_SendResult;                                          
; 5725 | break;                                                                 
; 5727 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5729 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5719| 
        ; branch occurs ; [] |5719| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4891,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4891| 
        B         $C$L320,LO            ; [CPU_] |4891| 
        ; branchcc occurs ; [] |4891| 
	.dwpsn	file "../Source/prod.c",line 4896,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4896| 
        MOVL      ACC,XAR4              ; [CPU_] |4896| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4896| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4896| 
        MOVL      XAR0,#66              ; [CPU_] |4896| 
        ADDB      ACC,#2                ; [CPU_] |4896| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4896| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4896| 
        CMPL      ACC,XAR6              ; [CPU_] |4896| 
        B         $C$L320,NEQ           ; [CPU_] |4896| 
        ; branchcc occurs ; [] |4896| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4896| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4896| 
        CMPL      ACC,XAR6              ; [CPU_] |4896| 
        B         $C$L320,NEQ           ; [CPU_] |4896| 
        ; branchcc occurs ; [] |4896| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4896| 
        MOVL      XAR0,#64              ; [CPU_] |4896| 
        MOVL      ACC,XAR5              ; [CPU_] |4896| 
        ADDB      ACC,#4                ; [CPU_] |4896| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4896| 
        MOVB      XAR0,#36              ; [CPU_] |4896| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4896| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4896| 
        B         $C$L320,NEQ           ; [CPU_] |4896| 
        ; branchcc occurs ; [] |4896| 
	.dwpsn	file "../Source/prod.c",line 4902,column 5,is_stmt,isa 0
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4902| 
        ; call occurs [#_lcd_clear] ; [] |4902| 
	.dwpsn	file "../Source/prod.c",line 4903,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4903| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4903| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4903| 
        ; call occurs [#_lcd_puts] ; [] |4903| 
	.dwpsn	file "../Source/prod.c",line 4904,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4904| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4904| 
        MOVL      XAR0,#44              ; [CPU_] |4904| 
        ADD       AL,*-SP[58]           ; [CPU_] |4904| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4904| 
        MOV       *-SP[3],AL            ; [CPU_] |4904| 
        MOVB      AL,#1                 ; [CPU_] |4904| 
        ADD       AL,*-SP[57]           ; [CPU_] |4904| 
        MOV       *-SP[4],AL            ; [CPU_] |4904| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4904| 
        MOVL      XAR4,XAR3             ; [CPU_] |4904| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_sprintf")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4904| 
        ; call occurs [#_sprintf] ; [] |4904| 
	.dwpsn	file "../Source/prod.c",line 4905,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4905| 
        MOVL      XAR4,XAR3             ; [CPU_] |4905| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4905| 
        ; call occurs [#_lcd_puts] ; [] |4905| 
	.dwpsn	file "../Source/prod.c",line 4906,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4906| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4906| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4906| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4906| 
        MOVL      XAR0,#58              ; [CPU_] |4906| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4906| 
        MOVB      XAR1,#36              ; [CPU_] |4906| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4906| 
        ADDL      ACC,XAR6              ; [CPU_] |4906| 
        MOVL      XAR4,ACC              ; [CPU_] |4906| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4906| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4906| 
        MOVL      XAR4,XAR3             ; [CPU_] |4906| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_sprintf")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4906| 
        ; call occurs [#_sprintf] ; [] |4906| 
	.dwpsn	file "../Source/prod.c",line 4907,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4907| 
        MOVL      XAR4,XAR3             ; [CPU_] |4907| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4907| 
        ; call occurs [#_lcd_puts] ; [] |4907| 
	.dwpsn	file "../Source/prod.c",line 4908,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4908| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4908| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4908| 
        ; call occurs [#_lcd_puts] ; [] |4908| 
        MOVL      XAR0,#78              ; [CPU_] |4908| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4908| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4908| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4910,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4910| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4910| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4911,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4911| 
        B         $C$L83,LEQ            ; [CPU_] |4911| 
        ; branchcc occurs ; [] |4911| 
	.dwpsn	file "../Source/prod.c",line 4913,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4913| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4913| 
        ; call occurs [#_shunt_switch] ; [] |4913| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4915,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4915| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_delay_us")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4915| 
        ; call occurs [#_delay_us] ; [] |4915| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4915| 
	.dwpsn	file "../Source/prod.c",line 4914,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4914| 
        MOVZ      AR0,AR6               ; [CPU_] |4914| 
        MOV       *-SP[48],AR6          ; [CPU_] |4914| 
        CMP       AR0,#-1               ; [CPU_] |4914| 
        B         $C$L82,NEQ            ; [CPU_] |4914| 
        ; branchcc occurs ; [] |4914| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4918,column 7,is_stmt,isa 0
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_maf_rst")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4918| 
        ; call occurs [#_maf_rst] ; [] |4918| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4920,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4920| 
        SPM       #0                    ; [CPU_] 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_delay_us")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4920| 
        ; call occurs [#_delay_us] ; [] |4920| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4923,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4923| 
	.dwpsn	file "../Source/prod.c",line 4924,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4924| 
	.dwpsn	file "../Source/prod.c",line 4923,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4923| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4923| 
	.dwpsn	file "../Source/prod.c",line 4925,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4925| 
	.dwpsn	file "../Source/prod.c",line 4924,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4924| 
	.dwpsn	file "../Source/prod.c",line 4925,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4925| 
        MOVB      ACC,#0                ; [CPU_] |4925| 
        SUBB      ACC,#1                ; [CPU_] |4925| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4925| 
        B         $C$L86,EQ             ; [CPU_] |4925| 
        ; branchcc occurs ; [] |4925| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4926,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4926| 
        ; branch occurs ; [] |4926| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4927,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4927| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_delay_us")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4927| 
        ; call occurs [#_delay_us] ; [] |4927| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4926,column 14,is_stmt,isa 0
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4926| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4926| 
        CMPB      AL,#0                 ; [CPU_] |4926| 
        B         $C$L84,EQ             ; [CPU_] |4926| 
        ; branchcc occurs ; [] |4926| 
	.dwpsn	file "../Source/prod.c",line 4930,column 7,is_stmt,isa 0
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4930| 
        ; call occurs [#_ad7738_getraw] ; [] |4930| 
	.dwpsn	file "../Source/prod.c",line 4931,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4931| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4931| 
        ADDL      XAR4,ACC              ; [CPU_] |4931| 
        MOVL      XAR0,#34              ; [CPU_] |4931| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4931| 
        MOVL      XAR0,#34              ; [CPU_] |4931| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4931| 
        ASR64     ACC:P,16              ; [CPU_] |4931| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4931| 
        MOVL      XAR0,#34              ; [CPU_] |4931| 
        ASR64     ACC:P,16              ; [CPU_] |4931| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4931| 
        MOVL      XAR0,#34              ; [CPU_] |4931| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4931| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4931| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4931| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4931| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4931| 
	.dwpsn	file "../Source/prod.c",line 4925,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4925| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4925| 
        MOVB      ACC,#0                ; [CPU_] |4925| 
        SUBB      ACC,#1                ; [CPU_] |4925| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4925| 
        B         $C$L85,NEQ            ; [CPU_] |4925| 
        ; branchcc occurs ; [] |4925| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4933,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4933| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4933| 
        MOV       *-SP[2],#0            ; [CPU_] |4933| 
        MOV       *-SP[1],#0            ; [CPU_] |4933| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4933| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4933| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4933| 
        ; call occurs [#LL$$DIV] ; [] |4933| 
	.dwpsn	file "../Source/prod.c",line 4936,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4936| 
        MOVB      XAR0,#46              ; [CPU_] |4936| 
	.dwpsn	file "../Source/prod.c",line 4933,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4933| 
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4933,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4933| 
	.dwpsn	file "../Source/prod.c",line 4936,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4936| 
        CMPB      AL,#2                 ; [CPU_] |4936| 
        B         $C$L89,LEQ            ; [CPU_] |4936| 
        ; branchcc occurs ; [] |4936| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4937,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4937| 
        ; branch occurs ; [] |4937| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4938,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4938| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4937,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4937| 
        B         $C$L89,HIS            ; [CPU_] |4937| 
        ; branchcc occurs ; [] |4937| 
        MOVB      AL,#1                 ; [CPU_] |4937| 
        ADD       AL,AR4                ; [CPU_] |4937| 
        MOVZ      AR5,AL                ; [CPU_] |4937| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4937| 
        ADDL      ACC,XAR1              ; [CPU_] |4937| 
        MOVL      XAR6,ACC              ; [CPU_] |4937| 
        MOVB      XAR0,#72              ; [CPU_] |4937| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4937| 
        MOVL      XAR0,#32              ; [CPU_] |4937| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4937| 
        MOVL      XAR0,#32              ; [CPU_] |4937| 
        ASR64     ACC:P,16              ; [CPU_] |4937| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4937| 
        MOVL      XAR0,#32              ; [CPU_] |4937| 
        ASR64     ACC:P,16              ; [CPU_] |4937| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4937| 
        MOVL      *-SP[4],P             ; [CPU_] |4937| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4937| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4937| 
        MOVL      P,*-SP[32]            ; [CPU_] |4937| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$585, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4937| 
        ; call occurs [#LL$$CMP] ; [] |4937| 
        CMPB      AL,#0                 ; [CPU_] |4937| 
        B         $C$L87,GT             ; [CPU_] |4937| 
        ; branchcc occurs ; [] |4937| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4941,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4941| 
        ADDL      ACC,XAR1              ; [CPU_] |4941| 
        MOVL      XAR4,ACC              ; [CPU_] |4941| 
        MOVL      XAR0,#88              ; [CPU_] |4941| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4941| 
        MOVB      XAR0,#96              ; [CPU_] |4941| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4941| 
        MOVL      XAR0,#38              ; [CPU_] |4941| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4941| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4941| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4941| 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4941| 
        ; call occurs [#FS$$MPY] ; [] |4941| 
        MOVL      XAR0,#30              ; [CPU_] |4941| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4941| 
        MOVL      P,*XAR3++             ; [CPU_] |4941| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4941| 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4941| 
        ; call occurs [#LL$$TOFS] ; [] |4941| 
        MOVL      XAR0,#30              ; [CPU_] |4941| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4941| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4941| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4941| 
        ; call occurs [#FS$$MPY] ; [] |4941| 
        MOVL      XAR0,#88              ; [CPU_] |4941| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4941| 
        MOVB      XAR1,#118             ; [CPU_] |4941| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4941| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4941| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4941| 
        ; call occurs [#FS$$ADD] ; [] |4941| 
        MOVL      XAR0,#36              ; [CPU_] |4941| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4941| 
        MOVL      XAR0,#36              ; [CPU_] |4941| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4941| 
	.dwpsn	file "../Source/prod.c",line 4910,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4910| 
	.dwpsn	file "../Source/prod.c",line 4941,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4941| 
        MOV       AL,*-SP[60]           ; [CPU_] |4941| 
	.dwpsn	file "../Source/prod.c",line 4910,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4910| 
        B         $C$L81,LT             ; [CPU_] |4910| 
        ; branchcc occurs ; [] |4910| 
	.dwpsn	file "../Source/prod.c",line 4945,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4945| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4945| 
        ; call occurs [#_shunt_switch] ; [] |4945| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4947,column 5,is_stmt,isa 0
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("_maf_rst")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4947| 
        ; call occurs [#_maf_rst] ; [] |4947| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4950,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4950| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4950| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4950| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4950| 
        ; call occurs [#FS$$SUB] ; [] |4950| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4950| 
        MOVL      XAR0,#36              ; [CPU_] |4950| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4950| 
        MOVB      XAR0,#140             ; [CPU_] |4950| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4950| 
        MOV       AL,*-SP[58]           ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("_tagid")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4952| 
        ; call occurs [#_tagid] ; [] |4952| 
        MOVL      XAR4,XAR1             ; [CPU_] |4952| 
        ADDB      XAR4,#32              ; [CPU_] |4952| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4952| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4952| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4955,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4955| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4955| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4955| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4955| 
        MOV       AL,*-SP[57]           ; [CPU_] |4955| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4958,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4958| 
	.dwpsn	file "../Source/prod.c",line 4960,column 5,is_stmt,isa 0
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4960| 
        ; call occurs [#_ad7738_setcal] ; [] |4960| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |4960| 
	.dwpsn	file "../Source/prod.c",line 4961,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4961| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4961| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4961| 
        MOV       AL,AR1                ; [CPU_] |4961| 
	.dwpsn	file "../Source/prod.c",line 4962,column 5,is_stmt,isa 0
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4962| 
        ; call occurs [#_ad7738_resetvall] ; [] |4962| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4967,column 5,is_stmt,isa 0
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4967| 
        ; call occurs [#_lcd_clear] ; [] |4967| 
	.dwpsn	file "../Source/prod.c",line 4968,column 5,is_stmt,isa 0
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_update_units")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4968| 
        ; call occurs [#_update_units] ; [] |4968| 
        MOVL      XAR0,#42              ; [CPU_] |4968| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4968| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4970,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4970| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4971,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4971| 
	.dwpsn	file "../Source/prod.c",line 4970,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4970| 
	.dwpsn	file "../Source/prod.c",line 4971,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4971| 
	.dwpsn	file "../Source/prod.c",line 4970,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4970| 
	.dwpsn	file "../Source/prod.c",line 4971,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4971| 
	.dwpsn	file "../Source/prod.c",line 4970,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4970| 
        B         $C$L90,HI             ; [CPU_] |4970| 
        ; branchcc occurs ; [] |4970| 
	.dwpsn	file "../Source/prod.c",line 4973,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4973| 
	.dwpsn	file "../Source/prod.c",line 4975,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4975| 
        ; branch occurs ; [] |4975| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4745,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4745| 
        B         $C$L320,LO            ; [CPU_] |4745| 
        ; branchcc occurs ; [] |4745| 
	.dwpsn	file "../Source/prod.c",line 4750,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4750| 
        MOVL      XAR0,#66              ; [CPU_] |4750| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4750| 
        ADDB      ACC,#2                ; [CPU_] |4750| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4750| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4750| 
        CMPL      ACC,XAR6              ; [CPU_] |4750| 
        B         $C$L320,NEQ           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4750| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4750| 
        CMPL      ACC,XAR6              ; [CPU_] |4750| 
        B         $C$L320,NEQ           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4750| 
        MOVL      XAR0,#64              ; [CPU_] |4750| 
        MOVL      ACC,XAR5              ; [CPU_] |4750| 
        ADDB      ACC,#4                ; [CPU_] |4750| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4750| 
        MOVB      XAR0,#36              ; [CPU_] |4750| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4750| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4750| 
        B         $C$L320,NEQ           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
	.dwpsn	file "../Source/prod.c",line 4756,column 5,is_stmt,isa 0
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4756| 
        ; call occurs [#_lcd_clear] ; [] |4756| 
	.dwpsn	file "../Source/prod.c",line 4757,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4757| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4757| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4757| 
        ; call occurs [#_lcd_puts] ; [] |4757| 
	.dwpsn	file "../Source/prod.c",line 4758,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4758| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4758| 
        MOVL      XAR0,#44              ; [CPU_] |4758| 
        ADD       AL,*-SP[58]           ; [CPU_] |4758| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4758| 
        MOV       *-SP[3],AL            ; [CPU_] |4758| 
        MOVB      AL,#1                 ; [CPU_] |4758| 
        ADD       AL,*-SP[57]           ; [CPU_] |4758| 
        MOV       *-SP[4],AL            ; [CPU_] |4758| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4758| 
        MOVL      XAR4,XAR1             ; [CPU_] |4758| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_sprintf")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4758| 
        ; call occurs [#_sprintf] ; [] |4758| 
	.dwpsn	file "../Source/prod.c",line 4759,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4758,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4759,column 5,is_stmt,isa 0
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4759| 
        ; call occurs [#_lcd_puts] ; [] |4759| 
	.dwpsn	file "../Source/prod.c",line 4760,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4760| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4760| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4760| 
        MOVL      XAR0,#58              ; [CPU_] |4760| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4760| 
        MOVB      XAR1,#36              ; [CPU_] |4760| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4760| 
        ADDL      ACC,XAR6              ; [CPU_] |4760| 
        MOVL      XAR4,ACC              ; [CPU_] |4760| 
        MOVL      XAR0,#44              ; [CPU_] |4760| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4760| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4760| 
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_sprintf")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4760| 
        ; call occurs [#_sprintf] ; [] |4760| 
        MOVL      XAR0,#44              ; [CPU_] |4760| 
	.dwpsn	file "../Source/prod.c",line 4761,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4761| 
	.dwpsn	file "../Source/prod.c",line 4760,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4760| 
	.dwpsn	file "../Source/prod.c",line 4761,column 5,is_stmt,isa 0
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4761| 
        ; call occurs [#_lcd_puts] ; [] |4761| 
	.dwpsn	file "../Source/prod.c",line 4763,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4763| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4763| 
        MOVB      XAR1,#36              ; [CPU_] |4763| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4763| 
        CMPB      AL,#1                 ; [CPU_] |4763| 
        B         $C$L92,EQ             ; [CPU_] |4763| 
        ; branchcc occurs ; [] |4763| 
        CMPB      AL,#2                 ; [CPU_] |4763| 
        B         $C$L105,EQ            ; [CPU_] |4763| 
        ; branchcc occurs ; [] |4763| 
        CMPB      AL,#3                 ; [CPU_] |4763| 
        B         $C$L96,EQ             ; [CPU_] |4763| 
        ; branchcc occurs ; [] |4763| 
        B         $C$L112,UNC           ; [CPU_] |4763| 
        ; branch occurs ; [] |4763| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4767| 
        MOVB      AL,#60                ; [CPU_] |4767| 
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4767| 
        ; call occurs [#_lcd_puts] ; [] |4767| 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4769| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4770,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4770| 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4771| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4770,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4770| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4771| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4771| 
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4771| 
        SUBB      ACC,#1                ; [CPU_] |4771| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4771| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4771| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4771| 
        ; branchcc occurs ; [] |4771| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4772,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4772| 
        ; branch occurs ; [] |4772| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4773,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4773| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_delay_us")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4773| 
        ; call occurs [#_delay_us] ; [] |4773| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4772,column 14,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4772| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4772| 
        CMPB      AL,#0                 ; [CPU_] |4772| 
        B         $C$L93,EQ             ; [CPU_] |4772| 
        ; branchcc occurs ; [] |4772| 
	.dwpsn	file "../Source/prod.c",line 4776,column 7,is_stmt,isa 0
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4776| 
        ; call occurs [#_ad7738_getraw] ; [] |4776| 
	.dwpsn	file "../Source/prod.c",line 4777,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4777| 
        ADDL      XAR4,ACC              ; [CPU_] |4777| 
        MOVL      XAR0,#28              ; [CPU_] |4777| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4777| 
        MOVL      XAR0,#28              ; [CPU_] |4777| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4777| 
        ASR64     ACC:P,16              ; [CPU_] |4777| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4777| 
        MOVL      XAR0,#28              ; [CPU_] |4777| 
        ASR64     ACC:P,16              ; [CPU_] |4777| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4777| 
        MOVL      XAR0,#28              ; [CPU_] |4777| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4777| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4777| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4777| 
        MOVL      *-SP[32],P            ; [CPU_] |4777| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4777| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4771| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4771| 
        MOVB      ACC,#0                ; [CPU_] |4771| 
        SUBB      ACC,#1                ; [CPU_] |4771| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4771| 
        B         $C$L94,NEQ            ; [CPU_] |4771| 
        ; branchcc occurs ; [] |4771| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4779,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4779| 
	.dwpsn	file "../Source/prod.c",line 4783,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4783| 
        ; branch occurs ; [] |4783| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4832,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4832| 
        MOVB      AL,#60                ; [CPU_] |4832| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4832| 
        ; call occurs [#_lcd_puts] ; [] |4832| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4834,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4834| 
        MOV       *-SP[60],AL           ; [CPU_] |4834| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4835,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4835| 
        B         $C$L99,LEQ            ; [CPU_] |4835| 
        ; branchcc occurs ; [] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4837| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4837| 
        ; call occurs [#_shunt_switch] ; [] |4837| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4839,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4839| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_delay_us")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4839| 
        ; call occurs [#_delay_us] ; [] |4839| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4838| 
        MOVZ      AR0,AR6               ; [CPU_] |4838| 
        MOV       *-SP[47],AR6          ; [CPU_] |4838| 
        CMP       AR0,#-1               ; [CPU_] |4838| 
        B         $C$L98,NEQ            ; [CPU_] |4838| 
        ; branchcc occurs ; [] |4838| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4842,column 8,is_stmt,isa 0
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_maf_rst")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4842| 
        ; call occurs [#_maf_rst] ; [] |4842| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4844,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4844| 
        SPM       #0                    ; [CPU_] 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_delay_us")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4844| 
        ; call occurs [#_delay_us] ; [] |4844| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4847,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4847| 
	.dwpsn	file "../Source/prod.c",line 4848,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4848| 
	.dwpsn	file "../Source/prod.c",line 4847,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4847| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4847| 
	.dwpsn	file "../Source/prod.c",line 4849,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4848,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4848| 
	.dwpsn	file "../Source/prod.c",line 4849,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4849| 
        MOVB      ACC,#0                ; [CPU_] |4849| 
        SUBB      ACC,#1                ; [CPU_] |4849| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4849| 
        B         $C$L101,EQ            ; [CPU_] |4849| 
        ; branchcc occurs ; [] |4849| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4850,column 15,is_stmt,isa 0
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4850| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4850| 
        CMPB      AL,#0                 ; [CPU_] |4850| 
        B         $C$L104,EQ            ; [CPU_] |4850| 
        ; branchcc occurs ; [] |4850| 
	.dwpsn	file "../Source/prod.c",line 4854,column 8,is_stmt,isa 0
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4854| 
        ; call occurs [#_ad7738_getraw] ; [] |4854| 
	.dwpsn	file "../Source/prod.c",line 4855,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4855| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4855| 
        ADDL      XAR4,ACC              ; [CPU_] |4855| 
        MOVL      XAR0,#26              ; [CPU_] |4855| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4855| 
        MOVL      XAR0,#26              ; [CPU_] |4855| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4855| 
        ASR64     ACC:P,16              ; [CPU_] |4855| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4855| 
        MOVL      XAR0,#26              ; [CPU_] |4855| 
        ASR64     ACC:P,16              ; [CPU_] |4855| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4855| 
        MOVL      XAR0,#26              ; [CPU_] |4855| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4855| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4855| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4855| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4855| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4855| 
	.dwpsn	file "../Source/prod.c",line 4849,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4849| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4849| 
        MOVB      ACC,#0                ; [CPU_] |4849| 
        SUBB      ACC,#1                ; [CPU_] |4849| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4849| 
        B         $C$L100,NEQ           ; [CPU_] |4849| 
        ; branchcc occurs ; [] |4849| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4834,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4834| 
        ADDB      XAR1,#4               ; [CPU_] |4834| 
        MOV       AL,*-SP[60]           ; [CPU_] |4834| 
        CMPB      AL,#2                 ; [CPU_] |4834| 
        B         $C$L97,LT             ; [CPU_] |4834| 
        ; branchcc occurs ; [] |4834| 
	.dwpsn	file "../Source/prod.c",line 4859,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4859| 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4859| 
        ; call occurs [#_shunt_switch] ; [] |4859| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4861,column 6,is_stmt,isa 0
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_maf_rst")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4861| 
        ; call occurs [#_maf_rst] ; [] |4861| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4864,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4864| 
        MOV       AH,#17948             ; [CPU_] |4864| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4864| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4864| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4864| 
        ; call occurs [#FS$$MPY] ; [] |4864| 
        MOVL      XAR1,ACC              ; [CPU_] |4864| 
        MOVL      P,*-SP[28]            ; [CPU_] |4864| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4864| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4864| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4864| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4864| 
        ; call occurs [#LL$$TOFS] ; [] |4864| 
        MOVL      XAR0,#88              ; [CPU_] |4864| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4864| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4864| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4864| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4864| 
        ; call occurs [#FS$$MPY] ; [] |4864| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4864| 
        MOVL      ACC,XAR1              ; [CPU_] |4864| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4864| 
        ; call occurs [#FS$$DIV] ; [] |4864| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4864| 
        MOVB      XAR0,#96              ; [CPU_] |4864| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4864| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4866,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4866| 
        MOVL      XAR0,#52              ; [CPU_] |4866| 
        ADDB      ACC,#96               ; [CPU_] |4866| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4866| 
        MOVL      XAR0,#88              ; [CPU_] |4866| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4866| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4866| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4866| 
        ; call occurs [#FS$$NEG] ; [] |4866| 
        MOVB      XAR0,#96              ; [CPU_] |4866| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4866| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4866| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4866| 
        ; call occurs [#FS$$MPY] ; [] |4866| 
        MOVL      XAR1,ACC              ; [CPU_] |4866| 
        MOVL      P,*-SP[32]            ; [CPU_] |4866| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4866| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4866| 
        ; call occurs [#LL$$TOFS] ; [] |4866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4866| 
        MOVL      ACC,XAR1              ; [CPU_] |4866| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4866| 
        ; call occurs [#FS$$MPY] ; [] |4866| 
        MOVL      XAR6,ACC              ; [CPU_] |4866| 
        MOV       AL,#16384             ; [CPU_] |4866| 
        MOV       AH,#17948             ; [CPU_] |4866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4866| 
        MOVL      ACC,XAR6              ; [CPU_] |4866| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4866| 
        ; call occurs [#FS$$DIV] ; [] |4866| 
        MOVL      XAR0,#36              ; [CPU_] |4866| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4866| 
        MOVB      XAR1,#118             ; [CPU_] |4866| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4866| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4869,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4869| 
	.dwpsn	file "../Source/prod.c",line 4870,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4870| 
        ; branch occurs ; [] |4870| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4851,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4851| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("_delay_us")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4851| 
        ; call occurs [#_delay_us] ; [] |4851| 
	.dwpsn	file "../Source/prod.c",line 4850,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4850| 
        ; branch occurs ; [] |4850| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4787,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4787| 
	.dwpsn	file "../Source/prod.c",line 4788,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4788| 
	.dwpsn	file "../Source/prod.c",line 4787,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4787| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4787| 
	.dwpsn	file "../Source/prod.c",line 4788,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4788| 
        MOVZ      AR5,AR5               ; [CPU_] |4788| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4790,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4790| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4790| 
        MOV       *XAR5++,AL            ; [CPU_] |4790| 
	.dwpsn	file "../Source/prod.c",line 4791,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4791| 
	.dwpsn	file "../Source/prod.c",line 4789,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4789| 
        ; branchcc occurs ; [] |4789| 
	.dwpsn	file "../Source/prod.c",line 4794,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4794| 
        MOVB      XAR0,#46              ; [CPU_] |4794| 
        MOV       AL,*-SP[47]           ; [CPU_] |4794| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4794| 
        B         $C$L112,HIS           ; [CPU_] |4794| 
        ; branchcc occurs ; [] |4794| 
        MOVL      XAR0,#36              ; [CPU_] |4794| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4794| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4794| 
        ADDL      ACC,XAR6              ; [CPU_] |4794| 
        ADDB      ACC,#48               ; [CPU_] |4794| 
        MOVL      XAR1,ACC              ; [CPU_] |4794| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4794| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4794| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4794| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4794| 
        ; call occurs [#FS$$CMP] ; [] |4794| 
        CMPB      AL,#0                 ; [CPU_] |4794| 
        B         $C$L112,NEQ           ; [CPU_] |4794| 
        ; branchcc occurs ; [] |4794| 
	.dwpsn	file "../Source/prod.c",line 4798,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4798| 
        MOVB      AL,#1                 ; [CPU_] |4798| 
        MOVL      XAR0,#44              ; [CPU_] |4798| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4798| 
        ADD       AL,*-SP[47]           ; [CPU_] |4798| 
        MOV       *-SP[3],AL            ; [CPU_] |4798| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4798| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("_sprintf")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4798| 
        ; call occurs [#_sprintf] ; [] |4798| 
        MOVL      XAR0,#44              ; [CPU_] |4798| 
	.dwpsn	file "../Source/prod.c",line 4799,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4799| 
	.dwpsn	file "../Source/prod.c",line 4798,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4798| 
	.dwpsn	file "../Source/prod.c",line 4799,column 6,is_stmt,isa 0
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4799| 
        ; call occurs [#_lcd_puts] ; [] |4799| 
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4801| 
	.dwpsn	file "../Source/prod.c",line 4802,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4802| 
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4801| 
	.dwpsn	file "../Source/prod.c",line 4802,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4802| 
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4801| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4801| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4803| 
        MOVB      ACC,#0                ; [CPU_] |4803| 
        SUBB      ACC,#1                ; [CPU_] |4803| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4803| 
        B         $C$L108,EQ            ; [CPU_] |4803| 
        ; branchcc occurs ; [] |4803| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4804,column 14,is_stmt,isa 0
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4804| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4804| 
        CMPB      AL,#0                 ; [CPU_] |4804| 
        B         $C$L111,EQ            ; [CPU_] |4804| 
        ; branchcc occurs ; [] |4804| 
	.dwpsn	file "../Source/prod.c",line 4808,column 7,is_stmt,isa 0
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4808| 
        ; call occurs [#_ad7738_getraw] ; [] |4808| 
	.dwpsn	file "../Source/prod.c",line 4809,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4809| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4809| 
        ADDL      XAR4,ACC              ; [CPU_] |4809| 
        MOVL      XAR0,#24              ; [CPU_] |4809| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4809| 
        MOVL      XAR0,#24              ; [CPU_] |4809| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4809| 
        ASR64     ACC:P,16              ; [CPU_] |4809| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4809| 
        MOVL      XAR0,#24              ; [CPU_] |4809| 
        ASR64     ACC:P,16              ; [CPU_] |4809| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4809| 
        MOVL      XAR0,#24              ; [CPU_] |4809| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4809| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4809| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4809| 
        MOVL      *-SP[32],P            ; [CPU_] |4809| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4809| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4803| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4803| 
        MOVB      ACC,#0                ; [CPU_] |4803| 
        SUBB      ACC,#1                ; [CPU_] |4803| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4803| 
        B         $C$L107,NEQ           ; [CPU_] |4803| 
        ; branchcc occurs ; [] |4803| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4811,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4811| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4811| 
        MOV       *-SP[2],#0            ; [CPU_] |4811| 
        MOV       *-SP[1],#0            ; [CPU_] |4811| 
        MOVL      P,*-SP[32]            ; [CPU_] |4811| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4811| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4811| 
        ; call occurs [#LL$$DIV] ; [] |4811| 
        ADDB      XAR1,#24              ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4813,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4813| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4813| 
	.dwpsn	file "../Source/prod.c",line 4811,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4813,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4813| 
        MOV       AL,*-SP[47]           ; [CPU_] |4813| 
        SUB       AL,AR6                ; [CPU_] |4813| 
        MOVZ      AR7,AL                ; [CPU_] |4813| 
        MOVL      XAR4,#65535           ; [CPU_U] |4813| 
        MOVL      ACC,XAR4              ; [CPU_] |4813| 
        CMPL      ACC,XAR7              ; [CPU_] |4813| 
        B         $C$L103,NEQ           ; [CPU_] |4813| 
        ; branchcc occurs ; [] |4813| 
	.dwpsn	file "../Source/prod.c",line 4816,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4816| 
        B         $C$L110,UNC           ; [CPU_] |4816| 
        ; branch occurs ; [] |4816| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4817,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4817| 
        MOVB      AL,#10                ; [CPU_] |4817| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4817| 
        MOV       T,*-SP[58]            ; [CPU_] |4817| 
        MPYU      ACC,T,AL              ; [CPU_] |4817| 
        MOVL      XAR0,#88              ; [CPU_] |4817| 
        ADDL      ACC,XAR6              ; [CPU_] |4817| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4817| 
        MOVL      XAR0,#36              ; [CPU_] |4817| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4817| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4817| 
        MOV       ACC,AL << 1           ; [CPU_] |4817| 
        ADDL      ACC,XAR6              ; [CPU_] |4817| 
        MOVL      XAR3,ACC              ; [CPU_] |4817| 
        MOVB      XAR0,#48              ; [CPU_] |4817| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4817| 
        MOVB      XAR0,#50              ; [CPU_] |4817| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4817| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4817| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4817| 
        ; call occurs [#FS$$SUB] ; [] |4817| 
        MOVL      XAR0,#42              ; [CPU_] |4817| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4817| 
        MOVB      XAR0,#74              ; [CPU_] |4817| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4817| 
        MOVB      XAR0,#72              ; [CPU_] |4817| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4817| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4817| 
        ; call occurs [#L$$TOFS] ; [] |4817| 
        MOVL      XAR0,#42              ; [CPU_] |4817| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4817| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4817| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4817| 
        ; call occurs [#FS$$DIV] ; [] |4817| 
        MOVL      XAR0,#88              ; [CPU_] |4817| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4817| 
        MOVB      XAR1,#44              ; [CPU_] |4817| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4817| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4817| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4817| 
        ; call occurs [#FS$$DIV] ; [] |4817| 
        MOVB      XAR0,#96              ; [CPU_] |4817| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4817| 
	.dwpsn	file "../Source/prod.c",line 4821,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4821| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4821| 
        MOVB      XAR1,#44              ; [CPU_] |4821| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4821| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4821| 
        ; call occurs [#FS$$MPY] ; [] |4821| 
        MOVL      XAR0,#88              ; [CPU_] |4821| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4821| 
        MOVB      XAR0,#72              ; [CPU_] |4821| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4821| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4821| 
        ; call occurs [#L$$TOFS] ; [] |4821| 
        MOVL      XAR0,#88              ; [CPU_] |4821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4821| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4821| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4821| 
        ; call occurs [#FS$$MPY] ; [] |4821| 
        MOVB      XAR0,#48              ; [CPU_] |4821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4821| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4821| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4821| 
        ; call occurs [#FS$$SUB] ; [] |4821| 
        MOVB      XAR0,#118             ; [CPU_] |4821| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4821| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4816,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4816| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4816,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4816| 
        ADDB      AL,#-1                ; [CPU_] |4816| 
        CMP       AL,*-SP[47]           ; [CPU_] |4816| 
        B         $C$L109,GT            ; [CPU_] |4816| 
        ; branchcc occurs ; [] |4816| 
	.dwpsn	file "../Source/prod.c",line 4828,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4828| 
        ; branch occurs ; [] |4828| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4805,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4805| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("_delay_us")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4805| 
        ; call occurs [#_delay_us] ; [] |4805| 
	.dwpsn	file "../Source/prod.c",line 4804,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4804| 
        ; branch occurs ; [] |4804| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4795,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4795| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4877,column 5,is_stmt,isa 0
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4877| 
        ; call occurs [#_lcd_clear] ; [] |4877| 
	.dwpsn	file "../Source/prod.c",line 4878,column 5,is_stmt,isa 0
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("_update_units")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4878| 
        ; call occurs [#_update_units] ; [] |4878| 
        MOV       AL,*-SP[47]           ; [CPU_] |4878| 
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4881| 
        ; branchcc occurs ; [] |4881| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4883,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4883| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4884,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4884| 
	.dwpsn	file "../Source/prod.c",line 4883,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4884,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4884| 
	.dwpsn	file "../Source/prod.c",line 4883,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4884,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4884| 
	.dwpsn	file "../Source/prod.c",line 4883,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4883| 
        B         $C$L114,HI            ; [CPU_] |4883| 
        ; branchcc occurs ; [] |4883| 
	.dwpsn	file "../Source/prod.c",line 4886,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4886| 
	.dwpsn	file "../Source/prod.c",line 4887,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4887| 
        ; branch occurs ; [] |4887| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4597| 
        B         $C$L320,LO            ; [CPU_] |4597| 
        ; branchcc occurs ; [] |4597| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4602| 
        MOV       *-SP[58],AL           ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4603,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4603| 
        MOV       *-SP[57],AL           ; [CPU_] |4603| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4604| 
        MOV       AL,*-SP[58]           ; [CPU_] |4604| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4604| 
        CMPB      AL,#4                 ; [CPU_] |4604| 
        B         $C$L320,HIS           ; [CPU_] |4604| 
        ; branchcc occurs ; [] |4604| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4604| 
        B         $C$L320,HIS           ; [CPU_] |4604| 
        ; branchcc occurs ; [] |4604| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4610,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4610| 
        MOVL      ACC,XAR4              ; [CPU_] |4610| 
        ADDB      ACC,#4                ; [CPU_] |4610| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4610| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4610| 
        CMPB      AL,#16                ; [CPU_] |4610| 
        B         $C$L320,HIS           ; [CPU_] |4610| 
        ; branchcc occurs ; [] |4610| 
	.dwpsn	file "../Source/prod.c",line 4614,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4614| 
        MOVL      XAR0,#64              ; [CPU_] |4614| 
        CMPB      AL,#0                 ; [CPU_] |4614| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4614| 
        B         $C$L116,LEQ           ; [CPU_] |4614| 
        ; branchcc occurs ; [] |4614| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4614| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4614| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4614| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4614| 
        MOVL      XAR0,ACC              ; [CPU_] |4614| 
	.dwpsn	file "../Source/prod.c",line 4615,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4615| 
        ADD       AL,AR4                ; [CPU_] |4615| 
        MOVZ      AR6,AL                ; [CPU_] |4615| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4615| 
	.dwpsn	file "../Source/prod.c",line 4614,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4614| 
        ; branch occurs ; [] |4614| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4609,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4609| 
	.dwpsn	file "../Source/prod.c",line 4614,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4614| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4617,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4617| 
        MOVL      XAR0,#86              ; [CPU_] |4617| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4617| 
	.dwpsn	file "../Source/prod.c",line 4619,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4619| 
        MOVL      XAR4,ACC              ; [CPU_] |4619| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4619| 
        CMPB      AL,#16                ; [CPU_] |4619| 
        B         $C$L320,HIS           ; [CPU_] |4619| 
        ; branchcc occurs ; [] |4619| 
        ADDB      XAR4,#1               ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4624,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4624| 
	.dwpsn	file "../Source/prod.c",line 4619,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4619| 
        MOVL      P,XAR4                ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4624,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4624| 
        ; branchcc occurs ; [] |4624| 
        MOVZ      AR5,AL                ; [CPU_] |4624| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4625,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4625| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4625| 
        MOV       *XAR4++,AL            ; [CPU_] |4625| 
        ADDB      XAR7,#1               ; [CPU_] |4625| 
        MOVL      P,XAR7                ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4624,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4624| 
        ; branchcc occurs ; [] |4624| 
        B         $C$L120,UNC           ; [CPU_] |4624| 
        ; branch occurs ; [] |4624| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4624,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4624| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4627| 
        ADD       ACC,AR5               ; [CPU_] |4627| 
        MOVL      XAR4,ACC              ; [CPU_] |4627| 
        MOVB      XAR0,#16              ; [CPU_] |4627| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4629| 
        MOV       AL,*XAR7              ; [CPU_] |4629| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4629| 
        ADDB      XAR7,#1               ; [CPU_] |4629| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4629| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4629| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4633,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4633| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4633| 
	.dwpsn	file "../Source/prod.c",line 4634,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4634| 
	.dwpsn	file "../Source/prod.c",line 4633,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4633| 
        MOV       *XAR5++,AL            ; [CPU_] |4633| 
	.dwpsn	file "../Source/prod.c",line 4634,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4634| 
        MOVL      P,XAR7                ; [CPU_] |4634| 
	.dwpsn	file "../Source/prod.c",line 4632,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4632| 
        ; branchcc occurs ; [] |4632| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4640,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4640| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4640| 
	.dwpsn	file "../Source/prod.c",line 4641,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4641| 
	.dwpsn	file "../Source/prod.c",line 4640,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4640| 
        MOV       *XAR0++,AL            ; [CPU_] |4640| 
	.dwpsn	file "../Source/prod.c",line 4641,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4641| 
        MOVL      P,XAR5                ; [CPU_] |4641| 
	.dwpsn	file "../Source/prod.c",line 4639,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4639| 
        ; branchcc occurs ; [] |4639| 
	.dwpsn	file "../Source/prod.c",line 4644,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4644| 
        MOVB      XAR0,#40              ; [CPU_] |4644| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4644,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4644| 
        MOVB      XAR0,#142             ; [CPU_] |4644| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4644,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4644| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4646| 
        MOV       AL,*XAR7              ; [CPU_] |4646| 
        ADDB      XAR7,#1               ; [CPU_] |4646| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4647,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4647| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4647,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4647| 
        CMPB      AL,#6                 ; [CPU_] |4647| 
        B         $C$L123,GT            ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
        CMPB      AL,#6                 ; [CPU_] |4647| 
        B         $C$L126,EQ            ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
        CMPB      AL,#1                 ; [CPU_] |4647| 
        B         $C$L129,LOS           ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
        MOV       AH,AL                 ; [CPU_] |4647| 
        ADDB      AH,#-2                ; [CPU_] |4647| 
        CMPB      AH,#2                 ; [CPU_] |4647| 
        B         $C$L128,LOS           ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
        CMPB      AL,#5                 ; [CPU_] |4647| 
        B         $C$L127,EQ            ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
        B         $C$L124,UNC           ; [CPU_] |4647| 
        ; branch occurs ; [] |4647| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4647| 
        ADDB      AH,#-7                ; [CPU_] |4647| 
        CMPB      AH,#1                 ; [CPU_] |4647| 
        B         $C$L125,LOS           ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
        CMPB      AL,#15                ; [CPU_] |4647| 
        B         $C$L125,EQ            ; [CPU_] |4647| 
        ; branchcc occurs ; [] |4647| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4669,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4669| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4670,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4670| 
        ; branch occurs ; [] |4670| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4666,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4667,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4667| 
        ; branch occurs ; [] |4667| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4661,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4662,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4662| 
        ; branch occurs ; [] |4662| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4658,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4658| 
	.dwpsn	file "../Source/prod.c",line 4659,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4659| 
        ; branch occurs ; [] |4659| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4655,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4655| 
	.dwpsn	file "../Source/prod.c",line 4656,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4656| 
        ; branch occurs ; [] |4656| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4650,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4650| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4672,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4672| 
        MOVB      XAR0,#43              ; [CPU_] |4672| 
        ADDB      XAR7,#42              ; [CPU_] |4672| 
        MOV       AL,*XAR7              ; [CPU_] |4672| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4672| 
	.dwpsn	file "../Source/prod.c",line 4673,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4673| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4673| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4673| 
	.dwpsn	file "../Source/prod.c",line 4675,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4675| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4675| 
        CMPB      AL,#1                 ; [CPU_] |4675| 
        B         $C$L137,EQ            ; [CPU_] |4675| 
        ; branchcc occurs ; [] |4675| 
        CMPB      AL,#2                 ; [CPU_] |4675| 
        B         $C$L131,EQ            ; [CPU_] |4675| 
        ; branchcc occurs ; [] |4675| 
        CMPB      AL,#3                 ; [CPU_] |4675| 
        B         $C$L135,EQ            ; [CPU_] |4675| 
        ; branchcc occurs ; [] |4675| 
        B         $C$L134,UNC           ; [CPU_] |4675| 
        ; branch occurs ; [] |4675| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4692| 
        MOVB      XAR0,#46              ; [CPU_] |4692| 
        MOV       AL,*XAR7              ; [CPU_] |4692| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4693,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4693| 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4693,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4693| 
        CMPB      AL,#12                ; [CPU_] |4693| 
        B         $C$L134,GT            ; [CPU_] |4693| 
        ; branchcc occurs ; [] |4693| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4698,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4698| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4692| 
        MOVL      P,XAR6                ; [CPU_] |4692| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4706,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4706| 
        B         $C$L140,LEQ           ; [CPU_] |4706| 
        ; branchcc occurs ; [] |4706| 
	.dwpsn	file "../Source/prod.c",line 4699,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4699| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4699| 
        ADDB      ACC,#48               ; [CPU_] |4699| 
        MOVL      XAR0,ACC              ; [CPU_] |4699| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4701,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4701| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4701| 
	.dwpsn	file "../Source/prod.c",line 4702,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4702| 
	.dwpsn	file "../Source/prod.c",line 4701,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4701| 
        MOV       *XAR0++,AL            ; [CPU_] |4701| 
	.dwpsn	file "../Source/prod.c",line 4702,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4702| 
        MOVL      P,XAR5                ; [CPU_] |4702| 
	.dwpsn	file "../Source/prod.c",line 4700,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4700| 
        ; branchcc occurs ; [] |4700| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4698,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4698| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4698| 
        ; branch occurs ; [] |4698| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4724,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4725| 
        ; branch occurs ; [] |4725| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4710,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4710| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4710| 
        MOVZ      AR0,AR5               ; [CPU_] |4710| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4712,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4712| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4713| 
	.dwpsn	file "../Source/prod.c",line 4712,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4712| 
        MOV       *XAR0++,AL            ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4713| 
        MOVL      P,XAR5                ; [CPU_] |4713| 
	.dwpsn	file "../Source/prod.c",line 4711,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4711| 
        ; branchcc occurs ; [] |4711| 
	.dwpsn	file "../Source/prod.c",line 4716,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4716| 
        MOV       AH,#0                 ; [CPU_] |4716| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4716| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4716| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4716| 
        ; call occurs [#FS$$CMP] ; [] |4716| 
        CMPB      AL,#0                 ; [CPU_] |4716| 
        B         $C$L139,NEQ           ; [CPU_] |4716| 
        ; branchcc occurs ; [] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4717| 
        MOV       AH,#16314             ; [CPU_] |4717| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4717| 
        B         $C$L139,UNC           ; [CPU_] |4717| 
        ; branch occurs ; [] |4717| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4680,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4680| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4680,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4680| 
        MOV       *XAR0++,AL            ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4681| 
        MOVL      P,XAR5                ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4679,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4679| 
        ; branchcc occurs ; [] |4679| 
	.dwpsn	file "../Source/prod.c",line 4684,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4684| 
        MOVL      XAR0,#88              ; [CPU_] |4684| 
        MOVL      ACC,XAR1              ; [CPU_] |4684| 
        ADDB      ACC,#96               ; [CPU_] |4684| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4684| 
        MOVL      XAR0,#52              ; [CPU_] |4684| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4684| 
        MOV       AL,#0                 ; [CPU_] |4684| 
        MOV       AH,#0                 ; [CPU_] |4684| 
        MOVB      XAR0,#96              ; [CPU_] |4684| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4684| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4684| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4684| 
        ; call occurs [#FS$$CMP] ; [] |4684| 
        CMPB      AL,#0                 ; [CPU_] |4684| 
        B         $C$L139,NEQ           ; [CPU_] |4684| 
        ; branchcc occurs ; [] |4684| 
	.dwpsn	file "../Source/prod.c",line 4685,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4685| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4685| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4685| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4687,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4687| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4728,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4728| 
        MOVB      XAR0,#36              ; [CPU_] |4728| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4728| 
        B         $C$L320,EQ            ; [CPU_] |4728| 
        ; branchcc occurs ; [] |4728| 
	.dwpsn	file "../Source/prod.c",line 4732,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4732| 
        MOV       AL,#0                 ; [CPU_] |4732| 
        MOV       AH,#0                 ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4733,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4733| 
	.dwpsn	file "../Source/prod.c",line 4732,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4733,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4733| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4733| 
	.dwpsn	file "../Source/prod.c",line 4734,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4734| 
        MOV       AL,#0                 ; [CPU_] |4734| 
        MOV       AH,#0                 ; [CPU_] |4734| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4735,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4735| 
        MOV       AL,*-SP[58]           ; [CPU_] |4735| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4735| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4737,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4737| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4737| 
        ; branch occurs ; [] |4737| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4738,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4738| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4738| 
        ADD       ACC,PL                ; [CPU_] |4738| 
        MOVL      XAR7,ACC              ; [CPU_] |4738| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4738| 
        ADD       ACC,PL                ; [CPU_] |4738| 
        MOVL      XAR4,ACC              ; [CPU_] |4738| 
	.dwpsn	file "../Source/prod.c",line 4737,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4737| 
	.dwpsn	file "../Source/prod.c",line 4738,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4738| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4738| 
        MOV       AL,PL                 ; [CPU_] |4738| 
        ADDB      AL,#1                 ; [CPU_] |4738| 
        MOV       *-SP[61],AL           ; [CPU_] |4738| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4737,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4737| 
        B         $C$L141,HI            ; [CPU_] |4737| 
        ; branchcc occurs ; [] |4737| 
        B         $C$L743,UNC           ; [CPU_] |4737| 
        ; branch occurs ; [] |4737| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4545,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4545| 
        B         $C$L320,LO            ; [CPU_] |4545| 
        ; branchcc occurs ; [] |4545| 
        MOVL      ACC,XAR4              ; [CPU_] |4545| 
        MOVL      XAR0,#66              ; [CPU_] |4545| 
        ADDB      ACC,#2                ; [CPU_] |4545| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4545| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4545| 
        B         $C$L320,LT            ; [CPU_] |4545| 
        ; branchcc occurs ; [] |4545| 
        MOVL      XAR5,XAR4             ; [CPU_] |4545| 
        MOVL      XAR0,#66              ; [CPU_] |4545| 
        CMPB      AL,#4                 ; [CPU_] |4545| 
        ADDB      XAR5,#2               ; [CPU_] |4545| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4545| 
        B         $C$L320,GEQ           ; [CPU_] |4545| 
        ; branchcc occurs ; [] |4545| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4545| 
        B         $C$L320,LT            ; [CPU_] |4545| 
        ; branchcc occurs ; [] |4545| 
        CMPB      AH,#2                 ; [CPU_] |4545| 
        B         $C$L320,GT            ; [CPU_] |4545| 
        ; branchcc occurs ; [] |4545| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4551,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4551| 
        ; branchcc occurs ; [] |4551| 
	.dwpsn	file "../Source/prod.c",line 4554,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4554| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4554| 
        MOVL      XAR0,#66              ; [CPU_] |4554| 
        MOVU      ACC,AL                ; [CPU_] |4554| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4554| 
        CMPL      ACC,XAR6              ; [CPU_] |4554| 
        B         $C$L145,EQ            ; [CPU_] |4554| 
        ; branchcc occurs ; [] |4554| 
        B         $C$L320,UNC           ; [CPU_] |4554| 
        ; branch occurs ; [] |4554| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4552,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4552| 
        MOVL      XAR0,#66              ; [CPU_] |4552| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4552| 
        MOV       *-SP[58],AL           ; [CPU_] |4552| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4552| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4560| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4559| 
        MOV       *-SP[47],AL           ; [CPU_] |4559| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4560| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4563| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4560| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4563| 
        MOVZ      AR4,AR4               ; [CPU_] |4563| 
	.dwpsn	file "../Source/prod.c",line 4561,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4561| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4563| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4563| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4565,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4565| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4565| 
	.dwpsn	file "../Source/prod.c",line 4566,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4566| 
        MOV       *XAR7++,AL            ; [CPU_] |4566| 
	.dwpsn	file "../Source/prod.c",line 4567,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4567| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4567| 
        MOV       *XAR4++,AL            ; [CPU_] |4567| 
	.dwpsn	file "../Source/prod.c",line 4568,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4568| 
        MOV       *XAR7++,AL            ; [CPU_] |4568| 
	.dwpsn	file "../Source/prod.c",line 4564,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4564| 
        ; branchcc occurs ; [] |4564| 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4571| 
        SUBB      XAR4,#24              ; [CPU_U] |4571| 
        MOVZ      AR4,AR4               ; [CPU_] |4571| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4571| 
        ADDL      XAR4,ACC              ; [CPU_] |4571| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4571| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4571| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4571| 
        MOVL      ACC,XAR1              ; [CPU_] |4571| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4571| 
        ; call occurs [#FS$$CMP] ; [] |4571| 
        CMPB      AL,#0                 ; [CPU_] |4571| 
        B         $C$L320,LT            ; [CPU_] |4571| 
        ; branchcc occurs ; [] |4571| 
        MOV       AL,#0                 ; [CPU_] |4571| 
        MOV       AH,#16672             ; [CPU_] |4571| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4571| 
        MOVL      ACC,XAR1              ; [CPU_] |4571| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4571| 
        ; call occurs [#FS$$CMP] ; [] |4571| 
        CMPB      AL,#0                 ; [CPU_] |4571| 
        B         $C$L320,GT            ; [CPU_] |4571| 
        ; branchcc occurs ; [] |4571| 
	.dwpsn	file "../Source/prod.c",line 4576,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4576| 
        MOV       AH,#16672             ; [CPU_] |4576| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4576| 
        MOVL      ACC,XAR1              ; [CPU_] |4576| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4576| 
        ; call occurs [#FS$$ADD] ; [] |4576| 
        MOVL      XAR6,ACC              ; [CPU_] |4576| 
        MOV       AL,#65024             ; [CPU_] |4576| 
        MOV       AH,#18175             ; [CPU_] |4576| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4576| 
        MOVL      ACC,XAR6              ; [CPU_] |4576| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4576| 
        ; call occurs [#FS$$MPY] ; [] |4576| 
        MOVL      XAR6,ACC              ; [CPU_] |4576| 
        MOV       AL,#0                 ; [CPU_] |4576| 
        MOV       AH,#16672             ; [CPU_] |4576| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4576| 
        MOVL      ACC,XAR6              ; [CPU_] |4576| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4576| 
        ; call occurs [#FS$$DIV] ; [] |4576| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4576| 
        ; call occurs [#FS$$TOLL] ; [] |4576| 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4577| 
	.dwpsn	file "../Source/prod.c",line 4576,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4576| 
	.dwpsn	file "../Source/prod.c",line 4567,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4567| 
	.dwpsn	file "../Source/prod.c",line 4576,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4576| 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4577| 
        CMP64     ACC:P                 ; [CPU_] |4577| 
        B         $C$L148,LEQ           ; [CPU_] |4577| 
        ; branchcc occurs ; [] |4577| 
	.dwpsn	file "../Source/prod.c",line 4579,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4579| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4579| 
        MOV       *-SP[2],#0            ; [CPU_] |4579| 
        MOV       *-SP[1],#0            ; [CPU_] |4579| 
        MOVL      P,*-SP[32]            ; [CPU_] |4579| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4579| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$653, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4579| 
        ; call occurs [#LL$$CMP] ; [] |4579| 
        CMPB      AL,#0                 ; [CPU_] |4579| 
        B         $C$L147,GEQ           ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
	.dwpsn	file "../Source/prod.c",line 4582,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4582| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4582| 
        MOVU      ACC,AR4               ; [CPU_] |4582| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4582| 
        MOVL      XAR1,ACC              ; [CPU_] |4582| 
        MOV       AL,*-SP[32]           ; [CPU_] |4582| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4582| 
        B         $C$L149,UNC           ; [CPU_] |4582| 
        ; branch occurs ; [] |4582| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4580,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4580| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4580| 
        MOVU      ACC,AR4               ; [CPU_] |4580| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4580| 
        MOVL      XAR1,ACC              ; [CPU_] |4580| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4581,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4581| 
        ; branch occurs ; [] |4581| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4578,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4578| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4578| 
        MOVU      ACC,AR4               ; [CPU_] |4578| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4578| 
        MOVL      XAR1,ACC              ; [CPU_] |4578| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4578| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4585,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4585| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4585| 
        ; call occurs [#_dac_setmode] ; [] |4585| 
	.dwpsn	file "../Source/prod.c",line 4587,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4587| 
        MOV       AH,*-SP[47]           ; [CPU_] |4587| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4587| 
        ; call occurs [#_mcbsp_xmit] ; [] |4587| 
	.dwpsn	file "../Source/prod.c",line 4588,column 5,is_stmt,isa 0
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("_latch_dac")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4588| 
        ; call occurs [#_latch_dac] ; [] |4588| 
	.dwpsn	file "../Source/prod.c",line 4590,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4590| 
        MOV       T,*-SP[59]            ; [CPU_] |4590| 
        LSL       AL,T                  ; [CPU_] |4590| 
        OR        *-SP[56],AL           ; [CPU_] |4590| 
	.dwpsn	file "../Source/prod.c",line 4593,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4593| 
        ; branch occurs ; [] |4593| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4499| 
        B         $C$L320,LO            ; [CPU_] |4499| 
        ; branchcc occurs ; [] |4499| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4499| 
        MOVL      XAR0,#66              ; [CPU_] |4499| 
        MOVL      ACC,XAR5              ; [CPU_] |4499| 
        ADDB      ACC,#2                ; [CPU_] |4499| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4499| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4499| 
        MOVZ      AR7,AR6               ; [CPU_] |4499| 
        MOV       AL,*-SP[58]           ; [CPU_] |4499| 
        MOVU      ACC,AL                ; [CPU_] |4499| 
        CMPL      ACC,XAR7              ; [CPU_] |4499| 
        B         $C$L320,NEQ           ; [CPU_] |4499| 
        ; branchcc occurs ; [] |4499| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4499| 
        CMPB      AL,#7                 ; [CPU_] |4499| 
        B         $C$L320,NEQ           ; [CPU_] |4499| 
        ; branchcc occurs ; [] |4499| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4505| 
        MOVL      ACC,XAR5              ; [CPU_] |4505| 
        MOVL      XAR0,#66              ; [CPU_] |4505| 
	.dwpsn	file "../Source/prod.c",line 4504,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4504| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4505| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4505| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4505| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4505| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4508,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4508| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4510,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4510| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4510| 
	.dwpsn	file "../Source/prod.c",line 4511,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4511| 
        MOV       *XAR7++,AL            ; [CPU_] |4511| 
	.dwpsn	file "../Source/prod.c",line 4512,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4512| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4512| 
        MOV       *XAR0++,AL            ; [CPU_] |4512| 
	.dwpsn	file "../Source/prod.c",line 4513,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4513| 
        MOV       *XAR7++,AL            ; [CPU_] |4513| 
	.dwpsn	file "../Source/prod.c",line 4509,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
	.dwpsn	file "../Source/prod.c",line 4507,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4507| 
	.dwpsn	file "../Source/prod.c",line 4513,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4513| 
	.dwpsn	file "../Source/prod.c",line 4507,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4507| 
        ; branchcc occurs ; [] |4507| 
	.dwpsn	file "../Source/prod.c",line 4520,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4520| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4520| 
        ; call occurs [#U$$TOFS] ; [] |4520| 
        MOVL      XAR1,ACC              ; [CPU_] |4520| 
        MOV       AL,*-SP[35]           ; [CPU_] |4520| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4520| 
        ; call occurs [#U$$TOFS] ; [] |4520| 
        MOVL      XAR0,#86              ; [CPU_] |4520| 
        MOV       T,*-SP[58]            ; [CPU_] |4520| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4520| 
        MOVL      XAR0,#40              ; [CPU_] |4520| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4520| 
        MOVB      AL,#12                ; [CPU_] |4520| 
        MPYU      ACC,T,AL              ; [CPU_] |4520| 
        MOVL      XAR0,#88              ; [CPU_] |4520| 
        ADDL      ACC,XAR6              ; [CPU_] |4520| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4520| 
        MOVL      XAR0,#86              ; [CPU_] |4520| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4520| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4520| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4520| 
        ; call occurs [#FS$$SUB] ; [] |4520| 
        MOVL      XAR0,#42              ; [CPU_] |4520| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4520| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4520| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4520| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4520| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4520| 
        ; call occurs [#FS$$SUB] ; [] |4520| 
        MOVL      XAR0,#42              ; [CPU_] |4520| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4520| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4520| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4520| 
        ; call occurs [#FS$$DIV] ; [] |4520| 
        MOVL      XAR0,#88              ; [CPU_] |4520| 
        MOVL      XAR6,ACC              ; [CPU_] |4520| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4520| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4520| 
        MOVL      XAR4,ACC              ; [CPU_] |4520| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4520| 
	.dwpsn	file "../Source/prod.c",line 4523,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4523| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4523| 
        ; call occurs [#U$$TOFS] ; [] |4523| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4523| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4523| 
        ; call occurs [#FS$$SUB] ; [] |4523| 
        MOVL      XAR1,ACC              ; [CPU_] |4523| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4523| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4523| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4523| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4523| 
        ; call occurs [#FS$$SUB] ; [] |4523| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4523| 
        MOVL      ACC,XAR1              ; [CPU_] |4523| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4523| 
        ; call occurs [#FS$$DIV] ; [] |4523| 
        MOVL      XAR0,#88              ; [CPU_] |4523| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4523| 
        MOVL      XAR6,ACC              ; [CPU_] |4523| 
        MOVL      ACC,XAR1              ; [CPU_] |4523| 
        ADD       ACC,#49 << 6          ; [CPU_] |4523| 
        MOVL      XAR4,ACC              ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4523,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4526| 
        MOVL      XAR4,ACC              ; [CPU_] |4526| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4526| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4526| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4526| 
        ; call occurs [#FS$$MPY] ; [] |4526| 
        MOVL      XAR0,#86              ; [CPU_] |4526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4526| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4526| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4526| 
        ; call occurs [#FS$$SUB] ; [] |4526| 
        MOVL      XAR6,ACC              ; [CPU_] |4526| 
        MOVL      ACC,XAR1              ; [CPU_] |4526| 
        ADD       ACC,#785 << 2         ; [CPU_] |4526| 
        MOVL      XAR4,ACC              ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4529| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4529| 
        ; call occurs [#_dac_setmode] ; [] |4529| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4535| 
        ; call occurs [#_ad7738_setcal] ; [] |4535| 
        MOVL      XAR0,#78              ; [CPU_] |4535| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4535| 
	.dwpsn	file "../Source/prod.c",line 4536,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4536| 
        MOVL      XAR1,ACC              ; [CPU_] |4536| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4536| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4536| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4536| 
	.dwpsn	file "../Source/prod.c",line 4537,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4537| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4537| 
        ; call occurs [#_ad7738_resetvall] ; [] |4537| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4530,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4530| 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4541| 
        ; branch occurs ; [] |4541| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4443,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4443| 
        B         $C$L320,LO            ; [CPU_] |4443| 
        ; branchcc occurs ; [] |4443| 
        MOVL      XAR0,#88              ; [CPU_] |4443| 
        MOVL      ACC,XAR4              ; [CPU_] |4443| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4443| 
        MOVL      XAR0,#66              ; [CPU_] |4443| 
        ADDB      ACC,#2                ; [CPU_] |4443| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4443| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4443| 
        MOV       AL,*-SP[58]           ; [CPU_] |4443| 
        MOVU      ACC,AL                ; [CPU_] |4443| 
        CMPL      ACC,XAR6              ; [CPU_] |4443| 
        B         $C$L320,NEQ           ; [CPU_] |4443| 
        ; branchcc occurs ; [] |4443| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4443| 
        B         $C$L320,LT            ; [CPU_] |4443| 
        ; branchcc occurs ; [] |4443| 
        CMPB      AL,#2                 ; [CPU_] |4443| 
        B         $C$L320,GEQ           ; [CPU_] |4443| 
        ; branchcc occurs ; [] |4443| 
	.dwpsn	file "../Source/prod.c",line 4449,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4449| 
	.dwpsn	file "../Source/prod.c",line 4450,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4450| 
	.dwpsn	file "../Source/prod.c",line 4449,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4449| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4449| 
	.dwpsn	file "../Source/prod.c",line 4450,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4450| 
        MOVZ      AR7,AR6               ; [CPU_] |4450| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4452,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4452| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4452| 
	.dwpsn	file "../Source/prod.c",line 4451,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4451| 
        ADDB      XAR4,#2               ; [CPU_] |4451| 
	.dwpsn	file "../Source/prod.c",line 4452,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4452| 
	.dwpsn	file "../Source/prod.c",line 4451,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4451| 
        ; branchcc occurs ; [] |4451| 
	.dwpsn	file "../Source/prod.c",line 4455,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4455| 
        SUBB      XAR4,#24              ; [CPU_U] |4455| 
        MOVZ      AR1,AR4               ; [CPU_] |4455| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4455| 
        ADDL      XAR1,ACC              ; [CPU_] |4455| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4455| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4455| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4455| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4455| 
        ; call occurs [#FS$$CMP] ; [] |4455| 
        CMPB      AL,#0                 ; [CPU_] |4455| 
        B         $C$L320,NEQ           ; [CPU_] |4455| 
        ; branchcc occurs ; [] |4455| 
	.dwpsn	file "../Source/prod.c",line 4459,column 5,is_stmt,isa 0
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4459| 
        ; call occurs [#_lcd_clear] ; [] |4459| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4460| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4460| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4460| 
        ; call occurs [#_lcd_puts] ; [] |4460| 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4461| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4461| 
        MOVL      XAR0,#44              ; [CPU_] |4461| 
        ADD       AL,*-SP[58]           ; [CPU_] |4461| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4461| 
        MOV       *-SP[3],AL            ; [CPU_] |4461| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4461| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_sprintf")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4461| 
        ; call occurs [#_sprintf] ; [] |4461| 
        MOVL      XAR0,#44              ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4462,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4462| 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4462,column 5,is_stmt,isa 0
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4462| 
        ; call occurs [#_lcd_puts] ; [] |4462| 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4463| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4463| 
        MOVL      XAR0,#44              ; [CPU_] |4463| 
        ADD       AL,*-SP[47]           ; [CPU_] |4463| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4463| 
        MOV       *-SP[3],AL            ; [CPU_] |4463| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4463| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4463| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4463| 
        MOVL      XAR4,XAR1             ; [CPU_] |4463| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_sprintf")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4463| 
        ; call occurs [#_sprintf] ; [] |4463| 
	.dwpsn	file "../Source/prod.c",line 4464,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4464| 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4464,column 5,is_stmt,isa 0
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4464| 
        ; call occurs [#_lcd_puts] ; [] |4464| 
	.dwpsn	file "../Source/prod.c",line 4465,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4465| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4465| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4465| 
        ; call occurs [#_lcd_puts] ; [] |4465| 
	.dwpsn	file "../Source/prod.c",line 4467,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4467| 
        SUBB      XAR4,#32              ; [CPU_U] |4467| 
        MOVZ      AR1,AR4               ; [CPU_] |4467| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4465,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4465| 
	.dwpsn	file "../Source/prod.c",line 4467,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4467| 
        ADDL      XAR1,ACC              ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4468,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4468| 
	.dwpsn	file "../Source/prod.c",line 4467,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4467| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4467| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4468,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4469| 
        MOVB      ACC,#0                ; [CPU_] |4469| 
        SUBB      ACC,#1                ; [CPU_] |4469| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4469| 
        B         $C$L157,EQ            ; [CPU_] |4469| 
        ; branchcc occurs ; [] |4469| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4470,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4470| 
        ; branch occurs ; [] |4470| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4471,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4471| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_delay_us")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4471| 
        ; call occurs [#_delay_us] ; [] |4471| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4470,column 13,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4470| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4470| 
        CMPB      AL,#0                 ; [CPU_] |4470| 
        B         $C$L155,EQ            ; [CPU_] |4470| 
        ; branchcc occurs ; [] |4470| 
	.dwpsn	file "../Source/prod.c",line 4473,column 6,is_stmt,isa 0
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4473| 
        ; call occurs [#_ad7738_getraw] ; [] |4473| 
	.dwpsn	file "../Source/prod.c",line 4474,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4474| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4474| 
        ADDL      XAR4,ACC              ; [CPU_] |4474| 
        MOVL      XAR0,#22              ; [CPU_] |4474| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4474| 
        MOVL      XAR0,#22              ; [CPU_] |4474| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4474| 
        ASR64     ACC:P,16              ; [CPU_] |4474| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4474| 
        MOVL      XAR0,#22              ; [CPU_] |4474| 
        ASR64     ACC:P,16              ; [CPU_] |4474| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4474| 
        MOVL      XAR0,#22              ; [CPU_] |4474| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4474| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4474| 
        MOVL      XAR0,#22              ; [CPU_] |4474| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4474| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4474| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4474| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4474| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4469| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4469| 
        MOVB      ACC,#0                ; [CPU_] |4469| 
        SUBB      ACC,#1                ; [CPU_] |4469| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4469| 
        B         $C$L156,NEQ           ; [CPU_] |4469| 
        ; branchcc occurs ; [] |4469| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4476,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4476| 
        B         $C$L158,NEQ           ; [CPU_] |4476| 
        ; branchcc occurs ; [] |4476| 
	.dwpsn	file "../Source/prod.c",line 4477,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4477| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4477| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4477| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4477| 
        ; call occurs [#FS$$SUB] ; [] |4477| 
        MOVL      XAR6,ACC              ; [CPU_] |4477| 
        MOV       AL,#16384             ; [CPU_] |4477| 
        MOV       AH,#17948             ; [CPU_] |4477| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4477| 
        MOVL      ACC,XAR6              ; [CPU_] |4477| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4477| 
        ; call occurs [#FS$$MPY] ; [] |4477| 
        MOVL      XAR1,ACC              ; [CPU_] |4477| 
        MOVL      P,*-SP[28]            ; [CPU_] |4477| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4477| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4477| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4477| 
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4477| 
        ; call occurs [#LL$$TOFS] ; [] |4477| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4477| 
        MOVL      ACC,XAR1              ; [CPU_] |4477| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4477| 
        ; call occurs [#FS$$DIV] ; [] |4477| 
        MOVL      XAR0,#40              ; [CPU_] |4477| 
        MOV       T,*-SP[58]            ; [CPU_] |4477| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4477| 
        MOVL      XAR6,ACC              ; [CPU_] |4477| 
        MOVB      AL,#10                ; [CPU_] |4477| 
        MPYU      ACC,T,AL              ; [CPU_] |4477| 
        ADDL      ACC,XAR7              ; [CPU_] |4477| 
        MOVL      XAR4,ACC              ; [CPU_] |4477| 
        MOVB      XAR0,#44              ; [CPU_] |4477| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4477| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4482,column 6,is_stmt,isa 0
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4482| 
        ; call occurs [#_ad7738_setcal] ; [] |4482| 
        MOVL      XAR0,#78              ; [CPU_] |4482| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4482| 
	.dwpsn	file "../Source/prod.c",line 4483,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4483| 
        MOVL      XAR1,ACC              ; [CPU_] |4483| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4483| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4483| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4483| 
	.dwpsn	file "../Source/prod.c",line 4484,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4484| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4484| 
        ; call occurs [#_ad7738_resetvall] ; [] |4484| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4480,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4480| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4487,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4487| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4488,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4487,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4487| 
	.dwpsn	file "../Source/prod.c",line 4488,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4487,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4487| 
	.dwpsn	file "../Source/prod.c",line 4488,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4487,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4487| 
        B         $C$L159,HI            ; [CPU_] |4487| 
        ; branchcc occurs ; [] |4487| 
	.dwpsn	file "../Source/prod.c",line 4490,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4490| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4493,column 5,is_stmt,isa 0
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4493| 
        ; call occurs [#_lcd_clear] ; [] |4493| 
	.dwpsn	file "../Source/prod.c",line 4494,column 5,is_stmt,isa 0
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_update_units")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4494| 
        ; call occurs [#_update_units] ; [] |4494| 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4495| 
        ; branch occurs ; [] |4495| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4418,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4418| 
        B         $C$L320,LO            ; [CPU_] |4418| 
        ; branchcc occurs ; [] |4418| 
        MOVL      ACC,XAR4              ; [CPU_] |4418| 
        MOVL      XAR0,#66              ; [CPU_] |4418| 
        ADDB      ACC,#2                ; [CPU_] |4418| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4418| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4418| 
        B         $C$L320,LT            ; [CPU_] |4418| 
        ; branchcc occurs ; [] |4418| 
        MOVL      XAR5,XAR4             ; [CPU_] |4418| 
        MOVL      XAR0,#66              ; [CPU_] |4418| 
        CMPB      AL,#4                 ; [CPU_] |4418| 
        ADDB      XAR5,#2               ; [CPU_] |4418| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4418| 
        B         $C$L320,GEQ           ; [CPU_] |4418| 
        ; branchcc occurs ; [] |4418| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4418| 
        CMPB      AH,#2                 ; [CPU_] |4418| 
        B         $C$L320,NEQ           ; [CPU_] |4418| 
        ; branchcc occurs ; [] |4418| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4425| 
        MOVL      XAR0,#66              ; [CPU_] |4425| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4424| 
	.dwpsn	file "../Source/prod.c",line 4428,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4428| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4425| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4425| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4425| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4426| 
        MOV       *-SP[61],#4           ; [CPU_] |4426| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4428,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4428| 
        ; branch occurs ; [] |4428| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4429,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4429| 
        SUBB      XAR4,#24              ; [CPU_U] |4429| 
        MOVZ      AR4,AR4               ; [CPU_] |4429| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4429| 
        MOVL      XAR0,#44              ; [CPU_] |4429| 
        ADDL      XAR4,ACC              ; [CPU_] |4429| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4429| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4431,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4431| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4431| 
	.dwpsn	file "../Source/prod.c",line 4432,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4432| 
        MOV       *XAR7++,AL            ; [CPU_] |4432| 
	.dwpsn	file "../Source/prod.c",line 4433,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4433| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4433| 
        MOV       *XAR4++,AL            ; [CPU_] |4433| 
	.dwpsn	file "../Source/prod.c",line 4434,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4434| 
        MOV       *XAR7++,AL            ; [CPU_] |4434| 
	.dwpsn	file "../Source/prod.c",line 4430,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4430| 
        ; branchcc occurs ; [] |4430| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4434,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4434| 
	.dwpsn	file "../Source/prod.c",line 4428,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4428| 
        MOV       PL,AL                 ; [CPU_] |4428| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4428,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4428| 
        MOV       AL,PL                 ; [CPU_] |4428| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4428| 
        B         $C$L161,LT            ; [CPU_] |4428| 
        ; branchcc occurs ; [] |4428| 
        B         $C$L743,UNC           ; [CPU_] |4428| 
        ; branch occurs ; [] |4428| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5373,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5373| 
        B         $C$L320,LO            ; [CPU_] |5373| 
        ; branchcc occurs ; [] |5373| 
	.dwpsn	file "../Source/prod.c",line 5378,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5378| 
        MOVL      XAR0,#66              ; [CPU_] |5378| 
        MOVL      ACC,XAR7              ; [CPU_] |5378| 
        ADDB      ACC,#2                ; [CPU_] |5378| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5378| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GT            ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVB      XAR0,#13              ; [CPU_] |5378| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GT            ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVB      XAR0,#24              ; [CPU_] |5378| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GT            ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVB      XAR0,#35              ; [CPU_] |5378| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GT            ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GEQ           ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVB      XAR0,#14              ; [CPU_] |5378| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GEQ           ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVB      XAR0,#25              ; [CPU_] |5378| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GEQ           ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVB      XAR0,#36              ; [CPU_] |5378| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5378| 
        CMPB      AL,#4                 ; [CPU_] |5378| 
        B         $C$L320,GEQ           ; [CPU_] |5378| 
        ; branchcc occurs ; [] |5378| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5386,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5386| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5386| 
        MOVL      XAR6,ACC              ; [CPU_] |5386| 
        MOV       AL,*XAR7              ; [CPU_] |5386| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5386| 
	.dwpsn	file "../Source/prod.c",line 5387,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5387| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5387| 
        MOVL      XAR6,ACC              ; [CPU_] |5387| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5387| 
        MOV       *XAR4++,AL            ; [CPU_] |5387| 
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5388| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5388| 
        MOVL      XAR6,ACC              ; [CPU_] |5388| 
	.dwpsn	file "../Source/prod.c",line 5386,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5386| 
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5388| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5388| 
	.dwpsn	file "../Source/prod.c",line 5389,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5389| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5389| 
        MOVL      XAR6,ACC              ; [CPU_] |5389| 
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5388| 
	.dwpsn	file "../Source/prod.c",line 5389,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5389| 
        MOV       *XAR4++,AL            ; [CPU_] |5389| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5390| 
        ANDB      AL,#0xfe              ; [CPU_] |5390| 
        MOVZ      AR0,AL                ; [CPU_] |5390| 
        MOVL      ACC,XAR5              ; [CPU_] |5390| 
        ADD       ACC,#199 << 4         ; [CPU_] |5390| 
        MOVL      XAR6,ACC              ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5391,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5391| 
        ADD       ACC,#199 << 4         ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5391,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5391| 
        MOVL      XAR0,P                ; [CPU_] |5391| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5391| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5391| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5395,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5395| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5395| 
	.dwpsn	file "../Source/prod.c",line 5396,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5396| 
        MOV       *XAR4++,AL            ; [CPU_] |5396| 
	.dwpsn	file "../Source/prod.c",line 5397,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5397| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5397| 
        MOV       *XAR0++,AL            ; [CPU_] |5397| 
	.dwpsn	file "../Source/prod.c",line 5398,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5398| 
        MOV       *XAR4++,AL            ; [CPU_] |5398| 
	.dwpsn	file "../Source/prod.c",line 5394,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5394| 
        ; branchcc occurs ; [] |5394| 
	.dwpsn	file "../Source/prod.c",line 5401,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5401| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5403,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5403| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5403| 
	.dwpsn	file "../Source/prod.c",line 5404,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5404| 
        MOV       *XAR4++,AL            ; [CPU_] |5404| 
	.dwpsn	file "../Source/prod.c",line 5405,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5405| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5405| 
        MOV       *XAR0++,AL            ; [CPU_] |5405| 
	.dwpsn	file "../Source/prod.c",line 5406,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5406| 
        MOV       *XAR4++,AL            ; [CPU_] |5406| 
	.dwpsn	file "../Source/prod.c",line 5402,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5402| 
        ; branchcc occurs ; [] |5402| 
	.dwpsn	file "../Source/prod.c",line 5385,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5385| 
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5388| 
        ADD       *-SP[61],#11          ; [CPU_] |5388| 
	.dwpsn	file "../Source/prod.c",line 5385,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5385| 
        ADDB      XAR1,#8               ; [CPU_] |5385| 
        ADDB      ACC,#8                ; [CPU_] |5385| 
        SUBB      XAR6,#1               ; [CPU_U] |5385| 
        MOVZ      AR3,AR6               ; [CPU_] |5385| 
        MOVL      P,ACC                 ; [CPU_] |5385| 
        CMP       AR6,#-1               ; [CPU_] |5385| 
        B         $C$L165,NEQ           ; [CPU_] |5385| 
        ; branchcc occurs ; [] |5385| 
        B         $C$L176,UNC           ; [CPU_] |5385| 
        ; branch occurs ; [] |5385| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5310,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5310| 
        B         $C$L320,LO            ; [CPU_] |5310| 
        ; branchcc occurs ; [] |5310| 
	.dwpsn	file "../Source/prod.c",line 5315,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5315| 
        MOVL      XAR0,#66              ; [CPU_] |5315| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5315| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L169,LEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        CMPB      AL,#7                 ; [CPU_] |5315| 
        B         $C$L320,NEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5315| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L170,LEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        CMPB      AL,#7                 ; [CPU_] |5315| 
        B         $C$L320,NEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5315| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L171,LEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        CMPB      AL,#7                 ; [CPU_] |5315| 
        B         $C$L320,NEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5315| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L172,LEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        CMPB      AL,#7                 ; [CPU_] |5315| 
        B         $C$L320,NEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5315| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L320,GEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        MOVB      XAR0,#13              ; [CPU_] |5315| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L320,GEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        MOVB      XAR0,#23              ; [CPU_] |5315| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L320,GEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        MOVB      XAR0,#33              ; [CPU_] |5315| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5315| 
        CMPB      AL,#4                 ; [CPU_] |5315| 
        B         $C$L320,GEQ           ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5326,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5326| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5326| 
        MOVL      XAR5,ACC              ; [CPU_] |5326| 
        MOV       AL,*XAR7              ; [CPU_] |5326| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5326| 
	.dwpsn	file "../Source/prod.c",line 5327,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5327| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5327| 
        MOVL      XAR5,ACC              ; [CPU_] |5327| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5327| 
        MOV       *XAR4++,AL            ; [CPU_] |5327| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5328| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5328| 
        MOVL      XAR5,ACC              ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5326,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5326| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5328| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5329,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5329| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5329| 
        MOVL      XAR5,ACC              ; [CPU_] |5329| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5329,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5329| 
        MOVL      XAR5,P                ; [CPU_] |5329| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5329| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5340,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5340| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5340| 
	.dwpsn	file "../Source/prod.c",line 5341,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5341| 
        MOV       *XAR4++,AL            ; [CPU_] |5341| 
	.dwpsn	file "../Source/prod.c",line 5342,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5342| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5342| 
        MOV       *XAR5++,AL            ; [CPU_] |5342| 
	.dwpsn	file "../Source/prod.c",line 5343,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5343| 
        MOV       *XAR4++,AL            ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5339,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5339| 
        ; branchcc occurs ; [] |5339| 
	.dwpsn	file "../Source/prod.c",line 5349,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5349| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5356,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5356| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5356| 
	.dwpsn	file "../Source/prod.c",line 5357,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5357| 
        MOV       *XAR4++,AL            ; [CPU_] |5357| 
	.dwpsn	file "../Source/prod.c",line 5358,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5358| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5358| 
        MOV       *XAR5++,AL            ; [CPU_] |5358| 
	.dwpsn	file "../Source/prod.c",line 5359,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5359| 
        MOV       *XAR4++,AL            ; [CPU_] |5359| 
	.dwpsn	file "../Source/prod.c",line 5355,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5355| 
        ; branchcc occurs ; [] |5355| 
	.dwpsn	file "../Source/prod.c",line 5325,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5325| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5328| 
        ADD       *-SP[61],#10          ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5325,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5325| 
        ADDB      XAR1,#12              ; [CPU_] |5325| 
        ADDB      ACC,#12               ; [CPU_] |5325| 
        SUBB      XAR6,#1               ; [CPU_U] |5325| 
        MOVZ      AR3,AR6               ; [CPU_] |5325| 
        MOVL      P,ACC                 ; [CPU_] |5325| 
        CMP       AR6,#-1               ; [CPU_] |5325| 
        B         $C$L173,NEQ           ; [CPU_] |5325| 
        ; branchcc occurs ; [] |5325| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5366,column 5,is_stmt,isa 0
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5366| 
        ; call occurs [#_ad7738_setcal] ; [] |5366| 
	.dwpsn	file "../Source/prod.c",line 5369,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5369| 
        ; branch occurs ; [] |5369| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5278,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5278| 
        B         $C$L320,LO            ; [CPU_] |5278| 
        ; branchcc occurs ; [] |5278| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5283| 
        MOVL      XAR0,#66              ; [CPU_] |5283| 
        MOVL      ACC,XAR7              ; [CPU_] |5283| 
        ADDB      ACC,#2                ; [CPU_] |5283| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5283| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GT            ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GT            ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVB      XAR0,#8               ; [CPU_] |5283| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GT            ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVB      XAR0,#11              ; [CPU_] |5283| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GT            ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5283| 
        CMPB      AL,#4                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5283| 
        CMPB      AL,#4                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVB      XAR0,#9               ; [CPU_] |5283| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5283| 
        CMPB      AL,#4                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVB      XAR0,#12              ; [CPU_] |5283| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5283| 
        CMPB      AL,#4                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVL      ACC,XAR7              ; [CPU_] |5283| 
        MOVL      XAR0,#64              ; [CPU_] |5283| 
        ADDB      ACC,#4                ; [CPU_] |5283| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5283| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVB      XAR0,#10              ; [CPU_] |5283| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVB      XAR0,#13              ; [CPU_] |5283| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5283| 
        CMPB      AL,#6                 ; [CPU_] |5283| 
        B         $C$L320,GEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5294,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5294| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5294| 
	.dwpsn	file "../Source/prod.c",line 5295,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5295| 
	.dwpsn	file "../Source/prod.c",line 5294,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5294| 
	.dwpsn	file "../Source/prod.c",line 5295,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5295| 
	.dwpsn	file "../Source/prod.c",line 5296,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5296| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5296| 
        ADDB      XAR7,#1               ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5297| 
        MOV       *XAR4++,AL            ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5298,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5298| 
        ADDB      XAR7,#1               ; [CPU_] |5298| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5293,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5293| 
	.dwpsn	file "../Source/prod.c",line 5299,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5293,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5293| 
        ; branchcc occurs ; [] |5293| 
	.dwpsn	file "../Source/prod.c",line 5303,column 5,is_stmt,isa 0
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5303| 
        ; call occurs [#_lcd_clear] ; [] |5303| 
	.dwpsn	file "../Source/prod.c",line 5304,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_update_units")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5304| 
        ; call occurs [#_update_units] ; [] |5304| 
	.dwpsn	file "../Source/prod.c",line 5299,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5306,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5306| 
        ; branch occurs ; [] |5306| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5257,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5257| 
        B         $C$L320,LO            ; [CPU_] |5257| 
        ; branchcc occurs ; [] |5257| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5262,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5262| 
        MOVB      XAR0,#36              ; [CPU_] |5262| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5262| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5262| 
	.dwpsn	file "../Source/prod.c",line 5263,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5263| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5263| 
        B         $C$L181,NEQ           ; [CPU_] |5263| 
        ; branchcc occurs ; [] |5263| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5265,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5265| 
	.dwpsn	file "../Source/prod.c",line 5266,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5266| 
	.dwpsn	file "../Source/prod.c",line 5264,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5264| 
        ; branchcc occurs ; [] |5264| 
	.dwpsn	file "../Source/prod.c",line 5268,column 6,is_stmt,isa 0
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_update_units")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5268| 
        ; call occurs [#_update_units] ; [] |5268| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5272,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5272| 
	.dwpsn	file "../Source/prod.c",line 5274,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5274| 
        ; branch occurs ; [] |5274| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5216| 
        B         $C$L320,LO            ; [CPU_] |5216| 
        ; branchcc occurs ; [] |5216| 
	.dwpsn	file "../Source/prod.c",line 5222,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5222| 
        ADDB      XAR4,#2               ; [CPU_] |5222| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5222| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5222| 
        MOVZ      AR3,AL                ; [CPU_] |5222| 
	.dwpsn	file "../Source/prod.c",line 5223,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5223| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5223| 
        CMP       AR3,#4096             ; [CPU_] |5223| 
        B         $C$L320,HI            ; [CPU_] |5223| 
        ; branchcc occurs ; [] |5223| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5229| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5229| 
        MOVZ      AR7,AR6               ; [CPU_] |5229| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5231,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5231| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5231| 
	.dwpsn	file "../Source/prod.c",line 5230,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5230| 
        ADDB      XAR4,#2               ; [CPU_] |5230| 
	.dwpsn	file "../Source/prod.c",line 5231,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5231| 
	.dwpsn	file "../Source/prod.c",line 5230,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5230| 
        ; branchcc occurs ; [] |5230| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5236,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5236| 
        MOVB      XAR1,#38              ; [CPU_] |5236| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5236| 
	.dwpsn	file "../Source/prod.c",line 5237,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5237| 
        MOVB      XAR1,#40              ; [CPU_] |5237| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5237| 
	.dwpsn	file "../Source/prod.c",line 5238,column 5,is_stmt,isa 0
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_maf_rst")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5238| 
        ; call occurs [#_maf_rst] ; [] |5238| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5243,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5243| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5243| 
	.dwpsn	file "../Source/prod.c",line 5247,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5247| 
	.dwpsn	file "../Source/prod.c",line 5243,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5243| 
	.dwpsn	file "../Source/prod.c",line 5244,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5244| 
        LSR       AL,8                  ; [CPU_] |5244| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5244| 
	.dwpsn	file "../Source/prod.c",line 5247,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5247| 
        MOVB      XAR1,#40              ; [CPU_] |5247| 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5248| 
        MOVL      XAR0,#50              ; [CPU_] |5248| 
	.dwpsn	file "../Source/prod.c",line 5247,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5247| 
        ANDB      AL,#0xff              ; [CPU_] |5247| 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5248| 
	.dwpsn	file "../Source/prod.c",line 5247,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5247| 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5248| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5248| 
        LSR       AL,8                  ; [CPU_] |5248| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5248| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5249| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5250| 
        MOV       *-SP[61],#8           ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5253,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5253| 
        ; branch occurs ; [] |5253| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5183,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5183| 
        B         $C$L320,LO            ; [CPU_] |5183| 
        ; branchcc occurs ; [] |5183| 
        MOVL      ACC,XAR4              ; [CPU_] |5183| 
        MOVL      XAR0,#66              ; [CPU_] |5183| 
        ADDB      ACC,#2                ; [CPU_] |5183| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5183| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5183| 
        B         $C$L320,LT            ; [CPU_] |5183| 
        ; branchcc occurs ; [] |5183| 
        MOVL      XAR5,XAR4             ; [CPU_] |5183| 
        MOVL      XAR0,#66              ; [CPU_] |5183| 
        CMPB      AL,#4                 ; [CPU_] |5183| 
        ADDB      XAR5,#2               ; [CPU_] |5183| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5183| 
        B         $C$L320,GEQ           ; [CPU_] |5183| 
        ; branchcc occurs ; [] |5183| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5183| 
        B         $C$L320,LT            ; [CPU_] |5183| 
        ; branchcc occurs ; [] |5183| 
        CMPB      AH,#20                ; [CPU_] |5183| 
        B         $C$L320,GEQ           ; [CPU_] |5183| 
        ; branchcc occurs ; [] |5183| 
	.dwpsn	file "../Source/prod.c",line 5193,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5193| 
        MOVL      XAR0,#66              ; [CPU_] |5193| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5193| 
        MOVL      XAR0,#80              ; [CPU_] |5193| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5193| 
	.dwpsn	file "../Source/prod.c",line 5191,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5191| 
	.dwpsn	file "../Source/prod.c",line 5193,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5193| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5193| 
        B         $C$L318,NEQ           ; [CPU_] |5193| 
        ; branchcc occurs ; [] |5193| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5199| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5199| 
        MOVB      AL,#10                ; [CPU_] |5199| 
        MOV       T,*-SP[58]            ; [CPU_] |5199| 
        MPYU      ACC,T,AL              ; [CPU_] |5199| 
        ADDL      ACC,XAR6              ; [CPU_] |5199| 
        MOVL      XAR4,ACC              ; [CPU_] |5199| 
        MOVB      XAR0,#42              ; [CPU_] |5199| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5199| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5200,column 5,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5200| 
        ; call occurs [#_ad7738_setcal] ; [] |5200| 
        MOVL      XAR0,#78              ; [CPU_] |5200| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5200| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5202| 
        MOVL      XAR1,ACC              ; [CPU_] |5202| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5202| 
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5202| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5202| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5203| 
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5203| 
        ; call occurs [#_ad7738_resetvall] ; [] |5203| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5206,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_update_units")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5206| 
        ; call occurs [#_update_units] ; [] |5206| 
	.dwpsn	file "../Source/prod.c",line 5209,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5209| 
        MOV       AL,*-SP[58]           ; [CPU_] |5209| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5209| 
        MOV       AL,*-SP[57]           ; [CPU_] |5209| 
	.dwpsn	file "../Source/prod.c",line 5210,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5210| 
        MOV       *-SP[61],#4           ; [CPU_] |5210| 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5212| 
        ; branch occurs ; [] |5212| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5147,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5147| 
        B         $C$L320,LO            ; [CPU_] |5147| 
        ; branchcc occurs ; [] |5147| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5153,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5153| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5155,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5155| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5156,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5156| 
        MOV       *XAR5++,AL            ; [CPU_] |5156| 
	.dwpsn	file "../Source/prod.c",line 5157,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5157| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5157| 
        MOV       *XAR1++,AL            ; [CPU_] |5157| 
	.dwpsn	file "../Source/prod.c",line 5158,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5158| 
        MOV       *XAR5++,AL            ; [CPU_] |5158| 
	.dwpsn	file "../Source/prod.c",line 5154,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5154| 
        ; branchcc occurs ; [] |5154| 
	.dwpsn	file "../Source/prod.c",line 5152,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5152| 
	.dwpsn	file "../Source/prod.c",line 5158,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5158| 
	.dwpsn	file "../Source/prod.c",line 5152,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5152| 
        ; branchcc occurs ; [] |5152| 
	.dwpsn	file "../Source/prod.c",line 5163,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5163| 
        MOVL      ACC,XAR4              ; [CPU_] |5163| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5163| 
        MOVL      XAR6,ACC              ; [CPU_] |5163| 
        MOV       AL,*XAR7              ; [CPU_] |5163| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5163| 
	.dwpsn	file "../Source/prod.c",line 5164,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5164| 
        MOVL      XAR6,XAR4             ; [CPU_] |5164| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5164| 
        MOVL      XAR4,ACC              ; [CPU_] |5164| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5164| 
        ANDB      AL,#0xff              ; [CPU_] |5164| 
        MOV       *XAR5++,AL            ; [CPU_] |5164| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5165| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5165| 
        MOVL      XAR4,ACC              ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5163,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5163| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5165| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5166,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5166| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5166| 
        MOVL      XAR4,ACC              ; [CPU_] |5166| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5166| 
        LSR       AL,8                  ; [CPU_] |5166| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5166| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5165| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5171,column 5,is_stmt,isa 0
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5171| 
        ; call occurs [#_ad7738_setcal] ; [] |5171| 
	.dwpsn	file "../Source/prod.c",line 5172,column 5,is_stmt,isa 0
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_velf_rst")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5172| 
        ; call occurs [#_velf_rst] ; [] |5172| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5176,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5176| 
        ; branch occurs ; [] |5176| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5108,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5108| 
        B         $C$L320,LO            ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
        MOVL      ACC,XAR4              ; [CPU_] |5108| 
        MOVL      XAR0,#66              ; [CPU_] |5108| 
        ADDB      ACC,#2                ; [CPU_] |5108| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5108| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5108| 
        B         $C$L320,LT            ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
        MOVL      XAR5,XAR4             ; [CPU_] |5108| 
        MOVL      XAR0,#66              ; [CPU_] |5108| 
        CMPB      AL,#20                ; [CPU_] |5108| 
        ADDB      XAR5,#2               ; [CPU_] |5108| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5108| 
        B         $C$L320,GEQ           ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
	.dwpsn	file "../Source/prod.c",line 5112,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5112| 
	.dwpsn	file "../Source/prod.c",line 5113,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5113| 
	.dwpsn	file "../Source/prod.c",line 5115,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5115| 
	.dwpsn	file "../Source/prod.c",line 5113,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5115,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5115| 
        ADDB      ACC,#2                ; [CPU_] |5115| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5115| 
        MOVL      XAR0,#40              ; [CPU_] |5115| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5115| 
        MOV       T,*-SP[57]            ; [CPU_] |5115| 
        MOVB      AL,#152               ; [CPU_] |5115| 
        MPYU      ACC,T,AL              ; [CPU_] |5115| 
        ADDL      ACC,XAR6              ; [CPU_] |5115| 
        ADDB      ACC,#224              ; [CPU_] |5115| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5115| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5117,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5117| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5117| 
	.dwpsn	file "../Source/prod.c",line 5118,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5118| 
        MOV       *XAR5++,AL            ; [CPU_] |5118| 
	.dwpsn	file "../Source/prod.c",line 5119,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5119| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5119| 
        MOV       *XAR7++,AL            ; [CPU_] |5119| 
	.dwpsn	file "../Source/prod.c",line 5120,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5120| 
        MOV       *XAR5++,AL            ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5116,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5116| 
        ; branchcc occurs ; [] |5116| 
	.dwpsn	file "../Source/prod.c",line 5125,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5125| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5125| 
        MOVB      AL,#152               ; [CPU_] |5125| 
        MPYU      ACC,T,AL              ; [CPU_] |5125| 
        ADDL      ACC,XAR6              ; [CPU_] |5125| 
        MOVL      XAR1,ACC              ; [CPU_] |5125| 
        MOVB      XAR0,#125             ; [CPU_] |5125| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5125| 
        CMPB      AL,#247               ; [CPU_] |5125| 
        B         $C$L193,NEQ           ; [CPU_] |5125| 
        ; branchcc occurs ; [] |5125| 
	.dwpsn	file "../Source/prod.c",line 5127,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5127| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5127| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5127| 
        MOV       AL,#0                 ; [CPU_] |5127| 
        MOV       AH,#17096             ; [CPU_] |5127| 
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5127| 
        ; call occurs [#FS$$DIV] ; [] |5127| 
        MOVB      XAR0,#126             ; [CPU_] |5127| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5127| 
        MOVL      XAR0,#40              ; [CPU_] |5127| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5127| 
	.dwpsn	file "../Source/prod.c",line 5130,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5130| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5131,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5131| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5131| 
        CMPL      ACC,XAR6              ; [CPU_] |5131| 
        B         $C$L192,NEQ           ; [CPU_] |5131| 
        ; branchcc occurs ; [] |5131| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5134,column 8,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5134| 
        ; call occurs [#_ad7738_setcal] ; [] |5134| 
        MOVL      XAR0,#78              ; [CPU_] |5134| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5134| 
	.dwpsn	file "../Source/prod.c",line 5135,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5135| 
        MOVL      XAR4,ACC              ; [CPU_] |5135| 
        MOVL      XAR0,#88              ; [CPU_] |5135| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5135| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5135| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5135| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5135| 
        MOVL      XAR0,#88              ; [CPU_] |5135| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5135| 
	.dwpsn	file "../Source/prod.c",line 5136,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5136| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5136| 
        ; call occurs [#_ad7738_resetvall] ; [] |5136| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5130,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5130| 
        ADDB      XAR1,#10              ; [CPU_] |5130| 
        MOV       AL,*-SP[58]           ; [CPU_] |5130| 
        CMPB      AL,#4                 ; [CPU_] |5130| 
        B         $C$L191,LO            ; [CPU_] |5130| 
        ; branchcc occurs ; [] |5130| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5119,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5119| 
	.dwpsn	file "../Source/prod.c",line 5143,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5143| 
        ; branch occurs ; [] |5143| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5007,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5007| 
        B         $C$L320,LO            ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
        MOVL      ACC,XAR4              ; [CPU_] |5007| 
        MOVL      XAR0,#66              ; [CPU_] |5007| 
        ADDB      ACC,#2                ; [CPU_] |5007| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5007| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5007| 
        B         $C$L320,LT            ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
        MOVL      XAR5,XAR4             ; [CPU_] |5007| 
        MOVL      XAR0,#66              ; [CPU_] |5007| 
        CMPB      AL,#20                ; [CPU_] |5007| 
        ADDB      XAR5,#2               ; [CPU_] |5007| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5007| 
        B         $C$L320,GEQ           ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
	.dwpsn	file "../Source/prod.c",line 5012,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5012| 
        MOVL      XAR0,#66              ; [CPU_] |5012| 
        MOV       *-SP[57],AL           ; [CPU_] |5012| 
        ADDB      XAR5,#2               ; [CPU_] |5012| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5012| 
	.dwpsn	file "../Source/prod.c",line 5013,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5013| 
        MOV       AL,AR6                ; [CPU_] |5013| 
        CMPB      AL,#247               ; [CPU_] |5013| 
        B         $C$L195,EQ            ; [CPU_] |5013| 
        ; branchcc occurs ; [] |5013| 
	.dwpsn	file "../Source/prod.c",line 5015,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5015| 
        MOVL      XAR0,#66              ; [CPU_] |5015| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5015| 
        MOVL      XAR0,#40              ; [CPU_] |5015| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5015| 
        MOVB      AL,#152               ; [CPU_] |5015| 
        MOV       T,*-SP[57]            ; [CPU_] |5015| 
        MPYU      ACC,T,AL              ; [CPU_] |5015| 
        ADDL      ACC,XAR7              ; [CPU_] |5015| 
        MOVL      XAR4,ACC              ; [CPU_] |5015| 
        MOVB      XAR0,#124             ; [CPU_] |5015| 
        MOV       PH,#0                 ; [CPU_] |5015| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5015| 
        ANDB      AL,#0xf0              ; [CPU_] |5015| 
        MOVU      ACC,AL                ; [CPU_] |5015| 
        MOVL      XAR7,ACC              ; [CPU_] |5015| 
        MOV       AL,AR6                ; [CPU_] |5015| 
        ANDB      AL,#240               ; [CPU_] |5015| 
        MOV       PL,AL                 ; [CPU_] |5015| 
        MOVL      ACC,XAR7              ; [CPU_] |5015| 
        CMPL      ACC,P                 ; [CPU_] |5015| 
        B         $C$L320,NEQ           ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5021,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5021| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5021| 
        MOVB      AL,#152               ; [CPU_] |5021| 
        MOV       T,*-SP[57]            ; [CPU_] |5021| 
        MPYU      ACC,T,AL              ; [CPU_] |5021| 
        ADDL      ACC,XAR7              ; [CPU_] |5021| 
        MOVL      XAR1,ACC              ; [CPU_] |5021| 
        MOVB      XAR0,#125             ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5022| 
	.dwpsn	file "../Source/prod.c",line 5021,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5022| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5022| 
	.dwpsn	file "../Source/prod.c",line 5023,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5023| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5023| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5023| 
        MOV       AL,AR6                ; [CPU_] |5023| 
        MOV       *-SP[61],#4           ; [CPU_] |5023| 
	.dwpsn	file "../Source/prod.c",line 5025,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5025| 
        B         $C$L205,EQ            ; [CPU_] |5025| 
        ; branchcc occurs ; [] |5025| 
	.dwpsn	file "../Source/prod.c",line 5028,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5028| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5028| 
        B         $C$L204,EQ            ; [CPU_] |5028| 
        ; branchcc occurs ; [] |5028| 
	.dwpsn	file "../Source/prod.c",line 5032,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5032| 
        CMPB      AL,#34                ; [CPU_] |5032| 
        B         $C$L196,GT            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        CMPB      AL,#34                ; [CPU_] |5032| 
        B         $C$L200,EQ            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        CMPB      AL,#16                ; [CPU_] |5032| 
        B         $C$L203,EQ            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        CMPB      AL,#17                ; [CPU_] |5032| 
        B         $C$L202,EQ            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        B         $C$L204,UNC           ; [CPU_] |5032| 
        ; branch occurs ; [] |5032| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5032| 
        B         $C$L198,EQ            ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        CMPB      AL,#36                ; [CPU_] |5032| 
        B         $C$L204,NEQ           ; [CPU_] |5032| 
        ; branchcc occurs ; [] |5032| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5073,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5073| 
        B         $C$L197,EQ            ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
        CMPB      AL,#35                ; [CPU_] |5073| 
        B         $C$L207,NEQ           ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
	.dwpsn	file "../Source/prod.c",line 5078,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5078| 
        MOV       AH,#15820             ; [CPU_] |5078| 
	.dwpsn	file "../Source/prod.c",line 5079,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5079| 
        ; branch occurs ; [] |5079| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5075,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5075| 
        MOV       AH,#15649             ; [CPU_] |5075| 
	.dwpsn	file "../Source/prod.c",line 5076,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5076| 
        ; branch occurs ; [] |5076| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5061,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5061| 
        B         $C$L199,EQ            ; [CPU_] |5061| 
        ; branchcc occurs ; [] |5061| 
        CMPB      AL,#36                ; [CPU_] |5061| 
        B         $C$L207,NEQ           ; [CPU_] |5061| 
        ; branchcc occurs ; [] |5061| 
	.dwpsn	file "../Source/prod.c",line 5066,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5066| 
        MOV       AH,#16672             ; [CPU_] |5066| 
	.dwpsn	file "../Source/prod.c",line 5067,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5067| 
        ; branch occurs ; [] |5067| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5063,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5063| 
        MOV       AH,#16073             ; [CPU_] |5063| 
	.dwpsn	file "../Source/prod.c",line 5064,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5064| 
        ; branch occurs ; [] |5064| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5049,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5049| 
        B         $C$L201,EQ            ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
        CMPB      AL,#36                ; [CPU_] |5049| 
        B         $C$L207,NEQ           ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
	.dwpsn	file "../Source/prod.c",line 5054,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5054| 
        MOV       AH,#16843             ; [CPU_] |5054| 
	.dwpsn	file "../Source/prod.c",line 5055,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5055| 
        ; branch occurs ; [] |5055| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5051,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5051| 
        MOV       AH,#16418             ; [CPU_] |5051| 
	.dwpsn	file "../Source/prod.c",line 5052,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5052| 
        ; branch occurs ; [] |5052| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5042,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5042| 
        B         $C$L207,NEQ           ; [CPU_] |5042| 
        ; branchcc occurs ; [] |5042| 
	.dwpsn	file "../Source/prod.c",line 5043,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5043| 
        MOV       AH,#16397             ; [CPU_] |5043| 
        B         $C$L206,UNC           ; [CPU_] |5043| 
        ; branch occurs ; [] |5043| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5035,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5035| 
        B         $C$L207,NEQ           ; [CPU_] |5035| 
        ; branchcc occurs ; [] |5035| 
	.dwpsn	file "../Source/prod.c",line 5036,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5036| 
        MOV       AH,#16104             ; [CPU_] |5036| 
        B         $C$L206,UNC           ; [CPU_] |5036| 
        ; branch occurs ; [] |5036| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5030,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5030| 
	.dwpsn	file "../Source/prod.c",line 5031,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5031| 
        ; branch occurs ; [] |5031| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5026,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5026| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5026| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5026| 
        MOV       AL,#0                 ; [CPU_] |5026| 
        MOV       AH,#17096             ; [CPU_] |5026| 
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5026| 
        ; call occurs [#FS$$DIV] ; [] |5026| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5026| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5092,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5092| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5093,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5093| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5093| 
        CMPL      ACC,XAR6              ; [CPU_] |5093| 
        B         $C$L209,NEQ           ; [CPU_] |5093| 
        ; branchcc occurs ; [] |5093| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5094,column 7,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_update_units")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5094| 
        ; call occurs [#_update_units] ; [] |5094| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5096,column 7,is_stmt,isa 0
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5096| 
        ; call occurs [#_ad7738_setcal] ; [] |5096| 
        MOVL      XAR0,#78              ; [CPU_] |5096| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5096| 
	.dwpsn	file "../Source/prod.c",line 5097,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5097| 
        MOVL      XAR4,ACC              ; [CPU_] |5097| 
        MOVL      XAR0,#88              ; [CPU_] |5097| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5097| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5097| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5097| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5097| 
        MOVL      XAR0,#88              ; [CPU_] |5097| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5097| 
	.dwpsn	file "../Source/prod.c",line 5098,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5098| 
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5098| 
        ; call occurs [#_ad7738_resetvall] ; [] |5098| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5092,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5092| 
        ADDB      XAR1,#10              ; [CPU_] |5092| 
        MOV       AL,*-SP[58]           ; [CPU_] |5092| 
        CMPB      AL,#4                 ; [CPU_] |5092| 
        B         $C$L208,LO            ; [CPU_] |5092| 
        ; branchcc occurs ; [] |5092| 
        B         $C$L304,UNC           ; [CPU_] |5092| 
        ; branch occurs ; [] |5092| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4979,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4979| 
        B         $C$L320,LO            ; [CPU_] |4979| 
        ; branchcc occurs ; [] |4979| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4979| 
        MOVL      XAR0,#66              ; [CPU_] |4979| 
        MOVL      ACC,XAR7              ; [CPU_] |4979| 
        ADDB      ACC,#2                ; [CPU_] |4979| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4979| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4979| 
        B         $C$L320,LT            ; [CPU_] |4979| 
        ; branchcc occurs ; [] |4979| 
        ADDB      XAR4,#2               ; [CPU_] |4979| 
        MOVL      XAR0,#66              ; [CPU_] |4979| 
        CMPB      AL,#20                ; [CPU_] |4979| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4979| 
        B         $C$L320,GEQ           ; [CPU_] |4979| 
        ; branchcc occurs ; [] |4979| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4979| 
        MOVB      AH,#4                 ; [CPU_] |4979| 
        ADD       AH,AR6                ; [CPU_] |4979| 
        CMP       AH,*-SP[59]           ; [CPU_] |4979| 
        B         $C$L320,HI            ; [CPU_] |4979| 
        ; branchcc occurs ; [] |4979| 
	.dwpsn	file "../Source/prod.c",line 4984,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4984| 
	.dwpsn	file "../Source/prod.c",line 4985,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4985| 
        MOVL      XAR0,#66              ; [CPU_] |4985| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4985| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4985| 
        MOV       AL,*-SP[57]           ; [CPU_] |4985| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4985| 
        MOV       AL,AR6                ; [CPU_] |4985| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4987| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4987| 
        B         $C$L211,HIS           ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4987| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 4989,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4989| 
        MOVB      XAR5,#0               ; [CPU_] |4989| 
	.dwpsn	file "../Source/prod.c",line 4989,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |4989| 
        ; branchcc occurs ; [] |4989| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4990,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4990| 
	.dwpsn	file "../Source/prod.c",line 4989,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4989| 
	.dwpsn	file "../Source/prod.c",line 4990,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4990| 
	.dwpsn	file "../Source/prod.c",line 4989,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4989| 
	.dwpsn	file "../Source/prod.c",line 4990,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4990| 
	.dwpsn	file "../Source/prod.c",line 4989,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4989| 
        B         $C$L212,HI            ; [CPU_] |4989| 
        ; branchcc occurs ; [] |4989| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 4992,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4992| 
        MOVB      AL,#152               ; [CPU_] |4992| 
        MOV       T,*-SP[57]            ; [CPU_] |4992| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4992| 
        MPYU      P,T,AL                ; [CPU_] |4992| 
        MOVL      ACC,P                 ; [CPU_] |4992| 
        ADD       ACC,AR5               ; [CPU_] |4992| 
        ADDL      ACC,XAR6              ; [CPU_] |4992| 
        MOVL      XAR4,ACC              ; [CPU_] |4992| 
        MOVB      XAR0,#98              ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4996,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4996| 
	.dwpsn	file "../Source/prod.c",line 4992,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4996,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4996| 
        MOVL      XAR4,ACC              ; [CPU_] |4996| 
        MOVL      XAR1,ACC              ; [CPU_] |4996| 
        ADDB      XAR4,#98              ; [CPU_] |4996| 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_strlen")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4996| 
        ; call occurs [#_strlen] ; [] |4996| 
	.dwpsn	file "../Source/prod.c",line 4997,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4997| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4997| 
	.dwpsn	file "../Source/prod.c",line 4998,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4998| 
	.dwpsn	file "../Source/prod.c",line 4997,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4997| 
	.dwpsn	file "../Source/prod.c",line 4998,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |4998| 
        ; branchcc occurs ; [] |4998| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4998,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4998| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 4999,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |4999| 
	.dwpsn	file "../Source/prod.c",line 4998,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4998| 
	.dwpsn	file "../Source/prod.c",line 4999,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |4999| 
        INC       *-SP[61]              ; [CPU_] |4999| 
	.dwpsn	file "../Source/prod.c",line 4998,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |4998| 
        B         $C$L214,HI            ; [CPU_] |4998| 
        ; branchcc occurs ; [] |4998| 
        B         $C$L304,UNC           ; [CPU_] |4998| 
        ; branch occurs ; [] |4998| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5537,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5537| 
        B         $C$L320,LO            ; [CPU_] |5537| 
        ; branchcc occurs ; [] |5537| 
	.dwpsn	file "../Source/prod.c",line 5542,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5542| 
	.dwpsn	file "../Source/prod.c",line 5543,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5543| 
	.dwpsn	file "../Source/prod.c",line 5542,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5542| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5542| 
        MOV       *-SP[57],AL           ; [CPU_] |5542| 
	.dwpsn	file "../Source/prod.c",line 5543,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5543| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5543| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5543| 
	.dwpsn	file "../Source/prod.c",line 5545,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5545| 
        SUBB      XAR5,#24              ; [CPU_U] |5545| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5545| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5547,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5547| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5547| 
	.dwpsn	file "../Source/prod.c",line 5548,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5548| 
        MOV       *XAR1++,AL            ; [CPU_] |5548| 
	.dwpsn	file "../Source/prod.c",line 5549,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5549| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5549| 
        MOV       *XAR5++,AL            ; [CPU_] |5549| 
	.dwpsn	file "../Source/prod.c",line 5550,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5550| 
        MOV       *XAR1++,AL            ; [CPU_] |5550| 
	.dwpsn	file "../Source/prod.c",line 5546,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5546| 
        ; branchcc occurs ; [] |5546| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5554,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5554| 
        B         $C$L320,HIS           ; [CPU_] |5554| 
        ; branchcc occurs ; [] |5554| 
        MOVL      XAR0,#40              ; [CPU_] |5554| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5554| 
        MOVB      AL,#12                ; [CPU_] |5554| 
        MOV       T,*-SP[57]            ; [CPU_] |5554| 
        MPYU      ACC,T,AL              ; [CPU_] |5554| 
        ADDL      ACC,XAR6              ; [CPU_] |5554| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5554| 
        MOVL      XAR4,ACC              ; [CPU_] |5554| 
        MOVL      XAR0,#88              ; [CPU_] |5554| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5554| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5554| 
        CMPB      AL,#7                 ; [CPU_] |5554| 
        B         $C$L320,NEQ           ; [CPU_] |5554| 
        ; branchcc occurs ; [] |5554| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5554| 
        MOV       *-SP[47],#0           ; [CPU_] |5554| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5554| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5554| 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5554| 
        ; call occurs [#FS$$CMP] ; [] |5554| 
        CMPB      AL,#0                 ; [CPU_] |5554| 
        B         $C$L217,GEQ           ; [CPU_] |5554| 
        ; branchcc occurs ; [] |5554| 
        MOV       *-SP[47],#1           ; [CPU_] |5554| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5554| 
        ; branchcc occurs ; [] |5554| 
        MOV       AL,#0                 ; [CPU_] |5554| 
        MOV       AH,#16672             ; [CPU_] |5554| 
        MOV       *-SP[47],#0           ; [CPU_] |5554| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5554| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5554| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5554| 
        ; call occurs [#FS$$CMP] ; [] |5554| 
        CMPB      AL,#0                 ; [CPU_] |5554| 
        B         $C$L218,LEQ           ; [CPU_] |5554| 
        ; branchcc occurs ; [] |5554| 
        MOV       *-SP[47],#1           ; [CPU_] |5554| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5554| 
        ; branchcc occurs ; [] |5554| 
	.dwpsn	file "../Source/prod.c",line 5561,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5561| 
        MOV       AH,#0                 ; [CPU_] |5561| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5561| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5561| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5561| 
        ; call occurs [#FS$$CMP] ; [] |5561| 
        CMPB      AL,#0                 ; [CPU_] |5561| 
        B         $C$L219,GEQ           ; [CPU_] |5561| 
        ; branchcc occurs ; [] |5561| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5561| 
        MOVL      XAR0,#88              ; [CPU_] |5561| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5561| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5561| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5561| 
        B         $C$L220,UNC           ; [CPU_] |5561| 
        ; branch occurs ; [] |5561| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5561| 
        MOVL      XAR0,#88              ; [CPU_] |5561| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5561| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5561| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5561| 
$C$L220:    
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5561| 
        ; call occurs [#FS$$MPY] ; [] |5561| 
        MOVL      XAR0,#88              ; [CPU_] |5561| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5561| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5561| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5561| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5561| 
        ; call occurs [#FS$$ADD] ; [] |5561| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5561| 
        ; call occurs [#FS$$TOLL] ; [] |5561| 
	.dwpsn	file "../Source/prod.c",line 5568,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5568| 
	.dwpsn	file "../Source/prod.c",line 5561,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5561| 
	.dwpsn	file "../Source/prod.c",line 5549,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5549| 
	.dwpsn	file "../Source/prod.c",line 5561,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5561| 
	.dwpsn	file "../Source/prod.c",line 5568,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5568| 
        CMP64     ACC:P                 ; [CPU_] |5568| 
        B         $C$L222,LEQ           ; [CPU_] |5568| 
        ; branchcc occurs ; [] |5568| 
	.dwpsn	file "../Source/prod.c",line 5570,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5570| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5570| 
        MOV       *-SP[2],#0            ; [CPU_] |5570| 
        MOV       *-SP[1],#0            ; [CPU_] |5570| 
        MOVL      P,*-SP[32]            ; [CPU_] |5570| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5570| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$719, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5570| 
        ; call occurs [#LL$$CMP] ; [] |5570| 
        CMPB      AL,#0                 ; [CPU_] |5570| 
        B         $C$L221,GEQ           ; [CPU_] |5570| 
        ; branchcc occurs ; [] |5570| 
	.dwpsn	file "../Source/prod.c",line 5573,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5573| 
        MOV       *-SP[35],AL           ; [CPU_] |5573| 
        B         $C$L223,UNC           ; [CPU_] |5573| 
        ; branch occurs ; [] |5573| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5571,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5571| 
	.dwpsn	file "../Source/prod.c",line 5572,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5572| 
        ; branch occurs ; [] |5572| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5569,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5569| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5576,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5576| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5576| 
        ; call occurs [#_mcbsp_xmit] ; [] |5576| 
	.dwpsn	file "../Source/prod.c",line 5577,column 5,is_stmt,isa 0
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_latch_dac")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5577| 
        ; call occurs [#_latch_dac] ; [] |5577| 
	.dwpsn	file "../Source/prod.c",line 5580,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5580| 
        ANDB      AL,#0xff              ; [CPU_] |5580| 
        MOV       *XAR1++,AL            ; [CPU_] |5580| 
	.dwpsn	file "../Source/prod.c",line 5581,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5581| 
        LSR       AL,8                  ; [CPU_] |5581| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5581| 
	.dwpsn	file "../Source/prod.c",line 5584,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5584| 
        ; branch occurs ; [] |5584| 
$C$L224:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5473,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5473| 
        B         $C$L320,LO            ; [CPU_] |5473| 
        ; branchcc occurs ; [] |5473| 
	.dwpsn	file "../Source/prod.c",line 5478,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5478| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5478| 
$C$L226:    
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5478| 
        ; call occurs [#_ad7738_resetvall] ; [] |5478| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5481,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5481| 
        MOVL      XAR0,#66              ; [CPU_] |5481| 
        ADDB      ACC,#2                ; [CPU_] |5481| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5481| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5481| 
        ANDB      AL,#0x0f              ; [CPU_] |5481| 
	.dwpsn	file "../Source/prod.c",line 5483,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5483| 
        ; branch occurs ; [] |5483| 
$C$L228:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5459,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5459| 
        B         $C$L320,LO            ; [CPU_] |5459| 
        ; branchcc occurs ; [] |5459| 
	.dwpsn	file "../Source/prod.c",line 5464,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5464| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5464| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5464| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5464| 
	.dwpsn	file "../Source/prod.c",line 5469,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5469| 
        ; branch occurs ; [] |5469| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5523,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5523| 
        B         $C$L320,LO            ; [CPU_] |5523| 
        ; branchcc occurs ; [] |5523| 
	.dwpsn	file "../Source/prod.c",line 5528,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5528| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5528| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5528| 
        ; call occurs [#_shunt_switch] ; [] |5528| 
	.dwpsn	file "../Source/prod.c",line 5533,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5533| 
        ; branch occurs ; [] |5533| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5507,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5507| 
        B         $C$L320,LO            ; [CPU_] |5507| 
        ; branchcc occurs ; [] |5507| 
	.dwpsn	file "../Source/prod.c",line 5512,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5512| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5512| 
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5512| 
        ; call occurs [#_ad7738_resettare] ; [] |5512| 
	.dwpsn	file "../Source/prod.c",line 5513,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5513| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5513| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5513| 
	.dwpsn	file "../Source/prod.c",line 5514,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5514| 
	.dwpsn	file "../Source/prod.c",line 5519,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5519| 
        ; branch occurs ; [] |5519| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5487,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5487| 
        B         $C$L320,LO            ; [CPU_] |5487| 
        ; branchcc occurs ; [] |5487| 
	.dwpsn	file "../Source/prod.c",line 5492,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5492| 
	.dwpsn	file "../Source/prod.c",line 5493,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5493| 
$C$L232:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5494,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5494| 
        B         $C$L233,EQ            ; [CPU_] |5494| 
        ; branchcc occurs ; [] |5494| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5495,column 7,is_stmt,isa 0
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5495| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5495| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5493,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5493| 
	.dwpsn	file "../Source/prod.c",line 5497,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5497| 
        MOV       *-SP[47],AL           ; [CPU_] |5497| 
	.dwpsn	file "../Source/prod.c",line 5493,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5493| 
        CMPB      AL,#4                 ; [CPU_] |5493| 
        B         $C$L232,LT            ; [CPU_] |5493| 
        ; branchcc occurs ; [] |5493| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5501,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5501| 
        ANDB      AL,#0x0f              ; [CPU_] |5501| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5501| 
        MOVL      XAR0,#66              ; [CPU_] |5501| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5501| 
	.dwpsn	file "../Source/prod.c",line 5503,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5503| 
        ; branch occurs ; [] |5503| 
$C$L235:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5444,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5444| 
        B         $C$L320,LO            ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
	.dwpsn	file "../Source/prod.c",line 5449,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5449| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5449| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5449| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5449| 
	.dwpsn	file "../Source/prod.c",line 5455,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5455| 
        ; branch occurs ; [] |5455| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5421,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5421| 
        B         $C$L239,LO            ; [CPU_] |5421| 
        ; branchcc occurs ; [] |5421| 
	.dwpsn	file "../Source/prod.c",line 5433,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5433| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5433| 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5433| 
        ; call occurs [#_ad7738_resettare] ; [] |5433| 
	.dwpsn	file "../Source/prod.c",line 5434,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5434| 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5434| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5434| 
	.dwpsn	file "../Source/prod.c",line 5435,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5435| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5435| 
        ; call occurs [#_ad7738_resetvall] ; [] |5435| 
	.dwpsn	file "../Source/prod.c",line 5438,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5438| 
        MOVL      ACC,XAR1              ; [CPU_] |5438| 
        ADDB      ACC,#2                ; [CPU_] |5438| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5438| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5438| 
        ANDB      AL,#0xff              ; [CPU_] |5438| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5438| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5438| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5436,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5436| 
	.dwpsn	file "../Source/prod.c",line 5440,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5440| 
        ; branch occurs ; [] |5440| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5423,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5423| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5423| 
        ; call occurs [#_ad7738_resettare] ; [] |5423| 
	.dwpsn	file "../Source/prod.c",line 5424,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5424| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5424| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5425| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5425| 
        ; call occurs [#_ad7738_resetvall] ; [] |5425| 
	.dwpsn	file "../Source/prod.c",line 5428,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5428| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5428| 
	.dwpsn	file "../Source/prod.c",line 5430,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5430| 
        ; branch occurs ; [] |5430| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5596,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5596| 
        MOV       *-SP[47],#0           ; [CPU_] |5596| 
	.dwpsn	file "../Source/prod.c",line 5597,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5597| 
        ; branchcc occurs ; [] |5597| 
	.dwpsn	file "../Source/prod.c",line 5599,column 6,is_stmt,isa 0
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5599| 
        ; call occurs [#_lcd_clear] ; [] |5599| 
	.dwpsn	file "../Source/prod.c",line 5600,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5600| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5600| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5600| 
        ; call occurs [#_lcd_puts] ; [] |5600| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5603,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5603| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_delay_us")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5603| 
        ; call occurs [#_delay_us] ; [] |5603| 
	.dwpsn	file "../Source/prod.c",line 5602,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5602| 
        ; branchcc occurs ; [] |5602| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5607,column 6,is_stmt,isa 0
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_conf_write")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5607| 
        ; call occurs [#_conf_write] ; [] |5607| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5610,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5610| 
        B         $C$L242,NEQ           ; [CPU_] |5610| 
        ; branchcc occurs ; [] |5610| 
	.dwpsn	file "../Source/prod.c",line 5611,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5611| 
        MOVB      AL,#16                ; [CPU_] |5611| 
        SPM       #0                    ; [CPU_] 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5611| 
        ; call occurs [#_lcd_puts] ; [] |5611| 
	.dwpsn	file "../Source/prod.c",line 5612,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5612| 
	.dwpsn	file "../Source/prod.c",line 5613,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5613| 
        ; branch occurs ; [] |5613| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5614,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5614| 
        MOVB      AL,#16                ; [CPU_] |5614| 
        SPM       #0                    ; [CPU_] 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5614| 
        ; call occurs [#_lcd_puts] ; [] |5614| 
	.dwpsn	file "../Source/prod.c",line 5615,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5615| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5619,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5619| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_delay_us")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5619| 
        ; call occurs [#_delay_us] ; [] |5619| 
	.dwpsn	file "../Source/prod.c",line 5618,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5618| 
        ; branchcc occurs ; [] |5618| 
        B         $C$L316,UNC           ; [CPU_] |5618| 
        ; branch occurs ; [] |5618| 
$C$L245:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4366,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4366| 
        B         $C$L320,LO            ; [CPU_] |4366| 
        ; branchcc occurs ; [] |4366| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4366| 
        MOVL      XAR0,#66              ; [CPU_] |4366| 
        MOVL      ACC,XAR7              ; [CPU_] |4366| 
        ADDB      ACC,#2                ; [CPU_] |4366| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4366| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4366| 
        B         $C$L320,LT            ; [CPU_] |4366| 
        ; branchcc occurs ; [] |4366| 
        ADDB      XAR4,#2               ; [CPU_] |4366| 
        MOVL      XAR0,#66              ; [CPU_] |4366| 
        CMPB      AL,#4                 ; [CPU_] |4366| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4366| 
        B         $C$L320,GEQ           ; [CPU_] |4366| 
        ; branchcc occurs ; [] |4366| 
	.dwpsn	file "../Source/prod.c",line 4371,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4371| 
	.dwpsn	file "../Source/prod.c",line 4372,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4372| 
	.dwpsn	file "../Source/prod.c",line 4375,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4375| 
	.dwpsn	file "../Source/prod.c",line 4372,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4372| 
	.dwpsn	file "../Source/prod.c",line 4375,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4375| 
        ADDB      ACC,#2                ; [CPU_] |4375| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4375| 
        MOVL      XAR0,#40              ; [CPU_] |4375| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4375| 
        MOV       T,*-SP[58]            ; [CPU_] |4375| 
        MOVB      AL,#10                ; [CPU_] |4375| 
        MPYU      ACC,T,AL              ; [CPU_] |4375| 
        ADDL      ACC,XAR6              ; [CPU_] |4375| 
        ADDB      ACC,#46               ; [CPU_] |4375| 
        MOVL      XAR4,ACC              ; [CPU_] |4375| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4377,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4377| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4377| 
        ADDB      XAR7,#1               ; [CPU_] |4377| 
	.dwpsn	file "../Source/prod.c",line 4378,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4378| 
        ADD       *XAR4++,AL            ; [CPU_] |4378| 
	.dwpsn	file "../Source/prod.c",line 4376,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4376| 
        ; branchcc occurs ; [] |4376| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4381| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4381| 
        MOVB      AL,#10                ; [CPU_] |4381| 
        MPYU      ACC,T,AL              ; [CPU_] |4381| 
        ADDL      ACC,XAR6              ; [CPU_] |4381| 
        MOVL      XAR5,ACC              ; [CPU_] |4381| 
        ADDB      ACC,#48               ; [CPU_] |4381| 
        MOVL      XAR4,ACC              ; [CPU_] |4381| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4381| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4383,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4383| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4383| 
        ADDB      XAR7,#1               ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4384,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4384| 
        ADD       *XAR4++,AL            ; [CPU_] |4384| 
	.dwpsn	file "../Source/prod.c",line 4382,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4382| 
        ; branchcc occurs ; [] |4382| 
	.dwpsn	file "../Source/prod.c",line 4387,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4387| 
        ADDB      ACC,#50               ; [CPU_] |4387| 
        MOVL      XAR4,ACC              ; [CPU_] |4387| 
        MOVL      P,ACC                 ; [CPU_] |4387| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4389,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4389| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4389| 
        ADDB      XAR7,#1               ; [CPU_] |4389| 
	.dwpsn	file "../Source/prod.c",line 4390,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4390| 
        ADD       *XAR4++,AL            ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4388,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4388| 
        ; branchcc occurs ; [] |4388| 
	.dwpsn	file "../Source/prod.c",line 4394,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4394| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4394| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4394| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4396,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4396| 
        ANDB      AL,#0xff              ; [CPU_] |4396| 
        MOV       *XAR4++,AL            ; [CPU_] |4396| 
	.dwpsn	file "../Source/prod.c",line 4397,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4397| 
        LSR       AL,8                  ; [CPU_] |4397| 
        MOV       *XAR4++,AL            ; [CPU_] |4397| 
	.dwpsn	file "../Source/prod.c",line 4395,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4395| 
        ; branchcc occurs ; [] |4395| 
	.dwpsn	file "../Source/prod.c",line 4400,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4400| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4402,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4402| 
        ANDB      AL,#0xff              ; [CPU_] |4402| 
        MOV       *XAR4++,AL            ; [CPU_] |4402| 
	.dwpsn	file "../Source/prod.c",line 4403,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4403| 
        LSR       AL,8                  ; [CPU_] |4403| 
        MOV       *XAR4++,AL            ; [CPU_] |4403| 
	.dwpsn	file "../Source/prod.c",line 4401,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4401| 
        ; branchcc occurs ; [] |4401| 
	.dwpsn	file "../Source/prod.c",line 4406,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4406| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4408,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4408| 
        ANDB      AL,#0xff              ; [CPU_] |4408| 
        MOV       *XAR4++,AL            ; [CPU_] |4408| 
	.dwpsn	file "../Source/prod.c",line 4409,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4409| 
        LSR       AL,8                  ; [CPU_] |4409| 
        MOV       *XAR4++,AL            ; [CPU_] |4409| 
	.dwpsn	file "../Source/prod.c",line 4407,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4407| 
        ; branchcc occurs ; [] |4407| 
	.dwpsn	file "../Source/prod.c",line 4397,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4397| 
	.dwpsn	file "../Source/prod.c",line 4414,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4414| 
        ; branch occurs ; [] |4414| 
$C$L252:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4324,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4324| 
        B         $C$L320,LO            ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4324| 
        MOVL      XAR0,#66              ; [CPU_] |4324| 
        MOVL      ACC,XAR5              ; [CPU_] |4324| 
        ADDB      ACC,#2                ; [CPU_] |4324| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4324| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4324| 
        B         $C$L320,LT            ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
        ADDB      XAR4,#2               ; [CPU_] |4324| 
        MOVL      XAR0,#66              ; [CPU_] |4324| 
        CMPB      AL,#4                 ; [CPU_] |4324| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4324| 
        B         $C$L320,GEQ           ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4330| 
	.dwpsn	file "../Source/prod.c",line 4332,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4332| 
        MOVL      XAR0,#66              ; [CPU_] |4332| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4330| 
	.dwpsn	file "../Source/prod.c",line 4332,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4332| 
        MOVL      XAR0,#40              ; [CPU_] |4332| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4332| 
        MOVB      AL,#10                ; [CPU_] |4332| 
        MOV       T,*-SP[58]            ; [CPU_] |4332| 
        MPYU      ACC,T,AL              ; [CPU_] |4332| 
        ADDL      ACC,XAR6              ; [CPU_] |4332| 
        ADDB      ACC,#46               ; [CPU_] |4332| 
        MOVL      XAR5,ACC              ; [CPU_] |4332| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4334,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4334| 
        ANDB      AL,#0xff              ; [CPU_] |4334| 
        MOV       *XAR4++,AL            ; [CPU_] |4334| 
	.dwpsn	file "../Source/prod.c",line 4335,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4335| 
        LSR       AL,8                  ; [CPU_] |4335| 
        MOV       *XAR4++,AL            ; [CPU_] |4335| 
	.dwpsn	file "../Source/prod.c",line 4333,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4333| 
        ; branchcc occurs ; [] |4333| 
	.dwpsn	file "../Source/prod.c",line 4338,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4338| 
        MPYU      ACC,T,AL              ; [CPU_] |4338| 
        ADDL      ACC,XAR6              ; [CPU_] |4338| 
        MOVL      XAR5,ACC              ; [CPU_] |4338| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4338| 
        ADDB      XAR5,#48              ; [CPU_] |4338| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4340,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4340| 
        ANDB      AL,#0xff              ; [CPU_] |4340| 
        MOV       *XAR4++,AL            ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4341,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4341| 
        LSR       AL,8                  ; [CPU_] |4341| 
        MOV       *XAR4++,AL            ; [CPU_] |4341| 
	.dwpsn	file "../Source/prod.c",line 4339,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4339| 
        ; branchcc occurs ; [] |4339| 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4344| 
	.dwpsn	file "../Source/prod.c",line 4335,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4335| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4344| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4346,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4346| 
        ANDB      AL,#0xff              ; [CPU_] |4346| 
        MOV       *XAR4++,AL            ; [CPU_] |4346| 
	.dwpsn	file "../Source/prod.c",line 4347,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4347| 
        LSR       AL,8                  ; [CPU_] |4347| 
        MOV       *XAR4++,AL            ; [CPU_] |4347| 
	.dwpsn	file "../Source/prod.c",line 4345,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4345| 
        ; branchcc occurs ; [] |4345| 
        B         $C$L743,UNC           ; [CPU_] |4345| 
        ; branch occurs ; [] |4345| 
$C$L256:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3966,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3966| 
        B         $C$L320,LO            ; [CPU_] |3966| 
        ; branchcc occurs ; [] |3966| 
        MOVL      ACC,XAR4              ; [CPU_] |3966| 
        MOVL      XAR0,#66              ; [CPU_] |3966| 
        ADDB      ACC,#2                ; [CPU_] |3966| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3966| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3966| 
        B         $C$L320,LT            ; [CPU_] |3966| 
        ; branchcc occurs ; [] |3966| 
        MOVL      XAR5,XAR4             ; [CPU_] |3966| 
        MOVL      XAR0,#66              ; [CPU_] |3966| 
        CMPB      AL,#20                ; [CPU_] |3966| 
        ADDB      XAR5,#2               ; [CPU_] |3966| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3966| 
        B         $C$L320,GEQ           ; [CPU_] |3966| 
        ; branchcc occurs ; [] |3966| 
	.dwpsn	file "../Source/prod.c",line 3970,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |3970| 
	.dwpsn	file "../Source/prod.c",line 3971,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3971| 
	.dwpsn	file "../Source/prod.c",line 3974,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3974| 
        MOVL      XAR0,#66              ; [CPU_] |3974| 
	.dwpsn	file "../Source/prod.c",line 3971,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3971| 
	.dwpsn	file "../Source/prod.c",line 3974,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3974| 
        MOVL      XAR0,#40              ; [CPU_] |3974| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3974| 
        MOVB      AL,#152               ; [CPU_] |3974| 
        MOV       T,*-SP[57]            ; [CPU_] |3974| 
        MPYU      ACC,T,AL              ; [CPU_] |3974| 
        ADDL      ACC,XAR6              ; [CPU_] |3974| 
        ADDB      ACC,#82               ; [CPU_] |3974| 
        MOVL      XAR4,ACC              ; [CPU_] |3974| 
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_strlen")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3974| 
        ; call occurs [#_strlen] ; [] |3974| 
        MOVZ      AR6,AL                ; [CPU_] |3974| 
	.dwpsn	file "../Source/prod.c",line 3975,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |3975| 
	.dwpsn	file "../Source/prod.c",line 3976,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3975,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |3975| 
	.dwpsn	file "../Source/prod.c",line 3976,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |3976| 
        ; branchcc occurs ; [] |3976| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3976,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3976| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 3977,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3976,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3977,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3976,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3977,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3976,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3976| 
        B         $C$L257,HI            ; [CPU_] |3976| 
        ; branchcc occurs ; [] |3976| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3981,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3981| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3981| 
        MOVB      AL,#152               ; [CPU_] |3981| 
        MOV       T,*-SP[57]            ; [CPU_] |3981| 
        MPYU      ACC,T,AL              ; [CPU_] |3981| 
        ADDL      ACC,XAR6              ; [CPU_] |3981| 
        MOVL      XAR4,ACC              ; [CPU_] |3981| 
        MOVL      XAR1,ACC              ; [CPU_] |3981| 
        ADDB      XAR4,#98              ; [CPU_] |3981| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_strlen")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3981| 
        ; call occurs [#_strlen] ; [] |3981| 
        MOVL      XAR0,#44              ; [CPU_] |3981| 
	.dwpsn	file "../Source/prod.c",line 3982,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |3982| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3981,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |3981| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3981| 
	.dwpsn	file "../Source/prod.c",line 3982,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |3982| 
        MOVL      XAR4,ACC              ; [CPU_] |3982| 
        MOV       AL,AR7                ; [CPU_] |3982| 
        ADDB      AL,#1                 ; [CPU_] |3982| 
        MOV       *XAR4++,AR6           ; [CPU_] |3982| 
        MOV       *-SP[61],AL           ; [CPU_] |3982| 
        MOV       AL,AR6                ; [CPU_] |3982| 
	.dwpsn	file "../Source/prod.c",line 3983,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |3983| 
        ; branchcc occurs ; [] |3983| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3983,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3983| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3984| 
	.dwpsn	file "../Source/prod.c",line 3983,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3984| 
	.dwpsn	file "../Source/prod.c",line 3983,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3984| 
	.dwpsn	file "../Source/prod.c",line 3983,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3983| 
        B         $C$L259,HI            ; [CPU_] |3983| 
        ; branchcc occurs ; [] |3983| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3988,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3988| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |3988| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3990,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3990| 
        ANDB      AL,#0xff              ; [CPU_] |3990| 
        MOV       *XAR4++,AL            ; [CPU_] |3990| 
	.dwpsn	file "../Source/prod.c",line 3991,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3991| 
        LSR       AL,8                  ; [CPU_] |3991| 
        MOV       *XAR4++,AL            ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3989,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |3989| 
        ; branchcc occurs ; [] |3989| 
	.dwpsn	file "../Source/prod.c",line 3996,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3996| 
	.dwpsn	file "../Source/prod.c",line 3999,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3999| 
	.dwpsn	file "../Source/prod.c",line 3996,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3996| 
        MOV       *XAR4++,AL            ; [CPU_] |3996| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3999,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |3999| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4001,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4001| 
        ANDB      AL,#0xff              ; [CPU_] |4001| 
        MOV       *XAR4++,AL            ; [CPU_] |4001| 
	.dwpsn	file "../Source/prod.c",line 4002,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4002| 
        LSR       AL,8                  ; [CPU_] |4002| 
        MOV       *XAR4++,AL            ; [CPU_] |4002| 
	.dwpsn	file "../Source/prod.c",line 4000,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4000| 
        ; branchcc occurs ; [] |4000| 
	.dwpsn	file "../Source/prod.c",line 4007,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4007| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4007| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4009,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4009| 
        ANDB      AL,#0xff              ; [CPU_] |4009| 
        MOV       *XAR4++,AL            ; [CPU_] |4009| 
	.dwpsn	file "../Source/prod.c",line 4010,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4010| 
        LSR       AL,8                  ; [CPU_] |4010| 
        MOV       *XAR4++,AL            ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4008,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4008| 
        ; branchcc occurs ; [] |4008| 
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4015| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4021,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4021| 
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4018,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4015,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4018,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4021,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4021| 
	.dwpsn	file "../Source/prod.c",line 4018,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4018| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4018| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4023,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4023| 
        ANDB      AL,#0xff              ; [CPU_] |4023| 
        MOV       *XAR4++,AL            ; [CPU_] |4023| 
	.dwpsn	file "../Source/prod.c",line 4024,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4024| 
        LSR       AL,8                  ; [CPU_] |4024| 
        MOV       *XAR4++,AL            ; [CPU_] |4024| 
	.dwpsn	file "../Source/prod.c",line 4022,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4022| 
        ; branchcc occurs ; [] |4022| 
	.dwpsn	file "../Source/prod.c",line 3991,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 4029,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4029| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4029| 
        CMPB      AL,#2                 ; [CPU_] |4029| 
        B         $C$L267,EQ            ; [CPU_] |4029| 
        ; branchcc occurs ; [] |4029| 
	.dwpsn	file "../Source/prod.c",line 4067,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4067| 
        ADDB      ACC,#178              ; [CPU_] |4067| 
        MOVL      XAR5,ACC              ; [CPU_] |4067| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4065,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4065| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4069,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4069| 
        ANDB      AL,#0xff              ; [CPU_] |4069| 
        MOV       *XAR4++,AL            ; [CPU_] |4069| 
	.dwpsn	file "../Source/prod.c",line 4070,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4070| 
        LSR       AL,8                  ; [CPU_] |4070| 
        MOV       *XAR4++,AL            ; [CPU_] |4070| 
	.dwpsn	file "../Source/prod.c",line 4068,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4068| 
        ; branchcc occurs ; [] |4068| 
	.dwpsn	file "../Source/prod.c",line 4074,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4074| 
        ADDB      ACC,#200              ; [CPU_] |4074| 
        MOVL      XAR5,ACC              ; [CPU_] |4074| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4065,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4065| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4076,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4076| 
        ANDB      AL,#0xff              ; [CPU_] |4076| 
        MOV       *XAR4++,AL            ; [CPU_] |4076| 
	.dwpsn	file "../Source/prod.c",line 4077,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4077| 
        LSR       AL,8                  ; [CPU_] |4077| 
        MOV       *XAR4++,AL            ; [CPU_] |4077| 
	.dwpsn	file "../Source/prod.c",line 4075,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4075| 
        ; branchcc occurs ; [] |4075| 
        B         $C$L276,UNC           ; [CPU_] |4075| 
        ; branch occurs ; [] |4075| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4030,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4030| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4030| 
	.dwpsn	file "../Source/prod.c",line 4031,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4031| 
	.dwpsn	file "../Source/prod.c",line 4030,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4030| 
        INC       *-SP[61]              ; [CPU_] |4030| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4031,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |4031| 
        ; branch occurs ; [] |4031| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4033,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4033| 
        MOVL      XAR0,#40              ; [CPU_] |4033| 
        MOV       T,*-SP[57]            ; [CPU_] |4033| 
        MOVL      XAR6,ACC              ; [CPU_] |4033| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4033| 
        MOVB      AL,#76                ; [CPU_] |4033| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4033| 
        ADDL      ACC,XAR6              ; [CPU_] |4033| 
        LSL       ACC,1                 ; [CPU_] |4033| 
        ADDL      ACC,XAR7              ; [CPU_] |4033| 
        ADDB      ACC,#130              ; [CPU_] |4033| 
        MOVL      XAR7,ACC              ; [CPU_] |4033| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4035,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4035| 
        ANDB      AL,#0xff              ; [CPU_] |4035| 
        MOV       *XAR4++,AL            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4036,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4036| 
        LSR       AL,8                  ; [CPU_] |4036| 
        MOV       *XAR4++,AL            ; [CPU_] |4036| 
	.dwpsn	file "../Source/prod.c",line 4034,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |4034| 
        ; branchcc occurs ; [] |4034| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4042,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4042| 
        ANDB      AL,#0xff              ; [CPU_] |4042| 
        MOV       *XAR4++,AL            ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4043,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4043| 
        LSR       AL,8                  ; [CPU_] |4043| 
        MOV       *XAR4++,AL            ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4041,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4041| 
        ; branchcc occurs ; [] |4041| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4036,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4036| 
	.dwpsn	file "../Source/prod.c",line 4031,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4031| 
        MOV       PL,AL                 ; [CPU_] |4031| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4031,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4031| 
        MOV       AL,PL                 ; [CPU_] |4031| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4031| 
        B         $C$L268,LT            ; [CPU_] |4031| 
        ; branchcc occurs ; [] |4031| 
	.dwpsn	file "../Source/prod.c",line 4048,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4048| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4048| 
        ; branch occurs ; [] |4048| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4050,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4050| 
        MOVL      XAR0,#40              ; [CPU_] |4050| 
        MOV       T,*-SP[57]            ; [CPU_] |4050| 
        MOVL      P,ACC                 ; [CPU_] |4050| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4050| 
        MOVB      AL,#76                ; [CPU_] |4050| 
        MPYU      ACC,T,AL              ; [CPU_] |4050| 
        ADDL      ACC,P                 ; [CPU_] |4050| 
        LSL       ACC,1                 ; [CPU_] |4050| 
        ADDL      ACC,XAR6              ; [CPU_] |4050| 
        ADDB      ACC,#178              ; [CPU_] |4050| 
        MOVL      XAR7,ACC              ; [CPU_] |4050| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4052,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4052| 
        ANDB      AL,#0xff              ; [CPU_] |4052| 
        MOV       *XAR4++,AL            ; [CPU_] |4052| 
	.dwpsn	file "../Source/prod.c",line 4053,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4053| 
        LSR       AL,8                  ; [CPU_] |4053| 
        MOV       *XAR4++,AL            ; [CPU_] |4053| 
	.dwpsn	file "../Source/prod.c",line 4051,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4051| 
        ; branchcc occurs ; [] |4051| 
	.dwpsn	file "../Source/prod.c",line 4057,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4057| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4059,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4059| 
        ANDB      AL,#0xff              ; [CPU_] |4059| 
        MOV       *XAR4++,AL            ; [CPU_] |4059| 
	.dwpsn	file "../Source/prod.c",line 4060,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4060| 
        LSR       AL,8                  ; [CPU_] |4060| 
        MOV       *XAR4++,AL            ; [CPU_] |4060| 
	.dwpsn	file "../Source/prod.c",line 4058,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4058| 
        ; branchcc occurs ; [] |4058| 
	.dwpsn	file "../Source/prod.c",line 4048,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4048| 
	.dwpsn	file "../Source/prod.c",line 4053,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4053| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4064,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4064| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4064| 
        ADDB      AL,#-1                ; [CPU_] |4064| 
        CMP       AL,AR5                ; [CPU_] |4064| 
        B         $C$L272,GT            ; [CPU_] |4064| 
        ; branchcc occurs ; [] |4064| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4083,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4083| 
        ADDB      ACC,#222              ; [CPU_] |4083| 
        MOVL      XAR5,ACC              ; [CPU_] |4083| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4085,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4085| 
        ANDB      AL,#0xff              ; [CPU_] |4085| 
        MOV       *XAR4++,AL            ; [CPU_] |4085| 
	.dwpsn	file "../Source/prod.c",line 4086,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4086| 
        LSR       AL,8                  ; [CPU_] |4086| 
        MOV       *XAR4++,AL            ; [CPU_] |4086| 
	.dwpsn	file "../Source/prod.c",line 4084,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4084| 
        ; branchcc occurs ; [] |4084| 
	.dwpsn	file "../Source/prod.c",line 4091,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4091| 
        ADDB      ACC,#224              ; [CPU_] |4091| 
        MOVL      XAR5,ACC              ; [CPU_] |4091| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4093,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4093| 
        ANDB      AL,#0xff              ; [CPU_] |4093| 
        MOV       *XAR4++,AL            ; [CPU_] |4093| 
	.dwpsn	file "../Source/prod.c",line 4094,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4094| 
        LSR       AL,8                  ; [CPU_] |4094| 
        MOV       *XAR4++,AL            ; [CPU_] |4094| 
	.dwpsn	file "../Source/prod.c",line 4092,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4092| 
        ; branchcc occurs ; [] |4092| 
	.dwpsn	file "../Source/prod.c",line 4099,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4099| 
        ADDB      ACC,#228              ; [CPU_] |4099| 
        MOVL      XAR5,ACC              ; [CPU_] |4099| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4101,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4101| 
        ANDB      AL,#0xff              ; [CPU_] |4101| 
        MOV       *XAR4++,AL            ; [CPU_] |4101| 
	.dwpsn	file "../Source/prod.c",line 4102,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4102| 
        LSR       AL,8                  ; [CPU_] |4102| 
        MOV       *XAR4++,AL            ; [CPU_] |4102| 
	.dwpsn	file "../Source/prod.c",line 4100,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4100| 
        ; branchcc occurs ; [] |4100| 
	.dwpsn	file "../Source/prod.c",line 4107,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4107| 
        ADDB      ACC,#230              ; [CPU_] |4107| 
        MOVL      XAR5,ACC              ; [CPU_] |4107| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4109,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4109| 
        ANDB      AL,#0xff              ; [CPU_] |4109| 
        MOV       *XAR4++,AL            ; [CPU_] |4109| 
	.dwpsn	file "../Source/prod.c",line 4110,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4110| 
        LSR       AL,8                  ; [CPU_] |4110| 
        MOV       *XAR4++,AL            ; [CPU_] |4110| 
	.dwpsn	file "../Source/prod.c",line 4108,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4108| 
        ; branchcc occurs ; [] |4108| 
	.dwpsn	file "../Source/prod.c",line 4115,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4115| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4115| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4115| 
	.dwpsn	file "../Source/prod.c",line 4086,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4086| 
	.dwpsn	file "../Source/prod.c",line 4118,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4118| 
        ; branch occurs ; [] |4118| 
$C$L281:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3908,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3908| 
        B         $C$L320,LO            ; [CPU_] |3908| 
        ; branchcc occurs ; [] |3908| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3908| 
        MOVL      XAR0,#66              ; [CPU_] |3908| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3908| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3908| 
        B         $C$L320,LT            ; [CPU_] |3908| 
        ; branchcc occurs ; [] |3908| 
        CMPB      AL,#4                 ; [CPU_] |3908| 
        B         $C$L320,GEQ           ; [CPU_] |3908| 
        ; branchcc occurs ; [] |3908| 
	.dwpsn	file "../Source/prod.c",line 3912,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3912| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3912| 
	.dwpsn	file "../Source/prod.c",line 3914,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3914| 
        MOVL      XAR0,#40              ; [CPU_] |3914| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3914| 
        MPYB      ACC,T,#10             ; [CPU_] |3914| 
        ADDL      ACC,XAR6              ; [CPU_] |3914| 
        MOVL      XAR4,ACC              ; [CPU_] |3914| 
        MOVL      XAR7,ACC              ; [CPU_] |3914| 
        MOVB      XAR0,#42              ; [CPU_] |3914| 
        MOVL      P,ACC                 ; [CPU_] |3914| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3921,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3921| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3921| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3914,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3914| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3918,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3918| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3924,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3924| 
        ANDB      AL,#0xff              ; [CPU_] |3924| 
        MOV       *XAR4++,AL            ; [CPU_] |3924| 
	.dwpsn	file "../Source/prod.c",line 3925,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3925| 
        LSR       AL,8                  ; [CPU_] |3925| 
        MOV       *XAR4++,AL            ; [CPU_] |3925| 
	.dwpsn	file "../Source/prod.c",line 3922,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3922| 
        ; branchcc occurs ; [] |3922| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3932,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3932| 
        ANDB      AL,#0xff              ; [CPU_] |3932| 
        MOV       *XAR4++,AL            ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3933,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3933| 
        LSR       AL,8                  ; [CPU_] |3933| 
        MOV       *XAR4++,AL            ; [CPU_] |3933| 
	.dwpsn	file "../Source/prod.c",line 3930,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3930| 
        ; branchcc occurs ; [] |3930| 
	.dwpsn	file "../Source/prod.c",line 3937,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3937| 
        ADDB      XAR5,#46              ; [CPU_] |3937| 
        MOVL      XAR7,XAR5             ; [CPU_] |3937| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3940,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3940| 
        ANDB      AL,#0xff              ; [CPU_] |3940| 
        MOV       *XAR4++,AL            ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3941,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3941| 
        LSR       AL,8                  ; [CPU_] |3941| 
        MOV       *XAR4++,AL            ; [CPU_] |3941| 
	.dwpsn	file "../Source/prod.c",line 3938,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3938| 
        ; branchcc occurs ; [] |3938| 
	.dwpsn	file "../Source/prod.c",line 3945,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3945| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3948,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3948| 
        ANDB      AL,#0xff              ; [CPU_] |3948| 
        MOV       *XAR4++,AL            ; [CPU_] |3948| 
	.dwpsn	file "../Source/prod.c",line 3949,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3949| 
        LSR       AL,8                  ; [CPU_] |3949| 
        MOV       *XAR4++,AL            ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3946,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3946| 
        ; branchcc occurs ; [] |3946| 
	.dwpsn	file "../Source/prod.c",line 3918,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3918| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3956| 
        ANDB      AL,#0xff              ; [CPU_] |3956| 
        MOV       *XAR4++,AL            ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3957,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3957| 
        LSR       AL,8                  ; [CPU_] |3957| 
        MOV       *XAR4++,AL            ; [CPU_] |3957| 
	.dwpsn	file "../Source/prod.c",line 3954,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3954| 
        ; branchcc occurs ; [] |3954| 
        B         $C$L743,UNC           ; [CPU_] |3954| 
        ; branch occurs ; [] |3954| 
$C$L287:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3862,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3862| 
        B         $C$L320,LO            ; [CPU_] |3862| 
        ; branchcc occurs ; [] |3862| 
	.dwpsn	file "../Source/prod.c",line 3866,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3866| 
        B         $C$L288,EQ            ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
        CMPB      AL,#1                 ; [CPU_] |3866| 
        B         $C$L288,EQ            ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
        CMPB      AL,#2                 ; [CPU_] |3866| 
        B         $C$L288,EQ            ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
        ADDB      XAR4,#2               ; [CPU_] |3866| 
        MOVL      XAR0,#66              ; [CPU_] |3866| 
        CMPB      AL,#3                 ; [CPU_] |3866| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3866| 
        B         $C$L320,NEQ           ; [CPU_] |3866| 
        ; branchcc occurs ; [] |3866| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3872,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3872| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3872| 
        MOVL      XAR4,XAR5             ; [CPU_] |3872| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3872| 
        ADDB      XAR5,#2               ; [CPU_] |3872| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3872| 
        ADDB      XAR4,#6               ; [CPU_] |3872| 
        B         $C$L293,NEQ           ; [CPU_] |3872| 
        ; branchcc occurs ; [] |3872| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3873,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3873| 
        B         $C$L320,LO            ; [CPU_] |3873| 
        ; branchcc occurs ; [] |3873| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3878,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3878| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3880,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3880| 
        ADDL      ACC,XT                ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3881,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3881| 
	.dwpsn	file "../Source/prod.c",line 3879,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3879| 
        ; branchcc occurs ; [] |3879| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3884,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3884| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3885,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3885| 
        B         $C$L291,EQ            ; [CPU_] |3885| 
        ; branchcc occurs ; [] |3885| 
	.dwpsn	file "../Source/prod.c",line 3884,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3884| 
        ADDB      XAR4,#1               ; [CPU_] |3884| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3884| 
        ; branchcc occurs ; [] |3884| 
        B         $C$L292,UNC           ; [CPU_] |3884| 
        ; branch occurs ; [] |3884| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3886,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3886| 
        MOVB      XAR0,#35              ; [CPU_] |3886| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3886| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3890,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3890| 
        B         $C$L320,EQ            ; [CPU_] |3890| 
        ; branchcc occurs ; [] |3890| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3896,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3896| 
        MOVL      XAR0,#66              ; [CPU_] |3896| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3896| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3896| 
        ADDB      ACC,#2                ; [CPU_] |3896| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3896| 
        MOVB      XAR0,#34              ; [CPU_] |3896| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3896| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3896| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3896| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3896| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3899,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3899| 
        MOV       *XAR4++,AL            ; [CPU_] |3899| 
	.dwpsn	file "../Source/prod.c",line 3898,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3898| 
        MOV       AL,*-SP[59]           ; [CPU_] |3898| 
	.dwpsn	file "../Source/prod.c",line 3899,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3899| 
	.dwpsn	file "../Source/prod.c",line 3898,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3898| 
        B         $C$L294,HI            ; [CPU_] |3898| 
        ; branchcc occurs ; [] |3898| 
        B         $C$L304,UNC           ; [CPU_] |3898| 
        ; branch occurs ; [] |3898| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3846,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3846| 
        MOVB      XAR0,#34              ; [CPU_] |3846| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3846| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3848,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3846,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3846| 
        MOV       *-SP[61],#3           ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3848,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3848| 
        CMPB      AL,#1                 ; [CPU_] |3848| 
        B         $C$L296,EQ            ; [CPU_] |3848| 
        ; branchcc occurs ; [] |3848| 
        MOVB      XAR1,#34              ; [CPU_] |3848| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3848| 
        B         $C$L743,NEQ           ; [CPU_] |3848| 
        ; branchcc occurs ; [] |3848| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3850,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3850| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3850| 
        MOVL      XAR0,#74              ; [CPU_] |3850| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3850| 
        MOVL      XAR0,#44              ; [CPU_] |3850| 
        ADDL      ACC,XAR6              ; [CPU_] |3850| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3850| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3850| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3853,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3853| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3853| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3852,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3852| 
        ANDB      AL,#0xff              ; [CPU_] |3852| 
        MOV       *XAR4++,AL            ; [CPU_] |3852| 
	.dwpsn	file "../Source/prod.c",line 3853,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3853| 
        LSR       AL,8                  ; [CPU_] |3853| 
        MOV       *XAR4++,AL            ; [CPU_] |3853| 
	.dwpsn	file "../Source/prod.c",line 3851,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3851| 
        ; branchcc occurs ; [] |3851| 
        B         $C$L743,UNC           ; [CPU_] |3851| 
        ; branch occurs ; [] |3851| 
$C$L298:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3825,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3825| 
        B         $C$L320,LO            ; [CPU_] |3825| 
        ; branchcc occurs ; [] |3825| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3825| 
        MOVL      XAR0,#66              ; [CPU_] |3825| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3825| 
        ADDB      AL,#3                 ; [CPU_] |3825| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3825| 
        CMP       AL,*-SP[59]           ; [CPU_] |3825| 
        B         $C$L320,HI            ; [CPU_] |3825| 
        ; branchcc occurs ; [] |3825| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3830,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3830| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3830| 
        ; branch occurs ; [] |3830| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3831| 
        ADD       PL,AL                 ; [CPU_] |3831| 
        MOVL      ACC,XAR7              ; [CPU_] |3831| 
        ADD       ACC,PL                ; [CPU_] |3831| 
        MOVL      XAR7,ACC              ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3830,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3830| 
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3831| 
        MOV       *XAR4++,AL            ; [CPU_] |3831| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3830,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3830| 
        MOVL      XAR0,#66              ; [CPU_] |3830| 
        MOVL      ACC,XAR7              ; [CPU_] |3830| 
        ADDB      ACC,#2                ; [CPU_] |3830| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3830| 
        MOV       AL,AR6                ; [CPU_] |3830| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3830| 
        B         $C$L299,LT            ; [CPU_] |3830| 
        ; branchcc occurs ; [] |3830| 
	.dwpsn	file "../Source/prod.c",line 3833,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3833| 
        MOVL      XAR0,#76              ; [CPU_] |3833| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3833| 
	.dwpsn	file "../Source/prod.c",line 3836,column 5,is_stmt,isa 0
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_strlen")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3836| 
        ; call occurs [#_strlen] ; [] |3836| 
	.dwpsn	file "../Source/prod.c",line 3837,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3837| 
	.dwpsn	file "../Source/prod.c",line 3838,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3838| 
	.dwpsn	file "../Source/prod.c",line 3837,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3837| 
        MOV       *-SP[61],#3           ; [CPU_] |3837| 
	.dwpsn	file "../Source/prod.c",line 3838,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3838| 
        ; branchcc occurs ; [] |3838| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3838,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3838| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3839,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3839| 
	.dwpsn	file "../Source/prod.c",line 3838,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3838| 
	.dwpsn	file "../Source/prod.c",line 3839,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3839| 
        INC       *-SP[61]              ; [CPU_] |3839| 
	.dwpsn	file "../Source/prod.c",line 3838,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3838| 
        B         $C$L301,HI            ; [CPU_] |3838| 
        ; branchcc occurs ; [] |3838| 
	.dwpsn	file "../Source/prod.c",line 3842,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3842| 
        ; branch occurs ; [] |3842| 
$C$L302:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3805,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3805| 
        B         $C$L320,LO            ; [CPU_] |3805| 
        ; branchcc occurs ; [] |3805| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3810,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3810| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3810| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3812,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3812| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3812| 
	.dwpsn	file "../Source/prod.c",line 3813,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3813| 
        MOV       *XAR5++,AL            ; [CPU_] |3813| 
	.dwpsn	file "../Source/prod.c",line 3814,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3814| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3814| 
        MOV       *XAR4++,AL            ; [CPU_] |3814| 
	.dwpsn	file "../Source/prod.c",line 3815,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3815| 
        MOV       *XAR5++,AL            ; [CPU_] |3815| 
	.dwpsn	file "../Source/prod.c",line 3811,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3811| 
        ; branchcc occurs ; [] |3811| 
	.dwpsn	file "../Source/prod.c",line 3815,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3815| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3818,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3818| 
	.dwpsn	file "../Source/prod.c",line 3821,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3821| 
        ; branch occurs ; [] |3821| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5730 | cmd_mode = SCI_MODE_ASCII;                                             
; 5731 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5732 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5733 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5730| 
	.dwpsn	file "../Source/prod.c",line 5736,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5736 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_update_units")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5736| 
        ; call occurs [#_update_units] ; [] |5736| 
	.dwpsn	file "../Source/prod.c",line 5729,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5729| 
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5737 | break;                                                                 
; 5739 | default:                                                               
; 5741 | // send back NACK?                                                     
; 5743 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5737| 
        ; branch occurs ; [] |5737| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5723,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5723| 
	.dwpsn	file "../Source/prod.c",line 5725,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5725| 
        ; branch occurs ; [] |5725| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4360,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4360| 
	.dwpsn	file "../Source/prod.c",line 4361,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4361| 
        ; branch occurs ; [] |4361| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4356,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4356| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4356| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_ssr_set")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4356| 
        ; call occurs [#_ssr_set] ; [] |4356| 
	.dwpsn	file "../Source/prod.c",line 4357,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4357| 
        ; branch occurs ; [] |4357| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5664,column 5,is_stmt,isa 0
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_conf_read")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5664| 
        ; call occurs [#_conf_read] ; [] |5664| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5667,column 5,is_stmt,isa 0
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5667| 
        ; call occurs [#_ad7738_setcal] ; [] |5667| 
	.dwpsn	file "../Source/prod.c",line 5668,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5668| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5668| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5668| 
	.dwpsn	file "../Source/prod.c",line 5669,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5669| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5669| 
        ; call occurs [#_ad7738_resetvall] ; [] |5669| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5673,column 5,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_update_units")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5673| 
        ; call occurs [#_update_units] ; [] |5673| 
	.dwpsn	file "../Source/prod.c",line 5672,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5672| 
	.dwpsn	file "../Source/prod.c",line 5675,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5675| 
        ; branch occurs ; [] |5675| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5628,column 5,is_stmt,isa 0
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_conf_default")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5628| 
        ; call occurs [#_conf_default] ; [] |5628| 
	.dwpsn	file "../Source/prod.c",line 5631,column 5,is_stmt,isa 0
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5631| 
        ; call occurs [#_lcd_clear] ; [] |5631| 
	.dwpsn	file "../Source/prod.c",line 5632,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5632| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5632| 
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5632| 
        ; call occurs [#_lcd_puts] ; [] |5632| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5635,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5635| 
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_delay_us")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5635| 
        ; call occurs [#_delay_us] ; [] |5635| 
	.dwpsn	file "../Source/prod.c",line 5634,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5634| 
        ; branchcc occurs ; [] |5634| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5639,column 5,is_stmt,isa 0
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_conf_write")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5639| 
        ; call occurs [#_conf_write] ; [] |5639| 
        MOVZ      AR1,AL                ; [CPU_] |5639| 
	.dwpsn	file "../Source/prod.c",line 5640,column 5,is_stmt,isa 0
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5640| 
        ; call occurs [#_ad7738_setcal] ; [] |5640| 
	.dwpsn	file "../Source/prod.c",line 5641,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5641| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5641| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5641| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5642| 
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5642| 
        ; call occurs [#_ad7738_resetvall] ; [] |5642| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5645,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5645| 
        ; branchcc occurs ; [] |5645| 
	.dwpsn	file "../Source/prod.c",line 5646,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5646| 
        MOVB      AL,#31                ; [CPU_] |5646| 
        SPM       #0                    ; [CPU_] 
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5646| 
        ; call occurs [#_lcd_puts] ; [] |5646| 
	.dwpsn	file "../Source/prod.c",line 5647,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5647| 
	.dwpsn	file "../Source/prod.c",line 5648,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5648| 
	.dwpsn	file "../Source/prod.c",line 5649,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5649| 
        ; branch occurs ; [] |5649| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5650,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5650| 
        MOVB      AL,#31                ; [CPU_] |5650| 
        SPM       #0                    ; [CPU_] 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5650| 
        ; call occurs [#_lcd_puts] ; [] |5650| 
	.dwpsn	file "../Source/prod.c",line 5651,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5651| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5654,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5654| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_delay_us")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5654| 
        ; call occurs [#_delay_us] ; [] |5654| 
	.dwpsn	file "../Source/prod.c",line 5653,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5653| 
        ; branchcc occurs ; [] |5653| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5656,column 5,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5656| 
        ; call occurs [#_lcd_clear] ; [] |5656| 
	.dwpsn	file "../Source/prod.c",line 5657,column 5,is_stmt,isa 0
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_update_units")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5657| 
        ; call occurs [#_update_units] ; [] |5657| 
$C$L317:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5746,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5746 | switch (bincmdresult) {                                                
; 5747 | case OK_SendResult:                                                    
; 5748 |         scia_send_bin(buff, j);         // send back                   
; 5750 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5751 |                 delay_us(2000);                 // 2ms                 
; 5752 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5754 |         break;                                                         
; 5756 | case Error_UnImpl:                                                     
; 5758 |         buff[1] = CmdUnImpl;                                           
; 5759 |         buff[2] = cmdbuff[1];                                          
; 5760 |         scia_send_bin(buff, 3);         // send back                   
; 5761 |         break;                                                         
; 5763 | case Error_Invalid:                                                    
; 5765 |         buff[1] = CmdInvalid;                                          
; 5766 |         buff[2] = cmdbuff[1];                                          
; 5767 |         scia_send_bin(buff, 3);         // send back                   
; 5768 |         break;                                                         
; 5770 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5746| 
        ; branchcc occurs ; [] |5746| 
        CMPB      AL,#1                 ; [CPU_] |5746| 
        B         $C$L321,EQ            ; [CPU_] |5746| 
        ; branchcc occurs ; [] |5746| 
        CMPB      AL,#2                 ; [CPU_] |5746| 
        B         $C$L320,EQ            ; [CPU_] |5746| 
        ; branchcc occurs ; [] |5746| 
        CMPB      AL,#3                 ; [CPU_] |5746| 
        B         $C$L634,NEQ           ; [CPU_] |5746| 
        ; branchcc occurs ; [] |5746| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5772,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5772 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5772| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5772| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5773,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5773 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5773| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5773| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5773| 
	.dwpsn	file "../Source/prod.c",line 5774,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5774 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5774| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5774| 
        ; call occurs [#_scia_send_bin] ; [] |5774| 
	.dwpsn	file "../Source/prod.c",line 5775,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5775 | break;                                                                 
; 5777 | default:                                                               
; 5779 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5775| 
        ; branch occurs ; [] |5775| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5765,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5765| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5765| 
	.dwpsn	file "../Source/prod.c",line 5768,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5768| 
        ; branch occurs ; [] |5768| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5758,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5758| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5758| 
	.dwpsn	file "../Source/prod.c",line 5761,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5761| 
        ; branch occurs ; [] |5761| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 988,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |988| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |988| 
        CMPB      AL,#79                ; [CPU_] |988| 
        B         $C$L324,GT            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#79                ; [CPU_] |988| 
        B         $C$L443,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#69                ; [CPU_] |988| 
        B         $C$L323,GT            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#69                ; [CPU_] |988| 
        B         $C$L507,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#66                ; [CPU_] |988| 
        B         $C$L591,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#67                ; [CPU_] |988| 
        B         $C$L530,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#68                ; [CPU_] |988| 
        B         $C$L514,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        B         $C$L625,UNC           ; [CPU_] |988| 
        ; branch occurs ; [] |988| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |988| 
        B         $C$L498,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#72                ; [CPU_] |988| 
        B         $C$L630,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#76                ; [CPU_] |988| 
        B         $C$L466,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        B         $C$L625,UNC           ; [CPU_] |988| 
        ; branch occurs ; [] |988| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |988| 
        B         $C$L325,GT            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#85                ; [CPU_] |988| 
        B         $C$L326,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#80                ; [CPU_] |988| 
        B         $C$L429,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#82                ; [CPU_] |988| 
        B         $C$L414,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#83                ; [CPU_] |988| 
        B         $C$L351,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        B         $C$L625,UNC           ; [CPU_] |988| 
        ; branch occurs ; [] |988| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |988| 
        B         $C$L628,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        CMPB      AL,#90                ; [CPU_] |988| 
        B         $C$L626,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        B         $C$L625,UNC           ; [CPU_] |988| 
        ; branch occurs ; [] |988| 
$C$L326:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1156| 
        B         $C$L625,LO            ; [CPU_] |1156| 
        ; branchcc occurs ; [] |1156| 
	.dwpsn	file "../Source/prod.c",line 1159,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1159| 
        CMPB      AL,#73                ; [CPU_] |1159| 
        B         $C$L327,GT            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        CMPB      AL,#73                ; [CPU_] |1159| 
        B         $C$L338,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        CMPB      AL,#66                ; [CPU_] |1159| 
        B         $C$L330,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        CMPB      AL,#67                ; [CPU_] |1159| 
        B         $C$L347,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        CMPB      AL,#70                ; [CPU_] |1159| 
        B         $C$L344,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        B         $C$L625,UNC           ; [CPU_] |1159| 
        ; branch occurs ; [] |1159| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1159| 
        B         $C$L328,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        CMPB      AL,#83                ; [CPU_] |1159| 
        B         $C$L337,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        CMPB      AL,#87                ; [CPU_] |1159| 
        B         $C$L336,EQ            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
        B         $C$L625,UNC           ; [CPU_] |1159| 
        ; branch occurs ; [] |1159| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1176,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1176| 
        MOVL      XAR0,#44              ; [CPU_] |1176| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1176| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1176| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1176| 
        MOVL      XAR4,XAR1             ; [CPU_] |1176| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_sprintf")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1176| 
        ; call occurs [#_sprintf] ; [] |1176| 
	.dwpsn	file "../Source/prod.c",line 1177,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1177| 
        MOV       AL,#1024              ; [CPU_] |1177| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1177| 
	.dwpsn	file "../Source/prod.c",line 1176,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1176| 
	.dwpsn	file "../Source/prod.c",line 1177,column 6,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1177| 
        ; call occurs [#_scia_getparam] ; [] |1177| 
        CMPB      AL,#31                ; [CPU_] |1177| 
        B         $C$L329,LOS           ; [CPU_] |1177| 
        ; branchcc occurs ; [] |1177| 
	.dwpsn	file "../Source/prod.c",line 1181,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1181| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1181| 
	.dwpsn	file "../Source/prod.c",line 1180,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1180| 
	.dwpsn	file "../Source/prod.c",line 1181,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1181| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1181| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1184,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1184| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1184| 
        MOVL      XAR0,#86              ; [CPU_] |1184| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1184| 
        MOVB      AH,#1                 ; [CPU_] |1184| 
        ADD       AH,AL                 ; [CPU_] |1184| 
        MOVU      ACC,AH                ; [CPU_] |1184| 
        MOVL      XAR5,XAR1             ; [CPU_] |1184| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_memcpy")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1184| 
        ; call occurs [#_memcpy] ; [] |1184| 
        MOVL      XAR4,XAR1             ; [CPU_] |1184| 
	.dwpsn	file "../Source/prod.c",line 1188,column 6,is_stmt,isa 0
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_scia_puts")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1188| 
        ; call occurs [#_scia_puts] ; [] |1188| 
	.dwpsn	file "../Source/prod.c",line 1189,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1189| 
	.dwpsn	file "../Source/prod.c",line 1191,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1191| 
        ; branch occurs ; [] |1191| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1281,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1281| 
        MOVB      XAR0,#34              ; [CPU_] |1281| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1281| 
        CMPB      AL,#3                 ; [CPU_] |1281| 
        B         $C$L335,EQ            ; [CPU_] |1281| 
        ; branchcc occurs ; [] |1281| 
        MOVB      XAR1,#34              ; [CPU_] |1281| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1281| 
        CMPB      AL,#2                 ; [CPU_] |1281| 
        B         $C$L335,EQ            ; [CPU_] |1281| 
        ; branchcc occurs ; [] |1281| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1288,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1288| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1288| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1289,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1289| 
        MOVL      XAR0,#44              ; [CPU_] |1289| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1289| 
        MOV       *-SP[3],AL            ; [CPU_] |1289| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1289| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1289| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1289| 
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_sprintf")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1289| 
        ; call occurs [#_sprintf] ; [] |1289| 
        MOVL      XAR0,#44              ; [CPU_] |1289| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1289| 
	.dwpsn	file "../Source/prod.c",line 1290,column 7,is_stmt,isa 0
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_scia_puts")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1290| 
        ; call occurs [#_scia_puts] ; [] |1290| 
        MOV       AL,*-SP[47]           ; [CPU_] |1290| 
	.dwpsn	file "../Source/prod.c",line 1291,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1291| 
        B         $C$L332,GEQ           ; [CPU_] |1291| 
        ; branchcc occurs ; [] |1291| 
	.dwpsn	file "../Source/prod.c",line 1292,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1292| 
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_puts")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1292| 
        ; call occurs [#_scia_puts] ; [] |1292| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1288,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1288| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1288| 
        B         $C$L331,LT            ; [CPU_] |1288| 
        ; branchcc occurs ; [] |1288| 
	.dwpsn	file "../Source/prod.c",line 1295,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1295| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_scia_puts")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1295| 
        ; call occurs [#_scia_puts] ; [] |1295| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1296,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1296| 
        MOVB      XAR0,#35              ; [CPU_] |1296| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1296| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1296| 
        MOV       *-SP[3],AL            ; [CPU_] |1296| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1296| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1296| 
        MOVL      XAR0,#74              ; [CPU_] |1296| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1296| 
        ADDL      ACC,XAR6              ; [CPU_] |1296| 
        MOVL      XAR4,ACC              ; [CPU_] |1296| 
        MOVL      XAR0,#44              ; [CPU_] |1296| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1296| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1296| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1296| 
        MOVL      XAR4,XAR1             ; [CPU_] |1296| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_sprintf")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1296| 
        ; call occurs [#_sprintf] ; [] |1296| 
	.dwpsn	file "../Source/prod.c",line 1299,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1299| 
	.dwpsn	file "../Source/prod.c",line 1296,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1296| 
	.dwpsn	file "../Source/prod.c",line 1299,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1299| 
	.dwpsn	file "../Source/prod.c",line 1296,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1296| 
	.dwpsn	file "../Source/prod.c",line 1299,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1299| 
        MOVL      XAR5,XAR1             ; [CPU_] |1299| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1299| 
        ; call occurs [#_scia_getparam] ; [] |1299| 
        MOVL      XAR4,XAR1             ; [CPU_] |1299| 
	.dwpsn	file "../Source/prod.c",line 1300,column 6,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1300| 
        ; call occurs [#_scia_puts] ; [] |1300| 
	.dwpsn	file "../Source/prod.c",line 1301,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1301| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_scia_puts")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1301| 
        ; call occurs [#_scia_puts] ; [] |1301| 
        MOV       AL,*-SP[47]           ; [CPU_] |1301| 
	.dwpsn	file "../Source/prod.c",line 1302,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1302| 
        ; branchcc occurs ; [] |1302| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1307,column 6,is_stmt,isa 0
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_atoi")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1307| 
        ; call occurs [#_atoi] ; [] |1307| 
        CMPB      AL,#7                 ; [CPU_] |1307| 
        B         $C$L333,HI            ; [CPU_] |1307| 
        ; branchcc occurs ; [] |1307| 
	.dwpsn	file "../Source/prod.c",line 1313,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1313| 
        MOVB      XAR1,#35              ; [CPU_] |1313| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1313| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1314| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1314| 
	.dwpsn	file "../Source/prod.c",line 1313,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1313| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1314| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1314| 
        MOVL      XAR0,#74              ; [CPU_] |1314| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1314| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1321| 
        ; branch occurs ; [] |1321| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1309,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1309| 
	.dwpsn	file "../Source/prod.c",line 1311,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1311| 
        ; branch occurs ; [] |1311| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1303,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1303| 
	.dwpsn	file "../Source/prod.c",line 1305,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1305| 
        ; branch occurs ; [] |1305| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1283,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1283| 
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1285| 
        ; branch occurs ; [] |1285| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1354,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1354| 
        MOVB      XAR0,#40              ; [CPU_] |1354| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1354| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1354| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1354| 
        MOVL      XAR0,#44              ; [CPU_] |1354| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1354| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1354| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_sprintf")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1354| 
        ; call occurs [#_sprintf] ; [] |1354| 
        MOVL      XAR0,#44              ; [CPU_] |1354| 
	.dwpsn	file "../Source/prod.c",line 1356,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1354,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1354| 
	.dwpsn	file "../Source/prod.c",line 1356,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1356| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1356| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1356| 
        ; call occurs [#_scia_getparam] ; [] |1356| 
        MOVL      XAR0,#86              ; [CPU_] |1356| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1356,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1356| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_strtod")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1357,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1357| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1357| 
        MOVB      XAR1,#40              ; [CPU_] |1357| 
        MOVL      XAR0,#86              ; [CPU_] |1357| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1357| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1357| 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_scia_puts")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1358| 
        ; call occurs [#_scia_puts] ; [] |1358| 
	.dwpsn	file "../Source/prod.c",line 1359,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1359| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_puts")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1359| 
        ; call occurs [#_scia_puts] ; [] |1359| 
	.dwpsn	file "../Source/prod.c",line 1361,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1361| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1361| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1361| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1361| 
        MOVB      XAR1,#40              ; [CPU_] |1361| 
        MOVL      XAR0,#44              ; [CPU_] |1361| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1361| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1361| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1361| 
        MOVL      XAR4,XAR1             ; [CPU_] |1361| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_sprintf")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1361| 
        ; call occurs [#_sprintf] ; [] |1361| 
        MOVL      XAR4,XAR1             ; [CPU_] |1361| 
	.dwpsn	file "../Source/prod.c",line 1363,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1363| 
        ; call occurs [#_scia_puts] ; [] |1363| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1367,column 6,is_stmt,isa 0
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1367| 
        ; call occurs [#_ad7738_setcal] ; [] |1367| 
	.dwpsn	file "../Source/prod.c",line 1370,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1370| 
        ; branch occurs ; [] |1370| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1164,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1164| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1164| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1164| 
        MOV       AL,#1024              ; [CPU_] |1164| 
        MOVL      XAR5,XAR1             ; [CPU_] |1164| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1164| 
        ; call occurs [#_scia_getparam] ; [] |1164| 
        MOVL      XAR4,XAR1             ; [CPU_] |1164| 
	.dwpsn	file "../Source/prod.c",line 1166,column 6,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_atol")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1166| 
        ; call occurs [#_atol] ; [] |1166| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1166| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1168| 
	.dwpsn	file "../Source/prod.c",line 1166,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1166| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1168| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1168| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1168| 
	.dwpsn	file "../Source/prod.c",line 1171,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1171| 
        ; branch occurs ; [] |1171| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1246,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1246| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1246| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1247| 
        MOVL      XAR0,#44              ; [CPU_] |1247| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1247| 
        MOV       *-SP[3],AL            ; [CPU_] |1247| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1247| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1247| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1247| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_sprintf")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1247| 
        ; call occurs [#_sprintf] ; [] |1247| 
        MOVL      XAR0,#44              ; [CPU_] |1247| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1247| 
	.dwpsn	file "../Source/prod.c",line 1248,column 7,is_stmt,isa 0
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1248| 
        ; call occurs [#_scia_puts] ; [] |1248| 
        MOV       AL,*-SP[47]           ; [CPU_] |1248| 
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1249| 
        B         $C$L340,GEQ           ; [CPU_] |1249| 
        ; branchcc occurs ; [] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1250| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_scia_puts")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1250| 
        ; call occurs [#_scia_puts] ; [] |1250| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1246,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1246| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1246| 
        B         $C$L339,LT            ; [CPU_] |1246| 
        ; branchcc occurs ; [] |1246| 
	.dwpsn	file "../Source/prod.c",line 1253,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1253| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_puts")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1253| 
        ; call occurs [#_scia_puts] ; [] |1253| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1254| 
        MOVB      XAR0,#34              ; [CPU_] |1254| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1254| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1254| 
        MOV       *-SP[3],AL            ; [CPU_] |1254| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1254| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1254| 
        MOVL      XAR0,#72              ; [CPU_] |1254| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1254| 
        ADDL      ACC,XAR6              ; [CPU_] |1254| 
        MOVL      XAR4,ACC              ; [CPU_] |1254| 
        MOVL      XAR0,#44              ; [CPU_] |1254| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1254| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1254| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1254| 
        MOVL      XAR4,XAR1             ; [CPU_] |1254| 
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_sprintf")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1254| 
        ; call occurs [#_sprintf] ; [] |1254| 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1256| 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1256| 
        MOV       AL,#1024              ; [CPU_] |1256| 
        MOVL      XAR5,XAR1             ; [CPU_] |1256| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1256| 
        ; call occurs [#_scia_getparam] ; [] |1256| 
        MOV       *-SP[47],AL           ; [CPU_] |1256| 
        MOVL      XAR4,XAR1             ; [CPU_] |1256| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_puts")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1257| 
        ; call occurs [#_scia_puts] ; [] |1257| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1258| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_scia_puts")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1258| 
        ; call occurs [#_scia_puts] ; [] |1258| 
        MOV       AL,*-SP[47]           ; [CPU_] |1258| 
	.dwpsn	file "../Source/prod.c",line 1259,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1259| 
        ; branchcc occurs ; [] |1259| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1263,column 6,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_atoi")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1263| 
        ; call occurs [#_atoi] ; [] |1263| 
        CMPB      AL,#3                 ; [CPU_] |1263| 
        B         $C$L342,HI            ; [CPU_] |1263| 
        ; branchcc occurs ; [] |1263| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1269| 
        MOVB      XAR1,#34              ; [CPU_] |1269| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1270,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1270| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1270| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1270,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1270| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1270| 
        MOVL      XAR0,#72              ; [CPU_] |1270| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1270| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1270| 
        MOVL      XAR4,ACC              ; [CPU_] |1270| 
        MOVL      XAR0,#44              ; [CPU_] |1270| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1270| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1270| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1270| 
        MOVL      XAR4,XAR1             ; [CPU_] |1270| 
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_sprintf")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1270| 
        ; call occurs [#_sprintf] ; [] |1270| 
        MOVL      XAR4,XAR1             ; [CPU_] |1270| 
	.dwpsn	file "../Source/prod.c",line 1273,column 6,is_stmt,isa 0
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1273| 
        ; call occurs [#_scia_puts] ; [] |1273| 
	.dwpsn	file "../Source/prod.c",line 1274,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1274| 
	.dwpsn	file "../Source/prod.c",line 1277,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1277| 
        ; branch occurs ; [] |1277| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1265,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1265| 
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1267| 
        ; branch occurs ; [] |1267| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1260,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1260| 
	.dwpsn	file "../Source/prod.c",line 1261,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1261| 
        ; branch occurs ; [] |1261| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1327,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1327| 
        MOVL      XAR0,#44              ; [CPU_] |1327| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1327| 
        MOV       *-SP[3],#4096         ; [CPU_] |1327| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1327| 
        MOVL      XAR4,XAR1             ; [CPU_] |1327| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_sprintf")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1327| 
        ; call occurs [#_sprintf] ; [] |1327| 
	.dwpsn	file "../Source/prod.c",line 1329,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1329| 
	.dwpsn	file "../Source/prod.c",line 1327,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1327| 
	.dwpsn	file "../Source/prod.c",line 1329,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1329| 
        MOV       AL,#1024              ; [CPU_] |1329| 
        MOVL      XAR5,XAR1             ; [CPU_] |1329| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1329| 
        ; call occurs [#_scia_getparam] ; [] |1329| 
	.dwpsn	file "../Source/prod.c",line 1330,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1330| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_atoi")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1330| 
        ; call occurs [#_atoi] ; [] |1330| 
        MOV       *-SP[47],AL           ; [CPU_] |1330| 
	.dwpsn	file "../Source/prod.c",line 1331,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1331| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_puts")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1331| 
        ; call occurs [#_scia_puts] ; [] |1331| 
        MOV       AL,*-SP[47]           ; [CPU_] |1331| 
	.dwpsn	file "../Source/prod.c",line 1333,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1333| 
        ; branchcc occurs ; [] |1333| 
        CMP       AL,#4096              ; [CPU_] |1333| 
        B         $C$L346,GT            ; [CPU_] |1333| 
        ; branchcc occurs ; [] |1333| 
	.dwpsn	file "../Source/prod.c",line 1338,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1338| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_puts")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1338| 
        ; call occurs [#_scia_puts] ; [] |1338| 
	.dwpsn	file "../Source/prod.c",line 1340,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1340| 
        MOVL      XAR0,#44              ; [CPU_] |1340| 
        MOV       AL,*-SP[47]           ; [CPU_] |1340| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1340| 
        MOV       *-SP[3],AL            ; [CPU_] |1340| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1340| 
        MOVL      XAR4,XAR1             ; [CPU_] |1340| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_sprintf")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1340| 
        ; call occurs [#_sprintf] ; [] |1340| 
        MOVL      XAR4,XAR1             ; [CPU_] |1340| 
	.dwpsn	file "../Source/prod.c",line 1342,column 6,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1342| 
        ; call occurs [#_scia_puts] ; [] |1342| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1347| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1347| 
        MOV       AL,*-SP[47]           ; [CPU_] |1347| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1347| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1348,column 6,is_stmt,isa 0
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_maf_rst")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1348| 
        ; call occurs [#_maf_rst] ; [] |1348| 
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1350| 
        ; branch occurs ; [] |1350| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1335,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1335| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1335| 
        ; call occurs [#_scia_puts] ; [] |1335| 
	.dwpsn	file "../Source/prod.c",line 1326,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1326| 
        ; branch occurs ; [] |1326| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1198,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1198| 
        MOVL      XAR0,#44              ; [CPU_] |1198| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1198| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1198| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1198| 
        MOVL      XAR4,XAR1             ; [CPU_] |1198| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_sprintf")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1198| 
        ; call occurs [#_sprintf] ; [] |1198| 
	.dwpsn	file "../Source/prod.c",line 1199,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1199| 
	.dwpsn	file "../Source/prod.c",line 1198,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1198| 
	.dwpsn	file "../Source/prod.c",line 1199,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1199| 
        MOV       AL,#1024              ; [CPU_] |1199| 
        MOVL      XAR5,XAR1             ; [CPU_] |1199| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1199| 
        ; call occurs [#_scia_getparam] ; [] |1199| 
	.dwpsn	file "../Source/prod.c",line 1200,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1200| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_atoi")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1200| 
        ; call occurs [#_atoi] ; [] |1200| 
        MOV       *-SP[58],AL           ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1201| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_scia_puts")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1201| 
        ; call occurs [#_scia_puts] ; [] |1201| 
        MOV       AL,*-SP[58]           ; [CPU_] |1201| 
	.dwpsn	file "../Source/prod.c",line 1203,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1203| 
        CMPB      AL,#4                 ; [CPU_] |1203| 
        B         $C$L350,HIS           ; [CPU_] |1203| 
        ; branchcc occurs ; [] |1203| 
	.dwpsn	file "../Source/prod.c",line 1207,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1207| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_puts")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1207| 
        ; call occurs [#_scia_puts] ; [] |1207| 
	.dwpsn	file "../Source/prod.c",line 1208,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1208| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1213,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1213| 
        MOVL      XAR0,#44              ; [CPU_] |1213| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1213| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1213| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1213| 
        MOVL      XAR4,XAR1             ; [CPU_] |1213| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_sprintf")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1213| 
        ; call occurs [#_sprintf] ; [] |1213| 
	.dwpsn	file "../Source/prod.c",line 1214,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1214| 
	.dwpsn	file "../Source/prod.c",line 1213,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1213| 
	.dwpsn	file "../Source/prod.c",line 1214,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1214| 
        MOV       AL,#1024              ; [CPU_] |1214| 
        MOVL      XAR5,XAR1             ; [CPU_] |1214| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1214| 
        ; call occurs [#_scia_getparam] ; [] |1214| 
	.dwpsn	file "../Source/prod.c",line 1215,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1215| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_atoi")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1215| 
        ; call occurs [#_atoi] ; [] |1215| 
        MOV       *-SP[57],AL           ; [CPU_] |1215| 
	.dwpsn	file "../Source/prod.c",line 1216,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1216| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1216| 
        ; call occurs [#_scia_puts] ; [] |1216| 
        MOV       AL,*-SP[57]           ; [CPU_] |1216| 
	.dwpsn	file "../Source/prod.c",line 1220,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1220| 
        CMPB      AL,#20                ; [CPU_] |1220| 
        B         $C$L349,HIS           ; [CPU_] |1220| 
        ; branchcc occurs ; [] |1220| 
	.dwpsn	file "../Source/prod.c",line 1224,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1224| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_puts")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1224| 
        ; call occurs [#_scia_puts] ; [] |1224| 
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1227| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1227| 
        MOVL      XAR0,#44              ; [CPU_] |1227| 
        MOV       AH,*-SP[57]           ; [CPU_] |1227| 
        ADD       AL,*-SP[58]           ; [CPU_] |1227| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1227| 
        MOV       *-SP[3],AL            ; [CPU_] |1227| 
        MOV       *-SP[4],AH            ; [CPU_] |1227| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1227| 
        DEC       *-SP[57]              ; [CPU_] |1227| 
        MOVL      XAR4,XAR1             ; [CPU_] |1227| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_sprintf")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1227| 
        ; call occurs [#_sprintf] ; [] |1227| 
        MOVL      XAR4,XAR1             ; [CPU_] |1227| 
	.dwpsn	file "../Source/prod.c",line 1229,column 6,is_stmt,isa 0
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1229| 
        ; call occurs [#_scia_puts] ; [] |1229| 
        MOV       AL,*-SP[57]           ; [CPU_] |1229| 
	.dwpsn	file "../Source/prod.c",line 1230,column 6,is_stmt,isa 0
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_print_sensor")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1230| 
        ; call occurs [#_print_sensor] ; [] |1230| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1234,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1234| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1234| 
        MOVB      AL,#10                ; [CPU_] |1234| 
        MOV       T,*-SP[58]            ; [CPU_] |1234| 
        MPYU      ACC,T,AL              ; [CPU_] |1234| 
        ADDL      ACC,XAR6              ; [CPU_] |1234| 
        MOVL      XAR4,ACC              ; [CPU_] |1234| 
        MOVB      XAR0,#42              ; [CPU_] |1234| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1234| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1235| 
        ; call occurs [#_ad7738_setcal] ; [] |1235| 
        MOVL      XAR0,#78              ; [CPU_] |1235| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1237,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1237| 
        MOVL      XAR1,ACC              ; [CPU_] |1237| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1237| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1237| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1237| 
	.dwpsn	file "../Source/prod.c",line 1238,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1238| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1238| 
        ; call occurs [#_ad7738_resetvall] ; [] |1238| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1242| 
        ; branch occurs ; [] |1242| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1222,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1222| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_puts")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1222| 
        ; call occurs [#_scia_puts] ; [] |1222| 
	.dwpsn	file "../Source/prod.c",line 1212,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1212| 
        ; branch occurs ; [] |1212| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1205,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1205| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_scia_puts")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1205| 
        ; call occurs [#_scia_puts] ; [] |1205| 
	.dwpsn	file "../Source/prod.c",line 1197,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1197| 
        ; branch occurs ; [] |1197| 
$C$L351:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2058,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2058| 
        B         $C$L625,LO            ; [CPU_] |2058| 
        ; branchcc occurs ; [] |2058| 
	.dwpsn	file "../Source/prod.c",line 2063,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2063| 
        CMPB      AL,#78                ; [CPU_] |2063| 
        B         $C$L352,EQ            ; [CPU_] |2063| 
        ; branchcc occurs ; [] |2063| 
        CMPB      AL,#85                ; [CPU_] |2063| 
        B         $C$L352,EQ            ; [CPU_] |2063| 
        ; branchcc occurs ; [] |2063| 
        CMPB      AL,#66                ; [CPU_] |2063| 
        B         $C$L352,EQ            ; [CPU_] |2063| 
        ; branchcc occurs ; [] |2063| 
        CMPB      AL,#68                ; [CPU_] |2063| 
        B         $C$L625,NEQ           ; [CPU_] |2063| 
        ; branchcc occurs ; [] |2063| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2066,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2066| 
	.dwpsn	file "../Source/prod.c",line 2087,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2087| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2089,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2089| 
        MOVL      XAR0,#44              ; [CPU_] |2089| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2089| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2089| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2089| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_sprintf")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2089| 
        ; call occurs [#_sprintf] ; [] |2089| 
        MOVL      XAR0,#44              ; [CPU_] |2089| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2090| 
	.dwpsn	file "../Source/prod.c",line 2089,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2089| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2090| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2090| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2090| 
        ; call occurs [#_scia_getparam] ; [] |2090| 
        MOVL      XAR0,#86              ; [CPU_] |2090| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2090| 
	.dwpsn	file "../Source/prod.c",line 2091,column 6,is_stmt,isa 0
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_atoi")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2091| 
        ; call occurs [#_atoi] ; [] |2091| 
        MOVL      XAR0,#86              ; [CPU_] |2091| 
        MOV       *-SP[57],AL           ; [CPU_] |2091| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2091| 
	.dwpsn	file "../Source/prod.c",line 2092,column 6,is_stmt,isa 0
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_puts")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2092| 
        ; call occurs [#_scia_puts] ; [] |2092| 
        MOV       AL,*-SP[57]           ; [CPU_] |2092| 
	.dwpsn	file "../Source/prod.c",line 2096,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2096| 
        CMPB      AL,#20                ; [CPU_] |2096| 
        B         $C$L413,HIS           ; [CPU_] |2096| 
        ; branchcc occurs ; [] |2096| 
	.dwpsn	file "../Source/prod.c",line 2100,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2100| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_puts")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2100| 
        ; call occurs [#_scia_puts] ; [] |2100| 
	.dwpsn	file "../Source/prod.c",line 2101,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2101| 
	.dwpsn	file "../Source/prod.c",line 2103,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2103| 
        CMPB      AL,#66                ; [CPU_] |2103| 
        B         $C$L408,EQ            ; [CPU_] |2103| 
        ; branchcc occurs ; [] |2103| 
        CMPB      AL,#68                ; [CPU_] |2103| 
        B         $C$L407,EQ            ; [CPU_] |2103| 
        ; branchcc occurs ; [] |2103| 
        CMPB      AL,#78                ; [CPU_] |2103| 
        B         $C$L403,EQ            ; [CPU_] |2103| 
        ; branchcc occurs ; [] |2103| 
        CMPB      AL,#85                ; [CPU_] |2103| 
        B         $C$L625,NEQ           ; [CPU_] |2103| 
        ; branchcc occurs ; [] |2103| 
	.dwpsn	file "../Source/prod.c",line 2132,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2130,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2130| 
        MOV       AH,#0                 ; [CPU_] |2130| 
	.dwpsn	file "../Source/prod.c",line 2132,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2132| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2130,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2130| 
	.dwpsn	file "../Source/prod.c",line 2132,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2132| 
        MPYU      ACC,T,AL              ; [CPU_] |2132| 
        ADDL      ACC,XAR6              ; [CPU_] |2132| 
        ADDB      ACC,#124              ; [CPU_] |2132| 
        MOVL      XAR1,ACC              ; [CPU_] |2132| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2132| 
        CMPB      AL,#35                ; [CPU_] |2132| 
        B         $C$L354,GT            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        CMPB      AL,#35                ; [CPU_] |2132| 
        B         $C$L370,EQ            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        CMPB      AL,#16                ; [CPU_] |2132| 
        B         $C$L390,EQ            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        CMPB      AL,#17                ; [CPU_] |2132| 
        B         $C$L386,EQ            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        CMPB      AL,#34                ; [CPU_] |2132| 
        B         $C$L377,EQ            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        B         $C$L394,UNC           ; [CPU_] |2132| 
        ; branch occurs ; [] |2132| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2132| 
        B         $C$L363,EQ            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        CMPB      AL,#53                ; [CPU_] |2132| 
        B         $C$L359,EQ            ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
        CMPB      AL,#70                ; [CPU_] |2132| 
        B         $C$L394,NEQ           ; [CPU_] |2132| 
        ; branchcc occurs ; [] |2132| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2321,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2321| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2321| 
        MOV       AL,#1024              ; [CPU_] |2321| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2321| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2321| 
        ; call occurs [#_scia_getparam] ; [] |2321| 
        MOVL      XAR0,#86              ; [CPU_] |2321| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2321| 
	.dwpsn	file "../Source/prod.c",line 2323,column 8,is_stmt,isa 0
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_atoi")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2323| 
        ; call occurs [#_atoi] ; [] |2323| 
        MOVL      XAR0,#86              ; [CPU_] |2323| 
        MOV       *-SP[47],AL           ; [CPU_] |2323| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2323| 
	.dwpsn	file "../Source/prod.c",line 2324,column 8,is_stmt,isa 0
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2324| 
        ; call occurs [#_scia_puts] ; [] |2324| 
        MOV       AL,*-SP[47]           ; [CPU_] |2324| 
	.dwpsn	file "../Source/prod.c",line 2325,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2325| 
        B         $C$L356,EQ            ; [CPU_] |2325| 
        ; branchcc occurs ; [] |2325| 
        CMPB      AL,#7                 ; [CPU_] |2325| 
        B         $C$L357,EQ            ; [CPU_] |2325| 
        ; branchcc occurs ; [] |2325| 
	.dwpsn	file "../Source/prod.c",line 2326,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2326| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2326| 
        ; call occurs [#_scia_puts] ; [] |2326| 
$C$L356:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2328,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2328| 
        B         $C$L357,EQ            ; [CPU_] |2328| 
        ; branchcc occurs ; [] |2328| 
        CMPB      AL,#7                 ; [CPU_] |2328| 
        B         $C$L355,NEQ           ; [CPU_] |2328| 
        ; branchcc occurs ; [] |2328| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2329,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2329| 
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_scia_puts")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2329| 
        ; call occurs [#_scia_puts] ; [] |2329| 
        MOV       AL,*-SP[47]           ; [CPU_] |2329| 
	.dwpsn	file "../Source/prod.c",line 2331,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2331| 
        B         $C$L358,EQ            ; [CPU_] |2331| 
        ; branchcc occurs ; [] |2331| 
        CMPB      AL,#7                 ; [CPU_] |2331| 
        B         $C$L393,EQ            ; [CPU_] |2331| 
        ; branchcc occurs ; [] |2331| 
        B         $C$L394,UNC           ; [CPU_] |2331| 
        ; branch occurs ; [] |2331| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2333,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2333| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2333| 
        MOV       AL,*-SP[47]           ; [CPU_] |2333| 
	.dwpsn	file "../Source/prod.c",line 2334,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2334| 
	.dwpsn	file "../Source/prod.c",line 2335,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2335| 
        ; branch occurs ; [] |2335| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2296,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2296| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2296| 
        MOV       AL,#1024              ; [CPU_] |2296| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2296| 
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2296| 
        ; call occurs [#_scia_getparam] ; [] |2296| 
        MOVL      XAR0,#86              ; [CPU_] |2296| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2296| 
	.dwpsn	file "../Source/prod.c",line 2298,column 8,is_stmt,isa 0
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_atoi")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2298| 
        ; call occurs [#_atoi] ; [] |2298| 
        MOVL      XAR0,#86              ; [CPU_] |2298| 
        MOV       *-SP[47],AL           ; [CPU_] |2298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2298| 
	.dwpsn	file "../Source/prod.c",line 2299,column 8,is_stmt,isa 0
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2299| 
        ; call occurs [#_scia_puts] ; [] |2299| 
        MOV       AL,*-SP[47]           ; [CPU_] |2299| 
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2300| 
        B         $C$L360,EQ            ; [CPU_] |2300| 
        ; branchcc occurs ; [] |2300| 
        CMPB      AL,#7                 ; [CPU_] |2300| 
        B         $C$L361,EQ            ; [CPU_] |2300| 
        ; branchcc occurs ; [] |2300| 
	.dwpsn	file "../Source/prod.c",line 2301,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2301| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2301| 
        ; call occurs [#_scia_puts] ; [] |2301| 
$C$L360:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2303,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2303| 
        B         $C$L361,EQ            ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
        CMPB      AL,#7                 ; [CPU_] |2303| 
        B         $C$L359,NEQ           ; [CPU_] |2303| 
        ; branchcc occurs ; [] |2303| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2304,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2304| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2304| 
        ; call occurs [#_scia_puts] ; [] |2304| 
        MOV       AL,*-SP[47]           ; [CPU_] |2304| 
	.dwpsn	file "../Source/prod.c",line 2306,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2306| 
        B         $C$L362,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        CMPB      AL,#7                 ; [CPU_] |2306| 
        B         $C$L393,EQ            ; [CPU_] |2306| 
        ; branchcc occurs ; [] |2306| 
        B         $C$L394,UNC           ; [CPU_] |2306| 
        ; branch occurs ; [] |2306| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2308,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2308| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2308| 
        MOV       AL,*-SP[47]           ; [CPU_] |2308| 
	.dwpsn	file "../Source/prod.c",line 2309,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2309| 
	.dwpsn	file "../Source/prod.c",line 2310,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2310| 
        ; branch occurs ; [] |2310| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2262,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2262| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2262| 
        MOV       AL,#1024              ; [CPU_] |2262| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2262| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2262| 
        ; call occurs [#_scia_getparam] ; [] |2262| 
        MOVL      XAR0,#86              ; [CPU_] |2262| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2262| 
	.dwpsn	file "../Source/prod.c",line 2265,column 8,is_stmt,isa 0
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_atoi")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2265| 
        ; call occurs [#_atoi] ; [] |2265| 
        MOVL      XAR0,#86              ; [CPU_] |2265| 
        MOV       *-SP[47],AL           ; [CPU_] |2265| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2265| 
	.dwpsn	file "../Source/prod.c",line 2266,column 8,is_stmt,isa 0
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_puts")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2266| 
        ; call occurs [#_scia_puts] ; [] |2266| 
        MOV       AL,*-SP[47]           ; [CPU_] |2266| 
	.dwpsn	file "../Source/prod.c",line 2267,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2267| 
        B         $C$L364,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
        CMPB      AL,#3                 ; [CPU_] |2267| 
        B         $C$L365,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
        CMPB      AL,#4                 ; [CPU_] |2267| 
        B         $C$L366,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
        CMPB      AL,#7                 ; [CPU_] |2267| 
        B         $C$L367,EQ            ; [CPU_] |2267| 
        ; branchcc occurs ; [] |2267| 
	.dwpsn	file "../Source/prod.c",line 2268,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2268| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_puts")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2268| 
        ; call occurs [#_scia_puts] ; [] |2268| 
$C$L364:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2270,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2270| 
        B         $C$L367,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2270| 
        B         $C$L367,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2270| 
        B         $C$L367,EQ            ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
        CMPB      AL,#7                 ; [CPU_] |2270| 
        B         $C$L363,NEQ           ; [CPU_] |2270| 
        ; branchcc occurs ; [] |2270| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2271,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2271| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_puts")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2271| 
        ; call occurs [#_scia_puts] ; [] |2271| 
        MOV       AL,*-SP[47]           ; [CPU_] |2271| 
	.dwpsn	file "../Source/prod.c",line 2273,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2273| 
        B         $C$L369,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        CMPB      AL,#3                 ; [CPU_] |2273| 
        B         $C$L368,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        CMPB      AL,#4                 ; [CPU_] |2273| 
        B         $C$L385,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        CMPB      AL,#7                 ; [CPU_] |2273| 
        B         $C$L393,EQ            ; [CPU_] |2273| 
        ; branchcc occurs ; [] |2273| 
        B         $C$L394,UNC           ; [CPU_] |2273| 
        ; branch occurs ; [] |2273| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2279| 
        MOV       AH,#15820             ; [CPU_] |2279| 
	.dwpsn	file "../Source/prod.c",line 2281,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2281| 
        ; branch occurs ; [] |2281| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2275,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2275| 
        MOV       AH,#15649             ; [CPU_] |2275| 
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2277| 
        ; branch occurs ; [] |2277| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2228,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2228| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2228| 
        MOV       AL,#1024              ; [CPU_] |2228| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2228| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2228| 
        ; call occurs [#_scia_getparam] ; [] |2228| 
        MOVL      XAR0,#86              ; [CPU_] |2228| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2228| 
	.dwpsn	file "../Source/prod.c",line 2231,column 8,is_stmt,isa 0
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_atoi")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2231| 
        ; call occurs [#_atoi] ; [] |2231| 
        MOVL      XAR0,#86              ; [CPU_] |2231| 
        MOV       *-SP[47],AL           ; [CPU_] |2231| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2232,column 8,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_puts")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2232| 
        ; call occurs [#_scia_puts] ; [] |2232| 
        MOV       AL,*-SP[47]           ; [CPU_] |2232| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2233| 
        B         $C$L371,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#3                 ; [CPU_] |2233| 
        B         $C$L372,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#4                 ; [CPU_] |2233| 
        B         $C$L373,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
        CMPB      AL,#7                 ; [CPU_] |2233| 
        B         $C$L374,EQ            ; [CPU_] |2233| 
        ; branchcc occurs ; [] |2233| 
	.dwpsn	file "../Source/prod.c",line 2234,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2234| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_puts")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2234| 
        ; call occurs [#_scia_puts] ; [] |2234| 
$C$L371:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2236,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2236| 
        B         $C$L374,EQ            ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2236| 
        B         $C$L374,EQ            ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2236| 
        B         $C$L374,EQ            ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
        CMPB      AL,#7                 ; [CPU_] |2236| 
        B         $C$L370,NEQ           ; [CPU_] |2236| 
        ; branchcc occurs ; [] |2236| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2237,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2237| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2237| 
        ; call occurs [#_scia_puts] ; [] |2237| 
        MOV       AL,*-SP[47]           ; [CPU_] |2237| 
	.dwpsn	file "../Source/prod.c",line 2239,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2239| 
        B         $C$L376,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        CMPB      AL,#3                 ; [CPU_] |2239| 
        B         $C$L385,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        CMPB      AL,#4                 ; [CPU_] |2239| 
        B         $C$L375,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        CMPB      AL,#7                 ; [CPU_] |2239| 
        B         $C$L393,EQ            ; [CPU_] |2239| 
        ; branchcc occurs ; [] |2239| 
        B         $C$L394,UNC           ; [CPU_] |2239| 
        ; branch occurs ; [] |2239| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2249,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2249| 
        MOV       AH,#16672             ; [CPU_] |2249| 
	.dwpsn	file "../Source/prod.c",line 2251,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2251| 
        ; branch occurs ; [] |2251| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2241,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2241| 
        MOV       AH,#16073             ; [CPU_] |2241| 
	.dwpsn	file "../Source/prod.c",line 2243,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2243| 
        ; branch occurs ; [] |2243| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2194,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2194| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2194| 
        MOV       AL,#1024              ; [CPU_] |2194| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2194| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2194| 
        ; call occurs [#_scia_getparam] ; [] |2194| 
        MOVL      XAR0,#86              ; [CPU_] |2194| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2194| 
	.dwpsn	file "../Source/prod.c",line 2197,column 8,is_stmt,isa 0
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_atoi")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2197| 
        ; call occurs [#_atoi] ; [] |2197| 
        MOVL      XAR0,#86              ; [CPU_] |2197| 
        MOV       *-SP[47],AL           ; [CPU_] |2197| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2197| 
	.dwpsn	file "../Source/prod.c",line 2198,column 8,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2198| 
        ; call occurs [#_scia_puts] ; [] |2198| 
        MOV       AL,*-SP[47]           ; [CPU_] |2198| 
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2199| 
        B         $C$L378,EQ            ; [CPU_] |2199| 
        ; branchcc occurs ; [] |2199| 
        CMPB      AL,#3                 ; [CPU_] |2199| 
        B         $C$L379,EQ            ; [CPU_] |2199| 
        ; branchcc occurs ; [] |2199| 
        CMPB      AL,#4                 ; [CPU_] |2199| 
        B         $C$L380,EQ            ; [CPU_] |2199| 
        ; branchcc occurs ; [] |2199| 
        CMPB      AL,#7                 ; [CPU_] |2199| 
        B         $C$L381,EQ            ; [CPU_] |2199| 
        ; branchcc occurs ; [] |2199| 
	.dwpsn	file "../Source/prod.c",line 2200,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2200| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_puts")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2200| 
        ; call occurs [#_scia_puts] ; [] |2200| 
$C$L378:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2202,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2202| 
        B         $C$L381,EQ            ; [CPU_] |2202| 
        ; branchcc occurs ; [] |2202| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2202| 
        B         $C$L381,EQ            ; [CPU_] |2202| 
        ; branchcc occurs ; [] |2202| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2202| 
        B         $C$L381,EQ            ; [CPU_] |2202| 
        ; branchcc occurs ; [] |2202| 
        CMPB      AL,#7                 ; [CPU_] |2202| 
        B         $C$L377,NEQ           ; [CPU_] |2202| 
        ; branchcc occurs ; [] |2202| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2203,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2203| 
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_puts")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2203| 
        ; call occurs [#_scia_puts] ; [] |2203| 
        MOV       AL,*-SP[47]           ; [CPU_] |2203| 
	.dwpsn	file "../Source/prod.c",line 2205,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2205| 
        B         $C$L385,EQ            ; [CPU_] |2205| 
        ; branchcc occurs ; [] |2205| 
        CMPB      AL,#3                 ; [CPU_] |2205| 
        B         $C$L384,EQ            ; [CPU_] |2205| 
        ; branchcc occurs ; [] |2205| 
        CMPB      AL,#4                 ; [CPU_] |2205| 
        B         $C$L382,EQ            ; [CPU_] |2205| 
        ; branchcc occurs ; [] |2205| 
        CMPB      AL,#7                 ; [CPU_] |2205| 
        B         $C$L393,EQ            ; [CPU_] |2205| 
        ; branchcc occurs ; [] |2205| 
        B         $C$L394,UNC           ; [CPU_] |2205| 
        ; branch occurs ; [] |2205| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2215,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2215| 
        MOV       AH,#16843             ; [CPU_] |2215| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2215| 
        MOV       AL,*-SP[47]           ; [CPU_] |2215| 
	.dwpsn	file "../Source/prod.c",line 2216,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2216| 
	.dwpsn	file "../Source/prod.c",line 2217,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2217| 
        ; branch occurs ; [] |2217| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2211,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2211| 
        MOV       AH,#16418             ; [CPU_] |2211| 
	.dwpsn	file "../Source/prod.c",line 2213,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2213| 
        ; branch occurs ; [] |2213| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2207,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2207| 
	.dwpsn	file "../Source/prod.c",line 2209,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2209| 
        ; branch occurs ; [] |2209| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2165,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2165| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2165| 
        MOV       AL,#1024              ; [CPU_] |2165| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2165| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2165| 
        ; call occurs [#_scia_getparam] ; [] |2165| 
        MOVL      XAR0,#86              ; [CPU_] |2165| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2165| 
	.dwpsn	file "../Source/prod.c",line 2167,column 8,is_stmt,isa 0
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_atoi")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2167| 
        ; call occurs [#_atoi] ; [] |2167| 
        MOVL      XAR0,#86              ; [CPU_] |2167| 
        MOV       *-SP[47],AL           ; [CPU_] |2167| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2167| 
	.dwpsn	file "../Source/prod.c",line 2168,column 8,is_stmt,isa 0
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2168| 
        ; call occurs [#_scia_puts] ; [] |2168| 
        MOV       AL,*-SP[47]           ; [CPU_] |2168| 
	.dwpsn	file "../Source/prod.c",line 2169,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2169| 
        B         $C$L388,EQ            ; [CPU_] |2169| 
        ; branchcc occurs ; [] |2169| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2169| 
        B         $C$L387,EQ            ; [CPU_] |2169| 
        ; branchcc occurs ; [] |2169| 
	.dwpsn	file "../Source/prod.c",line 2170,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2170| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_puts")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2170| 
        ; call occurs [#_scia_puts] ; [] |2170| 
$C$L387:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2172,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2172| 
        B         $C$L388,EQ            ; [CPU_] |2172| 
        ; branchcc occurs ; [] |2172| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2172| 
        B         $C$L386,NEQ           ; [CPU_] |2172| 
        ; branchcc occurs ; [] |2172| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2173,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2173| 
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2173| 
        ; call occurs [#_scia_puts] ; [] |2173| 
        MOV       AL,*-SP[47]           ; [CPU_] |2173| 
	.dwpsn	file "../Source/prod.c",line 2175,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2175| 
        ; branchcc occurs ; [] |2175| 
        CMPB      AL,#1                 ; [CPU_] |2175| 
        B         $C$L396,EQ            ; [CPU_] |2175| 
        ; branchcc occurs ; [] |2175| 
        CMPB      AL,#7                 ; [CPU_] |2175| 
        B         $C$L393,EQ            ; [CPU_] |2175| 
        ; branchcc occurs ; [] |2175| 
        B         $C$L394,UNC           ; [CPU_] |2175| 
        ; branch occurs ; [] |2175| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2177,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2177| 
        MOV       AH,#16397             ; [CPU_] |2177| 
	.dwpsn	file "../Source/prod.c",line 2179,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2179| 
        ; branch occurs ; [] |2179| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2136,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2136| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2136| 
        MOV       AL,#1024              ; [CPU_] |2136| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2136| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2136| 
        ; call occurs [#_scia_getparam] ; [] |2136| 
        MOVL      XAR0,#86              ; [CPU_] |2136| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2136| 
	.dwpsn	file "../Source/prod.c",line 2138,column 8,is_stmt,isa 0
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_atoi")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2138| 
        ; call occurs [#_atoi] ; [] |2138| 
        MOVL      XAR0,#86              ; [CPU_] |2138| 
        MOV       *-SP[47],AL           ; [CPU_] |2138| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2138| 
	.dwpsn	file "../Source/prod.c",line 2139,column 8,is_stmt,isa 0
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2139| 
        ; call occurs [#_scia_puts] ; [] |2139| 
        MOV       AL,*-SP[47]           ; [CPU_] |2139| 
	.dwpsn	file "../Source/prod.c",line 2140,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2140| 
        B         $C$L392,EQ            ; [CPU_] |2140| 
        ; branchcc occurs ; [] |2140| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2140| 
        B         $C$L391,EQ            ; [CPU_] |2140| 
        ; branchcc occurs ; [] |2140| 
	.dwpsn	file "../Source/prod.c",line 2141,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2141| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_puts")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2141| 
        ; call occurs [#_scia_puts] ; [] |2141| 
$C$L391:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2143,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2143| 
        B         $C$L392,EQ            ; [CPU_] |2143| 
        ; branchcc occurs ; [] |2143| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2143| 
        B         $C$L390,NEQ           ; [CPU_] |2143| 
        ; branchcc occurs ; [] |2143| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2144,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2144| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2144| 
        ; call occurs [#_scia_puts] ; [] |2144| 
        MOV       AL,*-SP[47]           ; [CPU_] |2144| 
	.dwpsn	file "../Source/prod.c",line 2146,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2146| 
        ; branchcc occurs ; [] |2146| 
        CMPB      AL,#1                 ; [CPU_] |2146| 
        B         $C$L395,EQ            ; [CPU_] |2146| 
        ; branchcc occurs ; [] |2146| 
        CMPB      AL,#7                 ; [CPU_] |2146| 
        B         $C$L394,NEQ           ; [CPU_] |2146| 
        ; branchcc occurs ; [] |2146| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2156,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2156| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2156| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2156| 
        MOV       AL,#0                 ; [CPU_] |2156| 
        MOV       AH,#17096             ; [CPU_] |2156| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2156| 
        ; call occurs [#FS$$DIV] ; [] |2156| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2156| 
        MOV       AL,*-SP[47]           ; [CPU_] |2156| 
	.dwpsn	file "../Source/prod.c",line 2157,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2157| 
        MOV       *-SP[47],AL           ; [CPU_] |2157| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2347,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2347| 
        MOV       AH,#0                 ; [CPU_] |2347| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2347| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2347| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2347| 
        ; call occurs [#FS$$CMP] ; [] |2347| 
        CMPB      AL,#0                 ; [CPU_] |2347| 
        B         $C$L399,NEQ           ; [CPU_] |2347| 
        ; branchcc occurs ; [] |2347| 
	.dwpsn	file "../Source/prod.c",line 2348,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2348| 
	.dwpsn	file "../Source/prod.c",line 2349,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2349| 
        ; branch occurs ; [] |2349| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2152,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2152| 
        MOV       AH,#16104             ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2154,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2154| 
        ; branch occurs ; [] |2154| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2148,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2148| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2148| 
        MOV       AL,*-SP[47]           ; [CPU_] |2148| 
	.dwpsn	file "../Source/prod.c",line 2149,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2149| 
$C$L398:    
        MOV       *-SP[47],AL           ; [CPU_] |2149| 
$C$L399:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2352,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2352| 
        B         $C$L402,EQ            ; [CPU_] |2352| 
        ; branchcc occurs ; [] |2352| 
	.dwpsn	file "../Source/prod.c",line 2358,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2358| 
	.dwpsn	file "../Source/prod.c",line 2362,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2362| 
	.dwpsn	file "../Source/prod.c",line 2359,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2359| 
	.dwpsn	file "../Source/prod.c",line 2362,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2362| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2359,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2359| 
	.dwpsn	file "../Source/prod.c",line 2362,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2362| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2362| 
        ADD       AL,*-SP[57]           ; [CPU_] |2362| 
        MOV       *-SP[3],AL            ; [CPU_] |2362| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2362| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2362| 
        ANDB      AL,#0x0f              ; [CPU_] |2362| 
        MOV       ACC,AL << 1           ; [CPU_] |2362| 
        ADDL      ACC,XAR6              ; [CPU_] |2362| 
        MOVL      XAR4,ACC              ; [CPU_] |2362| 
        MOVL      XAR0,#44              ; [CPU_] |2362| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2362| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2362| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2362| 
        MOVL      XAR4,XAR1             ; [CPU_] |2362| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_sprintf")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2362| 
        ; call occurs [#_sprintf] ; [] |2362| 
        MOVL      XAR4,XAR1             ; [CPU_] |2362| 
	.dwpsn	file "../Source/prod.c",line 2364,column 6,is_stmt,isa 0
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2364| 
        ; call occurs [#_scia_puts] ; [] |2364| 
        MOVL      XAR0,#40              ; [CPU_] |2364| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2364| 
	.dwpsn	file "../Source/prod.c",line 2366,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2366| 
	.dwpsn	file "../Source/prod.c",line 2360,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2360| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2367,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2367| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2367| 
        CMPL      ACC,XAR6              ; [CPU_] |2367| 
        B         $C$L401,NEQ           ; [CPU_] |2367| 
        ; branchcc occurs ; [] |2367| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2368,column 8,is_stmt,isa 0
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_update_units")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2368| 
        ; call occurs [#_update_units] ; [] |2368| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2370,column 8,is_stmt,isa 0
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2370| 
        ; call occurs [#_ad7738_setcal] ; [] |2370| 
        MOVL      XAR0,#78              ; [CPU_] |2370| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2370| 
	.dwpsn	file "../Source/prod.c",line 2371,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2371| 
        MOVL      XAR4,ACC              ; [CPU_] |2371| 
        MOVL      XAR0,#88              ; [CPU_] |2371| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2371| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2371| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2371| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2371| 
        MOVL      XAR0,#88              ; [CPU_] |2371| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2371| 
	.dwpsn	file "../Source/prod.c",line 2372,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2372| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2372| 
        ; call occurs [#_ad7738_resetvall] ; [] |2372| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2366,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2366| 
        ADDB      XAR1,#10              ; [CPU_] |2366| 
        MOV       AL,*-SP[58]           ; [CPU_] |2366| 
        CMPB      AL,#4                 ; [CPU_] |2366| 
        B         $C$L400,LO            ; [CPU_] |2366| 
        ; branchcc occurs ; [] |2366| 
        B         $C$L632,UNC           ; [CPU_] |2366| 
        ; branch occurs ; [] |2366| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2353,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2353| 
	.dwpsn	file "../Source/prod.c",line 2355,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2355| 
        ; branch occurs ; [] |2355| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2109| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2109| 
        MOVL      XAR0,#44              ; [CPU_] |2109| 
        ADD       AL,*-SP[57]           ; [CPU_] |2109| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2109| 
        MOV       *-SP[3],AL            ; [CPU_] |2109| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2109| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2109| 
        MOV       *-SP[47],AL           ; [CPU_] |2109| 
        MOVL      XAR4,XAR1             ; [CPU_] |2109| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_sprintf")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2109| 
        ; call occurs [#_sprintf] ; [] |2109| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2111| 
        MOV       AL,#1024              ; [CPU_] |2111| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2111| 
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2109| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2111| 
        ; call occurs [#_scia_getparam] ; [] |2111| 
        MOVZ      AR6,AL                ; [CPU_] |2111| 
        CMPB      AL,#15                ; [CPU_] |2111| 
        B         $C$L404,LOS           ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
	.dwpsn	file "../Source/prod.c",line 2115,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2115| 
        MOVB      XAR0,#15              ; [CPU_] |2115| 
	.dwpsn	file "../Source/prod.c",line 2114,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2114| 
	.dwpsn	file "../Source/prod.c",line 2115,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2115| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2117,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2117| 
        MOVB      AL,#152               ; [CPU_] |2117| 
        MOV       T,*-SP[57]            ; [CPU_] |2117| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2117| 
        MOVL      XAR0,#86              ; [CPU_] |2117| 
        MPYU      ACC,T,AL              ; [CPU_] |2117| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2117| 
        ADDL      ACC,XAR7              ; [CPU_] |2117| 
        ADDB      ACC,#98               ; [CPU_] |2117| 
        MOVL      XAR1,ACC              ; [CPU_] |2117| 
        MOVL      XAR4,ACC              ; [CPU_] |2117| 
        MOVB      AH,#1                 ; [CPU_] |2117| 
        ADD       AH,AR6                ; [CPU_] |2117| 
        MOVU      ACC,AH                ; [CPU_] |2117| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_memcpy")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2117| 
        ; call occurs [#_memcpy] ; [] |2117| 
        MOVL      XAR0,#86              ; [CPU_] |2117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2117| 
	.dwpsn	file "../Source/prod.c",line 2119,column 6,is_stmt,isa 0
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_scia_puts")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2119| 
        ; call occurs [#_scia_puts] ; [] |2119| 
	.dwpsn	file "../Source/prod.c",line 2120,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2120| 
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_puts")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2120| 
        ; call occurs [#_scia_puts] ; [] |2120| 
	.dwpsn	file "../Source/prod.c",line 2123,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2123| 
        MOV       AL,*-SP[47]           ; [CPU_] |2123| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2123| 
        MOV       *-SP[3],AL            ; [CPU_] |2123| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2123| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2123| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2123| 
        MOVL      XAR4,XAR1             ; [CPU_] |2123| 
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_sprintf")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2123| 
        ; call occurs [#_sprintf] ; [] |2123| 
        MOVL      XAR4,XAR1             ; [CPU_] |2123| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2125,column 6,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2125| 
        ; call occurs [#_scia_puts] ; [] |2125| 
	.dwpsn	file "../Source/prod.c",line 2126,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2126| 
        ; branch occurs ; [] |2126| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2420,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2420| 
        MOVB      AL,#152               ; [CPU_] |2420| 
        MOV       T,*-SP[57]            ; [CPU_] |2420| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2420| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2420| 
        MPYU      ACC,T,AL              ; [CPU_] |2420| 
        MOVB      XAR0,#124             ; [CPU_] |2420| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2420| 
        ADDL      ACC,XAR6              ; [CPU_] |2420| 
        MOVL      XAR1,ACC              ; [CPU_] |2420| 
        MOVB      AL,#1                 ; [CPU_] |2420| 
        ADD       AL,*-SP[57]           ; [CPU_] |2420| 
        MOV       *-SP[47],AL           ; [CPU_] |2420| 
        MOV       *-SP[3],AL            ; [CPU_] |2420| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2420| 
        MOVL      XAR0,#70              ; [CPU_] |2420| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2420| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2420| 
        MOV       ACC,AL << 1           ; [CPU_] |2420| 
        ADDL      ACC,XAR6              ; [CPU_] |2420| 
        MOVL      XAR4,ACC              ; [CPU_] |2420| 
        MOVL      XAR0,#44              ; [CPU_] |2420| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2420| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2420| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2420| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_sprintf")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2420| 
        ; call occurs [#_sprintf] ; [] |2420| 
        MOVL      XAR0,#44              ; [CPU_] |2420| 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2420,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2420| 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2422| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2422| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2422| 
        ; call occurs [#_scia_getparam] ; [] |2422| 
        MOVL      XAR0,#86              ; [CPU_] |2422| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2422| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_strtod")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2423,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2423| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2423| 
        MOVL      XAR0,#86              ; [CPU_] |2423| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2423| 
	.dwpsn	file "../Source/prod.c",line 2424,column 6,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_scia_puts")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2424| 
        ; call occurs [#_scia_puts] ; [] |2424| 
	.dwpsn	file "../Source/prod.c",line 2425,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2425| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_puts")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2425| 
        ; call occurs [#_scia_puts] ; [] |2425| 
	.dwpsn	file "../Source/prod.c",line 2427,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2427| 
        MOVL      XAR0,#44              ; [CPU_] |2427| 
        MOV       AL,*-SP[47]           ; [CPU_] |2427| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2427| 
        MOV       *-SP[3],AL            ; [CPU_] |2427| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2427| 
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_sprintf")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2427| 
        ; call occurs [#_sprintf] ; [] |2427| 
        MOVL      XAR0,#44              ; [CPU_] |2427| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2428| 
	.dwpsn	file "../Source/prod.c",line 2427,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2427| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2428| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2428| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2428| 
        ; call occurs [#_scia_getparam] ; [] |2428| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_strtod")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2429,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2429| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2429| 
        MOVL      XAR0,#86              ; [CPU_] |2429| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_scia_puts")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2430| 
        ; call occurs [#_scia_puts] ; [] |2430| 
	.dwpsn	file "../Source/prod.c",line 2431,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2431| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_scia_puts")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2431| 
        ; call occurs [#_scia_puts] ; [] |2431| 
	.dwpsn	file "../Source/prod.c",line 2434,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2434| 
        MOVB      XAR0,#228             ; [CPU_] |2434| 
        MOV       AL,*-SP[47]           ; [CPU_] |2434| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2434| 
        MOV       *-SP[3],AL            ; [CPU_] |2434| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2434| 
        MOVB      XAR0,#230             ; [CPU_] |2434| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2434| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2434| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2434| 
	.dwpsn	file "../Source/prod.c",line 2443,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2443| 
        ; branch occurs ; [] |2443| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2383,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2383| 
        MOV       AL,*-SP[47]           ; [CPU_] |2383| 
        MOVL      XAR0,#44              ; [CPU_] |2383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2383| 
        MOV       *-SP[3],AL            ; [CPU_] |2383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2383| 
        MOVL      XAR4,XAR1             ; [CPU_] |2383| 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_sprintf")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2383| 
        ; call occurs [#_sprintf] ; [] |2383| 
	.dwpsn	file "../Source/prod.c",line 2384,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2384| 
	.dwpsn	file "../Source/prod.c",line 2383,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2383| 
	.dwpsn	file "../Source/prod.c",line 2384,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2384| 
        MOV       AL,#1024              ; [CPU_] |2384| 
        MOVL      XAR5,XAR1             ; [CPU_] |2384| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2384| 
        ; call occurs [#_scia_getparam] ; [] |2384| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_strtod")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2386,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2386| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_puts")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2386| 
        ; call occurs [#_scia_puts] ; [] |2386| 
	.dwpsn	file "../Source/prod.c",line 2388,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2388| 
        MOV       AH,#0                 ; [CPU_] |2388| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2388| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2388| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2388| 
        ; call occurs [#FS$$CMP] ; [] |2388| 
        CMPB      AL,#0                 ; [CPU_] |2388| 
        B         $C$L412,EQ            ; [CPU_] |2388| 
        ; branchcc occurs ; [] |2388| 
	.dwpsn	file "../Source/prod.c",line 2392,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2392| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_scia_puts")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2392| 
        ; call occurs [#_scia_puts] ; [] |2392| 
	.dwpsn	file "../Source/prod.c",line 2393,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2393| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2393| 
        MOVB      AL,#152               ; [CPU_] |2393| 
        MOV       T,*-SP[57]            ; [CPU_] |2393| 
        MPYU      ACC,T,AL              ; [CPU_] |2393| 
        ADDL      ACC,XAR6              ; [CPU_] |2393| 
        MOVL      XAR1,ACC              ; [CPU_] |2393| 
        MOVB      XAR0,#224             ; [CPU_] |2393| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2396| 
	.dwpsn	file "../Source/prod.c",line 2393,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2393| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2393| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2396| 
        MOV       AL,*-SP[47]           ; [CPU_] |2396| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2396| 
        MOV       *-SP[3],AL            ; [CPU_] |2396| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2396| 
        MOVL      XAR0,#44              ; [CPU_] |2396| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2396| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2396| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_sprintf")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2396| 
        ; call occurs [#_sprintf] ; [] |2396| 
        MOVL      XAR0,#44              ; [CPU_] |2396| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2396| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_scia_puts")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2398| 
        ; call occurs [#_scia_puts] ; [] |2398| 
	.dwpsn	file "../Source/prod.c",line 2394,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2394| 
	.dwpsn	file "../Source/prod.c",line 2400,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2400| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2400| 
        CMPB      AL,#247               ; [CPU_] |2400| 
        B         $C$L632,NEQ           ; [CPU_] |2400| 
        ; branchcc occurs ; [] |2400| 
	.dwpsn	file "../Source/prod.c",line 2402,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2402| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2402| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2402| 
        MOV       AL,#0                 ; [CPU_] |2402| 
        MOV       AH,#17096             ; [CPU_] |2402| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2402| 
        ; call occurs [#FS$$DIV] ; [] |2402| 
        MOVB      XAR0,#126             ; [CPU_] |2402| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2402| 
        MOVL      XAR0,#40              ; [CPU_] |2402| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2402| 
	.dwpsn	file "../Source/prod.c",line 2405,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2405| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2406,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2406| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2406| 
        CMPL      ACC,XAR6              ; [CPU_] |2406| 
        B         $C$L411,NEQ           ; [CPU_] |2406| 
        ; branchcc occurs ; [] |2406| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2409,column 9,is_stmt,isa 0
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2409| 
        ; call occurs [#_ad7738_setcal] ; [] |2409| 
        MOVL      XAR0,#78              ; [CPU_] |2409| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2409| 
	.dwpsn	file "../Source/prod.c",line 2410,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2410| 
        MOVL      XAR4,ACC              ; [CPU_] |2410| 
        MOVL      XAR0,#88              ; [CPU_] |2410| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2410| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2410| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2410| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2410| 
        MOVL      XAR0,#88              ; [CPU_] |2410| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2410| 
	.dwpsn	file "../Source/prod.c",line 2411,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2411| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2411| 
        ; call occurs [#_ad7738_resetvall] ; [] |2411| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2405,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2405| 
        ADDB      XAR1,#10              ; [CPU_] |2405| 
        MOV       AL,*-SP[58]           ; [CPU_] |2405| 
        CMPB      AL,#4                 ; [CPU_] |2405| 
        B         $C$L410,LO            ; [CPU_] |2405| 
        ; branchcc occurs ; [] |2405| 
        B         $C$L632,UNC           ; [CPU_] |2405| 
        ; branch occurs ; [] |2405| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2390,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2390| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_scia_puts")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2390| 
        ; call occurs [#_scia_puts] ; [] |2390| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2382| 
        ; branch occurs ; [] |2382| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2098,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2098| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_scia_puts")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2098| 
        ; call occurs [#_scia_puts] ; [] |2098| 
	.dwpsn	file "../Source/prod.c",line 2088,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2088| 
        ; branch occurs ; [] |2088| 
$C$L414:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3060,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3060| 
        B         $C$L625,LO            ; [CPU_] |3060| 
        ; branchcc occurs ; [] |3060| 
	.dwpsn	file "../Source/prod.c",line 3063,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3063| 
        CMPB      AL,#83                ; [CPU_] |3063| 
        B         $C$L415,GT            ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        CMPB      AL,#83                ; [CPU_] |3063| 
        B         $C$L419,EQ            ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        CMPB      AL,#73                ; [CPU_] |3063| 
        B         $C$L424,EQ            ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        CMPB      AL,#76                ; [CPU_] |3063| 
        B         $C$L428,EQ            ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        CMPB      AL,#80                ; [CPU_] |3063| 
        B         $C$L421,EQ            ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        B         $C$L625,UNC           ; [CPU_] |3063| 
        ; branch occurs ; [] |3063| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3063| 
        B         $C$L417,EQ            ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        CMPB      AL,#86                ; [CPU_] |3063| 
        B         $C$L625,NEQ           ; [CPU_] |3063| 
        ; branchcc occurs ; [] |3063| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3091,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3091| 
        B         $C$L416,LOS           ; [CPU_] |3091| 
        ; branchcc occurs ; [] |3091| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3091,column 6,is_stmt,isa 0
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_atoi")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3091| 
        ; call occurs [#_atoi] ; [] |3091| 
        CMPB      AL,#4                 ; [CPU_] |3091| 
        B         $C$L416,GT            ; [CPU_] |3091| 
        ; branchcc occurs ; [] |3091| 
        CMPB      AL,#0                 ; [CPU_] |3091| 
        B         $C$L416,LEQ           ; [CPU_] |3091| 
        ; branchcc occurs ; [] |3091| 
	.dwpsn	file "../Source/prod.c",line 3093,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3093| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3093| 
        ADD       ACC,AR5               ; [CPU_] |3093| 
        MOVL      XAR4,ACC              ; [CPU_] |3093| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3093| 
	.dwpsn	file "../Source/prod.c",line 3094,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3094| 
        ; branch occurs ; [] |3094| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3095,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3095| 
        B         $C$L426,UNC           ; [CPU_] |3095| 
        ; branch occurs ; [] |3095| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3067,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3067| 
        B         $C$L418,LOS           ; [CPU_] |3067| 
        ; branchcc occurs ; [] |3067| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3067,column 6,is_stmt,isa 0
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_atoi")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3067| 
        ; call occurs [#_atoi] ; [] |3067| 
        CMPB      AL,#4                 ; [CPU_] |3067| 
        MOVZ      AR4,AL                ; [CPU_] |3067| 
        B         $C$L418,GT            ; [CPU_] |3067| 
        ; branchcc occurs ; [] |3067| 
        CMPB      AL,#0                 ; [CPU_] |3067| 
        B         $C$L418,LEQ           ; [CPU_] |3067| 
        ; branchcc occurs ; [] |3067| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3069,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3069| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3069| 
	.dwpsn	file "../Source/prod.c",line 3072,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3072| 
        ; branch occurs ; [] |3072| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3073,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3073| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3073| 
        ; call occurs [#_ad7738_resettare] ; [] |3073| 
	.dwpsn	file "../Source/prod.c",line 3074,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3074| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3074| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3074| 
	.dwpsn	file "../Source/prod.c",line 3075,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3075| 
        B         $C$L426,UNC           ; [CPU_] |3075| 
        ; branch occurs ; [] |3075| 
$C$L419:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3101,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3101| 
        B         $C$L420,LOS           ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
        MOVL      ACC,XAR4              ; [CPU_] |3101| 
        MOVL      XAR0,#66              ; [CPU_] |3101| 
        ADDB      ACC,#2                ; [CPU_] |3101| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3101| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3101| 
        CMPB      AL,#67                ; [CPU_] |3101| 
        B         $C$L420,NEQ           ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
	.dwpsn	file "../Source/prod.c",line 3102,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3102| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3102| 
        ; call occurs [#_shunt_switch] ; [] |3102| 
	.dwpsn	file "../Source/prod.c",line 3103,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3103| 
	.dwpsn	file "../Source/prod.c",line 3104,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3104| 
        ; branch occurs ; [] |3104| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3105,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3105| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3105| 
        ; call occurs [#_shunt_switch] ; [] |3105| 
	.dwpsn	file "../Source/prod.c",line 3106,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3106| 
        B         $C$L631,UNC           ; [CPU_] |3106| 
        ; branch occurs ; [] |3106| 
$C$L421:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3081,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3081| 
        B         $C$L423,LOS           ; [CPU_] |3081| 
        ; branchcc occurs ; [] |3081| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3081,column 6,is_stmt,isa 0
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_atoi")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3081| 
        ; call occurs [#_atoi] ; [] |3081| 
        CMPB      AL,#4                 ; [CPU_] |3081| 
        B         $C$L423,GT            ; [CPU_] |3081| 
        ; branchcc occurs ; [] |3081| 
        CMPB      AL,#0                 ; [CPU_] |3081| 
        B         $C$L423,LEQ           ; [CPU_] |3081| 
        ; branchcc occurs ; [] |3081| 
	.dwpsn	file "../Source/prod.c",line 3083,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3083| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3083| 
        ADD       ACC,AR5               ; [CPU_] |3083| 
        MOVL      XAR4,ACC              ; [CPU_] |3083| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3083| 
$C$L422:    
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3083| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3083| 
	.dwpsn	file "../Source/prod.c",line 3084,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3084| 
        ; branch occurs ; [] |3084| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3085,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3085| 
        B         $C$L422,UNC           ; [CPU_] |3085| 
        ; branch occurs ; [] |3085| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3120,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3120| 
        B         $C$L427,LOS           ; [CPU_] |3120| 
        ; branchcc occurs ; [] |3120| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3120,column 6,is_stmt,isa 0
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_atoi")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3120| 
        ; call occurs [#_atoi] ; [] |3120| 
        CMPB      AL,#2                 ; [CPU_] |3120| 
        B         $C$L427,GT            ; [CPU_] |3120| 
        ; branchcc occurs ; [] |3120| 
        CMPB      AL,#0                 ; [CPU_] |3120| 
        B         $C$L427,LEQ           ; [CPU_] |3120| 
        ; branchcc occurs ; [] |3120| 
	.dwpsn	file "../Source/prod.c",line 3122,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3122| 
        ADD       AR6,AL                ; [CPU_] |3122| 
        MOVL      XAR0,#78              ; [CPU_] |3122| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3122| 
        ADD       ACC,AR6               ; [CPU_] |3122| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3122| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3122| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3122| 
        ; call occurs [#_ad7738_resettare] ; [] |3122| 
	.dwpsn	file "../Source/prod.c",line 3123,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3123| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3123| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3123| 
	.dwpsn	file "../Source/prod.c",line 3124,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3124| 
$C$L426:    
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3124| 
        ; call occurs [#_ad7738_resetvall] ; [] |3124| 
	.dwpsn	file "../Source/prod.c",line 3125,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3125| 
        ; branch occurs ; [] |3125| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3126,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3126| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3126| 
        ; call occurs [#_ad7738_resettare] ; [] |3126| 
	.dwpsn	file "../Source/prod.c",line 3127,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3127| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3127| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3127| 
	.dwpsn	file "../Source/prod.c",line 3128,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3128| 
        B         $C$L426,UNC           ; [CPU_] |3128| 
        ; branch occurs ; [] |3128| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3112,column 6,is_stmt,isa 0
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_atoi")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3112| 
        ; call occurs [#_atoi] ; [] |3112| 
	.dwpsn	file "../Source/prod.c",line 3115,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3115| 
        MOV       *-SP[58],AL           ; [CPU_] |3115| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3115| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3115| 
	.dwpsn	file "../Source/prod.c",line 3116,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3116| 
        ; branch occurs ; [] |3116| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1063,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1063| 
        CMPB      AL,#76                ; [CPU_] |1063| 
        B         $C$L430,GT            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        CMPB      AL,#76                ; [CPU_] |1063| 
        B         $C$L438,EQ            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        CMPB      AL,#65                ; [CPU_] |1063| 
        B         $C$L431,EQ            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        CMPB      AL,#68                ; [CPU_] |1063| 
        B         $C$L442,EQ            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        B         $C$L625,UNC           ; [CPU_] |1063| 
        ; branch occurs ; [] |1063| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1063| 
        B         $C$L441,EQ            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        CMPB      AL,#83                ; [CPU_] |1063| 
        B         $C$L439,EQ            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        B         $C$L625,UNC           ; [CPU_] |1063| 
        ; branch occurs ; [] |1063| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1068,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1068| 
	.dwpsn	file "../Source/prod.c",line 1069,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1069| 
	.dwpsn	file "../Source/prod.c",line 1068,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1068| 
	.dwpsn	file "../Source/prod.c",line 1069,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1069| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1069| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1069| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1069| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1069| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1069| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1069| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1069| 
        MOVL      XAR4,XAR1             ; [CPU_] |1069| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_sprintf")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1069| 
        ; call occurs [#_sprintf] ; [] |1069| 
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1071| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_scia_puts")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1071| 
        ; call occurs [#_scia_puts] ; [] |1071| 
	.dwpsn	file "../Source/prod.c",line 1072,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1072| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1072| 
        LSR       AL,8                  ; [CPU_] |1072| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1072| 
        MOV       *-SP[3],AL            ; [CPU_] |1072| 
        IN        AL,*(04004H)          ; [CPU_] |1072| 
        MOVL      XAR4,XAR1             ; [CPU_] |1072| 
        ANDB      AL,#0xff              ; [CPU_] |1072| 
        MOV       *-SP[4],AL            ; [CPU_] |1072| 
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_sprintf")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1072| 
        ; call occurs [#_sprintf] ; [] |1072| 
	.dwpsn	file "../Source/prod.c",line 1074,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1074| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_scia_puts")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1074| 
        ; call occurs [#_scia_puts] ; [] |1074| 
	.dwpsn	file "../Source/prod.c",line 1075,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1075| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1075| 
        MOVL      XAR0,#44              ; [CPU_] |1075| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1075| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1075| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1075| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1075| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_sprintf")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1075| 
        ; call occurs [#_sprintf] ; [] |1075| 
        MOVL      XAR0,#44              ; [CPU_] |1075| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1075| 
	.dwpsn	file "../Source/prod.c",line 1076,column 6,is_stmt,isa 0
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_scia_puts")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1076| 
        ; call occurs [#_scia_puts] ; [] |1076| 
	.dwpsn	file "../Source/prod.c",line 1077,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1077| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1077| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1077| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1077| 
        MOVL      XAR0,#44              ; [CPU_] |1077| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1077| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1077| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_sprintf")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1077| 
        ; call occurs [#_sprintf] ; [] |1077| 
        MOVL      XAR0,#44              ; [CPU_] |1077| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1077| 
	.dwpsn	file "../Source/prod.c",line 1079,column 6,is_stmt,isa 0
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_scia_puts")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1079| 
        ; call occurs [#_scia_puts] ; [] |1079| 
	.dwpsn	file "../Source/prod.c",line 1081,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1081| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1081| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1081| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1081| 
        MOVL      XAR0,#72              ; [CPU_] |1081| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1081| 
        ADDL      ACC,XAR6              ; [CPU_] |1081| 
        MOVL      XAR4,ACC              ; [CPU_] |1081| 
        MOVL      XAR0,#44              ; [CPU_] |1081| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1081| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1081| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1081| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_sprintf")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1081| 
        ; call occurs [#_sprintf] ; [] |1081| 
        MOVL      XAR0,#44              ; [CPU_] |1081| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1081| 
	.dwpsn	file "../Source/prod.c",line 1083,column 6,is_stmt,isa 0
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_scia_puts")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1083| 
        ; call occurs [#_scia_puts] ; [] |1083| 
	.dwpsn	file "../Source/prod.c",line 1084,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1084| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1084| 
        B         $C$L432,EQ            ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
        MOVB      XAR0,#34              ; [CPU_] |1084| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1084| 
        CMPB      AL,#1                 ; [CPU_] |1084| 
        B         $C$L433,NEQ           ; [CPU_] |1084| 
        ; branchcc occurs ; [] |1084| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1086,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1086| 
        MOVL      XAR0,#74              ; [CPU_] |1086| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1086| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1086| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1086| 
        ADDL      ACC,XAR6              ; [CPU_] |1086| 
        MOVL      XAR4,ACC              ; [CPU_] |1086| 
        MOVL      XAR0,#44              ; [CPU_] |1086| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1086| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1086| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1086| 
        MOVL      XAR4,XAR1             ; [CPU_] |1086| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_sprintf")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1086| 
        ; call occurs [#_sprintf] ; [] |1086| 
        MOVL      XAR4,XAR1             ; [CPU_] |1086| 
	.dwpsn	file "../Source/prod.c",line 1088,column 7,is_stmt,isa 0
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_scia_puts")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1088| 
        ; call occurs [#_scia_puts] ; [] |1088| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1090,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1090| 
        B         $C$L434,NEQ           ; [CPU_] |1090| 
        ; branchcc occurs ; [] |1090| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1090| 
        B         $C$L435,UNC           ; [CPU_] |1090| 
        ; branch occurs ; [] |1090| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1090| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1090| 
        MOVL      XAR0,#44              ; [CPU_] |1090| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1090| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1090| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1090| 
        MOVL      XAR4,XAR1             ; [CPU_] |1090| 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_sprintf")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1090| 
        ; call occurs [#_sprintf] ; [] |1090| 
        MOVL      XAR4,XAR1             ; [CPU_] |1090| 
	.dwpsn	file "../Source/prod.c",line 1092,column 6,is_stmt,isa 0
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_scia_puts")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1092| 
        ; call occurs [#_scia_puts] ; [] |1092| 
	.dwpsn	file "../Source/prod.c",line 1094,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1094| 
        MOVB      XAR0,#38              ; [CPU_] |1094| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1094| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1094| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1094| 
        MOVL      XAR0,#44              ; [CPU_] |1094| 
        MOV       *-SP[3],AL            ; [CPU_] |1094| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1094| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_sprintf")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1094| 
        ; call occurs [#_sprintf] ; [] |1094| 
        MOVL      XAR0,#44              ; [CPU_] |1094| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1094| 
	.dwpsn	file "../Source/prod.c",line 1096,column 6,is_stmt,isa 0
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_scia_puts")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1096| 
        ; call occurs [#_scia_puts] ; [] |1096| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1098,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1098| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1099,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1099| 
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_scia_puts")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1099| 
        ; call occurs [#_scia_puts] ; [] |1099| 
        MOV       AL,*-SP[58]           ; [CPU_] |1099| 
	.dwpsn	file "../Source/prod.c",line 1100,column 7,is_stmt,isa 0
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_print_channel")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1100| 
        ; call occurs [#_print_channel] ; [] |1100| 
	.dwpsn	file "../Source/prod.c",line 1101,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1101| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_print_sensor")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1101| 
        ; call occurs [#_print_sensor] ; [] |1101| 
	.dwpsn	file "../Source/prod.c",line 1098,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1098| 
        INC       *-SP[58]              ; [CPU_] |1098| 
        MOV       AL,*-SP[58]           ; [CPU_] |1098| 
        CMPB      AL,#4                 ; [CPU_] |1098| 
        B         $C$L436,LO            ; [CPU_] |1098| 
        ; branchcc occurs ; [] |1098| 
	.dwpsn	file "../Source/prod.c",line 1104,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1104| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_puts")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1104| 
        ; call occurs [#_scia_puts] ; [] |1104| 
	.dwpsn	file "../Source/prod.c",line 1105,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1105| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1105| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1105| 
        MOVL      ACC,XAR4              ; [CPU_] |1105| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1105| 
        MOVL      XAR4,ACC              ; [CPU_] |1105| 
        MOVL      XAR0,#44              ; [CPU_] |1105| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1105| 
        MOV       *-SP[3],AL            ; [CPU_] |1105| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1105| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_sprintf")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1105| 
        ; call occurs [#_sprintf] ; [] |1105| 
        MOVL      XAR0,#44              ; [CPU_] |1105| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1105| 
	.dwpsn	file "../Source/prod.c",line 1107,column 6,is_stmt,isa 0
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_scia_puts")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1107| 
        ; call occurs [#_scia_puts] ; [] |1107| 
        MOVL      XAR0,#40              ; [CPU_] |1107| 
	.dwpsn	file "../Source/prod.c",line 1108,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1108| 
	.dwpsn	file "../Source/prod.c",line 1107,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1107| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1109,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1109| 
        MOVB      AL,#65                ; [CPU_] |1109| 
        MOVL      XAR0,#44              ; [CPU_] |1109| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1109| 
        ADD       AL,*-SP[47]           ; [CPU_] |1109| 
        MOV       *-SP[3],AL            ; [CPU_] |1109| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1109| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1109| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1109| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_sprintf")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1109| 
        ; call occurs [#_sprintf] ; [] |1109| 
        MOVL      XAR0,#44              ; [CPU_] |1109| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1109| 
	.dwpsn	file "../Source/prod.c",line 1111,column 7,is_stmt,isa 0
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_scia_puts")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1111| 
        ; call occurs [#_scia_puts] ; [] |1111| 
	.dwpsn	file "../Source/prod.c",line 1108,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1108| 
	.dwpsn	file "../Source/prod.c",line 1111,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1111| 
	.dwpsn	file "../Source/prod.c",line 1108,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1108| 
        B         $C$L437,LT            ; [CPU_] |1108| 
        ; branchcc occurs ; [] |1108| 
	.dwpsn	file "../Source/prod.c",line 1113,column 6,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_print_vfd")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1113| 
        ; call occurs [#_print_vfd] ; [] |1113| 
	.dwpsn	file "../Source/prod.c",line 1114,column 6,is_stmt,isa 0
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_print_dac")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1114| 
        ; call occurs [#_print_dac] ; [] |1114| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1115,column 6,is_stmt,isa 0
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_print_limits")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1115| 
        ; call occurs [#_print_limits] ; [] |1115| 
	.dwpsn	file "../Source/prod.c",line 1116,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1116| 
        ; branch occurs ; [] |1116| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1120,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1120| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_scia_puts")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1120| 
        ; call occurs [#_scia_puts] ; [] |1120| 
	.dwpsn	file "../Source/prod.c",line 1122,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1122| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1123,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1123| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1123| 
        MOVL      XAR0,#44              ; [CPU_] |1123| 
        ADD       AL,*-SP[57]           ; [CPU_] |1123| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1123| 
        MOVZ      AR1,AL                ; [CPU_] |1123| 
        MOV       *-SP[3],AL            ; [CPU_] |1123| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1123| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_sprintf")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1123| 
        ; call occurs [#_sprintf] ; [] |1123| 
        MOVL      XAR0,#44              ; [CPU_] |1123| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1123| 
	.dwpsn	file "../Source/prod.c",line 1124,column 7,is_stmt,isa 0
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_scia_puts")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1124| 
        ; call occurs [#_scia_puts] ; [] |1124| 
        MOV       AL,*-SP[57]           ; [CPU_] |1124| 
	.dwpsn	file "../Source/prod.c",line 1125,column 7,is_stmt,isa 0
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_print_sensor")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1125| 
        ; call occurs [#_print_sensor] ; [] |1125| 
	.dwpsn	file "../Source/prod.c",line 1122,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1122| 
        MOV       *-SP[57],AR1          ; [CPU_] |1122| 
        CMPB      AL,#20                ; [CPU_] |1122| 
        B         $C$L440,LO            ; [CPU_] |1122| 
        ; branchcc occurs ; [] |1122| 
        B         $C$L632,UNC           ; [CPU_] |1122| 
        ; branch occurs ; [] |1122| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1136,column 6,is_stmt,isa 0
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_print_dac")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1136| 
        ; call occurs [#_print_dac] ; [] |1136| 
	.dwpsn	file "../Source/prod.c",line 1137,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1137| 
        ; branch occurs ; [] |1137| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1131,column 6,is_stmt,isa 0
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_print_vfd")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1131| 
        ; call occurs [#_print_vfd] ; [] |1131| 
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1132| 
        ; branch occurs ; [] |1132| 
$C$L443:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2680| 
        B         $C$L625,LO            ; [CPU_] |2680| 
        ; branchcc occurs ; [] |2680| 
	.dwpsn	file "../Source/prod.c",line 2683,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2683| 
        CMPB      AL,#68                ; [CPU_] |2683| 
        B         $C$L444,EQ            ; [CPU_] |2683| 
        ; branchcc occurs ; [] |2683| 
        CMPB      AL,#83                ; [CPU_] |2683| 
        B         $C$L450,EQ            ; [CPU_] |2683| 
        ; branchcc occurs ; [] |2683| 
        B         $C$L625,UNC           ; [CPU_] |2683| 
        ; branch occurs ; [] |2683| 
$C$L444:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2801,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2801| 
        B         $C$L625,LO            ; [CPU_] |2801| 
        ; branchcc occurs ; [] |2801| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2805,column 6,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_atoi")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2805| 
        ; call occurs [#_atoi] ; [] |2805| 
        MOV       *-SP[57],AL           ; [CPU_] |2805| 
	.dwpsn	file "../Source/prod.c",line 2807,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2807| 
        CMPB      AL,#4                 ; [CPU_] |2807| 
        B         $C$L625,HIS           ; [CPU_] |2807| 
        ; branchcc occurs ; [] |2807| 
	.dwpsn	file "../Source/prod.c",line 2813,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2813| 
        MOV       *-SP[57],AL           ; [CPU_] |2813| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2813| 
        MOV       T,AL                  ; [CPU_] |2813| 
        MOVB      AL,#12                ; [CPU_] |2813| 
        MPYU      ACC,T,AL              ; [CPU_] |2813| 
        ADDL      ACC,XAR6              ; [CPU_] |2813| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2813| 
        MOVL      XAR1,ACC              ; [CPU_] |2813| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2813| 
        CMPB      AL,#7                 ; [CPU_] |2813| 
        B         $C$L625,NEQ           ; [CPU_] |2813| 
        ; branchcc occurs ; [] |2813| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_strtod")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2817,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2817| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2819,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2819| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2819| 
        MOVL      ACC,XAR6              ; [CPU_] |2819| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2819| 
        ; call occurs [#FS$$CMP] ; [] |2819| 
        CMPB      AL,#0                 ; [CPU_] |2819| 
        B         $C$L625,LT            ; [CPU_] |2819| 
        ; branchcc occurs ; [] |2819| 
        MOV       AL,#0                 ; [CPU_] |2819| 
        MOV       AH,#16672             ; [CPU_] |2819| 
        MOVL      XAR0,#88              ; [CPU_] |2819| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2819| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2819| 
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2819| 
        ; call occurs [#FS$$CMP] ; [] |2819| 
        CMPB      AL,#0                 ; [CPU_] |2819| 
        B         $C$L625,GT            ; [CPU_] |2819| 
        ; branchcc occurs ; [] |2819| 
	.dwpsn	file "../Source/prod.c",line 2825,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2825| 
        MOV       AH,#0                 ; [CPU_] |2825| 
        MOVL      XAR0,#88              ; [CPU_] |2825| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2825| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2825| 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2825| 
        ; call occurs [#FS$$CMP] ; [] |2825| 
        CMPB      AL,#0                 ; [CPU_] |2825| 
        B         $C$L445,GEQ           ; [CPU_] |2825| 
        ; branchcc occurs ; [] |2825| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2825| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2825| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2825| 
        B         $C$L446,UNC           ; [CPU_] |2825| 
        ; branch occurs ; [] |2825| 
$C$L445:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2825| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2825| 
$C$L446:    
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2825| 
        ; call occurs [#FS$$MPY] ; [] |2825| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2825| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2825| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2825| 
        ; call occurs [#FS$$ADD] ; [] |2825| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2825| 
        ; call occurs [#FS$$TOLL] ; [] |2825| 
	.dwpsn	file "../Source/prod.c",line 2832,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2832| 
	.dwpsn	file "../Source/prod.c",line 2825,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2825| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2825| 
	.dwpsn	file "../Source/prod.c",line 2832,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2832| 
        CMP64     ACC:P                 ; [CPU_] |2832| 
        B         $C$L448,LEQ           ; [CPU_] |2832| 
        ; branchcc occurs ; [] |2832| 
	.dwpsn	file "../Source/prod.c",line 2834,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2834| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2834| 
        MOV       *-SP[2],#0            ; [CPU_] |2834| 
        MOV       *-SP[1],#0            ; [CPU_] |2834| 
        MOVL      P,*-SP[32]            ; [CPU_] |2834| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2834| 
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$963, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2834| 
        ; call occurs [#LL$$CMP] ; [] |2834| 
        CMPB      AL,#0                 ; [CPU_] |2834| 
        B         $C$L447,GEQ           ; [CPU_] |2834| 
        ; branchcc occurs ; [] |2834| 
	.dwpsn	file "../Source/prod.c",line 2837,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2837| 
        MOV       *-SP[35],AL           ; [CPU_] |2837| 
        B         $C$L449,UNC           ; [CPU_] |2837| 
        ; branch occurs ; [] |2837| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2835,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2835| 
	.dwpsn	file "../Source/prod.c",line 2836,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2836| 
        ; branch occurs ; [] |2836| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2833,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2833| 
$C$L449:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2840,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2840| 
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2840| 
        ; call occurs [#_mcbsp_xmit] ; [] |2840| 
	.dwpsn	file "../Source/prod.c",line 2841,column 6,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_latch_dac")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2841| 
        ; call occurs [#_latch_dac] ; [] |2841| 
	.dwpsn	file "../Source/prod.c",line 2843,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2843| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2843| 
        MOVL      XAR0,#44              ; [CPU_] |2843| 
        ADD       AL,*-SP[57]           ; [CPU_] |2843| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2843| 
        MOV       *-SP[3],AL            ; [CPU_] |2843| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2843| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2843| 
        MOV       AL,*-SP[35]           ; [CPU_] |2843| 
        MOV       *-SP[7],AL            ; [CPU_] |2843| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2843| 
        MOVL      XAR4,XAR1             ; [CPU_] |2843| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_sprintf")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2843| 
        ; call occurs [#_sprintf] ; [] |2843| 
        MOVL      XAR4,XAR1             ; [CPU_] |2843| 
	.dwpsn	file "../Source/prod.c",line 2847,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2847| 
        ; branch occurs ; [] |2847| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2690,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2690| 
        MOVL      XAR0,#44              ; [CPU_] |2690| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2690| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2690| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2690| 
        MOVL      XAR4,XAR1             ; [CPU_] |2690| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_sprintf")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2690| 
        ; call occurs [#_sprintf] ; [] |2690| 
	.dwpsn	file "../Source/prod.c",line 2691,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2691| 
	.dwpsn	file "../Source/prod.c",line 2690,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2690| 
	.dwpsn	file "../Source/prod.c",line 2691,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2691| 
        MOV       AL,#1024              ; [CPU_] |2691| 
        MOVL      XAR5,XAR1             ; [CPU_] |2691| 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2691| 
        ; call occurs [#_scia_getparam] ; [] |2691| 
	.dwpsn	file "../Source/prod.c",line 2692,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2692| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_atoi")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2692| 
        ; call occurs [#_atoi] ; [] |2692| 
        MOV       *-SP[57],AL           ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2693,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2693| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_scia_puts")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2693| 
        ; call occurs [#_scia_puts] ; [] |2693| 
        MOV       AL,*-SP[57]           ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2695,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2695| 
        CMPB      AL,#4                 ; [CPU_] |2695| 
        B         $C$L465,HIS           ; [CPU_] |2695| 
        ; branchcc occurs ; [] |2695| 
	.dwpsn	file "../Source/prod.c",line 2699,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2699| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_puts")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2699| 
        ; call occurs [#_scia_puts] ; [] |2699| 
        MOVL      XAR0,#62              ; [CPU_] |2699| 
	.dwpsn	file "../Source/prod.c",line 2703,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2699,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2699| 
	.dwpsn	file "../Source/prod.c",line 2703,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2703| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2704,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2704| 
        MOVL      XAR0,#44              ; [CPU_] |2704| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2704| 
        MOV       *-SP[3],AL            ; [CPU_] |2704| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2704| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2704| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2704| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_sprintf")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2704| 
        ; call occurs [#_sprintf] ; [] |2704| 
        MOVL      XAR0,#44              ; [CPU_] |2704| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2704| 
	.dwpsn	file "../Source/prod.c",line 2705,column 7,is_stmt,isa 0
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2705| 
        ; call occurs [#_scia_puts] ; [] |2705| 
	.dwpsn	file "../Source/prod.c",line 2706,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2706| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_scia_puts")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2706| 
        ; call occurs [#_scia_puts] ; [] |2706| 
	.dwpsn	file "../Source/prod.c",line 2703,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2706,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2706| 
	.dwpsn	file "../Source/prod.c",line 2703,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2703| 
        B         $C$L451,LT            ; [CPU_] |2703| 
        ; branchcc occurs ; [] |2703| 
	.dwpsn	file "../Source/prod.c",line 2709,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2709| 
        MOVB      XAR0,#14              ; [CPU_] |2709| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2709| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2709| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2709| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2709| 
        MOVL      XAR0,#44              ; [CPU_] |2709| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2709| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2709| 
        MOVL      XAR4,XAR1             ; [CPU_] |2709| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_sprintf")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2709| 
        ; call occurs [#_sprintf] ; [] |2709| 
	.dwpsn	file "../Source/prod.c",line 2710,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2710| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_scia_puts")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2710| 
        ; call occurs [#_scia_puts] ; [] |2710| 
	.dwpsn	file "../Source/prod.c",line 2711,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2711| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2711| 
        ; call occurs [#_scia_puts] ; [] |2711| 
	.dwpsn	file "../Source/prod.c",line 2712,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2712| 
	.dwpsn	file "../Source/prod.c",line 2711,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2711| 
	.dwpsn	file "../Source/prod.c",line 2712,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2712| 
        DEC       *-SP[57]              ; [CPU_] |2712| 
        MOV       *-SP[47],AH           ; [CPU_] |2712| 
        MOV       *-SP[3],AH            ; [CPU_] |2712| 
        MOVL      XAR4,XAR1             ; [CPU_] |2712| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_sprintf")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2712| 
        ; call occurs [#_sprintf] ; [] |2712| 
	.dwpsn	file "../Source/prod.c",line 2714,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2714| 
        MOVL      XAR4,XAR1             ; [CPU_] |2714| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2714| 
        MOV       AL,#1024              ; [CPU_] |2714| 
        MOVL      XAR5,XAR1             ; [CPU_] |2714| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2714| 
        ; call occurs [#_scia_getparam] ; [] |2714| 
        MOVL      XAR4,XAR1             ; [CPU_] |2714| 
	.dwpsn	file "../Source/prod.c",line 2715,column 6,is_stmt,isa 0
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_atoi")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2715| 
        ; call occurs [#_atoi] ; [] |2715| 
	.dwpsn	file "../Source/prod.c",line 2708,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2708| 
	.dwpsn	file "../Source/prod.c",line 2715,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2715| 
	.dwpsn	file "../Source/prod.c",line 2716,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2716| 
        B         $C$L452,LO            ; [CPU_] |2716| 
        ; branchcc occurs ; [] |2716| 
        CMPB      AL,#7                 ; [CPU_] |2716| 
        B         $C$L452,EQ            ; [CPU_] |2716| 
        ; branchcc occurs ; [] |2716| 
	.dwpsn	file "../Source/prod.c",line 2718,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2718| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_scia_puts")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2718| 
        ; call occurs [#_scia_puts] ; [] |2718| 
	.dwpsn	file "../Source/prod.c",line 2717,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2717| 
$C$L452:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2721,column 6,is_stmt,isa 0
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_puts")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2721| 
        ; call occurs [#_scia_puts] ; [] |2721| 
	.dwpsn	file "../Source/prod.c",line 2722,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2722| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_scia_puts")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2722| 
        ; call occurs [#_scia_puts] ; [] |2722| 
	.dwpsn	file "../Source/prod.c",line 2723,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2723| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2723| 
        MOVB      AL,#12                ; [CPU_] |2723| 
        MOV       T,*-SP[57]            ; [CPU_] |2723| 
        MPYU      ACC,T,AL              ; [CPU_] |2723| 
        ADDL      ACC,XAR6              ; [CPU_] |2723| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2723| 
        MOVL      XAR1,ACC              ; [CPU_] |2723| 
        MOV       AL,*-SP[59]           ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2725,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2725| 
	.dwpsn	file "../Source/prod.c",line 2723,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2725,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2725| 
        ; branchcc occurs ; [] |2725| 
	.dwpsn	file "../Source/prod.c",line 2727,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2727| 
        B         $C$L454,EQ            ; [CPU_] |2727| 
        ; branchcc occurs ; [] |2727| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2727| 
        B         $C$L454,EQ            ; [CPU_] |2727| 
        ; branchcc occurs ; [] |2727| 
	.dwpsn	file "../Source/prod.c",line 2730,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2730| 
        B         $C$L453,EQ            ; [CPU_] |2730| 
        ; branchcc occurs ; [] |2730| 
        CMPB      AL,#4                 ; [CPU_] |2730| 
        B         $C$L455,NEQ           ; [CPU_] |2730| 
        ; branchcc occurs ; [] |2730| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2731,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2731| 
        B         $C$L455,UNC           ; [CPU_] |2731| 
        ; branch occurs ; [] |2731| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2729,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2729| 
$C$L455:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2736,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2736| 
        MOV       AL,*-SP[60]           ; [CPU_] |2736| 
        MOVL      XAR0,#44              ; [CPU_] |2736| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2736| 
        MOV       *-SP[3],AL            ; [CPU_] |2736| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2736| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_sprintf")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2736| 
        ; call occurs [#_sprintf] ; [] |2736| 
        MOVL      XAR0,#44              ; [CPU_] |2736| 
	.dwpsn	file "../Source/prod.c",line 2737,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2736,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2736| 
	.dwpsn	file "../Source/prod.c",line 2737,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2737| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2737| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2737| 
        ; call occurs [#_scia_getparam] ; [] |2737| 
        MOVL      XAR0,#86              ; [CPU_] |2737| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2738,column 8,is_stmt,isa 0
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_atoi")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2738| 
        ; call occurs [#_atoi] ; [] |2738| 
        MOVL      XAR0,#86              ; [CPU_] |2738| 
        MOV       *-SP[58],AL           ; [CPU_] |2738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2738| 
	.dwpsn	file "../Source/prod.c",line 2739,column 8,is_stmt,isa 0
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_scia_puts")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2739| 
        ; call occurs [#_scia_puts] ; [] |2739| 
        MOV       AL,*-SP[58]           ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2741,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2741| 
        ; branchcc occurs ; [] |2741| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2741| 
        B         $C$L464,LO            ; [CPU_] |2741| 
        ; branchcc occurs ; [] |2741| 
	.dwpsn	file "../Source/prod.c",line 2745,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2745| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2745| 
        ; call occurs [#_scia_puts] ; [] |2745| 
	.dwpsn	file "../Source/prod.c",line 2747,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2747| 
	.dwpsn	file "../Source/prod.c",line 2745,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2745| 
	.dwpsn	file "../Source/prod.c",line 2747,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2747| 
        MOV       AL,*-SP[59]           ; [CPU_] |2747| 
	.dwpsn	file "../Source/prod.c",line 2750,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2750| 
        B         $C$L457,EQ            ; [CPU_] |2750| 
        ; branchcc occurs ; [] |2750| 
        CMPB      AL,#4                 ; [CPU_] |2750| 
        B         $C$L459,NEQ           ; [CPU_] |2750| 
        ; branchcc occurs ; [] |2750| 
	.dwpsn	file "../Source/prod.c",line 2755,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2755| 
        B         $C$L458,UNC           ; [CPU_] |2755| 
        ; branch occurs ; [] |2755| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2753,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2753| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2753| 
        MOVL      XAR0,#44              ; [CPU_] |2753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2753| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_sprintf")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2753| 
        ; call occurs [#_sprintf] ; [] |2753| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2757,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2757| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2757| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2757| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2757| 
        ; call occurs [#_scia_getparam] ; [] |2757| 
        MOVL      XAR0,#86              ; [CPU_] |2757| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2757,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2757| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_strtod")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2758,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2758| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2758| 
        MOVL      XAR0,#86              ; [CPU_] |2758| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2758| 
	.dwpsn	file "../Source/prod.c",line 2759,column 8,is_stmt,isa 0
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_scia_puts")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2759| 
        ; call occurs [#_scia_puts] ; [] |2759| 
	.dwpsn	file "../Source/prod.c",line 2760,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2760| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2760| 
        ; call occurs [#_scia_puts] ; [] |2760| 
	.dwpsn	file "../Source/prod.c",line 2763,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2763| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2763| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2763| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2763| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_sprintf")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2763| 
        ; call occurs [#_sprintf] ; [] |2763| 
        MOVL      XAR0,#44              ; [CPU_] |2763| 
	.dwpsn	file "../Source/prod.c",line 2764,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2764| 
	.dwpsn	file "../Source/prod.c",line 2763,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2763| 
	.dwpsn	file "../Source/prod.c",line 2764,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2764| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2764| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2764| 
        ; call occurs [#_scia_getparam] ; [] |2764| 
        MOVL      XAR0,#86              ; [CPU_] |2764| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2764,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2764| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_strtod")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2765,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2765| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2765| 
        MOVL      XAR0,#86              ; [CPU_] |2765| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2766,column 8,is_stmt,isa 0
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_puts")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2766| 
        ; call occurs [#_scia_puts] ; [] |2766| 
	.dwpsn	file "../Source/prod.c",line 2767,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2767| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2767| 
        ; call occurs [#_scia_puts] ; [] |2767| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2774,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2774| 
        MOV       AL,*-SP[47]           ; [CPU_] |2774| 
        MOVL      XAR0,#62              ; [CPU_] |2774| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2774| 
        MOV       *-SP[3],AL            ; [CPU_] |2774| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2774| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2774| 
        MOV       ACC,AL << 1           ; [CPU_] |2774| 
        ADDL      ACC,XAR6              ; [CPU_] |2774| 
        MOVL      XAR4,ACC              ; [CPU_] |2774| 
        MOVL      XAR0,#44              ; [CPU_] |2774| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2774| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2774| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2774| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_sprintf")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2774| 
        ; call occurs [#_sprintf] ; [] |2774| 
        MOVL      XAR0,#44              ; [CPU_] |2774| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2774| 
	.dwpsn	file "../Source/prod.c",line 2776,column 6,is_stmt,isa 0
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2776| 
        ; call occurs [#_scia_puts] ; [] |2776| 
	.dwpsn	file "../Source/prod.c",line 2771,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2771| 
        MOV       AL,*-SP[59]           ; [CPU_] |2771| 
	.dwpsn	file "../Source/prod.c",line 2778,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2778| 
        B         $C$L461,EQ            ; [CPU_] |2778| 
        ; branchcc occurs ; [] |2778| 
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2781| 
        MOVB      AL,#1                 ; [CPU_] |2781| 
        MOVL      XAR0,#44              ; [CPU_] |2781| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2781| 
        ADD       AL,*-SP[58]           ; [CPU_] |2781| 
        MOV       *-SP[3],AL            ; [CPU_] |2781| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2781| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_sprintf")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2781| 
        ; call occurs [#_sprintf] ; [] |2781| 
        MOVL      XAR0,#44              ; [CPU_] |2781| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2781| 
	.dwpsn	file "../Source/prod.c",line 2782,column 7,is_stmt,isa 0
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2782| 
        ; call occurs [#_scia_puts] ; [] |2782| 
        MOV       AL,*-SP[59]           ; [CPU_] |2782| 
	.dwpsn	file "../Source/prod.c",line 2784,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2784| 
        B         $C$L460,EQ            ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
        CMPB      AL,#4                 ; [CPU_] |2784| 
        B         $C$L463,NEQ           ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2785,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2785| 
        MOVB      XAR0,#8               ; [CPU_] |2785| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2785| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2785| 
        MOVB      XAR0,#10              ; [CPU_] |2785| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2785| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2785| 
        MOVL      XAR0,#44              ; [CPU_] |2785| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2785| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2785| 
        MOVL      XAR4,XAR1             ; [CPU_] |2785| 
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_sprintf")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2785| 
        ; call occurs [#_sprintf] ; [] |2785| 
        MOVL      XAR4,XAR1             ; [CPU_] |2785| 
	.dwpsn	file "../Source/prod.c",line 2788,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2788| 
        ; branch occurs ; [] |2788| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2779,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2779| 
$C$L462:    
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2779| 
        ; call occurs [#_scia_puts] ; [] |2779| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2793,column 6,is_stmt,isa 0
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2793| 
        ; call occurs [#_ad7738_setcal] ; [] |2793| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2795,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2795| 
        ; branch occurs ; [] |2795| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2743,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2743| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2743| 
        ; call occurs [#_scia_puts] ; [] |2743| 
	.dwpsn	file "../Source/prod.c",line 2735,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2735| 
        ; branch occurs ; [] |2735| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2697,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2697| 
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2697| 
        ; call occurs [#_scia_puts] ; [] |2697| 
	.dwpsn	file "../Source/prod.c",line 2689,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2689| 
        ; branch occurs ; [] |2689| 
$C$L466:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2861,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2861| 
        B         $C$L625,LO            ; [CPU_] |2861| 
        ; branchcc occurs ; [] |2861| 
	.dwpsn	file "../Source/prod.c",line 2864,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2864| 
        CMPB      AL,#83                ; [CPU_] |2864| 
        B         $C$L625,NEQ           ; [CPU_] |2864| 
        ; branchcc occurs ; [] |2864| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2871| 
        MOVL      XAR0,#44              ; [CPU_] |2871| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2871| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2871| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2871| 
        MOVL      XAR4,XAR1             ; [CPU_] |2871| 
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_sprintf")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2871| 
        ; call occurs [#_sprintf] ; [] |2871| 
	.dwpsn	file "../Source/prod.c",line 2872,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2872| 
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2871| 
	.dwpsn	file "../Source/prod.c",line 2872,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2872| 
        MOV       AL,#1024              ; [CPU_] |2872| 
        MOVL      XAR5,XAR1             ; [CPU_] |2872| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2872| 
        ; call occurs [#_scia_getparam] ; [] |2872| 
	.dwpsn	file "../Source/prod.c",line 2873,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2873| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_atoi")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2873| 
        ; call occurs [#_atoi] ; [] |2873| 
        MOV       *-SP[57],AL           ; [CPU_] |2873| 
	.dwpsn	file "../Source/prod.c",line 2874,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2874| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2874| 
        ; call occurs [#_scia_puts] ; [] |2874| 
        MOV       AL,*-SP[57]           ; [CPU_] |2874| 
	.dwpsn	file "../Source/prod.c",line 2876,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2876| 
        CMPB      AL,#4                 ; [CPU_] |2876| 
        B         $C$L497,HIS           ; [CPU_] |2876| 
        ; branchcc occurs ; [] |2876| 
	.dwpsn	file "../Source/prod.c",line 2880,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2880| 
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2880| 
        ; call occurs [#_scia_puts] ; [] |2880| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2880| 
	.dwpsn	file "../Source/prod.c",line 2883,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2883| 
        MOVL      XAR0,#44              ; [CPU_] |2883| 
        DEC       *-SP[57]              ; [CPU_] |2883| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2883| 
        MOV       *-SP[47],AR1          ; [CPU_] |2883| 
        MOV       *-SP[3],AR1           ; [CPU_] |2883| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2883| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_sprintf")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2883| 
        ; call occurs [#_sprintf] ; [] |2883| 
        MOVL      XAR0,#44              ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2884,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2883,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2884,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2884| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2884| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2884| 
        ; call occurs [#_scia_getparam] ; [] |2884| 
        MOVL      XAR0,#86              ; [CPU_] |2884| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2885,column 6,is_stmt,isa 0
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2885| 
        ; call occurs [#_scia_puts] ; [] |2885| 
	.dwpsn	file "../Source/prod.c",line 2886,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2886| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2886| 
        ; call occurs [#_scia_puts] ; [] |2886| 
        MOVL      XAR0,#86              ; [CPU_] |2886| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2886| 
	.dwpsn	file "../Source/prod.c",line 2888,column 6,is_stmt,isa 0
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_atoi")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2888| 
        ; call occurs [#_atoi] ; [] |2888| 
        CMPB      AL,#1                 ; [CPU_] |2888| 
        B         $C$L468,EQ            ; [CPU_] |2888| 
        ; branchcc occurs ; [] |2888| 
	.dwpsn	file "../Source/prod.c",line 3037,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3037| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3037| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3037| 
        ADDL      ACC,XAR6              ; [CPU_] |3037| 
        ADD       ACC,#199 << 4         ; [CPU_] |3037| 
        MOVL      XAR4,ACC              ; [CPU_] |3037| 
	.dwpsn	file "../Source/prod.c",line 3038,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3038| 
	.dwpsn	file "../Source/prod.c",line 3037,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3037| 
	.dwpsn	file "../Source/prod.c",line 3038,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3038| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3038| 
        MOV       *-SP[3],AR1           ; [CPU_] |3038| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3038| 
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_sprintf")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3038| 
        ; call occurs [#_sprintf] ; [] |3038| 
        B         $C$L493,UNC           ; [CPU_] |3038| 
        ; branch occurs ; [] |3038| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2891| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2891| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2891| 
        ADDL      ACC,XAR6              ; [CPU_] |2891| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2891| 
        MOVL      XAR1,ACC              ; [CPU_] |2891| 
        MOVL      XAR0,#62              ; [CPU_] |2891| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2891| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2891| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2894,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2894| 
        MOV       *-SP[60],AL           ; [CPU_] |2894| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2895,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2895| 
        MOVL      XAR0,#88              ; [CPU_] |2895| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2895| 
        MOV       *-SP[3],AL            ; [CPU_] |2895| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2895| 
        MOVL      XAR0,#88              ; [CPU_] |2895| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2895| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2895| 
        MOVL      XAR0,#44              ; [CPU_] |2895| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2895| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2895| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_sprintf")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2895| 
        ; call occurs [#_sprintf] ; [] |2895| 
        MOVL      XAR0,#44              ; [CPU_] |2895| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2895| 
	.dwpsn	file "../Source/prod.c",line 2896,column 8,is_stmt,isa 0
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2896| 
        ; call occurs [#_scia_puts] ; [] |2896| 
        MOV       AL,*-SP[60]           ; [CPU_] |2896| 
	.dwpsn	file "../Source/prod.c",line 2897,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2897| 
        B         $C$L470,GEQ           ; [CPU_] |2897| 
        ; branchcc occurs ; [] |2897| 
	.dwpsn	file "../Source/prod.c",line 2898,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2898| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2898| 
        ; call occurs [#_scia_puts] ; [] |2898| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2894,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2894| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2894| 
        B         $C$L469,LT            ; [CPU_] |2894| 
        ; branchcc occurs ; [] |2894| 
	.dwpsn	file "../Source/prod.c",line 2901,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2901| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2901| 
        ; call occurs [#_scia_puts] ; [] |2901| 
	.dwpsn	file "../Source/prod.c",line 2902,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2902| 
        MOVL      XAR0,#44              ; [CPU_] |2902| 
        MOV       AL,*-SP[47]           ; [CPU_] |2902| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2902| 
        MOV       *-SP[3],AL            ; [CPU_] |2902| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2902| 
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_sprintf")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2902| 
        ; call occurs [#_sprintf] ; [] |2902| 
        MOVL      XAR0,#44              ; [CPU_] |2902| 
	.dwpsn	file "../Source/prod.c",line 2905,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2905| 
	.dwpsn	file "../Source/prod.c",line 2902,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2902| 
	.dwpsn	file "../Source/prod.c",line 2905,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2905| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2905| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2905| 
        ; call occurs [#_scia_getparam] ; [] |2905| 
        MOVL      XAR0,#86              ; [CPU_] |2905| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2905| 
	.dwpsn	file "../Source/prod.c",line 2906,column 7,is_stmt,isa 0
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_atoi")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2906| 
        ; call occurs [#_atoi] ; [] |2906| 
        MOV       *-SP[59],AL           ; [CPU_] |2906| 
        CMPB      AL,#5                 ; [CPU_] |2906| 
        B         $C$L471,LO            ; [CPU_] |2906| 
        ; branchcc occurs ; [] |2906| 
	.dwpsn	file "../Source/prod.c",line 2909,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2909| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2909| 
        ; call occurs [#_scia_puts] ; [] |2909| 
	.dwpsn	file "../Source/prod.c",line 2908,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2908| 
$C$L471:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2912,column 7,is_stmt,isa 0
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2912| 
        ; call occurs [#_scia_puts] ; [] |2912| 
	.dwpsn	file "../Source/prod.c",line 2913,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2913| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2913| 
        ; call occurs [#_scia_puts] ; [] |2913| 
        MOV       AL,*-SP[59]           ; [CPU_] |2913| 
	.dwpsn	file "../Source/prod.c",line 2914,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2914| 
	.dwpsn	file "../Source/prod.c",line 2916,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2916| 
        B         $C$L473,EQ            ; [CPU_] |2916| 
        ; branchcc occurs ; [] |2916| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2916| 
        B         $C$L473,EQ            ; [CPU_] |2916| 
        ; branchcc occurs ; [] |2916| 
	.dwpsn	file "../Source/prod.c",line 2919,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2919| 
        B         $C$L472,EQ            ; [CPU_] |2919| 
        ; branchcc occurs ; [] |2919| 
        CMPB      AL,#4                 ; [CPU_] |2919| 
        B         $C$L474,NEQ           ; [CPU_] |2919| 
        ; branchcc occurs ; [] |2919| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2920,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2920| 
        B         $C$L474,UNC           ; [CPU_] |2920| 
        ; branch occurs ; [] |2920| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2918,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2918| 
$C$L474:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2925,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2925| 
        MOV       AL,*-SP[60]           ; [CPU_] |2925| 
        MOVL      XAR0,#44              ; [CPU_] |2925| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2925| 
        MOV       *-SP[3],AL            ; [CPU_] |2925| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2925| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_sprintf")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2925| 
        ; call occurs [#_sprintf] ; [] |2925| 
        MOVL      XAR0,#44              ; [CPU_] |2925| 
	.dwpsn	file "../Source/prod.c",line 2926,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2926| 
	.dwpsn	file "../Source/prod.c",line 2925,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2925| 
	.dwpsn	file "../Source/prod.c",line 2926,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2926| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2926| 
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2926| 
        ; call occurs [#_scia_getparam] ; [] |2926| 
        MOVL      XAR0,#86              ; [CPU_] |2926| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2926| 
	.dwpsn	file "../Source/prod.c",line 2927,column 8,is_stmt,isa 0
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_atoi")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2927| 
        ; call occurs [#_atoi] ; [] |2927| 
        MOVL      XAR0,#86              ; [CPU_] |2927| 
        MOV       *-SP[58],AL           ; [CPU_] |2927| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2927| 
	.dwpsn	file "../Source/prod.c",line 2928,column 8,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2928| 
        ; call occurs [#_scia_puts] ; [] |2928| 
        MOV       AL,*-SP[58]           ; [CPU_] |2928| 
	.dwpsn	file "../Source/prod.c",line 2930,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2930| 
        ; branchcc occurs ; [] |2930| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2930| 
        B         $C$L496,LO            ; [CPU_] |2930| 
        ; branchcc occurs ; [] |2930| 
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2934| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2934| 
        ; call occurs [#_scia_puts] ; [] |2934| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2936| 
	.dwpsn	file "../Source/prod.c",line 2939,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2939| 
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2934| 
	.dwpsn	file "../Source/prod.c",line 2939,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2939| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2936| 
	.dwpsn	file "../Source/prod.c",line 2939,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2939| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2939| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2939| 
        ; call occurs [#_scia_getparam] ; [] |2939| 
        MOVL      XAR0,#86              ; [CPU_] |2939| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2939| 
	.dwpsn	file "../Source/prod.c",line 2942,column 7,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2942| 
        ; call occurs [#_scia_puts] ; [] |2942| 
	.dwpsn	file "../Source/prod.c",line 2943,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2943| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2943| 
        ; call occurs [#_scia_puts] ; [] |2943| 
        MOVL      XAR0,#86              ; [CPU_] |2943| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2943| 
	.dwpsn	file "../Source/prod.c",line 2945,column 7,is_stmt,isa 0
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_atoi")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2945| 
        ; call occurs [#_atoi] ; [] |2945| 
        CMPB      AL,#1                 ; [CPU_] |2945| 
        B         $C$L476,EQ            ; [CPU_] |2945| 
        ; branchcc occurs ; [] |2945| 
	.dwpsn	file "../Source/prod.c",line 2949,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2949| 
        B         $C$L477,UNC           ; [CPU_] |2949| 
        ; branch occurs ; [] |2949| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2947,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2947| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2952| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2952| 
        MOV       AL,#1024              ; [CPU_] |2952| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2952| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2952| 
        ; call occurs [#_scia_getparam] ; [] |2952| 
        MOVL      XAR0,#86              ; [CPU_] |2952| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2952| 
	.dwpsn	file "../Source/prod.c",line 2955,column 7,is_stmt,isa 0
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2955| 
        ; call occurs [#_scia_puts] ; [] |2955| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2956| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2956| 
        ; call occurs [#_scia_puts] ; [] |2956| 
        MOVL      XAR0,#86              ; [CPU_] |2956| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2958,column 7,is_stmt,isa 0
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_atoi")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2958| 
        ; call occurs [#_atoi] ; [] |2958| 
        CMPB      AL,#1                 ; [CPU_] |2958| 
        B         $C$L478,EQ            ; [CPU_] |2958| 
        ; branchcc occurs ; [] |2958| 
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2962| 
        B         $C$L479,UNC           ; [CPU_] |2962| 
        ; branch occurs ; [] |2962| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2960,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2960| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2965,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2965| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2965| 
        MOV       AL,#1024              ; [CPU_] |2965| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2965| 
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2965| 
        ; call occurs [#_scia_getparam] ; [] |2965| 
        MOVL      XAR0,#86              ; [CPU_] |2965| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2965| 
	.dwpsn	file "../Source/prod.c",line 2968,column 7,is_stmt,isa 0
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2968| 
        ; call occurs [#_scia_puts] ; [] |2968| 
	.dwpsn	file "../Source/prod.c",line 2969,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2969| 
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2969| 
        ; call occurs [#_scia_puts] ; [] |2969| 
        MOVL      XAR0,#86              ; [CPU_] |2969| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2969| 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_atoi")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2971| 
        ; call occurs [#_atoi] ; [] |2971| 
        CMPB      AL,#1                 ; [CPU_] |2971| 
        B         $C$L480,EQ            ; [CPU_] |2971| 
        ; branchcc occurs ; [] |2971| 
	.dwpsn	file "../Source/prod.c",line 2975,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2975| 
        B         $C$L481,UNC           ; [CPU_] |2975| 
        ; branch occurs ; [] |2975| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2973,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2973| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2979,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2979| 
        CMPB      AL,#2                 ; [CPU_] |2979| 
        B         $C$L483,LOS           ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
        CMPB      AL,#3                 ; [CPU_] |2979| 
        B         $C$L482,EQ            ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
        CMPB      AL,#4                 ; [CPU_] |2979| 
        B         $C$L485,NEQ           ; [CPU_] |2979| 
        ; branchcc occurs ; [] |2979| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2991,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2991| 
	.dwpsn	file "../Source/prod.c",line 2992,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2992| 
        ; branch occurs ; [] |2992| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2988,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2988| 
	.dwpsn	file "../Source/prod.c",line 2989,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2989| 
        ; branch occurs ; [] |2989| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2983,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2983| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2983| 
        MOV       T,#10                 ; [CPU_] |2983| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2983| 
        ADDL      ACC,XAR6              ; [CPU_] |2983| 
        MOVL      XAR4,ACC              ; [CPU_] |2983| 
        MOVB      XAR0,#42              ; [CPU_] |2983| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2983| 
        MPYB      ACC,T,#152            ; [CPU_] |2983| 
        ADDL      ACC,XAR6              ; [CPU_] |2983| 
        MOVL      XAR4,ACC              ; [CPU_] |2983| 
        MOVB      XAR0,#125             ; [CPU_] |2983| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2983| 
        MOVL      XAR0,#70              ; [CPU_] |2983| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2983| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2983| 
        MOV       ACC,AL << 1           ; [CPU_] |2983| 
        ADDL      ACC,XAR6              ; [CPU_] |2983| 
        MOVL      XAR4,ACC              ; [CPU_] |2983| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2983| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |2983| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2983| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2996,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2996| 
        MOVL      XAR0,#48              ; [CPU_] |2996| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2996| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2996| 
        MOVL      XAR0,#44              ; [CPU_] |2996| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2996| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2996| 
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_sprintf")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2996| 
        ; call occurs [#_sprintf] ; [] |2996| 
        MOVL      XAR0,#44              ; [CPU_] |2996| 
	.dwpsn	file "../Source/prod.c",line 2997,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2997| 
	.dwpsn	file "../Source/prod.c",line 2996,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2996| 
	.dwpsn	file "../Source/prod.c",line 2997,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2997| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2997| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2997| 
        ; call occurs [#_scia_getparam] ; [] |2997| 
        MOVL      XAR0,#86              ; [CPU_] |2997| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2997| 
	.dwpsn	file "../Source/prod.c",line 2998,column 7,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2998| 
        ; call occurs [#_scia_puts] ; [] |2998| 
	.dwpsn	file "../Source/prod.c",line 2999,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2999| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2999| 
        ; call occurs [#_scia_puts] ; [] |2999| 
        MOVL      XAR0,#86              ; [CPU_] |2999| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2999,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2999| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_strtod")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3005| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3005| 
	.dwpsn	file "../Source/prod.c",line 3001,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3001| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3005| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3005| 
        MOVL      XAR0,#44              ; [CPU_] |3005| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3005| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3005| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_sprintf")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3005| 
        ; call occurs [#_sprintf] ; [] |3005| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3006,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3006| 
        MOVL      XAR0,#86              ; [CPU_] |3006| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3006| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3006| 
        ; call occurs [#_scia_getparam] ; [] |3006| 
        MOVL      XAR0,#86              ; [CPU_] |3006| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3006| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3007| 
        ; call occurs [#_scia_puts] ; [] |3007| 
	.dwpsn	file "../Source/prod.c",line 3008,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3008| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3008| 
        ; call occurs [#_scia_puts] ; [] |3008| 
        MOVL      XAR0,#86              ; [CPU_] |3008| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3008,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3008| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_strtod")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3016| 
        MOVL      XAR0,#62              ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3010,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3010| 
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3016| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3016| 
        MOV       *-SP[3],AL            ; [CPU_] |3016| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3016| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |3016| 
        MOV       ACC,AL << 1           ; [CPU_] |3016| 
        ADDL      ACC,XAR6              ; [CPU_] |3016| 
        MOVL      XAR4,ACC              ; [CPU_] |3016| 
        MOVL      XAR0,#44              ; [CPU_] |3016| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3016| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3016| 
        MOVB      AL,#1                 ; [CPU_] |3016| 
        ADD       AL,*-SP[58]           ; [CPU_] |3016| 
        MOV       *-SP[7],AL            ; [CPU_] |3016| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3016| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_sprintf")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3016| 
        ; call occurs [#_sprintf] ; [] |3016| 
        MOVL      XAR0,#44              ; [CPU_] |3016| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3019,column 7,is_stmt,isa 0
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3019| 
        ; call occurs [#_scia_puts] ; [] |3019| 
	.dwpsn	file "../Source/prod.c",line 3021,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3021| 
        B         $C$L486,TC            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3021| 
        B         $C$L487,UNC           ; [CPU_] |3021| 
        ; branch occurs ; [] |3021| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3021| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3021| 
        B         $C$L488,TC            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3021| 
        B         $C$L489,UNC           ; [CPU_] |3021| 
        ; branch occurs ; [] |3021| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3021| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3021| 
        B         $C$L490,TC            ; [CPU_] |3021| 
        ; branchcc occurs ; [] |3021| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3021| 
        B         $C$L491,UNC           ; [CPU_] |3021| 
        ; branch occurs ; [] |3021| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3021| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3021| 
        MOVL      XAR0,#44              ; [CPU_] |3021| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3021| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3021| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3021| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3021| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3021| 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_sprintf")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3021| 
        ; call occurs [#_sprintf] ; [] |3021| 
        MOVL      XAR0,#44              ; [CPU_] |3021| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3021| 
	.dwpsn	file "../Source/prod.c",line 3028,column 7,is_stmt,isa 0
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3028| 
        ; call occurs [#_scia_puts] ; [] |3028| 
	.dwpsn	file "../Source/prod.c",line 3029,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3029| 
        MOVL      XAR0,#48              ; [CPU_] |3029| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3029| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3029| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3029| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3029| 
        MOVL      XAR0,#48              ; [CPU_] |3029| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3029| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3029| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3029| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3029| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3029| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |3029| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |3029| 
        MOVL      XAR4,XAR1             ; [CPU_] |3029| 
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_sprintf")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3029| 
        ; call occurs [#_sprintf] ; [] |3029| 
        MOVL      XAR4,XAR1             ; [CPU_] |3029| 
	.dwpsn	file "../Source/prod.c",line 3033,column 7,is_stmt,isa 0
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3033| 
        ; call occurs [#_scia_puts] ; [] |3033| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3044,column 6,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3044| 
        ; call occurs [#_ad7738_setcal] ; [] |3044| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3041,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3041| 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3046| 
        ; branch occurs ; [] |3046| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2932,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2932| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2932| 
        ; call occurs [#_scia_puts] ; [] |2932| 
	.dwpsn	file "../Source/prod.c",line 2924,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2924| 
        ; branch occurs ; [] |2924| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2878,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2878| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2878| 
        ; call occurs [#_scia_puts] ; [] |2878| 
	.dwpsn	file "../Source/prod.c",line 2870,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2870| 
        ; branch occurs ; [] |2870| 
$C$L498:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3350,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3350| 
        B         $C$L625,LO            ; [CPU_] |3350| 
        ; branchcc occurs ; [] |3350| 
	.dwpsn	file "../Source/prod.c",line 3353,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3353| 
        CMPB      AL,#68                ; [CPU_] |3353| 
        B         $C$L502,EQ            ; [CPU_] |3353| 
        ; branchcc occurs ; [] |3353| 
        CMPB      AL,#82                ; [CPU_] |3353| 
        B         $C$L501,EQ            ; [CPU_] |3353| 
        ; branchcc occurs ; [] |3353| 
        CMPB      AL,#87                ; [CPU_] |3353| 
        B         $C$L625,NEQ           ; [CPU_] |3353| 
        ; branchcc occurs ; [] |3353| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3357,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3357| 
        ; branchcc occurs ; [] |3357| 
	.dwpsn	file "../Source/prod.c",line 3381,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3381| 
	.dwpsn	file "../Source/prod.c",line 3383,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3383| 
        ; branch occurs ; [] |3383| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3359,column 7,is_stmt,isa 0
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3359| 
        ; call occurs [#_lcd_clear] ; [] |3359| 
	.dwpsn	file "../Source/prod.c",line 3360,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3360| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3360| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3360| 
        ; call occurs [#_lcd_puts] ; [] |3360| 
	.dwpsn	file "../Source/prod.c",line 3361,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3361| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3361| 
        ; call occurs [#_scia_puts] ; [] |3361| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3364,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3364| 
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_delay_us")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3364| 
        ; call occurs [#_delay_us] ; [] |3364| 
	.dwpsn	file "../Source/prod.c",line 3363,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3363| 
        ; branchcc occurs ; [] |3363| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3368,column 7,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_conf_write")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3368| 
        ; call occurs [#_conf_write] ; [] |3368| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3371,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3371| 
        B         $C$L505,NEQ           ; [CPU_] |3371| 
        ; branchcc occurs ; [] |3371| 
	.dwpsn	file "../Source/prod.c",line 3372,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3372| 
	.dwpsn	file "../Source/prod.c",line 3374,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3374| 
        ; branch occurs ; [] |3374| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3388,column 6,is_stmt,isa 0
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_conf_read")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3388| 
        ; call occurs [#_conf_read] ; [] |3388| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3391,column 6,is_stmt,isa 0
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3391| 
        ; call occurs [#_ad7738_setcal] ; [] |3391| 
	.dwpsn	file "../Source/prod.c",line 3392,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3392| 
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3392| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3392| 
	.dwpsn	file "../Source/prod.c",line 3393,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3393| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3393| 
        ; call occurs [#_ad7738_resetvall] ; [] |3393| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3396,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3396| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3396| 
        ; call occurs [#_scia_puts] ; [] |3396| 
	.dwpsn	file "../Source/prod.c",line 3399,column 6,is_stmt,isa 0
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_update_units")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3399| 
        ; call occurs [#_update_units] ; [] |3399| 
	.dwpsn	file "../Source/prod.c",line 3397,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3397| 
	.dwpsn	file "../Source/prod.c",line 3401,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3401| 
        ; branch occurs ; [] |3401| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3405,column 6,is_stmt,isa 0
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_conf_default")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3405| 
        ; call occurs [#_conf_default] ; [] |3405| 
	.dwpsn	file "../Source/prod.c",line 3408,column 6,is_stmt,isa 0
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3408| 
        ; call occurs [#_lcd_clear] ; [] |3408| 
	.dwpsn	file "../Source/prod.c",line 3409,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3409| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3409| 
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3409| 
        ; call occurs [#_lcd_puts] ; [] |3409| 
	.dwpsn	file "../Source/prod.c",line 3410,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3410| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3410| 
        ; call occurs [#_scia_puts] ; [] |3410| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3413,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3413| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_delay_us")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3413| 
        ; call occurs [#_delay_us] ; [] |3413| 
	.dwpsn	file "../Source/prod.c",line 3412,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3412| 
        ; branchcc occurs ; [] |3412| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3417,column 6,is_stmt,isa 0
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_conf_write")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3417| 
        ; call occurs [#_conf_write] ; [] |3417| 
        MOVZ      AR1,AL                ; [CPU_] |3417| 
	.dwpsn	file "../Source/prod.c",line 3418,column 6,is_stmt,isa 0
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3418| 
        ; call occurs [#_ad7738_setcal] ; [] |3418| 
	.dwpsn	file "../Source/prod.c",line 3419,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3419| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3419| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3419| 
	.dwpsn	file "../Source/prod.c",line 3420,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3420| 
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3420| 
        ; call occurs [#_ad7738_resetvall] ; [] |3420| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3423,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3423| 
        ; branchcc occurs ; [] |3423| 
	.dwpsn	file "../Source/prod.c",line 3424,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3424| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3424| 
        ; call occurs [#_scia_puts] ; [] |3424| 
	.dwpsn	file "../Source/prod.c",line 3426,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3426| 
	.dwpsn	file "../Source/prod.c",line 3427,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3427| 
        ; branch occurs ; [] |3427| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3428,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3428| 
        SPM       #0                    ; [CPU_] 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3428| 
        ; call occurs [#_scia_puts] ; [] |3428| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3430,column 6,is_stmt,isa 0
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3430| 
        ; call occurs [#_lcd_clear] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3431,column 6,is_stmt,isa 0
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_update_units")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3431| 
        ; call occurs [#_update_units] ; [] |3431| 
	.dwpsn	file "../Source/prod.c",line 3432,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3432| 
        ; branch occurs ; [] |3432| 
$C$L507:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2457,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2457| 
        B         $C$L625,LO            ; [CPU_] |2457| 
        ; branchcc occurs ; [] |2457| 
	.dwpsn	file "../Source/prod.c",line 2460,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2460| 
        CMPB      AL,#70                ; [CPU_] |2460| 
        B         $C$L512,EQ            ; [CPU_] |2460| 
        ; branchcc occurs ; [] |2460| 
        CMPB      AL,#80                ; [CPU_] |2460| 
        B         $C$L632,NEQ           ; [CPU_] |2460| 
        ; branchcc occurs ; [] |2460| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2497,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2497| 
        MOVL      XAR0,#44              ; [CPU_] |2497| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2497| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2497| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2497| 
        MOVL      XAR4,XAR1             ; [CPU_] |2497| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_sprintf")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2497| 
        ; call occurs [#_sprintf] ; [] |2497| 
	.dwpsn	file "../Source/prod.c",line 2498,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2498| 
	.dwpsn	file "../Source/prod.c",line 2497,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2497| 
	.dwpsn	file "../Source/prod.c",line 2498,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2498| 
        MOV       AL,#1024              ; [CPU_] |2498| 
        MOVL      XAR5,XAR1             ; [CPU_] |2498| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2498| 
        ; call occurs [#_scia_getparam] ; [] |2498| 
	.dwpsn	file "../Source/prod.c",line 2499,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2499| 
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_atoi")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2499| 
        ; call occurs [#_atoi] ; [] |2499| 
        MOV       *-SP[57],AL           ; [CPU_] |2499| 
	.dwpsn	file "../Source/prod.c",line 2500,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2500| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2500| 
        ; call occurs [#_scia_puts] ; [] |2500| 
        MOV       AL,*-SP[57]           ; [CPU_] |2500| 
	.dwpsn	file "../Source/prod.c",line 2502,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2502| 
        CMPB      AL,#2                 ; [CPU_] |2502| 
        B         $C$L511,HIS           ; [CPU_] |2502| 
        ; branchcc occurs ; [] |2502| 
	.dwpsn	file "../Source/prod.c",line 2506,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2506| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2506| 
        ; call occurs [#_scia_puts] ; [] |2506| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2506| 
	.dwpsn	file "../Source/prod.c",line 2509,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2509| 
        MOVL      XAR0,#44              ; [CPU_] |2509| 
        DEC       *-SP[57]              ; [CPU_] |2509| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2509| 
        MOV       *-SP[3],AR1           ; [CPU_] |2509| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2509| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_sprintf")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2509| 
        ; call occurs [#_sprintf] ; [] |2509| 
        MOVL      XAR0,#44              ; [CPU_] |2509| 
	.dwpsn	file "../Source/prod.c",line 2510,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2510| 
	.dwpsn	file "../Source/prod.c",line 2509,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2509| 
	.dwpsn	file "../Source/prod.c",line 2510,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2510| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2510| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2510| 
        ; call occurs [#_scia_getparam] ; [] |2510| 
        MOVL      XAR0,#86              ; [CPU_] |2510| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2510| 
	.dwpsn	file "../Source/prod.c",line 2511,column 6,is_stmt,isa 0
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_atol")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2511| 
        ; call occurs [#_atol] ; [] |2511| 
        MOVL      XAR0,#86              ; [CPU_] |2511| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2511| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2511| 
	.dwpsn	file "../Source/prod.c",line 2512,column 6,is_stmt,isa 0
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2512| 
        ; call occurs [#_scia_puts] ; [] |2512| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2513| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2513| 
        ; call occurs [#_scia_puts] ; [] |2513| 
	.dwpsn	file "../Source/prod.c",line 2514,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2514| 
        B         $C$L509,NEQ           ; [CPU_] |2514| 
        ; branchcc occurs ; [] |2514| 
	.dwpsn	file "../Source/prod.c",line 2515,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2515| 
	.dwpsn	file "../Source/prod.c",line 2516,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2516| 
        ; branch occurs ; [] |2516| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2518,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2518| 
        MOVL      XAR0,#44              ; [CPU_] |2518| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2518| 
        MOV       *-SP[3],AR1           ; [CPU_] |2518| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2518| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2518| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2518| 
        MOVL      XAR4,XAR1             ; [CPU_] |2518| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_sprintf")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2518| 
        ; call occurs [#_sprintf] ; [] |2518| 
        MOVL      XAR4,XAR1             ; [CPU_] |2518| 
	.dwpsn	file "../Source/prod.c",line 2520,column 6,is_stmt,isa 0
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2520| 
        ; call occurs [#_scia_puts] ; [] |2520| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2525,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2525| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2525| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2525| 
        ADDL      ACC,XAR6              ; [CPU_] |2525| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2525| 
        ADD       ACC,#201 << 4         ; [CPU_] |2525| 
        MOVL      XAR4,ACC              ; [CPU_] |2525| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2525| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2526,column 6,is_stmt,isa 0
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2526| 
        ; call occurs [#_ad7738_setcal] ; [] |2526| 
	.dwpsn	file "../Source/prod.c",line 2527,column 6,is_stmt,isa 0
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2527| 
        ; call occurs [#_velf_rst] ; [] |2527| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2529| 
        ; branch occurs ; [] |2529| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2504,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2504| 
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2504| 
        ; call occurs [#_scia_puts] ; [] |2504| 
	.dwpsn	file "../Source/prod.c",line 2496,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2496| 
        ; branch occurs ; [] |2496| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2467,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2467| 
        MOVL      XAR0,#44              ; [CPU_] |2467| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2467| 
        MOV       *-SP[3],#4096         ; [CPU_] |2467| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2467| 
        MOVL      XAR4,XAR1             ; [CPU_] |2467| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_sprintf")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2467| 
        ; call occurs [#_sprintf] ; [] |2467| 
	.dwpsn	file "../Source/prod.c",line 2469,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2469| 
	.dwpsn	file "../Source/prod.c",line 2467,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2467| 
	.dwpsn	file "../Source/prod.c",line 2469,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2469| 
        MOV       AL,#1024              ; [CPU_] |2469| 
        MOVL      XAR5,XAR1             ; [CPU_] |2469| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2469| 
        ; call occurs [#_scia_getparam] ; [] |2469| 
	.dwpsn	file "../Source/prod.c",line 2470,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2470| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_atoi")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2470| 
        ; call occurs [#_atoi] ; [] |2470| 
        MOV       *-SP[47],AL           ; [CPU_] |2470| 
	.dwpsn	file "../Source/prod.c",line 2471,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2471| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2471| 
        ; call occurs [#_scia_puts] ; [] |2471| 
        MOV       AL,*-SP[47]           ; [CPU_] |2471| 
	.dwpsn	file "../Source/prod.c",line 2473,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2473| 
        ; branchcc occurs ; [] |2473| 
        CMP       AL,#4096              ; [CPU_] |2473| 
        B         $C$L513,GT            ; [CPU_] |2473| 
        ; branchcc occurs ; [] |2473| 
	.dwpsn	file "../Source/prod.c",line 2477,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2477| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2477| 
        ; call occurs [#_scia_puts] ; [] |2477| 
	.dwpsn	file "../Source/prod.c",line 2479,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2479| 
        MOVL      XAR0,#44              ; [CPU_] |2479| 
        MOV       AL,*-SP[47]           ; [CPU_] |2479| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2479| 
        MOV       *-SP[3],AL            ; [CPU_] |2479| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2479| 
        MOVL      XAR4,XAR1             ; [CPU_] |2479| 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_sprintf")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2479| 
        ; call occurs [#_sprintf] ; [] |2479| 
        MOVL      XAR4,XAR1             ; [CPU_] |2479| 
	.dwpsn	file "../Source/prod.c",line 2481,column 6,is_stmt,isa 0
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2481| 
        ; call occurs [#_scia_puts] ; [] |2481| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2486,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2486| 
        MOVL      ACC,XAR4              ; [CPU_] |2486| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2486| 
        MOVL      XAR4,ACC              ; [CPU_] |2486| 
        MOV       AL,*-SP[47]           ; [CPU_] |2486| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2486| 
	.dwpsn	file "../Source/prod.c",line 2490,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2490| 
        ; branch occurs ; [] |2490| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2475,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2475| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2475| 
        ; call occurs [#_scia_puts] ; [] |2475| 
	.dwpsn	file "../Source/prod.c",line 2466,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2466| 
        ; branch occurs ; [] |2466| 
$C$L514:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2539,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2539| 
        B         $C$L625,LO            ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
	.dwpsn	file "../Source/prod.c",line 2542,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2542| 
        CMPB      AL,#83                ; [CPU_] |2542| 
        B         $C$L625,NEQ           ; [CPU_] |2542| 
        ; branchcc occurs ; [] |2542| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2549,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2549| 
        MOVL      XAR0,#44              ; [CPU_] |2549| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2549| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2549| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2549| 
        MOVL      XAR4,XAR1             ; [CPU_] |2549| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_sprintf")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2549| 
        ; call occurs [#_sprintf] ; [] |2549| 
	.dwpsn	file "../Source/prod.c",line 2550,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2550| 
	.dwpsn	file "../Source/prod.c",line 2549,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2549| 
	.dwpsn	file "../Source/prod.c",line 2550,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2550| 
        MOV       AL,#1024              ; [CPU_] |2550| 
        MOVL      XAR5,XAR1             ; [CPU_] |2550| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2550| 
        ; call occurs [#_scia_getparam] ; [] |2550| 
	.dwpsn	file "../Source/prod.c",line 2551,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2551| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_atoi")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2551| 
        ; call occurs [#_atoi] ; [] |2551| 
        MOV       *-SP[57],AL           ; [CPU_] |2551| 
	.dwpsn	file "../Source/prod.c",line 2552,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2552| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2552| 
        ; call occurs [#_scia_puts] ; [] |2552| 
        MOV       AL,*-SP[57]           ; [CPU_] |2552| 
	.dwpsn	file "../Source/prod.c",line 2554,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2554| 
        CMPB      AL,#4                 ; [CPU_] |2554| 
        B         $C$L529,HIS           ; [CPU_] |2554| 
        ; branchcc occurs ; [] |2554| 
	.dwpsn	file "../Source/prod.c",line 2558,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2558| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2558| 
        ; call occurs [#_scia_puts] ; [] |2558| 
        MOVL      XAR0,#62              ; [CPU_] |2558| 
	.dwpsn	file "../Source/prod.c",line 2562,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2562| 
	.dwpsn	file "../Source/prod.c",line 2558,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2558| 
	.dwpsn	file "../Source/prod.c",line 2562,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2562| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2563,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2563| 
        MOVL      XAR0,#44              ; [CPU_] |2563| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2563| 
        MOV       *-SP[3],AL            ; [CPU_] |2563| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2563| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2563| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2563| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_sprintf")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2563| 
        ; call occurs [#_sprintf] ; [] |2563| 
        MOVL      XAR0,#44              ; [CPU_] |2563| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2563| 
	.dwpsn	file "../Source/prod.c",line 2564,column 7,is_stmt,isa 0
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2564| 
        ; call occurs [#_scia_puts] ; [] |2564| 
        MOV       AL,*-SP[47]           ; [CPU_] |2564| 
	.dwpsn	file "../Source/prod.c",line 2565,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2565| 
        B         $C$L517,GEQ           ; [CPU_] |2565| 
        ; branchcc occurs ; [] |2565| 
	.dwpsn	file "../Source/prod.c",line 2566,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2566| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2566| 
        ; call occurs [#_scia_puts] ; [] |2566| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2562,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2562| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2562| 
        B         $C$L516,LT            ; [CPU_] |2562| 
        ; branchcc occurs ; [] |2562| 
	.dwpsn	file "../Source/prod.c",line 2569,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2569| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2569| 
        ; call occurs [#_scia_puts] ; [] |2569| 
	.dwpsn	file "../Source/prod.c",line 2570,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2570| 
        MOVL      XAR0,#44              ; [CPU_] |2570| 
	.dwpsn	file "../Source/prod.c",line 2569,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2569| 
	.dwpsn	file "../Source/prod.c",line 2570,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2570| 
        MOV       *-SP[3],AH            ; [CPU_] |2570| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2570| 
        DEC       *-SP[57]              ; [CPU_] |2570| 
        MOV       *-SP[47],AH           ; [CPU_] |2570| 
        MOVL      XAR4,XAR1             ; [CPU_] |2570| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_sprintf")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2570| 
        ; call occurs [#_sprintf] ; [] |2570| 
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2570,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2570| 
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2572| 
        MOV       AL,#1024              ; [CPU_] |2572| 
        MOVL      XAR5,XAR1             ; [CPU_] |2572| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2572| 
        ; call occurs [#_scia_getparam] ; [] |2572| 
        MOVL      XAR4,XAR1             ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2573,column 6,is_stmt,isa 0
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_atoi")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2573| 
        ; call occurs [#_atoi] ; [] |2573| 
        MOVZ      AR1,AL                ; [CPU_] |2573| 
        CMPB      AL,#7                 ; [CPU_] |2573| 
        B         $C$L518,LO            ; [CPU_] |2573| 
        ; branchcc occurs ; [] |2573| 
	.dwpsn	file "../Source/prod.c",line 2576,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2576| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2576| 
        ; call occurs [#_scia_puts] ; [] |2576| 
	.dwpsn	file "../Source/prod.c",line 2575,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2575| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2579,column 6,is_stmt,isa 0
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2579| 
        ; call occurs [#_scia_puts] ; [] |2579| 
	.dwpsn	file "../Source/prod.c",line 2580,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2580| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2580| 
        ; call occurs [#_scia_puts] ; [] |2580| 
	.dwpsn	file "../Source/prod.c",line 2581,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2581| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2581| 
        MOVB      AL,#3                 ; [CPU_] |2581| 
        MOV       T,*-SP[57]            ; [CPU_] |2581| 
        MPYU      ACC,T,AL              ; [CPU_] |2581| 
        ADDL      ACC,XAR6              ; [CPU_] |2581| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2581| 
        MOVL      XAR4,ACC              ; [CPU_] |2581| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2581| 
	.dwpsn	file "../Source/prod.c",line 2583,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2583| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2583| 
        CMPB      AL,#2                 ; [CPU_] |2583| 
        B         $C$L522,LOS           ; [CPU_] |2583| 
        ; branchcc occurs ; [] |2583| 
        MOV       AH,AL                 ; [CPU_] |2583| 
        ADDB      AH,#-3                ; [CPU_] |2583| 
        CMPB      AH,#1                 ; [CPU_] |2583| 
        B         $C$L521,LOS           ; [CPU_] |2583| 
        ; branchcc occurs ; [] |2583| 
        CMPB      AL,#5                 ; [CPU_] |2583| 
        B         $C$L519,EQ            ; [CPU_] |2583| 
        ; branchcc occurs ; [] |2583| 
        CMPB      AL,#6                 ; [CPU_] |2583| 
        B         $C$L584,NEQ           ; [CPU_] |2583| 
        ; branchcc occurs ; [] |2583| 
	.dwpsn	file "../Source/prod.c",line 2657,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2657| 
        MOV       AL,*-SP[47]           ; [CPU_] |2657| 
        MOVL      XAR0,#62              ; [CPU_] |2657| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2657| 
        MOV       *-SP[3],AL            ; [CPU_] |2657| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2657| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2657| 
        ADDL      ACC,XAR6              ; [CPU_] |2657| 
        MOVL      XAR4,ACC              ; [CPU_] |2657| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2657| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2657| 
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2660| 
        ; branch occurs ; [] |2660| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2638,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2638| 
        MOVL      XAR0,#44              ; [CPU_] |2638| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2638| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2638| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2638| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_sprintf")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2638| 
        ; call occurs [#_sprintf] ; [] |2638| 
        MOVL      XAR0,#44              ; [CPU_] |2638| 
	.dwpsn	file "../Source/prod.c",line 2639,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2639| 
	.dwpsn	file "../Source/prod.c",line 2638,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2638| 
	.dwpsn	file "../Source/prod.c",line 2639,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2639| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2639| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2639| 
        ; call occurs [#_scia_getparam] ; [] |2639| 
        MOVL      XAR0,#86              ; [CPU_] |2639| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2639| 
	.dwpsn	file "../Source/prod.c",line 2640,column 8,is_stmt,isa 0
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_atoi")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2640| 
        ; call occurs [#_atoi] ; [] |2640| 
        MOVL      XAR0,#86              ; [CPU_] |2640| 
        MOV       *-SP[58],AL           ; [CPU_] |2640| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2640| 
	.dwpsn	file "../Source/prod.c",line 2641,column 8,is_stmt,isa 0
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2641| 
        ; call occurs [#_scia_puts] ; [] |2641| 
        MOV       AL,*-SP[58]           ; [CPU_] |2641| 
	.dwpsn	file "../Source/prod.c",line 2643,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2643| 
        CMPB      AL,#4                 ; [CPU_] |2643| 
        B         $C$L520,HIS           ; [CPU_] |2643| 
        ; branchcc occurs ; [] |2643| 
	.dwpsn	file "../Source/prod.c",line 2647,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2647| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2647| 
        ; call occurs [#_scia_puts] ; [] |2647| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2649| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2651| 
        MOVL      XAR0,#62              ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2647,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2647| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2649| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2651| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2651| 
        MOV       *-SP[3],AL            ; [CPU_] |2651| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2651| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2651| 
        ADDL      ACC,XAR6              ; [CPU_] |2651| 
        MOVL      XAR4,ACC              ; [CPU_] |2651| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2651| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2651| 
        MOVB      AL,#1                 ; [CPU_] |2651| 
        ADD       AL,*-SP[58]           ; [CPU_] |2651| 
        MOV       *-SP[7],AL            ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2654,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2654| 
        ; branch occurs ; [] |2654| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2645,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2645| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2645| 
        ; call occurs [#_scia_puts] ; [] |2645| 
	.dwpsn	file "../Source/prod.c",line 2637,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2637| 
        ; branch occurs ; [] |2637| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2595,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2595| 
        B         $C$L523,UNC           ; [CPU_] |2595| 
        ; branch occurs ; [] |2595| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2589,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2589| 
$C$L523:    
        MOV       *-SP[59],AL           ; [CPU_] |2589| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2600,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2600| 
        MOV       AL,*-SP[59]           ; [CPU_] |2600| 
        MOVL      XAR0,#44              ; [CPU_] |2600| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2600| 
        MOV       *-SP[3],AL            ; [CPU_] |2600| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2600| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_sprintf")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2600| 
        ; call occurs [#_sprintf] ; [] |2600| 
        MOVL      XAR0,#44              ; [CPU_] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2601| 
	.dwpsn	file "../Source/prod.c",line 2600,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2601| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2601| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2601| 
        ; call occurs [#_scia_getparam] ; [] |2601| 
        MOVL      XAR0,#86              ; [CPU_] |2601| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2601| 
	.dwpsn	file "../Source/prod.c",line 2602,column 8,is_stmt,isa 0
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_atoi")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2602| 
        ; call occurs [#_atoi] ; [] |2602| 
        MOVL      XAR0,#86              ; [CPU_] |2602| 
        MOV       *-SP[58],AL           ; [CPU_] |2602| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2602| 
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2603| 
        ; call occurs [#_scia_puts] ; [] |2603| 
        MOV       AL,*-SP[58]           ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2605,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2605| 
        ; branchcc occurs ; [] |2605| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2605| 
        B         $C$L528,LO            ; [CPU_] |2605| 
        ; branchcc occurs ; [] |2605| 
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2609| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2609| 
        ; call occurs [#_scia_puts] ; [] |2609| 
	.dwpsn	file "../Source/prod.c",line 2611,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2611| 
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2609| 
	.dwpsn	file "../Source/prod.c",line 2611,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2611| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2616,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2616| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2616| 
        MOV       AL,#1024              ; [CPU_] |2616| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2616| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2616| 
        ; call occurs [#_scia_getparam] ; [] |2616| 
        MOVL      XAR0,#86              ; [CPU_] |2616| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2616| 
	.dwpsn	file "../Source/prod.c",line 2618,column 8,is_stmt,isa 0
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_atoi")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2618| 
        ; call occurs [#_atoi] ; [] |2618| 
        MOV       *-SP[48],AL           ; [CPU_] |2618| 
        CMPB      AL,#0                 ; [CPU_] |2618| 
        B         $C$L527,LT            ; [CPU_] |2618| 
        ; branchcc occurs ; [] |2618| 
        CMPB      AL,#6                 ; [CPU_] |2618| 
        B         $C$L527,GEQ           ; [CPU_] |2618| 
        ; branchcc occurs ; [] |2618| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2624,column 7,is_stmt,isa 0
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2624| 
        ; call occurs [#_scia_puts] ; [] |2624| 
	.dwpsn	file "../Source/prod.c",line 2625,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2625| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2625| 
        ; call occurs [#_scia_puts] ; [] |2625| 
        MOV       AL,*-SP[48]           ; [CPU_] |2625| 
	.dwpsn	file "../Source/prod.c",line 2628,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2628| 
        MOVL      XAR0,#62              ; [CPU_] |2628| 
	.dwpsn	file "../Source/prod.c",line 2626,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2626| 
	.dwpsn	file "../Source/prod.c",line 2628,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2628| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2628| 
        MOV       *-SP[3],AL            ; [CPU_] |2628| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2628| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2628| 
        ADDL      ACC,XAR6              ; [CPU_] |2628| 
        MOVL      XAR4,ACC              ; [CPU_] |2628| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2628| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2628| 
        MOVB      AL,#1                 ; [CPU_] |2628| 
        ADD       AL,*-SP[58]           ; [CPU_] |2628| 
        MOV       *-SP[7],AL            ; [CPU_] |2628| 
        MOV       AL,*-SP[48]           ; [CPU_] |2628| 
        MOV       *-SP[8],AL            ; [CPU_] |2628| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2628| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2628| 
        MOVL      XAR4,XAR1             ; [CPU_] |2628| 
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_sprintf")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2628| 
        ; call occurs [#_sprintf] ; [] |2628| 
        MOVL      XAR4,XAR1             ; [CPU_] |2628| 
	.dwpsn	file "../Source/prod.c",line 2631,column 7,is_stmt,isa 0
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2631| 
        ; call occurs [#_scia_puts] ; [] |2631| 
	.dwpsn	file "../Source/prod.c",line 2666,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2666| 
        ; branch occurs ; [] |2666| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2622,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2622| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2622| 
        ; call occurs [#_scia_puts] ; [] |2622| 
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2615| 
        ; branch occurs ; [] |2615| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2607,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2607| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2607| 
        ; call occurs [#_scia_puts] ; [] |2607| 
	.dwpsn	file "../Source/prod.c",line 2599,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2599| 
        ; branch occurs ; [] |2599| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2556,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2556| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2556| 
        ; call occurs [#_scia_puts] ; [] |2556| 
	.dwpsn	file "../Source/prod.c",line 2548,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2548| 
        ; branch occurs ; [] |2548| 
$C$L530:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1646,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1646| 
        B         $C$L625,LO            ; [CPU_] |1646| 
        ; branchcc occurs ; [] |1646| 
	.dwpsn	file "../Source/prod.c",line 1651,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1651| 
        CMPB      AL,#86                ; [CPU_] |1651| 
        B         $C$L531,EQ            ; [CPU_] |1651| 
        ; branchcc occurs ; [] |1651| 
        CMPB      AL,#77                ; [CPU_] |1651| 
        B         $C$L531,EQ            ; [CPU_] |1651| 
        ; branchcc occurs ; [] |1651| 
        CMPB      AL,#83                ; [CPU_] |1651| 
        B         $C$L625,NEQ           ; [CPU_] |1651| 
        ; branchcc occurs ; [] |1651| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1654,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1654| 
        MOV       *-SP[47],AL           ; [CPU_] |1654| 
	.dwpsn	file "../Source/prod.c",line 1656,column 5,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1656| 
        ; call occurs [#_lcd_clear] ; [] |1656| 
	.dwpsn	file "../Source/prod.c",line 1657,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1657| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1657| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1657| 
        ; call occurs [#_lcd_puts] ; [] |1657| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1663,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1663| 
        MOVL      XAR0,#44              ; [CPU_] |1663| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1663| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1663| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1663| 
        MOVL      XAR4,XAR1             ; [CPU_] |1663| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_sprintf")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1663| 
        ; call occurs [#_sprintf] ; [] |1663| 
	.dwpsn	file "../Source/prod.c",line 1664,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1664| 
	.dwpsn	file "../Source/prod.c",line 1663,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1663| 
	.dwpsn	file "../Source/prod.c",line 1664,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1664| 
        MOV       AL,#1024              ; [CPU_] |1664| 
        MOVL      XAR5,XAR1             ; [CPU_] |1664| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1664| 
        ; call occurs [#_scia_getparam] ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1665,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1665| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_atoi")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1665| 
        ; call occurs [#_atoi] ; [] |1665| 
        MOV       *-SP[58],AL           ; [CPU_] |1665| 
	.dwpsn	file "../Source/prod.c",line 1666,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1666| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1666| 
        ; call occurs [#_scia_puts] ; [] |1666| 
        MOV       AL,*-SP[58]           ; [CPU_] |1666| 
	.dwpsn	file "../Source/prod.c",line 1668,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1668| 
        CMPB      AL,#4                 ; [CPU_] |1668| 
        B         $C$L590,HIS           ; [CPU_] |1668| 
        ; branchcc occurs ; [] |1668| 
	.dwpsn	file "../Source/prod.c",line 1672,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1672| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1672| 
        ; call occurs [#_scia_puts] ; [] |1672| 
	.dwpsn	file "../Source/prod.c",line 1673,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1673| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1678,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1678| 
        MOVL      XAR0,#44              ; [CPU_] |1678| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1678| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1678| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1678| 
        MOVL      XAR4,XAR1             ; [CPU_] |1678| 
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_sprintf")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1678| 
        ; call occurs [#_sprintf] ; [] |1678| 
	.dwpsn	file "../Source/prod.c",line 1679,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1679| 
	.dwpsn	file "../Source/prod.c",line 1678,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1678| 
	.dwpsn	file "../Source/prod.c",line 1679,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1679| 
        MOV       AL,#1024              ; [CPU_] |1679| 
        MOVL      XAR5,XAR1             ; [CPU_] |1679| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1679| 
        ; call occurs [#_scia_getparam] ; [] |1679| 
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1680| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_atoi")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1680| 
        ; call occurs [#_atoi] ; [] |1680| 
        MOV       *-SP[57],AL           ; [CPU_] |1680| 
	.dwpsn	file "../Source/prod.c",line 1681,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1681| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1681| 
        ; call occurs [#_scia_puts] ; [] |1681| 
        MOV       AL,*-SP[57]           ; [CPU_] |1681| 
	.dwpsn	file "../Source/prod.c",line 1685,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1685| 
        CMPB      AL,#20                ; [CPU_] |1685| 
        B         $C$L589,HIS           ; [CPU_] |1685| 
        ; branchcc occurs ; [] |1685| 
	.dwpsn	file "../Source/prod.c",line 1689,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1689| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1689| 
        ; call occurs [#_scia_puts] ; [] |1689| 
	.dwpsn	file "../Source/prod.c",line 1693,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1693| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1693| 
        MOVL      XAR0,#44              ; [CPU_] |1693| 
	.dwpsn	file "../Source/prod.c",line 1689,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1689| 
	.dwpsn	file "../Source/prod.c",line 1693,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1693| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1693| 
        MOV       *-SP[3],AL            ; [CPU_] |1693| 
        MOV       *-SP[4],AH            ; [CPU_] |1693| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1693| 
        DEC       *-SP[57]              ; [CPU_] |1693| 
        MOV       *-SP[59],AH           ; [CPU_] |1693| 
        MOV       *-SP[60],AL           ; [CPU_] |1693| 
        MOVL      XAR4,XAR1             ; [CPU_] |1693| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_sprintf")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1693| 
        ; call occurs [#_sprintf] ; [] |1693| 
	.dwpsn	file "../Source/prod.c",line 1694,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1694| 
        MOVL      XAR4,XAR1             ; [CPU_] |1694| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1694| 
        ; call occurs [#_lcd_puts] ; [] |1694| 
	.dwpsn	file "../Source/prod.c",line 1698,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1698| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1698| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1698| 
        MOVL      XAR4,XAR1             ; [CPU_] |1698| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_sprintf")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1698| 
        ; call occurs [#_sprintf] ; [] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1699| 
        MOV       AL,#1024              ; [CPU_] |1699| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1699| 
        MOVL      XAR4,XAR1             ; [CPU_] |1699| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1699| 
        ; call occurs [#_scia_getparam] ; [] |1699| 
        CMPB      AL,#15                ; [CPU_] |1699| 
        B         $C$L534,LOS           ; [CPU_] |1699| 
        ; branchcc occurs ; [] |1699| 
	.dwpsn	file "../Source/prod.c",line 1703,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1703| 
        MOVB      XAR0,#15              ; [CPU_] |1703| 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1702| 
	.dwpsn	file "../Source/prod.c",line 1703,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1703| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1705,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1705| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1705| 
        MOVL      XAR0,#86              ; [CPU_] |1705| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1705| 
        MOVB      AH,#1                 ; [CPU_] |1705| 
        ADD       AH,AL                 ; [CPU_] |1705| 
        MOVU      ACC,AH                ; [CPU_] |1705| 
        MOVL      XAR5,XAR1             ; [CPU_] |1705| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_memcpy")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1705| 
        ; call occurs [#_memcpy] ; [] |1705| 
        MOVL      XAR4,XAR1             ; [CPU_] |1705| 
	.dwpsn	file "../Source/prod.c",line 1706,column 5,is_stmt,isa 0
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1706| 
        ; call occurs [#_scia_puts] ; [] |1706| 
	.dwpsn	file "../Source/prod.c",line 1707,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1707| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1707| 
        ; call occurs [#_scia_puts] ; [] |1707| 
	.dwpsn	file "../Source/prod.c",line 1711,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1711| 
        MOVL      XAR0,#44              ; [CPU_] |1711| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1711| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1711| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1711| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_sprintf")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1711| 
        ; call occurs [#_sprintf] ; [] |1711| 
        MOVL      XAR0,#44              ; [CPU_] |1711| 
	.dwpsn	file "../Source/prod.c",line 1712,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1712| 
	.dwpsn	file "../Source/prod.c",line 1711,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1711| 
	.dwpsn	file "../Source/prod.c",line 1712,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1712| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1712| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1712| 
        ; call occurs [#_scia_getparam] ; [] |1712| 
        CMPB      AL,#15                ; [CPU_] |1712| 
        B         $C$L535,LOS           ; [CPU_] |1712| 
        ; branchcc occurs ; [] |1712| 
	.dwpsn	file "../Source/prod.c",line 1716,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1716| 
        MOVB      XAR0,#15              ; [CPU_] |1716| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1715| 
	.dwpsn	file "../Source/prod.c",line 1716,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1716| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1718,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1718| 
        MOVL      XAR0,#60              ; [CPU_] |1718| 
        MOVL      XAR5,XAR1             ; [CPU_] |1718| 
        ADD       AH,AL                 ; [CPU_] |1718| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1718| 
        MOVU      ACC,AH                ; [CPU_] |1718| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_memcpy")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1718| 
        ; call occurs [#_memcpy] ; [] |1718| 
        MOVL      XAR4,XAR1             ; [CPU_] |1718| 
	.dwpsn	file "../Source/prod.c",line 1719,column 5,is_stmt,isa 0
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1719| 
        ; call occurs [#_scia_puts] ; [] |1719| 
	.dwpsn	file "../Source/prod.c",line 1720,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1720| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1720| 
        ; call occurs [#_scia_puts] ; [] |1720| 
        MOVL      XAR0,#70              ; [CPU_] |1720| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1720| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1723,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1723| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1723| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1724,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1724| 
        MOVL      XAR0,#88              ; [CPU_] |1724| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1724| 
        MOV       *-SP[3],AL            ; [CPU_] |1724| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1724| 
        MOVL      XAR0,#88              ; [CPU_] |1724| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1724| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1724| 
        MOVL      XAR4,XAR1             ; [CPU_] |1724| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1724| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_sprintf")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1724| 
        ; call occurs [#_sprintf] ; [] |1724| 
	.dwpsn	file "../Source/prod.c",line 1723,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1723| 
        INC       *-SP[61]              ; [CPU_] |1723| 
        MOV       AL,*-SP[61]           ; [CPU_] |1723| 
        CMPB      AL,#7                 ; [CPU_] |1723| 
        B         $C$L536,LT            ; [CPU_] |1723| 
        ; branchcc occurs ; [] |1723| 
	.dwpsn	file "../Source/prod.c",line 1726,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1726| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1726| 
        MOVB      XAR1,#54              ; [CPU_] |1726| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1726| 
	.dwpsn	file "../Source/prod.c",line 1727,column 5,is_stmt,isa 0
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1727| 
        ; call occurs [#_scia_puts] ; [] |1727| 
	.dwpsn	file "../Source/prod.c",line 1728,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1728| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1728| 
        MOV       AL,#1024              ; [CPU_] |1728| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1728| 
        MOVL      XAR5,XAR1             ; [CPU_] |1728| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1728| 
        ; call occurs [#_scia_getparam] ; [] |1728| 
        MOVL      XAR4,XAR1             ; [CPU_] |1728| 
	.dwpsn	file "../Source/prod.c",line 1730,column 5,is_stmt,isa 0
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_atoi")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1730| 
        ; call occurs [#_atoi] ; [] |1730| 
        MOVB      XAR0,#42              ; [CPU_] |1730| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1730| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1730| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1732| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1732| 
        CMPB      AL,#6                 ; [CPU_] |1732| 
        B         $C$L537,GT            ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
        CMPB      AL,#6                 ; [CPU_] |1732| 
        B         $C$L540,EQ            ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
        CMPB      AL,#1                 ; [CPU_] |1732| 
        B         $C$L543,LOS           ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
        MOV       AH,AL                 ; [CPU_] |1732| 
        ADDB      AH,#-2                ; [CPU_] |1732| 
        CMPB      AH,#2                 ; [CPU_] |1732| 
        B         $C$L542,LOS           ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
        CMPB      AL,#5                 ; [CPU_] |1732| 
        B         $C$L541,EQ            ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
        B         $C$L538,UNC           ; [CPU_] |1732| 
        ; branch occurs ; [] |1732| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1732| 
        ADDB      AH,#-7                ; [CPU_] |1732| 
        CMPB      AH,#1                 ; [CPU_] |1732| 
        B         $C$L539,LOS           ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
        CMPB      AL,#15                ; [CPU_] |1732| 
        B         $C$L539,EQ            ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1754| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1754| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1755| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1755| 
        ; call occurs [#_scia_puts] ; [] |1755| 
	.dwpsn	file "../Source/prod.c",line 1756,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1756| 
        ; branch occurs ; [] |1756| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1751,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1751| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1752| 
        ; branch occurs ; [] |1752| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1746,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1746| 
	.dwpsn	file "../Source/prod.c",line 1747,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1747| 
        ; branch occurs ; [] |1747| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1743,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1743| 
	.dwpsn	file "../Source/prod.c",line 1744,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1744| 
        ; branch occurs ; [] |1744| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1740,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1740| 
	.dwpsn	file "../Source/prod.c",line 1741,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1741| 
        ; branch occurs ; [] |1741| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1735,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1735| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1758,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1758| 
        MOVL      XAR4,XAR7             ; [CPU_] |1758| 
        MOVB      XAR0,#43              ; [CPU_] |1758| 
        ADDB      XAR7,#42              ; [CPU_] |1758| 
        MOV       AL,*XAR7              ; [CPU_] |1758| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1758| 
	.dwpsn	file "../Source/prod.c",line 1759,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1759| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1759| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1759| 
        MOVL      XAR0,#86              ; [CPU_] |1759| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1759| 
	.dwpsn	file "../Source/prod.c",line 1761,column 5,is_stmt,isa 0
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1761| 
        ; call occurs [#_scia_puts] ; [] |1761| 
	.dwpsn	file "../Source/prod.c",line 1762,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1762| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1762| 
        ; call occurs [#_scia_puts] ; [] |1762| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1767| 
        MOVL      XAR5,XAR1             ; [CPU_] |1767| 
        MOV       AL,#1024              ; [CPU_] |1767| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1767| 
        ; call occurs [#_scia_getparam] ; [] |1767| 
        MOVL      XAR4,XAR1             ; [CPU_] |1767| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_strtod")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1768| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1768| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1770,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1770| 
        MOV       AH,#0                 ; [CPU_] |1770| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1770| 
        MOVL      ACC,XAR3              ; [CPU_] |1770| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1770| 
        ; call occurs [#FS$$CMP] ; [] |1770| 
        CMPB      AL,#0                 ; [CPU_] |1770| 
        B         $C$L588,EQ            ; [CPU_] |1770| 
        ; branchcc occurs ; [] |1770| 
	.dwpsn	file "../Source/prod.c",line 1774,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1774| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1774| 
        MOVB      XAR1,#142             ; [CPU_] |1774| 
        MOVL      XAR0,#86              ; [CPU_] |1774| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1774| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1774| 
	.dwpsn	file "../Source/prod.c",line 1775,column 5,is_stmt,isa 0
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1775| 
        ; call occurs [#_scia_puts] ; [] |1775| 
	.dwpsn	file "../Source/prod.c",line 1776,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1776| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1776| 
        ; call occurs [#_scia_puts] ; [] |1776| 
        MOV       AL,*-SP[58]           ; [CPU_] |1776| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_tagid")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1778| 
        ; call occurs [#_tagid] ; [] |1778| 
        MOVL      XAR0,#36              ; [CPU_] |1778| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1778| 
        MOVL      XAR4,XAR5             ; [CPU_] |1778| 
        ADDB      XAR4,#32              ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1780,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1780| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1778| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1780,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1780| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1780| 
        MOV       *-SP[2],#0            ; [CPU_] |1780| 
        MOV       *-SP[1],#0            ; [CPU_] |1780| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1780| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1780| 
        MOVL      P,XAR4                ; [CPU_] |1780| 
        MOVL      ACC,XAR5              ; [CPU_] |1780| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1184, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1780| 
        ; call occurs [#ULL$$CMP] ; [] |1780| 
        CMPB      AL,#0                 ; [CPU_] |1780| 
        B         $C$L546,NEQ           ; [CPU_] |1780| 
        ; branchcc occurs ; [] |1780| 
	.dwpsn	file "../Source/prod.c",line 1781,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1781| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1781| 
	.dwpsn	file "../Source/prod.c",line 1782,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1782| 
        ; branch occurs ; [] |1782| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1783,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1783| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1783| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1783| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1783| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1783| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1783| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_sprintf")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1783| 
        ; call occurs [#_sprintf] ; [] |1783| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1785,column 5,is_stmt,isa 0
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1785| 
        ; call occurs [#_scia_puts] ; [] |1785| 
        MOV       AL,*-SP[47]           ; [CPU_] |1785| 
	.dwpsn	file "../Source/prod.c",line 1787,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1787| 
        B         $C$L561,EQ            ; [CPU_] |1787| 
        ; branchcc occurs ; [] |1787| 
        CMPB      AL,#83                ; [CPU_] |1787| 
        B         $C$L552,EQ            ; [CPU_] |1787| 
        ; branchcc occurs ; [] |1787| 
        CMPB      AL,#86                ; [CPU_] |1787| 
        B         $C$L618,NEQ           ; [CPU_] |1787| 
        ; branchcc occurs ; [] |1787| 
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1792| 
        MOVB      AL,#40                ; [CPU_] |1792| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1792| 
        ; call occurs [#_lcd_puts] ; [] |1792| 
	.dwpsn	file "../Source/prod.c",line 1794,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1794| 
        MOVB      XAR0,#36              ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1797,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1797| 
	.dwpsn	file "../Source/prod.c",line 1794,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1795,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1795| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1795| 
	.dwpsn	file "../Source/prod.c",line 1797,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1797| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1797| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1797| 
        MOVL      XAR0,#70              ; [CPU_] |1797| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1797| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1797| 
        MOV       ACC,AL << 1           ; [CPU_] |1797| 
        ADDL      ACC,XAR6              ; [CPU_] |1797| 
        MOVL      XAR4,ACC              ; [CPU_] |1797| 
        MOVL      XAR0,#44              ; [CPU_] |1797| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1797| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1797| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1797| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_sprintf")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1797| 
        ; call occurs [#_sprintf] ; [] |1797| 
        MOVL      XAR0,#44              ; [CPU_] |1797| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1799| 
	.dwpsn	file "../Source/prod.c",line 1797,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1797| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1799| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1799| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1799| 
        ; call occurs [#_scia_getparam] ; [] |1799| 
        MOVL      XAR0,#86              ; [CPU_] |1799| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1799| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_strtod")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1800,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1800| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1800,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1800| 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1801| 
        MOV       AH,#0                 ; [CPU_] |1801| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1801| 
        MOVL      ACC,XAR6              ; [CPU_] |1801| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1801| 
        ; call occurs [#FS$$CMP] ; [] |1801| 
        CMPB      AL,#0                 ; [CPU_] |1801| 
        B         $C$L548,NEQ           ; [CPU_] |1801| 
        ; branchcc occurs ; [] |1801| 
	.dwpsn	file "../Source/prod.c",line 1802,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1802| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1802| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1802| 
$C$L548:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1804,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1804| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1804| 
        ; call occurs [#_scia_puts] ; [] |1804| 
	.dwpsn	file "../Source/prod.c",line 1805,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1805| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1805| 
        ; call occurs [#_scia_puts] ; [] |1805| 
	.dwpsn	file "../Source/prod.c",line 1807,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1807| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1807| 
        MOVL      XAR5,XAR1             ; [CPU_] |1807| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1807| 
        ; call occurs [#_scia_getparam] ; [] |1807| 
	.dwpsn	file "../Source/prod.c",line 1810,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1810| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1810| 
        ; call occurs [#_scia_puts] ; [] |1810| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1813| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1813| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1814| 
        MOVB      ACC,#0                ; [CPU_] |1814| 
        SUBB      ACC,#1                ; [CPU_] |1814| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1814| 
        B         $C$L551,EQ            ; [CPU_] |1814| 
        ; branchcc occurs ; [] |1814| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1815,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1815| 
        ; branch occurs ; [] |1815| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1816,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1816| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_delay_us")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1816| 
        ; call occurs [#_delay_us] ; [] |1816| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1815,column 14,is_stmt,isa 0
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1815| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1815| 
        CMPB      AL,#0                 ; [CPU_] |1815| 
        B         $C$L549,EQ            ; [CPU_] |1815| 
        ; branchcc occurs ; [] |1815| 
	.dwpsn	file "../Source/prod.c",line 1819,column 7,is_stmt,isa 0
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1819| 
        ; call occurs [#_ad7738_getraw] ; [] |1819| 
	.dwpsn	file "../Source/prod.c",line 1820,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1820| 
        ADDL      XAR4,ACC              ; [CPU_] |1820| 
        MOVL      XAR0,#20              ; [CPU_] |1820| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1820| 
        MOVL      XAR0,#20              ; [CPU_] |1820| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1820| 
        ASR64     ACC:P,16              ; [CPU_] |1820| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1820| 
        MOVL      XAR0,#20              ; [CPU_] |1820| 
        ASR64     ACC:P,16              ; [CPU_] |1820| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1820| 
        MOVL      XAR0,#20              ; [CPU_] |1820| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1820| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1820| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1820| 
        MOVL      *-SP[32],P            ; [CPU_] |1820| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1820| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1814| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1814| 
        MOVB      ACC,#0                ; [CPU_] |1814| 
        SUBB      ACC,#1                ; [CPU_] |1814| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1814| 
        B         $C$L550,NEQ           ; [CPU_] |1814| 
        ; branchcc occurs ; [] |1814| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1822,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1822| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1822| 
        ; call occurs [#_scia_puts] ; [] |1822| 
	.dwpsn	file "../Source/prod.c",line 1824,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1824| 
        MOVL      XAR0,#52              ; [CPU_] |1824| 
        MOVL      ACC,XAR1              ; [CPU_] |1824| 
        ADDB      ACC,#96               ; [CPU_] |1824| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1824| 
        MOVL      XAR0,#40              ; [CPU_] |1824| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1824| 
        MOV       T,*-SP[58]            ; [CPU_] |1824| 
        MOVB      AL,#10                ; [CPU_] |1824| 
        MPYU      ACC,T,AL              ; [CPU_] |1824| 
        ADDL      ACC,XAR6              ; [CPU_] |1824| 
        ADDB      ACC,#42               ; [CPU_] |1824| 
        MOVL      XAR4,ACC              ; [CPU_] |1824| 
        MOVL      XAR0,#42              ; [CPU_] |1824| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1824| 
	.dwpsn	file "../Source/prod.c",line 1826,column 6,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1826| 
        ; branch occurs ; [] |1826| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1909,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1909| 
        MOVB      AL,#40                ; [CPU_] |1909| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1909| 
        ; call occurs [#_lcd_puts] ; [] |1909| 
	.dwpsn	file "../Source/prod.c",line 1911,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1911| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1911| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1914| 
	.dwpsn	file "../Source/prod.c",line 1911,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1911| 
	.dwpsn	file "../Source/prod.c",line 1912,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1912| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1912| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1914| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1914| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1914| 
        MOVL      XAR0,#70              ; [CPU_] |1914| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1914| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1914| 
        MOV       ACC,AL << 1           ; [CPU_] |1914| 
        ADDL      ACC,XAR6              ; [CPU_] |1914| 
        MOVL      XAR4,ACC              ; [CPU_] |1914| 
        MOVL      XAR0,#44              ; [CPU_] |1914| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1914| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1914| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1914| 
        MOVL      XAR4,XAR1             ; [CPU_] |1914| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_sprintf")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1914| 
        ; call occurs [#_sprintf] ; [] |1914| 
	.dwpsn	file "../Source/prod.c",line 1917,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1914| 
	.dwpsn	file "../Source/prod.c",line 1917,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1917| 
        MOV       AL,#1024              ; [CPU_] |1917| 
        MOVL      XAR5,XAR1             ; [CPU_] |1917| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1917| 
        ; call occurs [#_scia_getparam] ; [] |1917| 
	.dwpsn	file "../Source/prod.c",line 1918,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1918| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1918| 
        ; call occurs [#_scia_puts] ; [] |1918| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_strtod")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1920,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1920| 
        MOV       AH,#0                 ; [CPU_] |1920| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1920| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1920| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1920| 
        ; call occurs [#FS$$CMP] ; [] |1920| 
        CMPB      AL,#0                 ; [CPU_] |1920| 
        B         $C$L553,NEQ           ; [CPU_] |1920| 
        ; branchcc occurs ; [] |1920| 
	.dwpsn	file "../Source/prod.c",line 1921,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1921| 
        MOV       AH,#16314             ; [CPU_] |1921| 
	.dwpsn	file "../Source/prod.c",line 1922,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1922| 
	.dwpsn	file "../Source/prod.c",line 1921,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1921| 
	.dwpsn	file "../Source/prod.c",line 1922,column 7,is_stmt,isa 0
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1922| 
        ; call occurs [#_scia_puts] ; [] |1922| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1924,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1924| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1924| 
        ; call occurs [#_scia_puts] ; [] |1924| 
	.dwpsn	file "../Source/prod.c",line 1926,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1926| 
        MOV       AL,#1024              ; [CPU_] |1926| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1926| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1926| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1926| 
        ; call occurs [#_scia_getparam] ; [] |1926| 
	.dwpsn	file "../Source/prod.c",line 1929,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1929| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1929| 
        ; call occurs [#_scia_puts] ; [] |1929| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1931,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1931| 
        MOV       *-SP[48],AL           ; [CPU_] |1931| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1932,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1932| 
        B         $C$L556,LEQ           ; [CPU_] |1932| 
        ; branchcc occurs ; [] |1932| 
	.dwpsn	file "../Source/prod.c",line 1934,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1934| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1934| 
        ; call occurs [#_shunt_switch] ; [] |1934| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1936,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1936| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_delay_us")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1936| 
        ; call occurs [#_delay_us] ; [] |1936| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1936| 
	.dwpsn	file "../Source/prod.c",line 1935,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1935| 
        MOVZ      AR0,AR6               ; [CPU_] |1935| 
        MOV       *-SP[47],AR6          ; [CPU_] |1935| 
        CMP       AR0,#-1               ; [CPU_] |1935| 
        B         $C$L555,NEQ           ; [CPU_] |1935| 
        ; branchcc occurs ; [] |1935| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1939,column 8,is_stmt,isa 0
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1939| 
        ; call occurs [#_maf_rst] ; [] |1939| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1941,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1941| 
        SPM       #0                    ; [CPU_] 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_delay_us")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1941| 
        ; call occurs [#_delay_us] ; [] |1941| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1944,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1944| 
	.dwpsn	file "../Source/prod.c",line 1945,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1945| 
	.dwpsn	file "../Source/prod.c",line 1944,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1944| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1944| 
	.dwpsn	file "../Source/prod.c",line 1946,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1946| 
	.dwpsn	file "../Source/prod.c",line 1945,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1945| 
	.dwpsn	file "../Source/prod.c",line 1946,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1946| 
        MOVB      ACC,#0                ; [CPU_] |1946| 
        SUBB      ACC,#1                ; [CPU_] |1946| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1946| 
        B         $C$L558,EQ            ; [CPU_] |1946| 
        ; branchcc occurs ; [] |1946| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1947,column 15,is_stmt,isa 0
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1947| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1947| 
        CMPB      AL,#0                 ; [CPU_] |1947| 
        B         $C$L560,EQ            ; [CPU_] |1947| 
        ; branchcc occurs ; [] |1947| 
	.dwpsn	file "../Source/prod.c",line 1951,column 8,is_stmt,isa 0
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1951| 
        ; call occurs [#_ad7738_getraw] ; [] |1951| 
	.dwpsn	file "../Source/prod.c",line 1952,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1952| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1952| 
        ADDL      XAR4,ACC              ; [CPU_] |1952| 
        MOVL      XAR0,#18              ; [CPU_] |1952| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1952| 
        MOVL      XAR0,#18              ; [CPU_] |1952| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1952| 
        ASR64     ACC:P,16              ; [CPU_] |1952| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1952| 
        MOVL      XAR0,#18              ; [CPU_] |1952| 
        ASR64     ACC:P,16              ; [CPU_] |1952| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1952| 
        MOVL      XAR0,#18              ; [CPU_] |1952| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1952| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1952| 
        MOVL      XAR0,#18              ; [CPU_] |1952| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1952| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1952| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1952| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1952| 
	.dwpsn	file "../Source/prod.c",line 1946,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1946| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1946| 
        MOVB      ACC,#0                ; [CPU_] |1946| 
        SUBB      ACC,#1                ; [CPU_] |1946| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1946| 
        B         $C$L557,NEQ           ; [CPU_] |1946| 
        ; branchcc occurs ; [] |1946| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1931,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1931| 
        ADDB      XAR1,#4               ; [CPU_] |1931| 
        MOV       AL,*-SP[48]           ; [CPU_] |1931| 
        CMPB      AL,#2                 ; [CPU_] |1931| 
        B         $C$L554,LT            ; [CPU_] |1931| 
        ; branchcc occurs ; [] |1931| 
	.dwpsn	file "../Source/prod.c",line 1956,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1956| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1956| 
        ; call occurs [#_shunt_switch] ; [] |1956| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1958,column 6,is_stmt,isa 0
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1958| 
        ; call occurs [#_maf_rst] ; [] |1958| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1961,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1961| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1961| 
        ; call occurs [#_scia_puts] ; [] |1961| 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1963| 
        MOVB      AL,#10                ; [CPU_] |1963| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1963| 
        MOV       T,*-SP[58]            ; [CPU_] |1963| 
        MPYU      ACC,T,AL              ; [CPU_] |1963| 
        MOVL      XAR0,#88              ; [CPU_] |1963| 
        ADDL      ACC,XAR6              ; [CPU_] |1963| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1963| 
        MOV       AL,#16384             ; [CPU_] |1963| 
        MOV       AH,#17948             ; [CPU_] |1963| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1963| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1963| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1963| 
        ; call occurs [#FS$$MPY] ; [] |1963| 
        MOVL      XAR3,ACC              ; [CPU_] |1963| 
        MOVL      P,*-SP[28]            ; [CPU_] |1963| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1963| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1963| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1963| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1963| 
        ; call occurs [#LL$$TOFS] ; [] |1963| 
        MOVL      XAR0,#88              ; [CPU_] |1963| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1963| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1963| 
        MOVB      XAR1,#44              ; [CPU_] |1963| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1963| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1963| 
        ; call occurs [#FS$$MPY] ; [] |1963| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1963| 
        MOVL      ACC,XAR3              ; [CPU_] |1963| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1963| 
        ; call occurs [#FS$$DIV] ; [] |1963| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1963| 
        MOVB      XAR0,#96              ; [CPU_] |1963| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1963| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1965| 
        MOVL      ACC,XAR1              ; [CPU_] |1965| 
        ADDB      ACC,#96               ; [CPU_] |1965| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1965| 
        MOVL      XAR0,#88              ; [CPU_] |1965| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1965| 
        MOVL      XAR0,#42              ; [CPU_] |1965| 
        ADDB      XAR4,#42              ; [CPU_] |1965| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1965| 
$C$L559:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1965| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1965| 
        ; call occurs [#FS$$NEG] ; [] |1965| 
        MOVB      XAR0,#96              ; [CPU_] |1965| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1965| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1965| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1965| 
        ; call occurs [#FS$$MPY] ; [] |1965| 
        MOVL      XAR0,#88              ; [CPU_] |1965| 
        MOVL      P,*-SP[32]            ; [CPU_] |1965| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1965| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1965| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1965| 
        ; call occurs [#LL$$TOFS] ; [] |1965| 
        MOVL      XAR0,#88              ; [CPU_] |1965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1965| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1965| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1965| 
        ; call occurs [#FS$$MPY] ; [] |1965| 
        MOVL      XAR6,ACC              ; [CPU_] |1965| 
        MOV       AL,#16384             ; [CPU_] |1965| 
        MOV       AH,#17948             ; [CPU_] |1965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1965| 
        MOVL      ACC,XAR6              ; [CPU_] |1965| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1965| 
        ; call occurs [#FS$$DIV] ; [] |1965| 
        MOVB      XAR0,#118             ; [CPU_] |1965| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1965| 
	.dwpsn	file "../Source/prod.c",line 1967,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |1967| 
        ; branch occurs ; [] |1967| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1948,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1948| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("_delay_us")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1948| 
        ; call occurs [#_delay_us] ; [] |1948| 
	.dwpsn	file "../Source/prod.c",line 1947,column 15,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |1947| 
        ; branch occurs ; [] |1947| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1830,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1830| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1835,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1835| 
        MOVL      XAR0,#44              ; [CPU_] |1835| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1835| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1835| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1835| 
        MOVL      XAR4,XAR1             ; [CPU_] |1835| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("_sprintf")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1835| 
        ; call occurs [#_sprintf] ; [] |1835| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1835,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1835| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1836| 
        MOV       AL,#1024              ; [CPU_] |1836| 
        MOVL      XAR5,XAR1             ; [CPU_] |1836| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1836| 
        ; call occurs [#_scia_getparam] ; [] |1836| 
        MOVL      XAR4,XAR1             ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_atoi")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1837| 
        ; call occurs [#_atoi] ; [] |1837| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1837| 
        MOVB      XAR0,#46              ; [CPU_] |1837| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1837| 
        MOVL      XAR0,#86              ; [CPU_] |1837| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1838| 
        ; call occurs [#_scia_puts] ; [] |1838| 
	.dwpsn	file "../Source/prod.c",line 1840,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1840| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1840| 
        CMPB      AL,#2                 ; [CPU_] |1840| 
        B         $C$L587,LT            ; [CPU_] |1840| 
        ; branchcc occurs ; [] |1840| 
        CMPB      AL,#12                ; [CPU_] |1840| 
        B         $C$L587,GT            ; [CPU_] |1840| 
        ; branchcc occurs ; [] |1840| 
	.dwpsn	file "../Source/prod.c",line 1845,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1845| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1845| 
        ; call occurs [#_scia_puts] ; [] |1845| 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1847| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1847| 
        MOVL      XAR0,#44              ; [CPU_] |1847| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1847| 
        ADDB      XAR7,#46              ; [CPU_] |1847| 
        MOV       AL,*XAR7              ; [CPU_] |1847| 
        MOV       *-SP[3],AL            ; [CPU_] |1847| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1847| 
        MOVL      XAR4,XAR1             ; [CPU_] |1847| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_sprintf")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1847| 
        ; call occurs [#_sprintf] ; [] |1847| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1848| 
        ; call occurs [#_lcd_puts] ; [] |1848| 
	.dwpsn	file "../Source/prod.c",line 1851,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1851| 
	.dwpsn	file "../Source/prod.c",line 1851,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1851| 
	.dwpsn	file "../Source/prod.c",line 1851,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1851| 
        ; branch occurs ; [] |1851| 
$C$L563:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1852,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1852| 
        SUB       AL,*-SP[47]           ; [CPU_] |1852| 
        ADDB      AL,#1                 ; [CPU_] |1852| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1852| 
        ; call occurs [#I$$TOFS] ; [] |1852| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1852| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1852| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1852| 
        ; call occurs [#FS$$MPY] ; [] |1852| 
        MOVL      XAR0,#88              ; [CPU_] |1852| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1852| 
        MOV       AL,*-SP[47]           ; [CPU_] |1852| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1852| 
        ; call occurs [#I$$TOFS] ; [] |1852| 
        MOVL      XAR0,#88              ; [CPU_] |1852| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1852| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1852| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1852| 
        ; call occurs [#FS$$DIV] ; [] |1852| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1852| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1852| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1852| 
        ADDL      ACC,XAR1              ; [CPU_] |1852| 
        MOVL      XAR4,ACC              ; [CPU_] |1852| 
        MOVB      XAR0,#48              ; [CPU_] |1852| 
	.dwpsn	file "../Source/prod.c",line 1851,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1851| 
	.dwpsn	file "../Source/prod.c",line 1852,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1852| 
	.dwpsn	file "../Source/prod.c",line 1851,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1851| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1851,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1851| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1851| 
        MOV       *-SP[47],AL           ; [CPU_] |1851| 
        CMP       AL,*-SP[48]           ; [CPU_] |1851| 
        B         $C$L563,GT            ; [CPU_] |1851| 
        ; branchcc occurs ; [] |1851| 
	.dwpsn	file "../Source/prod.c",line 1857,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1857| 
        B         $C$L567,UNC           ; [CPU_] |1857| 
        ; branch occurs ; [] |1857| 
$C$L565:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1858,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1858| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1858| 
        MOVL      XAR0,#44              ; [CPU_] |1858| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1858| 
        ADDL      ACC,XAR1              ; [CPU_] |1858| 
        ADDB      ACC,#48               ; [CPU_] |1858| 
        MOVL      XAR1,ACC              ; [CPU_] |1858| 
        MOVB      AL,#1                 ; [CPU_] |1858| 
        ADD       AL,AR6                ; [CPU_] |1858| 
        MOV       *-SP[3],AL            ; [CPU_] |1858| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1858| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1858| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1858| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_sprintf")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1858| 
        ; call occurs [#_sprintf] ; [] |1858| 
        MOVL      XAR0,#44              ; [CPU_] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1858,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1860| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1860| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1860| 
        ; call occurs [#_scia_getparam] ; [] |1860| 
        CMPB      AL,#0                 ; [CPU_] |1860| 
        B         $C$L566,EQ            ; [CPU_] |1860| 
        ; branchcc occurs ; [] |1860| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_strtod")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1864,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1864| 
$C$L566:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1866,column 7,is_stmt,isa 0
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1866| 
        ; call occurs [#_scia_puts] ; [] |1866| 
	.dwpsn	file "../Source/prod.c",line 1867,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1867| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1867| 
        ; call occurs [#_scia_puts] ; [] |1867| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1857,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1857| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1857,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1857| 
        B         $C$L565,GT            ; [CPU_] |1857| 
        ; branchcc occurs ; [] |1857| 
	.dwpsn	file "../Source/prod.c",line 1873,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1873| 
        B         $C$L572,UNC           ; [CPU_] |1873| 
        ; branch occurs ; [] |1873| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1874,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1874| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1874| 
        ADDL      ACC,XAR1              ; [CPU_] |1874| 
        ADDB      ACC,#48               ; [CPU_] |1874| 
        MOVL      XAR1,ACC              ; [CPU_] |1874| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1874| 
        MOVL      XAR0,#70              ; [CPU_] |1874| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1874| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1874| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1874| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1874| 
        ANDB      AL,#0x0f              ; [CPU_] |1874| 
        MOV       ACC,AL << 1           ; [CPU_] |1874| 
        ADDL      ACC,XAR7              ; [CPU_] |1874| 
        MOVL      XAR4,ACC              ; [CPU_] |1874| 
        MOVL      XAR0,#44              ; [CPU_] |1874| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1874| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1874| 
        MOVB      AL,#1                 ; [CPU_] |1874| 
        ADD       AL,AR6                ; [CPU_] |1874| 
        MOV       *-SP[7],AL            ; [CPU_] |1874| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1874| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_sprintf")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1874| 
        ; call occurs [#_sprintf] ; [] |1874| 
        MOVL      XAR0,#44              ; [CPU_] |1874| 
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1874,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1874| 
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1878| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1878| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1878| 
        ; call occurs [#_scia_getparam] ; [] |1878| 
	.dwpsn	file "../Source/prod.c",line 1879,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1879| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1879| 
        ; call occurs [#_scia_puts] ; [] |1879| 
	.dwpsn	file "../Source/prod.c",line 1881,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1881| 
	.dwpsn	file "../Source/prod.c",line 1882,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1882| 
	.dwpsn	file "../Source/prod.c",line 1881,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1881| 
	.dwpsn	file "../Source/prod.c",line 1882,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1882| 
	.dwpsn	file "../Source/prod.c",line 1881,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1881| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1883| 
	.dwpsn	file "../Source/prod.c",line 1881,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1881| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1883| 
        MOVB      ACC,#0                ; [CPU_] |1883| 
        SUBB      ACC,#1                ; [CPU_] |1883| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1883| 
        B         $C$L571,EQ            ; [CPU_] |1883| 
        ; branchcc occurs ; [] |1883| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1884,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1884| 
        ; branch occurs ; [] |1884| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1885,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1885| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_delay_us")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1885| 
        ; call occurs [#_delay_us] ; [] |1885| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1884,column 15,is_stmt,isa 0
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1884| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1884| 
        CMPB      AL,#0                 ; [CPU_] |1884| 
        B         $C$L569,EQ            ; [CPU_] |1884| 
        ; branchcc occurs ; [] |1884| 
	.dwpsn	file "../Source/prod.c",line 1888,column 8,is_stmt,isa 0
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1888| 
        ; call occurs [#_ad7738_getraw] ; [] |1888| 
	.dwpsn	file "../Source/prod.c",line 1889,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1889| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1889| 
        ADDL      XAR4,ACC              ; [CPU_] |1889| 
        MOVL      XAR0,#16              ; [CPU_] |1889| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1889| 
        MOVL      XAR0,#16              ; [CPU_] |1889| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1889| 
        ASR64     ACC:P,16              ; [CPU_] |1889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1889| 
        MOVL      XAR0,#16              ; [CPU_] |1889| 
        ASR64     ACC:P,16              ; [CPU_] |1889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1889| 
        MOVL      XAR0,#16              ; [CPU_] |1889| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1889| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1889| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1889| 
        MOVL      *-SP[32],P            ; [CPU_] |1889| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1889| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1883| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1883| 
        MOVB      ACC,#0                ; [CPU_] |1883| 
        SUBB      ACC,#1                ; [CPU_] |1883| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1883| 
        B         $C$L570,NEQ           ; [CPU_] |1883| 
        ; branchcc occurs ; [] |1883| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1891,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1891| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1891| 
        ; call occurs [#_scia_puts] ; [] |1891| 
	.dwpsn	file "../Source/prod.c",line 1892,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1892| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1892| 
        MOV       *-SP[2],#0            ; [CPU_] |1892| 
        MOV       *-SP[1],#0            ; [CPU_] |1892| 
        MOVL      P,*-SP[32]            ; [CPU_] |1892| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1892| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1892| 
        ; call occurs [#LL$$DIV] ; [] |1892| 
        ADDB      XAR1,#24              ; [CPU_] |1892| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1892| 
	.dwpsn	file "../Source/prod.c",line 1873,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1873| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1873,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1873| 
        B         $C$L568,GT            ; [CPU_] |1873| 
        ; branchcc occurs ; [] |1873| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1896,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1896| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1896| 
        ; branch occurs ; [] |1896| 
$C$L573:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1897,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1897| 
        ADDL      XAR1,ACC              ; [CPU_] |1897| 
        MOVB      XAR0,#48              ; [CPU_] |1897| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1897| 
        MOVB      XAR0,#50              ; [CPU_] |1897| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1897| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1897| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1897| 
        ; call occurs [#FS$$SUB] ; [] |1897| 
        MOVL      XAR0,#88              ; [CPU_] |1897| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1897| 
        MOVB      XAR0,#74              ; [CPU_] |1897| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1897| 
        MOVB      XAR0,#72              ; [CPU_] |1897| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1897| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1897| 
        ; call occurs [#L$$TOFS] ; [] |1897| 
        MOVL      XAR0,#88              ; [CPU_] |1897| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1897| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1897| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1897| 
        ; call occurs [#FS$$DIV] ; [] |1897| 
        MOVL      XAR0,#42              ; [CPU_] |1897| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1897| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1897| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1897| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1897| 
        ; call occurs [#FS$$DIV] ; [] |1897| 
        MOVB      XAR0,#96              ; [CPU_] |1897| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1897| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1901| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1901| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1901| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1901| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1901| 
        ; call occurs [#FS$$MPY] ; [] |1901| 
        MOVL      XAR0,#88              ; [CPU_] |1901| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1901| 
        MOVB      XAR0,#72              ; [CPU_] |1901| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1901| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1901| 
        ; call occurs [#L$$TOFS] ; [] |1901| 
        MOVL      XAR0,#88              ; [CPU_] |1901| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1901| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1901| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1901| 
        ; call occurs [#FS$$MPY] ; [] |1901| 
        MOVB      XAR0,#48              ; [CPU_] |1901| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1901| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1901| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1901| 
        ; call occurs [#FS$$SUB] ; [] |1901| 
        MOVB      XAR0,#118             ; [CPU_] |1901| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1901| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1896,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1896| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1905,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1905| 
        CMP       AL,*-SP[48]           ; [CPU_] |1905| 
        B         $C$L573,GT            ; [CPU_] |1905| 
        ; branchcc occurs ; [] |1905| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 1976,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1976| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1976| 
        MOV       AL,#1024              ; [CPU_] |1976| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1976| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1976| 
        ; call occurs [#_scia_getparam] ; [] |1976| 
	.dwpsn	file "../Source/prod.c",line 1979,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1979| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1979| 
        ; call occurs [#_scia_puts] ; [] |1979| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1981,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1981| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |1981| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 1982,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1982| 
        B         $C$L578,LEQ           ; [CPU_] |1982| 
        ; branchcc occurs ; [] |1982| 
	.dwpsn	file "../Source/prod.c",line 1984,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1984| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1984| 
        ; call occurs [#_shunt_switch] ; [] |1984| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 1986,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1986| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_delay_us")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1986| 
        ; call occurs [#_delay_us] ; [] |1986| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1986| 
	.dwpsn	file "../Source/prod.c",line 1985,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1985| 
        MOVZ      AR0,AR6               ; [CPU_] |1985| 
        MOV       *-SP[47],AR6          ; [CPU_] |1985| 
        CMP       AR0,#-1               ; [CPU_] |1985| 
        B         $C$L577,NEQ           ; [CPU_] |1985| 
        ; branchcc occurs ; [] |1985| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1989,column 7,is_stmt,isa 0
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1989| 
        ; call occurs [#_maf_rst] ; [] |1989| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1991,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1991| 
        SPM       #0                    ; [CPU_] 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_delay_us")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1991| 
        ; call occurs [#_delay_us] ; [] |1991| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 1994,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1994| 
	.dwpsn	file "../Source/prod.c",line 1995,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1995| 
	.dwpsn	file "../Source/prod.c",line 1994,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |1994| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1994| 
	.dwpsn	file "../Source/prod.c",line 1996,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1996| 
	.dwpsn	file "../Source/prod.c",line 1995,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1995| 
	.dwpsn	file "../Source/prod.c",line 1996,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1996| 
        MOVB      ACC,#0                ; [CPU_] |1996| 
        SUBB      ACC,#1                ; [CPU_] |1996| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1996| 
        B         $C$L580,EQ            ; [CPU_] |1996| 
        ; branchcc occurs ; [] |1996| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1997,column 14,is_stmt,isa 0
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1997| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1997| 
        CMPB      AL,#0                 ; [CPU_] |1997| 
        B         $C$L586,EQ            ; [CPU_] |1997| 
        ; branchcc occurs ; [] |1997| 
	.dwpsn	file "../Source/prod.c",line 2001,column 7,is_stmt,isa 0
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2001| 
        ; call occurs [#_ad7738_getraw] ; [] |2001| 
	.dwpsn	file "../Source/prod.c",line 2002,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2002| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2002| 
        ADDL      XAR4,ACC              ; [CPU_] |2002| 
        MOVL      XAR0,#14              ; [CPU_] |2002| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2002| 
        MOVL      XAR0,#14              ; [CPU_] |2002| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2002| 
        ASR64     ACC:P,16              ; [CPU_] |2002| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2002| 
        MOVL      XAR0,#14              ; [CPU_] |2002| 
        ASR64     ACC:P,16              ; [CPU_] |2002| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2002| 
        MOVL      XAR0,#14              ; [CPU_] |2002| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2002| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2002| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2002| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2002| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2002| 
	.dwpsn	file "../Source/prod.c",line 1996,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1996| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1996| 
        MOVB      ACC,#0                ; [CPU_] |1996| 
        SUBB      ACC,#1                ; [CPU_] |1996| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1996| 
        B         $C$L579,NEQ           ; [CPU_] |1996| 
        ; branchcc occurs ; [] |1996| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2004,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2004| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2004| 
        MOV       *-SP[2],#0            ; [CPU_] |2004| 
        MOV       *-SP[1],#0            ; [CPU_] |2004| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2004| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2004| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2004| 
        ; call occurs [#LL$$DIV] ; [] |2004| 
	.dwpsn	file "../Source/prod.c",line 2007,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2007| 
        MOVB      XAR0,#46              ; [CPU_] |2007| 
	.dwpsn	file "../Source/prod.c",line 2004,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2004| 
	.dwpsn	file "../Source/prod.c",line 2006,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2006| 
	.dwpsn	file "../Source/prod.c",line 2004,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2004| 
	.dwpsn	file "../Source/prod.c",line 2007,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2007| 
        CMPB      AL,#2                 ; [CPU_] |2007| 
        B         $C$L583,LEQ           ; [CPU_] |2007| 
        ; branchcc occurs ; [] |2007| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2008,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2008| 
        ; branch occurs ; [] |2008| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2009,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2009| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2008,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2008| 
        B         $C$L583,HIS           ; [CPU_] |2008| 
        ; branchcc occurs ; [] |2008| 
        MOVB      AL,#1                 ; [CPU_] |2008| 
        ADD       AL,AR4                ; [CPU_] |2008| 
        MOVZ      AR5,AL                ; [CPU_] |2008| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2008| 
        ADDL      ACC,XAR1              ; [CPU_] |2008| 
        MOVL      XAR6,ACC              ; [CPU_] |2008| 
        MOVB      XAR0,#72              ; [CPU_] |2008| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2008| 
        MOVL      XAR0,#12              ; [CPU_] |2008| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2008| 
        MOVL      XAR0,#12              ; [CPU_] |2008| 
        ASR64     ACC:P,16              ; [CPU_] |2008| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2008| 
        MOVL      XAR0,#12              ; [CPU_] |2008| 
        ASR64     ACC:P,16              ; [CPU_] |2008| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2008| 
        MOVL      *-SP[4],P             ; [CPU_] |2008| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2008| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2008| 
        MOVL      P,*-SP[32]            ; [CPU_] |2008| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1270, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2008| 
        ; call occurs [#LL$$CMP] ; [] |2008| 
        CMPB      AL,#0                 ; [CPU_] |2008| 
        B         $C$L581,GT            ; [CPU_] |2008| 
        ; branchcc occurs ; [] |2008| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2012,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2012| 
        ADDL      ACC,XAR1              ; [CPU_] |2012| 
        MOVL      XAR4,ACC              ; [CPU_] |2012| 
        MOVL      XAR0,#88              ; [CPU_] |2012| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2012| 
        MOVB      XAR0,#96              ; [CPU_] |2012| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2012| 
        MOVL      XAR0,#42              ; [CPU_] |2012| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2012| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2012| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2012| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2012| 
        ; call occurs [#FS$$MPY] ; [] |2012| 
        MOVL      XAR0,#36              ; [CPU_] |2012| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2012| 
        MOVL      P,*XAR3++             ; [CPU_] |2012| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2012| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2012| 
        ; call occurs [#LL$$TOFS] ; [] |2012| 
        MOVL      XAR0,#36              ; [CPU_] |2012| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2012| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2012| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2012| 
        ; call occurs [#FS$$MPY] ; [] |2012| 
        MOVL      XAR0,#88              ; [CPU_] |2012| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2012| 
        MOVB      XAR1,#118             ; [CPU_] |2012| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2012| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2012| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2012| 
        ; call occurs [#FS$$ADD] ; [] |2012| 
        MOVL      XAR0,#38              ; [CPU_] |2012| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2012| 
        MOVL      XAR0,#38              ; [CPU_] |2012| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2012| 
	.dwpsn	file "../Source/prod.c",line 1981,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1981| 
	.dwpsn	file "../Source/prod.c",line 2012,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2012| 
        MOV       AL,*-SP[48]           ; [CPU_] |2012| 
	.dwpsn	file "../Source/prod.c",line 1981,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1981| 
        B         $C$L576,LT            ; [CPU_] |1981| 
        ; branchcc occurs ; [] |1981| 
	.dwpsn	file "../Source/prod.c",line 2016,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2016| 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2016| 
        ; call occurs [#_shunt_switch] ; [] |2016| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2018,column 5,is_stmt,isa 0
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2018| 
        ; call occurs [#_maf_rst] ; [] |2018| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2021,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2021| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2021| 
        ; call occurs [#_scia_puts] ; [] |2021| 
	.dwpsn	file "../Source/prod.c",line 2023,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2023| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2023| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2023| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2023| 
        ; call occurs [#FS$$SUB] ; [] |2023| 
        MOVL      XAR0,#36              ; [CPU_] |2023| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2023| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2023| 
        MOVB      XAR0,#140             ; [CPU_] |2023| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2023| 
	.dwpsn	file "../Source/prod.c",line 2026,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2026| 
        MOV       AL,#0                 ; [CPU_] |2026| 
        MOV       AH,#0                 ; [CPU_] |2026| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2026| 
	.dwpsn	file "../Source/prod.c",line 2027,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2027| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2027| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2027| 
	.dwpsn	file "../Source/prod.c",line 2028,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2028| 
        MOV       AL,#0                 ; [CPU_] |2028| 
        MOV       AH,#0                 ; [CPU_] |2028| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2028| 
	.dwpsn	file "../Source/prod.c",line 2029,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2029| 
        MOV       AL,*-SP[58]           ; [CPU_] |2029| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2029| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2032,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2032| 
        MOVB      AL,#152               ; [CPU_] |2032| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2032| 
        MOV       T,*-SP[57]            ; [CPU_] |2032| 
        MOVL      XAR7,XAR4             ; [CPU_] |2032| 
        MPYU      ACC,T,AL              ; [CPU_] |2032| 
        ADDL      ACC,XAR6              ; [CPU_] |2032| 
        ADDB      ACC,#82               ; [CPU_] |2032| 
        MOVL      XAR5,ACC              ; [CPU_] |2032| 
        MOVL      XAR0,#42              ; [CPU_] |2032| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2032| 
        MOV       AL,*-SP[57]           ; [CPU_] |2032| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2035,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2035| 
	.dwpsn	file "../Source/prod.c",line 2037,column 5,is_stmt,isa 0
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2037| 
        ; call occurs [#_ad7738_setcal] ; [] |2037| 
        MOVL      XAR0,#78              ; [CPU_] |2037| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2037| 
	.dwpsn	file "../Source/prod.c",line 2038,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2038| 
        MOVL      XAR1,ACC              ; [CPU_] |2038| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2038| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2038| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2038| 
	.dwpsn	file "../Source/prod.c",line 2039,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2039| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2039| 
        ; call occurs [#_ad7738_resetvall] ; [] |2039| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2042,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2042| 
        MOV       AL,*-SP[60]           ; [CPU_] |2042| 
        MOVL      XAR0,#44              ; [CPU_] |2042| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2042| 
        MOV       *-SP[3],AL            ; [CPU_] |2042| 
        MOV       AL,*-SP[59]           ; [CPU_] |2042| 
        MOV       *-SP[4],AL            ; [CPU_] |2042| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2042| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2042| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_sprintf")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2042| 
        ; call occurs [#_sprintf] ; [] |2042| 
        MOVL      XAR4,XAR1             ; [CPU_] |2042| 
	.dwpsn	file "../Source/prod.c",line 2044,column 5,is_stmt,isa 0
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2044| 
        ; call occurs [#_scia_puts] ; [] |2044| 
        MOV       AL,*-SP[57]           ; [CPU_] |2044| 
	.dwpsn	file "../Source/prod.c",line 2045,column 5,is_stmt,isa 0
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2045| 
        ; call occurs [#_print_sensor] ; [] |2045| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2048,column 5,is_stmt,isa 0
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2048| 
        ; call occurs [#_lcd_clear] ; [] |2048| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2049,column 5,is_stmt,isa 0
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_update_units")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2049| 
        ; call occurs [#_update_units] ; [] |2049| 
	.dwpsn	file "../Source/prod.c",line 2050,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2050| 
        ; branch occurs ; [] |2050| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 1998,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1998| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_delay_us")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1998| 
        ; call occurs [#_delay_us] ; [] |1998| 
	.dwpsn	file "../Source/prod.c",line 1997,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |1997| 
        ; branch occurs ; [] |1997| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1842,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1842| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1842| 
        ; call occurs [#_scia_puts] ; [] |1842| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1834| 
        ; branch occurs ; [] |1834| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1772,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1772| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1772| 
        ; call occurs [#_scia_puts] ; [] |1772| 
	.dwpsn	file "../Source/prod.c",line 1766,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1766| 
        ; branch occurs ; [] |1766| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1687,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1687| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1687| 
        ; call occurs [#_scia_puts] ; [] |1687| 
	.dwpsn	file "../Source/prod.c",line 1677,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1677| 
        ; branch occurs ; [] |1677| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1670,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1670| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1670| 
        ; call occurs [#_scia_puts] ; [] |1670| 
	.dwpsn	file "../Source/prod.c",line 1662,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1662| 
        ; branch occurs ; [] |1662| 
$C$L591:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1384,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1384| 
        B         $C$L625,LO            ; [CPU_] |1384| 
        ; branchcc occurs ; [] |1384| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1388,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1388| 
        CMPB      AL,#67                ; [CPU_] |1388| 
        B         $C$L592,EQ            ; [CPU_] |1388| 
        ; branchcc occurs ; [] |1388| 
        CMPB      AL,#68                ; [CPU_] |1388| 
        B         $C$L625,NEQ           ; [CPU_] |1388| 
        ; branchcc occurs ; [] |1388| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1393,column 5,is_stmt,isa 0
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_atoi")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1393| 
        ; call occurs [#_atoi] ; [] |1393| 
        MOV       *-SP[58],AL           ; [CPU_] |1393| 
	.dwpsn	file "../Source/prod.c",line 1395,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1395| 
        CMPB      AL,#4                 ; [CPU_] |1395| 
        B         $C$L625,HIS           ; [CPU_] |1395| 
        ; branchcc occurs ; [] |1395| 
	.dwpsn	file "../Source/prod.c",line 1400,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1400| 
        MOV       AH,#0                 ; [CPU_] |1400| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1400| 
	.dwpsn	file "../Source/prod.c",line 1401,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1401| 
        MOV       AH,#0                 ; [CPU_] |1401| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1401| 
        MOV       AL,*-SP[59]           ; [CPU_] |1401| 
	.dwpsn	file "../Source/prod.c",line 1402,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1402| 
        B         $C$L596,LOS           ; [CPU_] |1402| 
        ; branchcc occurs ; [] |1402| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1402,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1402| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1403,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1403| 
        CMPB      AL,#88                ; [CPU_] |1403| 
        B         $C$L594,NEQ           ; [CPU_] |1403| 
        ; branchcc occurs ; [] |1403| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_strtod")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1405,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1405| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1408,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1408| 
        B         $C$L595,NEQ           ; [CPU_] |1408| 
        ; branchcc occurs ; [] |1408| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_strtod")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1410,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1410| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1402,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1402| 
        MOV       AL,*-SP[59]           ; [CPU_] |1402| 
        ADDB      XAR1,#1               ; [CPU_] |1402| 
        CMP       AL,*-SP[47]           ; [CPU_] |1402| 
        B         $C$L593,HI            ; [CPU_] |1402| 
        ; branchcc occurs ; [] |1402| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1415,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1415| 
	.dwpsn	file "../Source/prod.c",line 1398,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1398| 
	.dwpsn	file "../Source/prod.c",line 1415,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1415| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1415| 
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1415| 
        ; call occurs [#FS$$CMP] ; [] |1415| 
        CMPB      AL,#0                 ; [CPU_] |1415| 
        B         $C$L625,EQ            ; [CPU_] |1415| 
        ; branchcc occurs ; [] |1415| 
	.dwpsn	file "../Source/prod.c",line 1419,column 5,is_stmt,isa 0
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1419| 
        ; call occurs [#_lcd_clear] ; [] |1419| 
	.dwpsn	file "../Source/prod.c",line 1420,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1420| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1420| 
        MOVL      XAR0,#44              ; [CPU_] |1420| 
        ADD       AL,*-SP[58]           ; [CPU_] |1420| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1420| 
        MOVZ      AR1,AL                ; [CPU_] |1420| 
        MOV       *-SP[59],AL           ; [CPU_] |1420| 
        MOV       *-SP[3],AL            ; [CPU_] |1420| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1420| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_sprintf")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1420| 
        ; call occurs [#_sprintf] ; [] |1420| 
        MOVL      XAR0,#44              ; [CPU_] |1420| 
	.dwpsn	file "../Source/prod.c",line 1421,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1421| 
	.dwpsn	file "../Source/prod.c",line 1420,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1420| 
	.dwpsn	file "../Source/prod.c",line 1421,column 5,is_stmt,isa 0
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1421| 
        ; call occurs [#_lcd_puts] ; [] |1421| 
	.dwpsn	file "../Source/prod.c",line 1422,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1422| 
        MOVL      XAR0,#44              ; [CPU_] |1422| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1422| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1422| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1422| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1422| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_sprintf")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1422| 
        ; call occurs [#_sprintf] ; [] |1422| 
        MOVL      XAR0,#44              ; [CPU_] |1422| 
	.dwpsn	file "../Source/prod.c",line 1423,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1423| 
	.dwpsn	file "../Source/prod.c",line 1422,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1422| 
	.dwpsn	file "../Source/prod.c",line 1423,column 5,is_stmt,isa 0
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1423| 
        ; call occurs [#_lcd_puts] ; [] |1423| 
	.dwpsn	file "../Source/prod.c",line 1424,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1424| 
        MOVL      XAR0,#44              ; [CPU_] |1424| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1424| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1424| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1424| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1424| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_sprintf")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1424| 
        ; call occurs [#_sprintf] ; [] |1424| 
        MOVL      XAR0,#44              ; [CPU_] |1424| 
	.dwpsn	file "../Source/prod.c",line 1425,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1425| 
	.dwpsn	file "../Source/prod.c",line 1424,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1424| 
	.dwpsn	file "../Source/prod.c",line 1425,column 5,is_stmt,isa 0
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1425| 
        ; call occurs [#_lcd_puts] ; [] |1425| 
	.dwpsn	file "../Source/prod.c",line 1427,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1427| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1427| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1427| 
        MOVL      XAR0,#38              ; [CPU_] |1427| 
        ADDB      ACC,#1                ; [CPU_] |1427| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1427| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1427| 
        CMPB      AL,#67                ; [CPU_] |1427| 
        B         $C$L619,EQ            ; [CPU_] |1427| 
        ; branchcc occurs ; [] |1427| 
        CMPB      AL,#68                ; [CPU_] |1427| 
        B         $C$L625,NEQ           ; [CPU_] |1427| 
        ; branchcc occurs ; [] |1427| 
	.dwpsn	file "../Source/prod.c",line 1480,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1480| 
        MOV       AH,#16672             ; [CPU_] |1480| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1480| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1480| 
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1480| 
        ; call occurs [#FS$$CMP] ; [] |1480| 
        CMPB      AL,#0                 ; [CPU_] |1480| 
        B         $C$L618,GT            ; [CPU_] |1480| 
        ; branchcc occurs ; [] |1480| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1480| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1480| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1480| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1480| 
        ; call occurs [#FS$$CMP] ; [] |1480| 
        CMPB      AL,#0                 ; [CPU_] |1480| 
        B         $C$L618,LT            ; [CPU_] |1480| 
        ; branchcc occurs ; [] |1480| 
        MOV       AL,#0                 ; [CPU_] |1480| 
        MOV       AH,#16672             ; [CPU_] |1480| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1480| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1480| 
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1480| 
        ; call occurs [#FS$$CMP] ; [] |1480| 
        CMPB      AL,#0                 ; [CPU_] |1480| 
        B         $C$L618,GT            ; [CPU_] |1480| 
        ; branchcc occurs ; [] |1480| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1480| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1480| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1480| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1480| 
        ; call occurs [#FS$$CMP] ; [] |1480| 
        CMPB      AL,#0                 ; [CPU_] |1480| 
        B         $C$L618,LT            ; [CPU_] |1480| 
        ; branchcc occurs ; [] |1480| 
	.dwpsn	file "../Source/prod.c",line 1488,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1488| 
        MOVB      AL,#0                 ; [CPU_] |1488| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1488| 
        ; call occurs [#_lcd_puts] ; [] |1488| 
	.dwpsn	file "../Source/prod.c",line 1490,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1490| 
        MOVL      XAR0,#44              ; [CPU_] |1490| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1490| 
        MOV       *-SP[3],AR1           ; [CPU_] |1490| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1490| 
        MOVL      XAR4,XAR1             ; [CPU_] |1490| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_sprintf")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1490| 
        ; call occurs [#_sprintf] ; [] |1490| 
        MOVL      XAR4,XAR1             ; [CPU_] |1490| 
	.dwpsn	file "../Source/prod.c",line 1493,column 6,is_stmt,isa 0
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1493| 
        ; call occurs [#_scia_puts] ; [] |1493| 
	.dwpsn	file "../Source/prod.c",line 1494,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1494| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1494| 
        ; call occurs [#_scia_puts] ; [] |1494| 
	.dwpsn	file "../Source/prod.c",line 1495,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1495| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1495| 
        ; call occurs [#_dac_setmode] ; [] |1495| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1498,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1498| 
	.dwpsn	file "../Source/prod.c",line 1499,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1499| 
        MOV       AH,#0                 ; [CPU_] |1499| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1499| 
        MOVL      ACC,XAR1              ; [CPU_] |1499| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1499| 
        ; call occurs [#FS$$CMP] ; [] |1499| 
        CMPB      AL,#0                 ; [CPU_] |1499| 
        B         $C$L598,GEQ           ; [CPU_] |1499| 
        ; branchcc occurs ; [] |1499| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1499| 
        MOVL      XAR0,#88              ; [CPU_] |1499| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1499| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1499| 
        B         $C$L599,UNC           ; [CPU_] |1499| 
        ; branch occurs ; [] |1499| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1499| 
        MOVL      XAR0,#88              ; [CPU_] |1499| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1499| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1499| 
$C$L599:    
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1499| 
        ; call occurs [#FS$$MPY] ; [] |1499| 
        MOVL      XAR0,#88              ; [CPU_] |1499| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1499| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1499| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1499| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1499| 
        ; call occurs [#FS$$ADD] ; [] |1499| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1499| 
        ; call occurs [#FS$$TOLL] ; [] |1499| 
	.dwpsn	file "../Source/prod.c",line 1505,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1505| 
	.dwpsn	file "../Source/prod.c",line 1499,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1499| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1499| 
	.dwpsn	file "../Source/prod.c",line 1505,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1505| 
        CMP64     ACC:P                 ; [CPU_] |1505| 
        B         $C$L601,LEQ           ; [CPU_] |1505| 
        ; branchcc occurs ; [] |1505| 
	.dwpsn	file "../Source/prod.c",line 1507,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1507| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1507| 
        MOV       *-SP[2],#0            ; [CPU_] |1507| 
        MOV       *-SP[1],#0            ; [CPU_] |1507| 
        MOVL      P,*-SP[32]            ; [CPU_] |1507| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1507| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1316, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1507| 
        ; call occurs [#LL$$CMP] ; [] |1507| 
        CMPB      AL,#0                 ; [CPU_] |1507| 
        B         $C$L600,GEQ           ; [CPU_] |1507| 
        ; branchcc occurs ; [] |1507| 
	.dwpsn	file "../Source/prod.c",line 1510,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1510| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1510| 
        MOV       AL,*-SP[32]           ; [CPU_] |1510| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1510| 
        B         $C$L602,UNC           ; [CPU_] |1510| 
        ; branch occurs ; [] |1510| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1508,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1508| 
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1509| 
        ; branch occurs ; [] |1509| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1506,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1506| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1513,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1513| 
        MOVL      XAR0,#44              ; [CPU_] |1513| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1513| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1513| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1513| 
        MOVL      XAR4,XAR1             ; [CPU_] |1513| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_sprintf")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1513| 
        ; call occurs [#_sprintf] ; [] |1513| 
        MOVL      XAR4,XAR1             ; [CPU_] |1513| 
	.dwpsn	file "../Source/prod.c",line 1514,column 7,is_stmt,isa 0
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1514| 
        ; call occurs [#_scia_puts] ; [] |1514| 
	.dwpsn	file "../Source/prod.c",line 1515,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1515| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1515| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1518,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1518| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1518| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1518| 
        ; call occurs [#_mcbsp_xmit] ; [] |1518| 
	.dwpsn	file "../Source/prod.c",line 1519,column 8,is_stmt,isa 0
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1519| 
        ; call occurs [#_latch_dac] ; [] |1519| 
	.dwpsn	file "../Source/prod.c",line 1522,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1522| 
        MOVL      XAR4,XAR1             ; [CPU_] |1522| 
        MOVL      XAR5,XAR1             ; [CPU_] |1522| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1522| 
        ; call occurs [#_scia_getparam] ; [] |1522| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1524,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1524| 
        CMPB      AL,#45                ; [CPU_] |1524| 
        B         $C$L604,EQ            ; [CPU_] |1524| 
        ; branchcc occurs ; [] |1524| 
        CMPB      AL,#83                ; [CPU_] |1524| 
        B         $C$L609,EQ            ; [CPU_] |1524| 
        ; branchcc occurs ; [] |1524| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1531,column 8,is_stmt,isa 0
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_atoi")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1531| 
        ; call occurs [#_atoi] ; [] |1531| 
        CMPB      AL,#0                 ; [CPU_] |1531| 
	.dwpsn	file "../Source/prod.c",line 1533,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1536,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1536| 
        CMPB      AH,#43                ; [CPU_] |1536| 
        B         $C$L605,EQ            ; [CPU_] |1536| 
        ; branchcc occurs ; [] |1536| 
	.dwpsn	file "../Source/prod.c",line 1543,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1543| 
        B         $C$L608,NEQ           ; [CPU_] |1543| 
        ; branchcc occurs ; [] |1543| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1545,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1545| 
        B         $C$L606,HI            ; [CPU_] |1545| 
        ; branchcc occurs ; [] |1545| 
	.dwpsn	file "../Source/prod.c",line 1546,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1546| 
	.dwpsn	file "../Source/prod.c",line 1547,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1547| 
        ; branch occurs ; [] |1547| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1538,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1538| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1538| 
        MOV       AH,#65535             ; [CPU_] |1538| 
        SUB       AH,AL                 ; [CPU_] |1538| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1538| 
        B         $C$L607,HIS           ; [CPU_] |1538| 
        ; branchcc occurs ; [] |1538| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1541,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1541| 
        B         $C$L608,UNC           ; [CPU_] |1541| 
        ; branch occurs ; [] |1541| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1539,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1539| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1517,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1517| 
        B         $C$L603,NEQ           ; [CPU_] |1517| 
        ; branchcc occurs ; [] |1517| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1553,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1553| 
        MOVL      XAR0,#86              ; [CPU_] |1553| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1553| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1553| 
        MOVL      XAR0,#86              ; [CPU_] |1553| 
        MOV       AL,*XAR7              ; [CPU_] |1553| 
        MOV       *-SP[3],AL            ; [CPU_] |1553| 
        ADDB      XAR7,#1               ; [CPU_] |1553| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1553| 
        MOVL      XAR0,#44              ; [CPU_] |1553| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1553| 
        MOVL      XAR4,XAR1             ; [CPU_] |1553| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_sprintf")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1553| 
        ; call occurs [#_sprintf] ; [] |1553| 
        MOVL      XAR4,XAR1             ; [CPU_] |1553| 
	.dwpsn	file "../Source/prod.c",line 1554,column 7,is_stmt,isa 0
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1554| 
        ; call occurs [#_scia_puts] ; [] |1554| 
	.dwpsn	file "../Source/prod.c",line 1497,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1497| 
	.dwpsn	file "../Source/prod.c",line 1554,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1554| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1554| 
	.dwpsn	file "../Source/prod.c",line 1497,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1497| 
        SUBB      XAR6,#1               ; [CPU_U] |1497| 
        ADDB      ACC,#2                ; [CPU_] |1497| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1497| 
        MOVZ      AR0,AR6               ; [CPU_] |1497| 
        MOV       *-SP[47],AR6          ; [CPU_] |1497| 
        CMP       AR0,#-1               ; [CPU_] |1497| 
        B         $C$L597,NEQ           ; [CPU_] |1497| 
        ; branchcc occurs ; [] |1497| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1557,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1557| 
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1557| 
        ; call occurs [#FS$$TOU] ; [] |1557| 
        MOV       *-SP[33],AL           ; [CPU_] |1557| 
	.dwpsn	file "../Source/prod.c",line 1559,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1559| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1559| 
        ; call occurs [#_scia_puts] ; [] |1559| 
	.dwpsn	file "../Source/prod.c",line 1560,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1560| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1560| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1560| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1560| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1563,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1563| 
        MOV       AH,*-SP[48]           ; [CPU_] |1563| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1563| 
        ; call occurs [#_mcbsp_xmit] ; [] |1563| 
	.dwpsn	file "../Source/prod.c",line 1564,column 7,is_stmt,isa 0
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1564| 
        ; call occurs [#_latch_dac] ; [] |1564| 
        MOVL      XAR0,#86              ; [CPU_] |1564| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1564| 
	.dwpsn	file "../Source/prod.c",line 1567,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1567| 
        MOVL      XAR4,XAR5             ; [CPU_] |1567| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1567| 
        ; call occurs [#_scia_getparam] ; [] |1567| 
	.dwpsn	file "../Source/prod.c",line 1572,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1572| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1572| 
        CMPB      AL,#83                ; [CPU_] |1572| 
        B         $C$L615,EQ            ; [CPU_] |1572| 
        ; branchcc occurs ; [] |1572| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1575,column 7,is_stmt,isa 0
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_atoi")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1575| 
        ; call occurs [#_atoi] ; [] |1575| 
        CMPB      AL,#0                 ; [CPU_] |1575| 
	.dwpsn	file "../Source/prod.c",line 1580,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1580| 
	.dwpsn	file "../Source/prod.c",line 1577,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1577| 
	.dwpsn	file "../Source/prod.c",line 1580,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1580| 
        CMPB      AH,#43                ; [CPU_] |1580| 
        B         $C$L611,EQ            ; [CPU_] |1580| 
        ; branchcc occurs ; [] |1580| 
	.dwpsn	file "../Source/prod.c",line 1587,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1587| 
        B         $C$L614,NEQ           ; [CPU_] |1587| 
        ; branchcc occurs ; [] |1587| 
	.dwpsn	file "../Source/prod.c",line 1589,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1589| 
        B         $C$L612,HI            ; [CPU_] |1589| 
        ; branchcc occurs ; [] |1589| 
	.dwpsn	file "../Source/prod.c",line 1590,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1590| 
	.dwpsn	file "../Source/prod.c",line 1591,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1591| 
        ; branch occurs ; [] |1591| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1582,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1582| 
        SUB       AH,AL                 ; [CPU_] |1582| 
        CMP       AH,*-SP[33]           ; [CPU_] |1582| 
        B         $C$L613,HIS           ; [CPU_] |1582| 
        ; branchcc occurs ; [] |1582| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1585,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1585| 
        B         $C$L614,UNC           ; [CPU_] |1585| 
        ; branch occurs ; [] |1585| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1583,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1583| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1562,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1562| 
        B         $C$L610,NEQ           ; [CPU_] |1562| 
        ; branchcc occurs ; [] |1562| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1597,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1597| 
        MOV       AL,*-SP[33]           ; [CPU_] |1597| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1597| 
        MOV       *-SP[3],AL            ; [CPU_] |1597| 
        MOVL      XAR4,XAR1             ; [CPU_] |1597| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_sprintf")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1597| 
        ; call occurs [#_sprintf] ; [] |1597| 
        MOVL      XAR4,XAR1             ; [CPU_] |1597| 
	.dwpsn	file "../Source/prod.c",line 1598,column 6,is_stmt,isa 0
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1598| 
        ; call occurs [#_scia_puts] ; [] |1598| 
	.dwpsn	file "../Source/prod.c",line 1601,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1601| 
        MOV       AH,#0                 ; [CPU_] |1601| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1601| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1601| 
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1601| 
        ; call occurs [#FS$$CMP] ; [] |1601| 
        CMPB      AL,#0                 ; [CPU_] |1601| 
        B         $C$L616,LT            ; [CPU_] |1601| 
        ; branchcc occurs ; [] |1601| 
	.dwpsn	file "../Source/prod.c",line 1607,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1607| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1607| 
        ; call occurs [#U$$TOFS] ; [] |1607| 
        MOVL      XAR1,ACC              ; [CPU_] |1607| 
        MOV       AL,*-SP[35]           ; [CPU_] |1607| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1607| 
        ; call occurs [#U$$TOFS] ; [] |1607| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1607| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1607| 
        ; call occurs [#FS$$SUB] ; [] |1607| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1607| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1607| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1607| 
        ; call occurs [#FS$$DIV] ; [] |1607| 
        MOVL      XAR0,#88              ; [CPU_] |1607| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1607| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1607| 
	.dwpsn	file "../Source/prod.c",line 1609,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1609| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1609| 
        ; call occurs [#U$$TOFS] ; [] |1609| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1609| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1609| 
        ; call occurs [#FS$$SUB] ; [] |1609| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1609| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1609| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1609| 
        ; call occurs [#FS$$DIV] ; [] |1609| 
        MOVL      XAR0,#88              ; [CPU_] |1609| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1609| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1609| 
        B         $C$L617,UNC           ; [CPU_] |1609| 
        ; branch occurs ; [] |1609| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1602,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1602| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1602| 
        ; call occurs [#U$$TOFS] ; [] |1602| 
        MOVL      XAR1,ACC              ; [CPU_] |1602| 
        MOV       AL,*-SP[35]           ; [CPU_] |1602| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1602| 
        ; call occurs [#U$$TOFS] ; [] |1602| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1602| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1602| 
        ; call occurs [#FS$$SUB] ; [] |1602| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1602| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1602| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1602| 
        ; call occurs [#FS$$DIV] ; [] |1602| 
        MOVL      XAR0,#88              ; [CPU_] |1602| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1602| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1602| 
	.dwpsn	file "../Source/prod.c",line 1604,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1604| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1604| 
        ; call occurs [#U$$TOFS] ; [] |1604| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1604| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1604| 
        ; call occurs [#FS$$SUB] ; [] |1604| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1604| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1604| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1604| 
        ; call occurs [#FS$$DIV] ; [] |1604| 
        MOVL      XAR0,#88              ; [CPU_] |1604| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1604| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1604| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1612,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1612| 
	.dwpsn	file "../Source/prod.c",line 1614,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1614| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1614| 
        ; call occurs [#_dac_setmode] ; [] |1614| 
	.dwpsn	file "../Source/prod.c",line 1616,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1616| 
        MOVL      XAR0,#88              ; [CPU_] |1616| 
        MOV       AL,*-SP[59]           ; [CPU_] |1616| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1616| 
        MOV       *-SP[3],AL            ; [CPU_] |1616| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1616| 
        MOVL      XAR0,#44              ; [CPU_] |1616| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1616| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1616| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1616| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1616| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1616| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1616| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1616| 
        MOVL      XAR4,XAR1             ; [CPU_] |1616| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("_sprintf")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1616| 
        ; call occurs [#_sprintf] ; [] |1616| 
        MOVL      XAR4,XAR1             ; [CPU_] |1616| 
	.dwpsn	file "../Source/prod.c",line 1620,column 6,is_stmt,isa 0
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1620| 
        ; call occurs [#_scia_puts] ; [] |1620| 
	.dwpsn	file "../Source/prod.c",line 1622,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1622| 
	.dwpsn	file "../Source/prod.c",line 1623,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1623| 
        ; branch occurs ; [] |1623| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1482,column 7,is_stmt,isa 0
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1482| 
        ; call occurs [#_lcd_clear] ; [] |1482| 
	.dwpsn	file "../Source/prod.c",line 1483,column 7,is_stmt,isa 0
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_update_units")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1483| 
        ; call occurs [#_update_units] ; [] |1483| 
	.dwpsn	file "../Source/prod.c",line 1484,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1484| 
        ; branch occurs ; [] |1484| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1432,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1432| 
        MOVB      AL,#0                 ; [CPU_] |1432| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1432| 
        ; call occurs [#_lcd_puts] ; [] |1432| 
	.dwpsn	file "../Source/prod.c",line 1434,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1434| 
        MOVL      XAR0,#44              ; [CPU_] |1434| 
        MOV       AL,*-SP[59]           ; [CPU_] |1434| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1434| 
        MOV       *-SP[3],AL            ; [CPU_] |1434| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1434| 
        MOVL      XAR4,XAR1             ; [CPU_] |1434| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_sprintf")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1434| 
        ; call occurs [#_sprintf] ; [] |1434| 
        MOVL      XAR4,XAR1             ; [CPU_] |1434| 
	.dwpsn	file "../Source/prod.c",line 1437,column 6,is_stmt,isa 0
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1437| 
        ; call occurs [#_scia_puts] ; [] |1437| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1450,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1450| 
        MOVL      XAR0,#42              ; [CPU_] |1450| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1450| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1450| 
        MOVL      XAR0,#44              ; [CPU_] |1450| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1450| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1450| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1450| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_sprintf")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1450| 
        ; call occurs [#_sprintf] ; [] |1450| 
        MOVL      XAR0,#44              ; [CPU_] |1450| 
	.dwpsn	file "../Source/prod.c",line 1453,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1453| 
	.dwpsn	file "../Source/prod.c",line 1450,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1450| 
	.dwpsn	file "../Source/prod.c",line 1453,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1453| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1453| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1453| 
        ; call occurs [#_scia_getparam] ; [] |1453| 
	.dwpsn	file "../Source/prod.c",line 1454,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1454| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1454| 
        ; call occurs [#_scia_puts] ; [] |1454| 
	.dwpsn	file "../Source/prod.c",line 1457,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1457| 
	.dwpsn	file "../Source/prod.c",line 1456,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1456| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1456| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1456| 
	.dwpsn	file "../Source/prod.c",line 1458,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1457,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1457| 
	.dwpsn	file "../Source/prod.c",line 1458,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1458| 
        MOVB      ACC,#0                ; [CPU_] |1458| 
        SUBB      ACC,#1                ; [CPU_] |1458| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1458| 
        B         $C$L622,EQ            ; [CPU_] |1458| 
        ; branchcc occurs ; [] |1458| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1459,column 15,is_stmt,isa 0
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1459| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1459| 
        CMPB      AL,#0                 ; [CPU_] |1459| 
        B         $C$L624,EQ            ; [CPU_] |1459| 
        ; branchcc occurs ; [] |1459| 
	.dwpsn	file "../Source/prod.c",line 1462,column 8,is_stmt,isa 0
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1462| 
        ; call occurs [#_ad7738_getraw] ; [] |1462| 
	.dwpsn	file "../Source/prod.c",line 1463,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1463| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1463| 
        ADDL      XAR4,ACC              ; [CPU_] |1463| 
        MOVL      XAR0,#10              ; [CPU_] |1463| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1463| 
        MOVL      XAR0,#10              ; [CPU_] |1463| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1463| 
        ASR64     ACC:P,16              ; [CPU_] |1463| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1463| 
        MOVL      XAR0,#10              ; [CPU_] |1463| 
        ASR64     ACC:P,16              ; [CPU_] |1463| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1463| 
        MOVL      XAR0,#10              ; [CPU_] |1463| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1463| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1463| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1463| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1463| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1463| 
	.dwpsn	file "../Source/prod.c",line 1458,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1458| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1458| 
        MOVB      ACC,#0                ; [CPU_] |1458| 
        SUBB      ACC,#1                ; [CPU_] |1458| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1458| 
        B         $C$L621,NEQ           ; [CPU_] |1458| 
        ; branchcc occurs ; [] |1458| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1466,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1466| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1466| 
        ; call occurs [#_scia_puts] ; [] |1466| 
	.dwpsn	file "../Source/prod.c",line 1449,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1449| 
        MOVL      XAR0,#42              ; [CPU_] |1449| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1449| 
        MOVL      XAR0,#42              ; [CPU_] |1449| 
        SUBB      XAR6,#1               ; [CPU_U] |1449| 
        ADDB      ACC,#2                ; [CPU_] |1449| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1449| 
        MOVZ      AR0,AR6               ; [CPU_] |1449| 
        MOV       *-SP[47],AR6          ; [CPU_] |1449| 
        ADDB      XAR1,#4               ; [CPU_] |1449| 
        CMP       AR0,#-1               ; [CPU_] |1449| 
        B         $C$L620,NEQ           ; [CPU_] |1449| 
        ; branchcc occurs ; [] |1449| 
	.dwpsn	file "../Source/prod.c",line 1469,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1469| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1469| 
        MOVB      AL,#10                ; [CPU_] |1469| 
        MOV       T,*-SP[58]            ; [CPU_] |1469| 
        MPYU      ACC,T,AL              ; [CPU_] |1469| 
        ADDL      ACC,XAR6              ; [CPU_] |1469| 
        MOVL      XAR1,ACC              ; [CPU_] |1469| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1469| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1469| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1469| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1469| 
        ; call occurs [#FS$$SUB] ; [] |1469| 
        MOVL      XAR6,ACC              ; [CPU_] |1469| 
        MOV       AL,#16384             ; [CPU_] |1469| 
        MOV       AH,#17948             ; [CPU_] |1469| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1469| 
        MOVL      ACC,XAR6              ; [CPU_] |1469| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1469| 
        ; call occurs [#FS$$MPY] ; [] |1469| 
        MOVL      XAR0,#88              ; [CPU_] |1469| 
        MOVL      P,*-SP[28]            ; [CPU_] |1469| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1469| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1469| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1469| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1469| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1469| 
        ; call occurs [#LL$$TOFS] ; [] |1469| 
        MOVL      XAR0,#88              ; [CPU_] |1469| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1469| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1469| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1469| 
        ; call occurs [#FS$$DIV] ; [] |1469| 
        MOVB      XAR0,#44              ; [CPU_] |1469| 
	.dwpsn	file "../Source/prod.c",line 1472,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1472| 
	.dwpsn	file "../Source/prod.c",line 1469,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1469| 
	.dwpsn	file "../Source/prod.c",line 1472,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1472| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1472| 
        MOV       AL,*-SP[59]           ; [CPU_] |1472| 
        MOV       *-SP[3],AL            ; [CPU_] |1472| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1472| 
        MOVL      XAR0,#44              ; [CPU_] |1472| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1472| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1472| 
        MOVL      XAR4,XAR1             ; [CPU_] |1472| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_sprintf")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1472| 
        ; call occurs [#_sprintf] ; [] |1472| 
        MOVL      XAR4,XAR1             ; [CPU_] |1472| 
	.dwpsn	file "../Source/prod.c",line 1474,column 6,is_stmt,isa 0
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1474| 
        ; call occurs [#_scia_puts] ; [] |1474| 
	.dwpsn	file "../Source/prod.c",line 1475,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1475| 
$C$L623:    
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1475| 
        ; call occurs [#_scia_puts] ; [] |1475| 
	.dwpsn	file "../Source/prod.c",line 1630,column 5,is_stmt,isa 0
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1630| 
        ; call occurs [#_lcd_clear] ; [] |1630| 
	.dwpsn	file "../Source/prod.c",line 1631,column 5,is_stmt,isa 0
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_update_units")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1631| 
        ; call occurs [#_update_units] ; [] |1631| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1634,column 5,is_stmt,isa 0
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1634| 
        ; call occurs [#_ad7738_setcal] ; [] |1634| 
        MOVL      XAR0,#78              ; [CPU_] |1634| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1634| 
	.dwpsn	file "../Source/prod.c",line 1635,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1635| 
        MOVL      XAR1,ACC              ; [CPU_] |1635| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1635| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1635| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1635| 
	.dwpsn	file "../Source/prod.c",line 1636,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1636| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1636| 
        ; call occurs [#_ad7738_resetvall] ; [] |1636| 
	.dwpsn	file "../Source/prod.c",line 1638,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1638| 
        ; branch occurs ; [] |1638| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1460,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1460| 
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_delay_us")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1460| 
        ; call occurs [#_delay_us] ; [] |1460| 
	.dwpsn	file "../Source/prod.c",line 1459,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1459| 
        ; branch occurs ; [] |1459| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3589,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3589| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3589| 
        ; call occurs [#_scia_puts] ; [] |3589| 
        MOVL      XAR0,#86              ; [CPU_] |3589| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3589| 
	.dwpsn	file "../Source/prod.c",line 3590,column 5,is_stmt,isa 0
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3590| 
        ; call occurs [#_scia_puts] ; [] |3590| 
	.dwpsn	file "../Source/prod.c",line 3591,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3591| 
	.dwpsn	file "../Source/prod.c",line 3592,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3592| 
        ; branch occurs ; [] |3592| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3550,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3550| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3550| 
        ; call occurs [#_scia_puts] ; [] |3550| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3554,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3554| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_delay_us")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3554| 
        ; call occurs [#_delay_us] ; [] |3554| 
	.dwpsn	file "../Source/prod.c",line 3552,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3552| 
        ; branchcc occurs ; [] |3552| 
	.dwpsn	file "../Source/prod.c",line 3557,column 5,is_stmt,isa 0
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_reboot")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3557| 
        ; call occurs [#_reboot] ; [] |3557| 
	.dwpsn	file "../Source/prod.c",line 3558,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3558| 
        ; branch occurs ; [] |3558| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3534,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3534| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3534| 
        ; call occurs [#_scia_puts] ; [] |3534| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3538,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3538| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_delay_us")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3538| 
        ; call occurs [#_delay_us] ; [] |3538| 
	.dwpsn	file "../Source/prod.c",line 3536,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3536| 
        ; branchcc occurs ; [] |3536| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3542,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3542| 
	.dwpsn	file "../Source/prod.c",line 3541,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3541| 
	.dwpsn	file "../Source/prod.c",line 3542,column 5,is_stmt,isa 0
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3542| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3542| 
	.dwpsn	file "../Source/prod.c",line 3546,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3546| 
        ; branch occurs ; [] |3546| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3445,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3445| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3445| 
        ; call occurs [#_scia_puts] ; [] |3445| 
	.dwpsn	file "../Source/prod.c",line 3447,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3447| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3447| 
        ; call occurs [#_scia_puts] ; [] |3447| 
	.dwpsn	file "../Source/prod.c",line 3448,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3448| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3448| 
        ; call occurs [#_scia_puts] ; [] |3448| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3450| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3451,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3451| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3451| 
        ; call occurs [#_scia_puts] ; [] |3451| 
	.dwpsn	file "../Source/prod.c",line 3452,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3452| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3452| 
        ; call occurs [#_scia_puts] ; [] |3452| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3453| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3455| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3456,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3456| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3456| 
        ; call occurs [#_scia_puts] ; [] |3456| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3457| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3458| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3458| 
        ; call occurs [#_scia_puts] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3459| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3460| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3461,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3461| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3461| 
        ; call occurs [#_scia_puts] ; [] |3461| 
	.dwpsn	file "../Source/prod.c",line 3463,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3463| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3463| 
        ; call occurs [#_scia_puts] ; [] |3463| 
	.dwpsn	file "../Source/prod.c",line 3465,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3465| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3465| 
        ; call occurs [#_scia_puts] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3467,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3467| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3467| 
        ; call occurs [#_scia_puts] ; [] |3467| 
	.dwpsn	file "../Source/prod.c",line 3469,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3469| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3469| 
        ; call occurs [#_scia_puts] ; [] |3469| 
	.dwpsn	file "../Source/prod.c",line 3470,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3470| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3470| 
        ; call occurs [#_scia_puts] ; [] |3470| 
	.dwpsn	file "../Source/prod.c",line 3471,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3471| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3471| 
        ; call occurs [#_scia_puts] ; [] |3471| 
	.dwpsn	file "../Source/prod.c",line 3472,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3472| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3472| 
        ; call occurs [#_scia_puts] ; [] |3472| 
	.dwpsn	file "../Source/prod.c",line 3474,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3474| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3474| 
        ; call occurs [#_scia_puts] ; [] |3474| 
	.dwpsn	file "../Source/prod.c",line 3475,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3475| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3475| 
        ; call occurs [#_scia_puts] ; [] |3475| 
	.dwpsn	file "../Source/prod.c",line 3476,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3476| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3476| 
        ; call occurs [#_scia_puts] ; [] |3476| 
	.dwpsn	file "../Source/prod.c",line 3477,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3477| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3477| 
        ; call occurs [#_scia_puts] ; [] |3477| 
	.dwpsn	file "../Source/prod.c",line 3478,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3478| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3478| 
        ; call occurs [#_scia_puts] ; [] |3478| 
	.dwpsn	file "../Source/prod.c",line 3480,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3480| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3480| 
        ; call occurs [#_scia_puts] ; [] |3480| 
	.dwpsn	file "../Source/prod.c",line 3481,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3481| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3481| 
        ; call occurs [#_scia_puts] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3483,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3483| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3483| 
        ; call occurs [#_scia_puts] ; [] |3483| 
	.dwpsn	file "../Source/prod.c",line 3485,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3485| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3485| 
        ; call occurs [#_scia_puts] ; [] |3485| 
	.dwpsn	file "../Source/prod.c",line 3486,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3486| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3486| 
        ; call occurs [#_scia_puts] ; [] |3486| 
	.dwpsn	file "../Source/prod.c",line 3488,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3488| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3488| 
        ; call occurs [#_scia_puts] ; [] |3488| 
	.dwpsn	file "../Source/prod.c",line 3490,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3490| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3490| 
        ; call occurs [#_scia_puts] ; [] |3490| 
	.dwpsn	file "../Source/prod.c",line 3492,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3492| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3492| 
        ; call occurs [#_scia_puts] ; [] |3492| 
	.dwpsn	file "../Source/prod.c",line 3494,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3494| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3495,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3495| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3495| 
        ; call occurs [#_scia_puts] ; [] |3495| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3497| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3497| 
        ; call occurs [#_scia_puts] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3498,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3498| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3498| 
        ; call occurs [#_scia_puts] ; [] |3498| 
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3499| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3499| 
        ; call occurs [#_scia_puts] ; [] |3499| 
	.dwpsn	file "../Source/prod.c",line 3500,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3500| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3500| 
        ; call occurs [#_scia_puts] ; [] |3500| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3501| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3501| 
        ; call occurs [#_scia_puts] ; [] |3501| 
	.dwpsn	file "../Source/prod.c",line 3502,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3502| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3502| 
        ; call occurs [#_scia_puts] ; [] |3502| 
	.dwpsn	file "../Source/prod.c",line 3503,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3503| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3503| 
        ; call occurs [#_scia_puts] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3504,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3504| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3504| 
        ; call occurs [#_scia_puts] ; [] |3504| 
	.dwpsn	file "../Source/prod.c",line 3515,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3515| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3515| 
        ; call occurs [#_scia_puts] ; [] |3515| 
	.dwpsn	file "../Source/prod.c",line 3517,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3517| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3517| 
        ; call occurs [#_scia_puts] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3519,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3519| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3519| 
        ; call occurs [#_scia_puts] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3521| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3521| 
        ; call occurs [#_scia_puts] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3523,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3523| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3523| 
        ; call occurs [#_scia_puts] ; [] |3523| 
	.dwpsn	file "../Source/prod.c",line 3528,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3528| 
$C$L631:    
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3528| 
        ; call occurs [#_scia_puts] ; [] |3528| 
$C$L632:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3596,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3596| 
        ; branchcc occurs ; [] |3596| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3597,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3597| 
        SPM       #0                    ; [CPU_] 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3597| 
        ; call occurs [#_scia_puts] ; [] |3597| 
$C$L634:    
	.dwpsn	file "../Source/prod.c",line 642,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |642| 
        TBIT      AL,#4                 ; [CPU_] |642| 
        B         $C$L635,TC            ; [CPU_] |642| 
        ; branchcc occurs ; [] |642| 
	.dwpsn	file "../Source/prod.c",line 644,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |644| 
        SPM       #0                    ; [CPU_] 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |644| 
        ; call occurs [#_ad7738_resettare] ; [] |644| 
	.dwpsn	file "../Source/prod.c",line 645,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |645| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |645| 
        ; call occurs [#_ad7738_resetpeak] ; [] |645| 
	.dwpsn	file "../Source/prod.c",line 646,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |646| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |646| 
        ; call occurs [#_ad7738_resetvall] ; [] |646| 
$C$L635:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 724,column 3,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |724| 
        ; call occurs [#_ad7738_monrdy] ; [] |724| 
        CMPB      AL,#0                 ; [CPU_] |724| 
        B         $C$L661,EQ            ; [CPU_] |724| 
        ; branchcc occurs ; [] |724| 
	.dwpsn	file "../Source/prod.c",line 726,column 4,is_stmt,isa 0
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |726| 
        ; call occurs [#_ad7738_monclr] ; [] |726| 
        MOVL      XAR0,#84              ; [CPU_] |726| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |726| 
	.dwpsn	file "../Source/prod.c",line 729,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |729| 
        CMPB      AL,#3                 ; [CPU_] |729| 
        B         $C$L636,GT            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        CMPB      AL,#3                 ; [CPU_] |729| 
        B         $C$L642,EQ            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        CMPB      AL,#0                 ; [CPU_] |729| 
        B         $C$L646,EQ            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        CMPB      AL,#1                 ; [CPU_] |729| 
        B         $C$L645,EQ            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        CMPB      AL,#2                 ; [CPU_] |729| 
        B         $C$L644,EQ            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        B         $C$L658,UNC           ; [CPU_] |729| 
        ; branch occurs ; [] |729| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |729| 
        B         $C$L641,EQ            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        CMPB      AL,#5                 ; [CPU_] |729| 
        B         $C$L637,EQ            ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
        CMPB      AL,#6                 ; [CPU_] |729| 
        B         $C$L658,NEQ           ; [CPU_] |729| 
        ; branchcc occurs ; [] |729| 
	.dwpsn	file "../Source/prod.c",line 784,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |784| 
        MOVL      XAR0,#46              ; [CPU_] |784| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |784| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |784| 
	.dwpsn	file "../Source/prod.c",line 785,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |785| 
        ; branch occurs ; [] |785| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 779,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |779| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |779| 
        ; call occurs [#_ad7738_getlimitst] ; [] |779| 
	.dwpsn	file "../Source/prod.c",line 780,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |780| 
        B         $C$L639,NTC           ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        TBIT      AL,#0                 ; [CPU_] |780| 
        B         $C$L638,NTC           ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |780| 
        B         $C$L640,UNC           ; [CPU_] |780| 
        ; branch occurs ; [] |780| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |780| 
        B         $C$L640,UNC           ; [CPU_] |780| 
        ; branch occurs ; [] |780| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |780| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |780| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |780| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |780| 
	.dwpsn	file "../Source/prod.c",line 782,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |782| 
        ; branch occurs ; [] |782| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 751,column 5,is_stmt,isa 0
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |751| 
        ; call occurs [#_ad7738_getmon] ; [] |751| 
        MOVL      XAR0,#84              ; [CPU_] |751| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |751| 
	.dwpsn	file "../Source/prod.c",line 753,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |753| 
        B         $C$L643,UNC           ; [CPU_] |753| 
        ; branch occurs ; [] |753| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 746,column 5,is_stmt,isa 0
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |746| 
        ; call occurs [#_ad7738_getmon] ; [] |746| 
        MOVL      XAR0,#84              ; [CPU_] |746| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |746| 
	.dwpsn	file "../Source/prod.c",line 747,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |747| 
$C$L643:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |747| 
        ADDL      XAR4,ACC              ; [CPU_] |747| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |747| 
	.dwpsn	file "../Source/prod.c",line 748,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |748| 
        ; branch occurs ; [] |748| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 741,column 5,is_stmt,isa 0
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |741| 
        ; call occurs [#_ad7738_getvall] ; [] |741| 
	.dwpsn	file "../Source/prod.c",line 743,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |743| 
        ; branch occurs ; [] |743| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 736,column 5,is_stmt,isa 0
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |736| 
        ; call occurs [#_ad7738_getpeak] ; [] |736| 
	.dwpsn	file "../Source/prod.c",line 738,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |738| 
        ; branch occurs ; [] |738| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 731,column 5,is_stmt,isa 0
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |731| 
        ; call occurs [#_ad7738_getmon] ; [] |731| 
$C$L647:    
        MOVL      XAR0,#84              ; [CPU_] |731| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |731| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 732,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |732| 
        ADDL      XAR4,ACC              ; [CPU_] |732| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |732| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |732| 
	.dwpsn	file "../Source/prod.c",line 756,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |756| 
        CMPB      AL,#3                 ; [CPU_] |756| 
        B         $C$L649,GT            ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
        CMPB      AL,#3                 ; [CPU_] |756| 
        B         $C$L651,EQ            ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
        CMPB      AL,#0                 ; [CPU_] |756| 
        B         $C$L654,EQ            ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
        CMPB      AL,#1                 ; [CPU_] |756| 
        B         $C$L653,EQ            ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
        CMPB      AL,#2                 ; [CPU_] |756| 
        B         $C$L652,EQ            ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
        B         $C$L658,UNC           ; [CPU_] |756| 
        ; branch occurs ; [] |756| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |756| 
        B         $C$L650,EQ            ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
        CMPB      AL,#5                 ; [CPU_] |756| 
        B         $C$L658,NEQ           ; [CPU_] |756| 
        ; branchcc occurs ; [] |756| 
	.dwpsn	file "../Source/prod.c",line 773,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |773| 
	.dwpsn	file "../Source/prod.c",line 774,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |774| 
        ; branch occurs ; [] |774| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 770,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |770| 
	.dwpsn	file "../Source/prod.c",line 771,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |771| 
        ; branch occurs ; [] |771| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 767,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |767| 
	.dwpsn	file "../Source/prod.c",line 768,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |768| 
        ; branch occurs ; [] |768| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 764,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |764| 
	.dwpsn	file "../Source/prod.c",line 765,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |765| 
        ; branch occurs ; [] |765| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 761,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |761| 
	.dwpsn	file "../Source/prod.c",line 762,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |762| 
        ; branch occurs ; [] |762| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 758,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |758| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |758| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |758| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |758| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |758| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |758| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_sprintf")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |758| 
        ; call occurs [#_sprintf] ; [] |758| 
$C$L658:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 789,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |789| 
        MPYB      ACC,T,#20             ; [CPU_] |789| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |789| 
        ADDB      AL,#7                 ; [CPU_] |789| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |789| 
        ; call occurs [#_lcd_puts] ; [] |789| 
	.dwpsn	file "../Source/prod.c",line 792,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |792| 
	.dwpsn	file "../Source/prod.c",line 789,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |789| 
	.dwpsn	file "../Source/prod.c",line 792,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |792| 
        B         $C$L659,HIS           ; [CPU_] |792| 
        ; branchcc occurs ; [] |792| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |792| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 793,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |793| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 802,column 3,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |802| 
        ; call occurs [#_ad7738_tempstart] ; [] |802| 
        CMPB      AL,#0                 ; [CPU_] |802| 
        B         $C$L662,NEQ           ; [CPU_] |802| 
        ; branchcc occurs ; [] |802| 
	.dwpsn	file "../Source/prod.c",line 807,column 8,is_stmt,isa 0
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |807| 
        ; call occurs [#_ad7738_tempread] ; [] |807| 
        CMPB      AL,#0                 ; [CPU_] |807| 
        B         $C$L663,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
	.dwpsn	file "../Source/prod.c",line 808,column 4,is_stmt,isa 0
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |808| 
        ; call occurs [#_ds1820read] ; [] |808| 
        MOVL      XAR0,#46              ; [CPU_] |808| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |808| 
	.dwpsn	file "../Source/prod.c",line 809,column 4,is_stmt,isa 0
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |809| 
        ; call occurs [#_ad7738_settemp] ; [] |809| 
        B         $C$L663,UNC           ; [CPU_] |809| 
        ; branch occurs ; [] |809| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 803,column 4,is_stmt,isa 0
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |803| 
        ; call occurs [#_ds1820start] ; [] |803| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 816,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |816| 
        MOVB      XAR0,#36              ; [CPU_] |816| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |816| 
        B         $C$L668,EQ            ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |816| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |816| 
        CMPB      AL,#0                 ; [CPU_] |816| 
        B         $C$L668,EQ            ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 817,column 4,is_stmt,isa 0
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |817| 
        ; call occurs [#_tagdetect] ; [] |817| 
        CMPB      AL,#0                 ; [CPU_] |817| 
        B         $C$L664,NEQ           ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 840,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |840| 
        MOV       *+XAR4[0],#0          ; [CPU_] |840| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |840| 
	.dwpsn	file "../Source/prod.c",line 842,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |842| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |842| 
        MOVL      XAR4,ACC              ; [CPU_] |842| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |842| 
        B         $C$L666,EQ            ; [CPU_] |842| 
        ; branchcc occurs ; [] |842| 
	.dwpsn	file "../Source/prod.c",line 843,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |843| 
	.dwpsn	file "../Source/prod.c",line 844,column 6,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |844| 
        ; call occurs [#_lcd_clear] ; [] |844| 
	.dwpsn	file "../Source/prod.c",line 845,column 6,is_stmt,isa 0
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_update_units")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |845| 
        ; call occurs [#_update_units] ; [] |845| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 846,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |846| 
        B         $C$L666,UNC           ; [CPU_] |846| 
        ; branch occurs ; [] |846| 
$C$L664:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 819,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |819| 
        B         $C$L665,NEQ           ; [CPU_] |819| 
        ; branchcc occurs ; [] |819| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 822,column 6,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_matchTag")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |822| 
        ; call occurs [#_matchTag] ; [] |822| 
        MOVL      XAR0,#80              ; [CPU_] |822| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |822| 
        MOVL      XAR0,#9               ; [CPU_] |822| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |822| 
	.dwpsn	file "../Source/prod.c",line 823,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |823| 
        B         $C$L665,EQ            ; [CPU_] |823| 
        ; branchcc occurs ; [] |823| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 826,column 7,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |826| 
        ; call occurs [#_maf_rst] ; [] |826| 
	.dwpsn	file "../Source/prod.c",line 827,column 7,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |827| 
        ; call occurs [#_ad7738_setcal] ; [] |827| 
        MOVL      XAR0,#78              ; [CPU_] |827| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |827| 
	.dwpsn	file "../Source/prod.c",line 828,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |828| 
        MOVL      XAR1,ACC              ; [CPU_] |828| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |828| 
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |828| 
        ; call occurs [#_ad7738_resetpeak] ; [] |828| 
	.dwpsn	file "../Source/prod.c",line 829,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |829| 
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |829| 
        ; call occurs [#_ad7738_resetvall] ; [] |829| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 832,column 7,is_stmt,isa 0
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |832| 
        ; call occurs [#_lcd_clear] ; [] |832| 
	.dwpsn	file "../Source/prod.c",line 833,column 7,is_stmt,isa 0
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_update_units")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |833| 
        ; call occurs [#_update_units] ; [] |833| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 834,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |834| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 837,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |837| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 851,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |851| 
        ADDB      AL,#1                 ; [CPU_] |851| 
        MOV       *+FP[AR0],AL          ; [CPU_] |851| 
        CMPB      AL,#4                 ; [CPU_] |851| 
        B         $C$L667,HIS           ; [CPU_] |851| 
        ; branchcc occurs ; [] |851| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |851| 
        ADDB      ACC,#1                ; [CPU_] |851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |851| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 852,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |852| 
        MOV       *+FP[AR0],#0          ; [CPU_] |852| 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 860,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |860| 
        CMPB      AL,#1                 ; [CPU_] |860| 
        B         $C$L686,NEQ           ; [CPU_] |860| 
        ; branchcc occurs ; [] |860| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |860| 
        ; branchcc occurs ; [] |860| 
	.dwpsn	file "../Source/prod.c",line 863,column 4,is_stmt,isa 0
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |863| 
        ; call occurs [#_prod_getavail] ; [] |863| 
        MOVL      XAR6,ACC              ; [CPU_] |863| 
        MOV       T,*-SP[51]            ; [CPU_] |863| 
        MPY       P,T,*-SP[52]          ; [CPU_] |863| 
        MOVU      ACC,PL                ; [CPU_] |863| 
        CMPL      ACC,XAR6              ; [CPU_] |863| 
        B         $C$L671,LOS           ; [CPU_] |863| 
        ; branchcc occurs ; [] |863| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |863| 
        ; branchcc occurs ; [] |863| 
	.dwpsn	file "../Source/prod.c",line 933,column 11,is_stmt,isa 0
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |933| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |933| 
        CMPB      AL,#0                 ; [CPU_] |933| 
        B         $C$L669,NEQ           ; [CPU_] |933| 
        ; branchcc occurs ; [] |933| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 941,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |941| 
        B         $C$L686,EQ            ; [CPU_] |941| 
        ; branchcc occurs ; [] |941| 
	.dwpsn	file "../Source/prod.c",line 942,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |942| 
	.dwpsn	file "../Source/prod.c",line 945,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |945| 
	.dwpsn	file "../Source/prod.c",line 947,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |947| 
        MOVB      XAR0,#36              ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 945,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |945| 
	.dwpsn	file "../Source/prod.c",line 946,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |946| 
	.dwpsn	file "../Source/prod.c",line 947,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |947| 
        MOVL      XAR0,#80              ; [CPU_] |947| 
        MOV       *+XAR4[2],AL          ; [CPU_] |947| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 951,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |951| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 949,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |949| 
	.dwpsn	file "../Source/prod.c",line 951,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |951| 
        ; branch occurs ; [] |951| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 935,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |935| 
        MOV       *+XAR4[0],#0          ; [CPU_] |935| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 937,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |937| 
	.dwpsn	file "../Source/prod.c",line 936,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |936| 
	.dwpsn	file "../Source/prod.c",line 937,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |937| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 938,column 6,is_stmt,isa 0
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |938| 
        ; call occurs [#_ad7738_getlimitst] ; [] |938| 
        MOV       *XAR1++,AL            ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 937,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |937| 
	.dwpsn	file "../Source/prod.c",line 938,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 937,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |937| 
        B         $C$L670,LT            ; [CPU_] |937| 
        ; branchcc occurs ; [] |937| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 940,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |940| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 941,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |941| 
        ; branch occurs ; [] |941| 
$C$L671:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 870,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |870| 
        MOVL      XAR0,#88              ; [CPU_] |870| 
	.dwpsn	file "../Source/prod.c",line 868,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |868| 
	.dwpsn	file "../Source/prod.c",line 870,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |870| 
        MOV       *+XAR4[0],#0          ; [CPU_] |870| 
	.dwpsn	file "../Source/prod.c",line 876,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 871,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |871| 
        MOV       AL,*-SP[52]           ; [CPU_] |871| 
	.dwpsn	file "../Source/prod.c",line 872,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |872| 
        MOV       AL,*-SP[59]           ; [CPU_] |872| 
	.dwpsn	file "../Source/prod.c",line 873,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |873| 
        MOV       *+XAR4[3],AL          ; [CPU_] |873| 
        MOV       AL,*-SP[59]           ; [CPU_] |873| 
	.dwpsn	file "../Source/prod.c",line 874,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |874| 
        MOV       *+XAR4[4],AL          ; [CPU_] |874| 
        MOV       AL,*-SP[50]           ; [CPU_] |874| 
	.dwpsn	file "../Source/prod.c",line 875,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |875| 
        MOV       AH,*-SP[49]           ; [CPU_] |875| 
	.dwpsn	file "../Source/prod.c",line 876,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |876| 
        MOV       *+XAR4[6],AL          ; [CPU_] |876| 
        MOV       AL,AH                 ; [CPU_] |876| 
        ADDB      AL,#1                 ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 867,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |867| 
	.dwpsn	file "../Source/prod.c",line 876,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 878,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |878| 
        ; branch occurs ; [] |878| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 879,column 6,is_stmt,isa 0
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |879| 
        ; call occurs [#_prod_getnext] ; [] |879| 
	.dwpsn	file "../Source/prod.c",line 881,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |881| 
        B         $C$L682,NEQ           ; [CPU_] |881| 
        ; branchcc occurs ; [] |881| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 883,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |883| 
	.dwpsn	file "../Source/prod.c",line 887,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |887| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 886,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |886| 
        MOV       *-SP[58],AL           ; [CPU_] |886| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 888,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |888| 
        B         $C$L675,EQ            ; [CPU_] |888| 
        ; branchcc occurs ; [] |888| 
	.dwpsn	file "../Source/prod.c",line 889,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |889| 
        MOVL      XAR0,#88              ; [CPU_] |889| 
        ADDL      ACC,XAR4              ; [CPU_] |889| 
        MOVL      XAR3,ACC              ; [CPU_] |889| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |889| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 892,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |892| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 890,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |890| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 891,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |891| 
        ANDB      AL,#0xff              ; [CPU_] |891| 
        MOV       *XAR5++,AL            ; [CPU_] |891| 
	.dwpsn	file "../Source/prod.c",line 892,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |892| 
        LSR       AL,8                  ; [CPU_] |892| 
        MOV       *XAR5++,AL            ; [CPU_] |892| 
	.dwpsn	file "../Source/prod.c",line 890,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR0--         ; [CPU_] |890| 
        ; branchcc occurs ; [] |890| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 887,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |887| 
        ADDB      XAR7,#1               ; [CPU_] |887| 
	.dwpsn	file "../Source/prod.c",line 896,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |896| 
        MOV       *-SP[58],AL           ; [CPU_] |896| 
	.dwpsn	file "../Source/prod.c",line 887,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR6--         ; [CPU_] |887| 
        ; branchcc occurs ; [] |887| 
	.dwpsn	file "../Source/prod.c",line 899,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |899| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 900,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |900| 
        B         $C$L678,EQ            ; [CPU_] |900| 
        ; branchcc occurs ; [] |900| 
	.dwpsn	file "../Source/prod.c",line 901,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |901| 
        MOVL      XAR0,#88              ; [CPU_] |901| 
        ADDL      ACC,XAR4              ; [CPU_] |901| 
        ADDB      ACC,#8                ; [CPU_] |901| 
        MOVL      XAR3,ACC              ; [CPU_] |901| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |901| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 904,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |904| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 902,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |902| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 903,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |903| 
        ANDB      AL,#0xff              ; [CPU_] |903| 
        MOV       *XAR5++,AL            ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 904,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |904| 
        LSR       AL,8                  ; [CPU_] |904| 
        MOV       *XAR5++,AL            ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 902,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR0--         ; [CPU_] |902| 
        ; branchcc occurs ; [] |902| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 899,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |899| 
        ADDB      XAR7,#1               ; [CPU_] |899| 
	.dwpsn	file "../Source/prod.c",line 908,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |908| 
        MOV       *-SP[58],AL           ; [CPU_] |908| 
	.dwpsn	file "../Source/prod.c",line 899,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR6--         ; [CPU_] |899| 
        ; branchcc occurs ; [] |899| 
	.dwpsn	file "../Source/prod.c",line 884,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |884| 
	.dwpsn	file "../Source/prod.c",line 911,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |911| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 912,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |912| 
        B         $C$L681,EQ            ; [CPU_] |912| 
        ; branchcc occurs ; [] |912| 
	.dwpsn	file "../Source/prod.c",line 913,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |913| 
        MOVL      XAR0,#88              ; [CPU_] |913| 
        ADDL      ACC,XAR4              ; [CPU_] |913| 
        ADDB      ACC,#12               ; [CPU_] |913| 
        MOVL      XAR6,ACC              ; [CPU_] |913| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |913| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 916,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |916| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 914,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |914| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 915,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |915| 
        ANDB      AL,#0xff              ; [CPU_] |915| 
        MOV       *XAR5++,AL            ; [CPU_] |915| 
	.dwpsn	file "../Source/prod.c",line 916,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |916| 
        LSR       AL,8                  ; [CPU_] |916| 
        MOV       *XAR5++,AL            ; [CPU_] |916| 
	.dwpsn	file "../Source/prod.c",line 914,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR0--         ; [CPU_] |914| 
        ; branchcc occurs ; [] |914| 
$C$L681:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 911,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |911| 
	.dwpsn	file "../Source/prod.c",line 920,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |920| 
        MOV       *-SP[58],AL           ; [CPU_] |920| 
	.dwpsn	file "../Source/prod.c",line 911,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |911| 
        CMPB      AL,#2                 ; [CPU_] |911| 
        B         $C$L679,LT            ; [CPU_] |911| 
        ; branchcc occurs ; [] |911| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 878,column 12,is_stmt,isa 0
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |878| 
        ; call occurs [#_prod_getavail] ; [] |878| 
        TEST      ACC                   ; [CPU_] |878| 
        B         $C$L683,EQ            ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |878| 
        B         $C$L672,HI            ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 924,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |924| 
        MOV       AL,*-SP[47]           ; [CPU_] |924| 
        MOV       *+XAR4[2],AL          ; [CPU_] |924| 
        MOV       AL,*-SP[53]           ; [CPU_] |924| 
	.dwpsn	file "../Source/prod.c",line 926,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |926| 
        ; branchcc occurs ; [] |926| 
	.dwpsn	file "../Source/prod.c",line 927,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |927| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 930,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |930| 
$C$L685:    
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |930| 
        ; call occurs [#_scia_send_bin] ; [] |930| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 965,column 4,is_stmt,isa 0
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |965| 
        ; call occurs [#_scia_rx_getcmds] ; [] |965| 
        CMPB      AL,#0                 ; [CPU_] |965| 
        B         $C$L634,EQ            ; [CPU_] |965| 
        ; branchcc occurs ; [] |965| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 971,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |971| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |971| 
        ; call occurs [#_scia_rx_getcmd] ; [] |971| 
        MOV       *-SP[59],AL           ; [CPU_] |971| 
        CMPB      AL,#0                 ; [CPU_] |971| 
        B         $C$L634,EQ            ; [CPU_] |971| 
        ; branchcc occurs ; [] |971| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 988,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |988| 
        B         $C$L322,EQ            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
	.dwpsn	file "../Source/prod.c",line 3601,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3601| 
        B         $C$L634,NEQ           ; [CPU_] |3601| 
        ; branchcc occurs ; [] |3601| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3601| 
        B         $C$L634,LO            ; [CPU_] |3601| 
        ; branchcc occurs ; [] |3601| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3635,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3635| 
	.dwpsn	file "../Source/prod.c",line 3628,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3628| 
	.dwpsn	file "../Source/prod.c",line 3624,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3624| 
	.dwpsn	file "../Source/prod.c",line 3628,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3628| 
	.dwpsn	file "../Source/prod.c",line 3627,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3627| 
	.dwpsn	file "../Source/prod.c",line 3635,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3635| 
	.dwpsn	file "../Source/prod.c",line 3628,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3628| 
	.dwpsn	file "../Source/prod.c",line 3635,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3635| 
        CMPB      AL,#146               ; [CPU_] |3635| 
        B         $C$L694,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#146               ; [CPU_] |3635| 
        B         $C$L231,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#54                ; [CPU_] |3635| 
        B         $C$L690,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#54                ; [CPU_] |3635| 
        B         $C$L725,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#36                ; [CPU_] |3635| 
        B         $C$L688,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#36                ; [CPU_] |3635| 
        B         $C$L287,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#33                ; [CPU_] |3635| 
        B         $C$L687,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#33                ; [CPU_] |3635| 
        B         $C$L302,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#16                ; [CPU_] |3635| 
        B         $C$L741,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        MOV       AH,AL                 ; [CPU_] |3635| 
        ADDB      AH,#-17               ; [CPU_] |3635| 
        CMPB      AH,#1                 ; [CPU_] |3635| 
        B         $C$L740,LOS           ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#32                ; [CPU_] |3635| 
        B         $C$L736,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3635| 
        B         $C$L298,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#35                ; [CPU_] |3635| 
        B         $C$L295,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3635| 
        B         $C$L689,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#51                ; [CPU_] |3635| 
        B         $C$L730,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#48                ; [CPU_] |3635| 
        B         $C$L281,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#49                ; [CPU_] |3635| 
        B         $C$L256,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#50                ; [CPU_] |3635| 
        B         $C$L732,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3635| 
        B         $C$L728,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#53                ; [CPU_] |3635| 
        B         $C$L727,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3635| 
        B         $C$L692,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#71                ; [CPU_] |3635| 
        B         $C$L252,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#68                ; [CPU_] |3635| 
        B         $C$L691,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#65                ; [CPU_] |3635| 
        B         $C$L710,GEQ           ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#55                ; [CPU_] |3635| 
        B         $C$L718,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#56                ; [CPU_] |3635| 
        B         $C$L714,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#57                ; [CPU_] |3635| 
        B         $C$L712,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3635| 
        B         $C$L709,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#70                ; [CPU_] |3635| 
        B         $C$L702,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3635| 
        B         $C$L693,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#132               ; [CPU_] |3635| 
        B         $C$L310,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#72                ; [CPU_] |3635| 
        B         $C$L245,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#130               ; [CPU_] |3635| 
        B         $C$L240,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#131               ; [CPU_] |3635| 
        B         $C$L311,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3635| 
        B         $C$L236,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#145               ; [CPU_] |3635| 
        B         $C$L235,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3635| 
        B         $C$L698,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#169               ; [CPU_] |3635| 
        B         $C$L168,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#161               ; [CPU_] |3635| 
        B         $C$L696,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#161               ; [CPU_] |3635| 
        B         $C$L194,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#150               ; [CPU_] |3635| 
        B         $C$L695,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#150               ; [CPU_] |3635| 
        B         $C$L224,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#147               ; [CPU_] |3635| 
        B         $C$L230,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#148               ; [CPU_] |3635| 
        B         $C$L229,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#149               ; [CPU_] |3635| 
        B         $C$L228,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3635| 
        B         $C$L215,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#160               ; [CPU_] |3635| 
        B         $C$L210,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3635| 
        B         $C$L697,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#166               ; [CPU_] |3635| 
        B         $C$L182,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#162               ; [CPU_] |3635| 
        B         $C$L189,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#163               ; [CPU_] |3635| 
        B         $C$L185,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#165               ; [CPU_] |3635| 
        B         $C$L184,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3635| 
        B         $C$L179,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#168               ; [CPU_] |3635| 
        B         $C$L177,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3635| 
        B         $C$L700,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#195               ; [CPU_] |3635| 
        B         $C$L143,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#192               ; [CPU_] |3635| 
        B         $C$L699,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#192               ; [CPU_] |3635| 
        B         $C$L160,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#170               ; [CPU_] |3635| 
        B         $C$L164,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#186               ; [CPU_] |3635| 
        B         $C$L308,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#187               ; [CPU_] |3635| 
        B         $C$L307,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3635| 
        B         $C$L153,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#194               ; [CPU_] |3635| 
        B         $C$L150,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3635| 
        B         $C$L701,GT            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#210               ; [CPU_] |3635| 
        B         $C$L79,EQ             ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#196               ; [CPU_] |3635| 
        B         $C$L115,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#197               ; [CPU_] |3635| 
        B         $C$L91,EQ             ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#198               ; [CPU_] |3635| 
        B         $C$L80,EQ             ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3635| 
        B         $C$L306,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        CMPB      AL,#240               ; [CPU_] |3635| 
        B         $C$L305,EQ            ; [CPU_] |3635| 
        ; branchcc occurs ; [] |3635| 
        B         $C$L317,UNC           ; [CPU_] |3635| 
        ; branch occurs ; [] |3635| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4299,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4299| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4299| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4301,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4301| 
        ANDB      AL,#0xff              ; [CPU_] |4301| 
        MOV       *XAR1++,AL            ; [CPU_] |4301| 
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4302| 
        LSR       AL,8                  ; [CPU_] |4302| 
        MOV       *XAR1++,AL            ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4300,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4300| 
        ; branchcc occurs ; [] |4300| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4302| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4308,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4308| 
        MOV       AH,#0                 ; [CPU_] |4308| 
        MOVL      XAR0,#88              ; [CPU_] |4308| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4308| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4308| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4308| 
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4308| 
        ; call occurs [#FS$$CMP] ; [] |4308| 
        CMPB      AL,#0                 ; [CPU_] |4308| 
        B         $C$L705,NEQ           ; [CPU_] |4308| 
        ; branchcc occurs ; [] |4308| 
	.dwpsn	file "../Source/prod.c",line 4307,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4307| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4309,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4309| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4311,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4311| 
        MOV       AH,#0                 ; [CPU_] |4311| 
        MOVL      XAR0,#88              ; [CPU_] |4311| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4311| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4311| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4311| 
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4311| 
        ; call occurs [#FS$$CMP] ; [] |4311| 
        CMPB      AL,#0                 ; [CPU_] |4311| 
        B         $C$L707,EQ            ; [CPU_] |4311| 
        ; branchcc occurs ; [] |4311| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4312,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4312| 
        MOV       *-SP[59],AL           ; [CPU_] |4312| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4314,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4314| 
        MOVL      XAR0,#88              ; [CPU_] |4314| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4314| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4314| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4314| 
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4314| 
        ; call occurs [#FS$$CMP] ; [] |4314| 
        CMPB      AL,#0                 ; [CPU_] |4314| 
        B         $C$L708,EQ            ; [CPU_] |4314| 
        ; branchcc occurs ; [] |4314| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4315,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4315| 
        MOV       *-SP[59],AL           ; [CPU_] |4315| 
$C$L708:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4317,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4317| 
        MOV       *XAR1++,AL            ; [CPU_] |4317| 
	.dwpsn	file "../Source/prod.c",line 4306,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4306| 
	.dwpsn	file "../Source/prod.c",line 4317,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4317| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4317| 
	.dwpsn	file "../Source/prod.c",line 4306,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4306| 
        SUBB      XAR6,#1               ; [CPU_U] |4306| 
        ADDB      ACC,#10               ; [CPU_] |4306| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4306| 
        MOVZ      AR0,AR6               ; [CPU_] |4306| 
        MOV       *-SP[47],AR6          ; [CPU_] |4306| 
        CMP       AR0,#-1               ; [CPU_] |4306| 
        B         $C$L704,NEQ           ; [CPU_] |4306| 
        ; branchcc occurs ; [] |4306| 
        B         $C$L743,UNC           ; [CPU_] |4306| 
        ; branch occurs ; [] |4306| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4292,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4292| 
        MOV       AH,#16672             ; [CPU_] |4292| 
        MOVL      XAR0,#46              ; [CPU_] |4292| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4292| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4292| 
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4292| 
        ; call occurs [#FS$$MPY] ; [] |4292| 
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4292| 
        ; call occurs [#FS$$TOU] ; [] |4292| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4292| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4292| 
	.dwpsn	file "../Source/prod.c",line 4293,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4293| 
	.dwpsn	file "../Source/prod.c",line 4292,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4292| 
	.dwpsn	file "../Source/prod.c",line 4293,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4293| 
        MOV       *-SP[61],#4           ; [CPU_] |4293| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4295| 
        ; branch occurs ; [] |4295| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4274,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4274| 
        MOV       AH,#16672             ; [CPU_] |4274| 
        MOVL      XAR0,#46              ; [CPU_] |4274| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4274| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4274| 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4274| 
        ; call occurs [#FS$$MPY] ; [] |4274| 
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4274| 
        ; call occurs [#FS$$TOU] ; [] |4274| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4274| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4274| 
	.dwpsn	file "../Source/prod.c",line 4275,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4274,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4274| 
	.dwpsn	file "../Source/prod.c",line 4275,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4277,column 5,is_stmt,isa 0
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4277| 
        ; call occurs [#_ad7738_getmon] ; [] |4277| 
	.dwpsn	file "../Source/prod.c",line 4278,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4278| 
        MOV       AH,#18371             ; [CPU_] |4278| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4278| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4278| 
        ADDL      ACC,XAR4              ; [CPU_] |4278| 
        SUBB      ACC,#130              ; [CPU_] |4278| 
        MOVL      XAR4,ACC              ; [CPU_] |4278| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4278| 
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4278| 
        ; call occurs [#FS$$MPY] ; [] |4278| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4278| 
        ; call occurs [#FS$$TOL] ; [] |4278| 
	.dwpsn	file "../Source/prod.c",line 4279,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4279| 
	.dwpsn	file "../Source/prod.c",line 4278,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4278| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4278| 
	.dwpsn	file "../Source/prod.c",line 4279,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4279| 
	.dwpsn	file "../Source/prod.c",line 4278,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4278| 
	.dwpsn	file "../Source/prod.c",line 4279,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4279| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4282,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4282| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4281,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4281| 
        ANDB      AL,#0xff              ; [CPU_] |4281| 
        MOV       *XAR4++,AL            ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4282,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4282| 
        LSR       AL,8                  ; [CPU_] |4282| 
        MOV       *XAR4++,AL            ; [CPU_] |4282| 
	.dwpsn	file "../Source/prod.c",line 4280,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4280| 
        ; branchcc occurs ; [] |4280| 
        B         $C$L743,UNC           ; [CPU_] |4280| 
        ; branch occurs ; [] |4280| 
$C$L712:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4261,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4261| 
        MOV       *-SP[61],AL           ; [CPU_] |4261| 
	.dwpsn	file "../Source/prod.c",line 4260,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4260| 
        MOV       *-SP[47],AL           ; [CPU_] |4260| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4261,column 6,is_stmt,isa 0
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4261| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4261| 
        MOV       *XAR1++,AL            ; [CPU_] |4261| 
	.dwpsn	file "../Source/prod.c",line 4260,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4260| 
	.dwpsn	file "../Source/prod.c",line 4261,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4261| 
	.dwpsn	file "../Source/prod.c",line 4260,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4260| 
        B         $C$L713,LT            ; [CPU_] |4260| 
        ; branchcc occurs ; [] |4260| 
        B         $C$L743,UNC           ; [CPU_] |4260| 
        ; branch occurs ; [] |4260| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4238,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4238| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4238| 
        MOVL      XAR6,ACC              ; [CPU_] |4238| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4238| 
        MOV       *XAR4++,AL            ; [CPU_] |4238| 
	.dwpsn	file "../Source/prod.c",line 4239,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4239| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4239| 
        MOVL      XAR6,ACC              ; [CPU_] |4239| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4239| 
        MOV       *XAR4++,AL            ; [CPU_] |4239| 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4240| 
        ADD       ACC,#199 << 4         ; [CPU_] |4240| 
        MOVL      XAR6,ACC              ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4242,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4242| 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4240| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4240| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4244,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4244| 
        ANDB      AL,#0xff              ; [CPU_] |4244| 
        MOV       *XAR4++,AL            ; [CPU_] |4244| 
	.dwpsn	file "../Source/prod.c",line 4245,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4245| 
        LSR       AL,8                  ; [CPU_] |4245| 
        MOV       *XAR4++,AL            ; [CPU_] |4245| 
	.dwpsn	file "../Source/prod.c",line 4243,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4243| 
        ; branchcc occurs ; [] |4243| 
	.dwpsn	file "../Source/prod.c",line 4248,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4248| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4250,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4250| 
        ANDB      AL,#0xff              ; [CPU_] |4250| 
        MOV       *XAR4++,AL            ; [CPU_] |4250| 
	.dwpsn	file "../Source/prod.c",line 4251,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4251| 
        LSR       AL,8                  ; [CPU_] |4251| 
        MOV       *XAR4++,AL            ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4249,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4249| 
        ; branchcc occurs ; [] |4249| 
	.dwpsn	file "../Source/prod.c",line 4239,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4239| 
        ADD       *-SP[61],#11          ; [CPU_] |4239| 
	.dwpsn	file "../Source/prod.c",line 4237,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4237| 
        ADDB      XAR0,#8               ; [CPU_] |4237| 
        ADDB      XAR7,#8               ; [CPU_] |4237| 
        SUBB      XAR6,#1               ; [CPU_U] |4237| 
        MOVZ      AR3,AR6               ; [CPU_] |4237| 
        CMP       AR6,#-1               ; [CPU_] |4237| 
        B         $C$L715,NEQ           ; [CPU_] |4237| 
        ; branchcc occurs ; [] |4237| 
        B         $C$L743,UNC           ; [CPU_] |4237| 
        ; branch occurs ; [] |4237| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4184,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4184| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4184| 
        MOVL      XAR6,ACC              ; [CPU_] |4184| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4184| 
        MOV       *XAR4++,AL            ; [CPU_] |4184| 
	.dwpsn	file "../Source/prod.c",line 4185,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4185| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4185| 
        MOVL      XAR6,ACC              ; [CPU_] |4185| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4189,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4189| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4185,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4185| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4196,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4196| 
        ANDB      AL,#0xff              ; [CPU_] |4196| 
        MOV       *XAR4++,AL            ; [CPU_] |4196| 
	.dwpsn	file "../Source/prod.c",line 4197,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4197| 
        LSR       AL,8                  ; [CPU_] |4197| 
        MOV       *XAR4++,AL            ; [CPU_] |4197| 
	.dwpsn	file "../Source/prod.c",line 4195,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR0--         ; [CPU_] |4195| 
        ; branchcc occurs ; [] |4195| 
	.dwpsn	file "../Source/prod.c",line 4202,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4202| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4209,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4209| 
        ANDB      AL,#0xff              ; [CPU_] |4209| 
        MOV       *XAR4++,AL            ; [CPU_] |4209| 
	.dwpsn	file "../Source/prod.c",line 4210,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4210| 
        LSR       AL,8                  ; [CPU_] |4210| 
        MOV       *XAR4++,AL            ; [CPU_] |4210| 
	.dwpsn	file "../Source/prod.c",line 4208,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4208| 
        ; branchcc occurs ; [] |4208| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4215,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4215| 
        ANDB      AL,#0xff              ; [CPU_] |4215| 
        MOV       *XAR4++,AL            ; [CPU_] |4215| 
	.dwpsn	file "../Source/prod.c",line 4216,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4216| 
        LSR       AL,8                  ; [CPU_] |4216| 
        MOV       *XAR4++,AL            ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4214,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4214| 
        ; branchcc occurs ; [] |4214| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4221,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4221| 
        ANDB      AL,#0xff              ; [CPU_] |4221| 
        MOV       *XAR4++,AL            ; [CPU_] |4221| 
	.dwpsn	file "../Source/prod.c",line 4222,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4222| 
        LSR       AL,8                  ; [CPU_] |4222| 
        MOV       *XAR4++,AL            ; [CPU_] |4222| 
	.dwpsn	file "../Source/prod.c",line 4220,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4220| 
        ; branchcc occurs ; [] |4220| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4227,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4227| 
        ANDB      AL,#0xff              ; [CPU_] |4227| 
        MOV       *XAR4++,AL            ; [CPU_] |4227| 
	.dwpsn	file "../Source/prod.c",line 4228,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4228| 
        LSR       AL,8                  ; [CPU_] |4228| 
        MOV       *XAR4++,AL            ; [CPU_] |4228| 
	.dwpsn	file "../Source/prod.c",line 4226,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4226| 
        ; branchcc occurs ; [] |4226| 
	.dwpsn	file "../Source/prod.c",line 4183,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4183| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4183| 
        MOVL      XAR0,#88              ; [CPU_] |4183| 
        ADDB      ACC,#12               ; [CPU_] |4183| 
        ADDB      XAR1,#12              ; [CPU_] |4183| 
        ADDB      XAR7,#12              ; [CPU_] |4183| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4183| 
	.dwpsn	file "../Source/prod.c",line 4185,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4183,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4183| 
	.dwpsn	file "../Source/prod.c",line 4185,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4183,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4183| 
        SUBB      XAR0,#1               ; [CPU_U] |4183| 
        ADDB      ACC,#12               ; [CPU_] |4183| 
        MOVL      XT,ACC                ; [CPU_] |4183| 
        MOV       *-SP[47],AR0          ; [CPU_] |4183| 
        MOVL      ACC,P                 ; [CPU_] |4183| 
        ADDB      ACC,#12               ; [CPU_] |4183| 
        MOVL      P,ACC                 ; [CPU_] |4183| 
        CMP       AR0,#-1               ; [CPU_] |4183| 
        B         $C$L719,NEQ           ; [CPU_] |4183| 
        ; branchcc occurs ; [] |4183| 
        B         $C$L743,UNC           ; [CPU_] |4183| 
        ; branch occurs ; [] |4183| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4176| 
        MOV       *-SP[61],AL           ; [CPU_] |4176| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4174,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4174| 
        MOV       *XAR4++,AL            ; [CPU_] |4174| 
	.dwpsn	file "../Source/prod.c",line 4175,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4175| 
        MOV       *XAR4++,AL            ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4173,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4173| 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4173,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4173| 
        ; branchcc occurs ; [] |4173| 
        B         $C$L743,UNC           ; [CPU_] |4173| 
        ; branch occurs ; [] |4173| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4164,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4164| 
        MOVB      XAR0,#36              ; [CPU_] |4164| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4164| 
        MOVL      XAR0,#80              ; [CPU_] |4164| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4164| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4164| 
	.dwpsn	file "../Source/prod.c",line 4166,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4166| 
	.dwpsn	file "../Source/prod.c",line 4164,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4164| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4166,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4166| 
	.dwpsn	file "../Source/prod.c",line 4165,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4165| 
        ; branch occurs ; [] |4165| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4150,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4150| 
        MOVB      XAR0,#38              ; [CPU_] |4150| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4150| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4150| 
	.dwpsn	file "../Source/prod.c",line 4151,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4150,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4150| 
	.dwpsn	file "../Source/prod.c",line 4151,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4150,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4150| 
	.dwpsn	file "../Source/prod.c",line 4151,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4151| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4156,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4156| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4155,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4155| 
        ANDB      AL,#0xff              ; [CPU_] |4155| 
        MOV       *XAR4++,AL            ; [CPU_] |4155| 
	.dwpsn	file "../Source/prod.c",line 4156,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4156| 
        LSR       AL,8                  ; [CPU_] |4156| 
        MOV       *XAR4++,AL            ; [CPU_] |4156| 
	.dwpsn	file "../Source/prod.c",line 4154,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4154| 
        ; branchcc occurs ; [] |4154| 
        B         $C$L743,UNC           ; [CPU_] |4154| 
        ; branch occurs ; [] |4154| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4140| 
        MOV       *-SP[61],AL           ; [CPU_] |4140| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4139,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4139| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4139,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4139| 
        ; branchcc occurs ; [] |4139| 
        B         $C$L743,UNC           ; [CPU_] |4139| 
        ; branch occurs ; [] |4139| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4123,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4123| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4125,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4125| 
        ANDB      AL,#0xff              ; [CPU_] |4125| 
        MOV       *XAR4++,AL            ; [CPU_] |4125| 
	.dwpsn	file "../Source/prod.c",line 4126,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4126| 
        LSR       AL,8                  ; [CPU_] |4126| 
        MOV       *XAR4++,AL            ; [CPU_] |4126| 
	.dwpsn	file "../Source/prod.c",line 4124,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4124| 
        ; branchcc occurs ; [] |4124| 
	.dwpsn	file "../Source/prod.c",line 4122,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4126,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4126| 
	.dwpsn	file "../Source/prod.c",line 4122,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4122| 
        ; branchcc occurs ; [] |4122| 
	.dwpsn	file "../Source/prod.c",line 4131,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4131| 
        MOVL      ACC,XAR5              ; [CPU_] |4131| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4131| 
        MOVL      XAR6,ACC              ; [CPU_] |4131| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4131| 
        ANDB      AL,#0xff              ; [CPU_] |4131| 
        MOV       *XAR4++,AL            ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4132,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4132| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4132| 
        MOVL      XAR5,ACC              ; [CPU_] |4132| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4132| 
        LSR       AL,8                  ; [CPU_] |4132| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4132| 
$C$L735:    
        ADD       *-SP[61],#2           ; [CPU_] |4132| 
	.dwpsn	file "../Source/prod.c",line 4135,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4135| 
        ; branch occurs ; [] |4135| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3777,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3777| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3777| 
        MOVZ      AR4,AR4               ; [CPU_] |3777| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3779,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3779| 
        ANDB      AL,#0xff              ; [CPU_] |3779| 
        MOV       *XAR1++,AL            ; [CPU_] |3779| 
	.dwpsn	file "../Source/prod.c",line 3780,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3780| 
        LSR       AL,8                  ; [CPU_] |3780| 
        MOV       *XAR1++,AL            ; [CPU_] |3780| 
	.dwpsn	file "../Source/prod.c",line 3778,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3778| 
        ; branchcc occurs ; [] |3778| 
	.dwpsn	file "../Source/prod.c",line 3784,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3784| 
        ANDB      AL,#0xff              ; [CPU_] |3784| 
	.dwpsn	file "../Source/prod.c",line 3785,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3785| 
	.dwpsn	file "../Source/prod.c",line 3784,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3784| 
	.dwpsn	file "../Source/prod.c",line 3785,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3785| 
        LSR       AL,8                  ; [CPU_] |3785| 
        MOV       *XAR1++,AL            ; [CPU_] |3785| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3785| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3789,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3789| 
        ANDB      AL,#0xff              ; [CPU_] |3789| 
        MOV       *XAR1++,AL            ; [CPU_] |3789| 
	.dwpsn	file "../Source/prod.c",line 3790,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3790| 
        LSR       AL,8                  ; [CPU_] |3790| 
        MOV       *XAR1++,AL            ; [CPU_] |3790| 
	.dwpsn	file "../Source/prod.c",line 3788,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3788| 
        ; branchcc occurs ; [] |3788| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3794,column 5,is_stmt,isa 0
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("_strlen")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3794| 
        ; call occurs [#_strlen] ; [] |3794| 
	.dwpsn	file "../Source/prod.c",line 3795,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3795| 
	.dwpsn	file "../Source/prod.c",line 3780,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3780| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3796| 
        B         $C$L743,EQ            ; [CPU_] |3796| 
        ; branchcc occurs ; [] |3796| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3795,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3795| 
	.dwpsn	file "../Source/prod.c",line 3796,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3796| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3797,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3796| 
	.dwpsn	file "../Source/prod.c",line 3797,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3797| 
        INC       *-SP[61]              ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3796,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3796| 
        B         $C$L739,HI            ; [CPU_] |3796| 
        ; branchcc occurs ; [] |3796| 
        B         $C$L743,UNC           ; [CPU_] |3796| 
        ; branch occurs ; [] |3796| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3763,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3763| 
        MOVL      XAR0,#66              ; [CPU_] |3763| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3763| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3763| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3763| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3763| 
	.dwpsn	file "../Source/prod.c",line 3766,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3766| 
        ; branch occurs ; [] |3766| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3757,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3757| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3757| 
$C$L742:    
        MOV       *-SP[61],#3           ; [CPU_] |3757| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5748,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5748| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5748| 
        ; call occurs [#_scia_send_bin] ; [] |5748| 
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5750| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5750| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5750| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5750| 
        CMPB      AL,#240               ; [CPU_] |5750| 
        B         $C$L634,NEQ           ; [CPU_] |5750| 
        ; branchcc occurs ; [] |5750| 
	.dwpsn	file "../Source/prod.c",line 5751,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5751| 
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("_delay_us")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5751| 
        ; call occurs [#_delay_us] ; [] |5751| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5752,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5752| 
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5752| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5752| 
        B         $C$L634,UNC           ; [CPU_] |5752| 
        ; branch occurs ; [] |5752| 
	.dwattr $C$DW$277, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$277, DW_AT_TI_end_line(0x1697)
	.dwattr $C$DW$277, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$277

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1486	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1486, DW_AT_name("get_fattime")
	.dwattr $C$DW$1486, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1486, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1486, DW_AT_external
	.dwattr $C$DW$1486, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1486, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1486, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1486, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1486, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1486, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1486, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1486, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1486

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 11 2019",0
	.align	2
$C$FSL62:	.string	"16:27:31",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resettare
	.global	_ad7738_resetlimit
	.global	_ad7738_resetpeak
	.global	_ad7738_resetvall
	.global	_mcbsp_xmit
	.global	_latch_dac
	.global	_ad7738_setcal
	.global	_ad7738_settemp
	.global	_conf_default
	.global	_ad7738_init
	.global	_SPICANReadSetT0Message
	.global	_SPICAN_T0_RTS
	.global	_dac_setmode
	.global	_ad7738_monclr
	.global	_maf_rst
	.global	_velf_rst
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_SPICANInit
	.global	_extio_init
	.global	_gpio_init
	.global	_ssr_set
	.global	_uart_set_dir
	.global	_lcd_init
	.global	_lcd_clear
	.global	_led_init
	.global	_led_set
	.global	_InitPieVectTable
	.global	_delay_us
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_sys_init
	.global	_lcd_dputs
	.global	_lcd_puts
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_SPICANReadStat
	.global	_scia_send_bin
	.global	_scia_puts
	.global	_sprintf
	.global	_SPICANRead
	.global	_scia_getparam
	.global	_port4004
	.global	_secureRamFuncs_runstart
	.global	_atoi
	.global	_port400e
	.global	_Flash28_API_LoadEnd
	.global	_Flash28_API_LoadStart
	.global	_secureRamFuncs_loadstart
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadend
	.global	_ad7738_tempstart
	.global	_conf_write
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_getlimitchgd
	.global	_ad7738_getlimitst
	.global	_conf_read
	.global	_tagdetect
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_strtod
	.global	_atol
	.global	_ad7738_getmon
	.global	_ds1820read
	.global	_prod_getnext
	.global	_Flash_CPUScaleFactor
	.global	_Flash_CallbackPtr
	.global	_ad7738_getvall
	.global	_ad7738_getpeak
	.global	_strlen
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1488	.dwtag  DW_TAG_member
	.dwattr $C$DW$1488, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1488, DW_AT_name("fs_type")
	.dwattr $C$DW$1488, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1488, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1488, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1489	.dwtag  DW_TAG_member
	.dwattr $C$DW$1489, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1489, DW_AT_name("drv")
	.dwattr $C$DW$1489, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1489, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1489, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1490	.dwtag  DW_TAG_member
	.dwattr $C$DW$1490, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1490, DW_AT_name("csize")
	.dwattr $C$DW$1490, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1490, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1490, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1491	.dwtag  DW_TAG_member
	.dwattr $C$DW$1491, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1491, DW_AT_name("n_fats")
	.dwattr $C$DW$1491, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1491, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1491, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1492	.dwtag  DW_TAG_member
	.dwattr $C$DW$1492, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1492, DW_AT_name("wflag")
	.dwattr $C$DW$1492, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1492, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1492, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1493	.dwtag  DW_TAG_member
	.dwattr $C$DW$1493, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1493, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1493, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1493, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1493, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1494, DW_AT_name("id")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1495, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1496, DW_AT_name("last_clust")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1497, DW_AT_name("free_clust")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1498, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1499, DW_AT_name("cdir")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1500, DW_AT_name("n_fatent")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1501, DW_AT_name("fsize")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1502, DW_AT_name("fatbase")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1503, DW_AT_name("dirbase")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1504, DW_AT_name("database")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1505, DW_AT_name("winsect")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1506, DW_AT_name("win")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1507, DW_AT_name("fs")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1508, DW_AT_name("id")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1509, DW_AT_name("flag")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1510, DW_AT_name("pad1")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1511, DW_AT_name("fptr")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1512, DW_AT_name("fsize")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1513, DW_AT_name("org_clust")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1514, DW_AT_name("curr_clust")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1515, DW_AT_name("dsect")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1516, DW_AT_name("dir_sect")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1517, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1518, DW_AT_name("cltbl")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1519, DW_AT_name("buf")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1520, DW_AT_name("year")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1521, DW_AT_name("month")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1522, DW_AT_name("mday")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1523, DW_AT_name("wday")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1524, DW_AT_name("hour")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1525, DW_AT_name("min")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1526, DW_AT_name("sec")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1527, DW_AT_name("adc")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1528, DW_AT_name("adw")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1529, DW_AT_name("pos")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1530, DW_AT_name("vel")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1531, DW_AT_name("ci")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1532, DW_AT_name("bslope")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1533, DW_AT_name("tcx")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1534, DW_AT_name("tcy")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1535, DW_AT_name("tcz")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1536	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1536, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1537, DW_AT_name("what")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1538, DW_AT_name("ch")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1539, DW_AT_name("dslopep")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1540, DW_AT_name("dslopen")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1541, DW_AT_name("dint")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1542, DW_AT_name("gain")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1543, DW_AT_name("offset")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1544	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1544, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1545, DW_AT_name("what")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("ch")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("adec")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1548	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1548, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1549, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1549, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1549, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1550, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1550, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1550, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1551, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1551, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1552, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1552, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1553, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1553, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1554, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1554, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1556, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1556, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1557, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1557, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1557, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("all")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1566, DW_AT_name("bit")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1574, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1574, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1575, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1575, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1575, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("all")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1584, DW_AT_name("bit")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("all")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1602, DW_AT_name("bit")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("all")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1620, DW_AT_name("bit")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("all")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1638, DW_AT_name("bit")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("all")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1656, DW_AT_name("bit")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("all")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1674, DW_AT_name("bit")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("all")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1692, DW_AT_name("bit")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("rsvd1")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("rsvd2")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("all")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1700, DW_AT_name("bit")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("rsvd1")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("rsvd2")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("all")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1708, DW_AT_name("bit")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("rsvd1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("rsvd2")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("all")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1716, DW_AT_name("bit")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("rsvd1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("rsvd2")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("all")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1724, DW_AT_name("bit")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("rsvd1")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("all")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1730, DW_AT_name("bit")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("rsvd1")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("all")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1736, DW_AT_name("bit")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("rsvd1")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("all")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1742, DW_AT_name("bit")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("rsvd1")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("all")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1748, DW_AT_name("bit")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("all")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1766, DW_AT_name("bit")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("all")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1784, DW_AT_name("bit")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("all")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1802, DW_AT_name("bit")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("all")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1820, DW_AT_name("bit")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("rsvd1")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("rsvd2")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("all")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1826, DW_AT_name("bit")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("rsvd1")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("rsvd2")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("all")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1832, DW_AT_name("bit")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("rsvd1")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("rsvd2")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("all")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1838, DW_AT_name("bit")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("rsvd1")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1840, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1840, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1841, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1841, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("rsvd2")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1842, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1842, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("all")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1844, DW_AT_name("bit")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1845, DW_AT_name("GPADAT")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1846, DW_AT_name("GPASET")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1847, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1848, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1849, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1850, DW_AT_name("GPBSET")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1851, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1852, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1853, DW_AT_name("rsvd1")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1854, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1855, DW_AT_name("GPDSET")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1856, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1857, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1858, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1859, DW_AT_name("GPESET")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1860, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1861, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1862, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1863, DW_AT_name("GPFSET")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1864, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1865, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1866, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1867, DW_AT_name("GPGSET")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1868, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1869, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1870, DW_AT_name("rsvd2")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1871	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1871)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1872, DW_AT_name("what")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1873, DW_AT_name("ch")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1874, DW_AT_name("limit")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1875, DW_AT_name("limits")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1876, DW_AT_name("limitr")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1877	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1877, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1878, DW_AT_name("usn")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1879, DW_AT_name("uname")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1880, DW_AT_name("rxdir")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1881, DW_AT_name("baud")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1882, DW_AT_name("tagiden")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1883, DW_AT_name("tarepersist")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1884, DW_AT_name("filter")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1885, DW_AT_name("diffwin")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1886, DW_AT_name("ch")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1887, DW_AT_name("sensor")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1888, DW_AT_name("vfd")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1889, DW_AT_name("dac")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1890, DW_AT_name("lim")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1891, DW_AT_name("velfilter")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1892, DW_AT_name("cntperin")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1893, DW_AT_name("magic")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1894	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1894)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1895, DW_AT_name("ssn")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1896, DW_AT_name("slbl")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1897, DW_AT_name("tagid")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1898, DW_AT_name("method")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1899, DW_AT_name("date")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1900, DW_AT_name("range")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1901, DW_AT_name("unit")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1902, DW_AT_name("ounit")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1903, DW_AT_name("ufactor")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1904, DW_AT_name("points")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1905, DW_AT_name("mass")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1906, DW_AT_name("adc")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1907, DW_AT_name("slope")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1908, DW_AT_name("intercept")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1909, DW_AT_name("shunt")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1910, DW_AT_name("base")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1911, DW_AT_name("tare")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1912, DW_AT_name("dacgain")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1913, DW_AT_name("dacoff")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1914, DW_AT_name("ch")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1915	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1915, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1916	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1916)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1917	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1917, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1918	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$6)

$C$DW$T$174	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$1918)


$C$DW$T$175	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_byte_size(0x101)
$C$DW$1919	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1919, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$175

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1920	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$10)

$C$DW$T$197	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$1920)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1921	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$36)

$C$DW$1922	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$1921)

$C$DW$T$297	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$1922)

$C$DW$1923	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$36)

$C$DW$T$298	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1923)


$C$DW$T$299	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$T$299, DW_AT_language(DW_LANG_C)
$C$DW$1924	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$299


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1925	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1925, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$306	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$306, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$306, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$306, DW_AT_byte_size(0x03)
$C$DW$1926	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1926, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$306

$C$DW$T$307	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1927	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1927, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1928	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1928, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1929	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1929, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1930	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$12)

$C$DW$T$333	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$333, DW_AT_type(*$C$DW$1930)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1931	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1931, DW_AT_type(*$C$DW$T$90)

$C$DW$T$336	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$336, DW_AT_type(*$C$DW$1931)


$C$DW$T$337	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$337, DW_AT_type(*$C$DW$T$336)
	.dwattr $C$DW$T$337, DW_AT_language(DW_LANG_C)
$C$DW$1932	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$337

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$352	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$352, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$352, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$352, DW_AT_byte_size(0x08)
$C$DW$1933	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1933, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$352

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1934	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1934, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1935	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1935, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1936	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1936, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1937	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1937, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$371	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$371, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$371, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$371, DW_AT_byte_size(0x06)
$C$DW$1938	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1938, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$371

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1939	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1939, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1940	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1940, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$357	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$357, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$357, DW_AT_address_class(0x20)

$C$DW$1941	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1941, DW_AT_type(*$C$DW$T$5)

$C$DW$T$178	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$1941)

$C$DW$T$179	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$T$179, DW_AT_address_class(0x20)


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
$C$DW$1942	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$372


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x400)
$C$DW$1943	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1943, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$373


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$374, DW_AT_byte_size(0x08)
$C$DW$1944	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1944, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$374


$C$DW$T$379	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$379, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$379, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$379, DW_AT_byte_size(0x64)
$C$DW$1945	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1945, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$379


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x40)
$C$DW$1946	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1946, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$380

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1947	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1947, DW_AT_name("AL")
	.dwattr $C$DW$1947, DW_AT_location[DW_OP_reg0]

$C$DW$1948	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1948, DW_AT_name("AH")
	.dwattr $C$DW$1948, DW_AT_location[DW_OP_reg1]

$C$DW$1949	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1949, DW_AT_name("PL")
	.dwattr $C$DW$1949, DW_AT_location[DW_OP_reg2]

$C$DW$1950	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1950, DW_AT_name("PH")
	.dwattr $C$DW$1950, DW_AT_location[DW_OP_reg3]

$C$DW$1951	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1951, DW_AT_name("SP")
	.dwattr $C$DW$1951, DW_AT_location[DW_OP_reg20]

$C$DW$1952	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1952, DW_AT_name("XT")
	.dwattr $C$DW$1952, DW_AT_location[DW_OP_reg21]

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("T")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg22]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("ST0")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg23]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("ST1")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_reg24]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("PC")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_reg25]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("RPC")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg26]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("FP")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg28]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("DP")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg29]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("SXM")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_reg30]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("PM")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_reg31]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("OVM")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("PAGE0")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("AMODE")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("INTM")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("IFR")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("IER")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("V")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("VOL")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("AR0")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_reg4]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("XAR0")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_reg5]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("AR1")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_reg6]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("XAR1")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_reg7]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("AR2")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_reg8]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("XAR2")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_reg9]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("AR3")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_reg10]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("XAR3")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_reg11]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("AR4")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_reg12]

$C$DW$1980	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1980, DW_AT_name("XAR4")
	.dwattr $C$DW$1980, DW_AT_location[DW_OP_reg13]

$C$DW$1981	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1981, DW_AT_name("AR5")
	.dwattr $C$DW$1981, DW_AT_location[DW_OP_reg14]

$C$DW$1982	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1982, DW_AT_name("XAR5")
	.dwattr $C$DW$1982, DW_AT_location[DW_OP_reg15]

$C$DW$1983	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1983, DW_AT_name("AR6")
	.dwattr $C$DW$1983, DW_AT_location[DW_OP_reg16]

$C$DW$1984	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1984, DW_AT_name("XAR6")
	.dwattr $C$DW$1984, DW_AT_location[DW_OP_reg17]

$C$DW$1985	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1985, DW_AT_name("AR7")
	.dwattr $C$DW$1985, DW_AT_location[DW_OP_reg18]

$C$DW$1986	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1986, DW_AT_name("XAR7")
	.dwattr $C$DW$1986, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

