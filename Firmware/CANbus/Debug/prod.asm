;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.6.LTS *
;* Date/Time created: Mon Jan 27 14:09:04 2020                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.6.LTS Copyright (c) 1996-2017 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\antons\workspace_v6_1\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("velf_rst")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
	.dwendtag $C$DW$1


$C$DW$2	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$2, DW_AT_name("dac_setmode")
	.dwattr $C$DW$2, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$2, DW_AT_declaration
	.dwattr $C$DW$2, DW_AT_external
$C$DW$3	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$3, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$2


$C$DW$4	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$4, DW_AT_name("ad7738_init")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
	.dwendtag $C$DW$4


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("maf_rst")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwendtag $C$DW$5


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("SPICANWaitForTXBuf")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$6


$C$DW$8	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$8, DW_AT_name("SPICANCheckInts")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("_SPICANCheckInts")
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$8


$C$DW$10	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$10, DW_AT_name("SPICANInit")
	.dwattr $C$DW$10, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$10, DW_AT_declaration
	.dwattr $C$DW$10, DW_AT_external
	.dwendtag $C$DW$10


$C$DW$11	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$11, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$36)

$C$DW$13	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$13, DW_AT_type(*$C$DW$T$36)

$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$11


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("conf_default")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwendtag $C$DW$15


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$11)

$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$16


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("latch_dac")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
	.dwendtag $C$DW$19


$C$DW$20	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$20, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$20, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$20, DW_AT_declaration
	.dwattr $C$DW$20, DW_AT_external
	.dwendtag $C$DW$20


$C$DW$21	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$21, DW_AT_name("configCAN")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwendtag $C$DW$21


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
$C$DW$23	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$23, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$22


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("ds1820start")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$25


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27


$C$DW$28	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$28, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$28


$C$DW$30	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$30, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$30


$C$DW$32	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$32, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
$C$DW$33	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$32


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
$C$DW$35	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$34


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("sys_init")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("flash_init")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("delay_us")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$38


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("reboot")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwendtag $C$DW$40


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$41


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("extio_init")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwendtag $C$DW$43


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("shunt_switch")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$44


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("ssr_set")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$36)

$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$46

$C$DW$49	.dwtag  DW_TAG_variable
	.dwattr $C$DW$49, DW_AT_name("LPV")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external

$C$DW$50	.dwtag  DW_TAG_variable
	.dwattr $C$DW$50, DW_AT_name("METHOD")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external

$C$DW$51	.dwtag  DW_TAG_variable
	.dwattr $C$DW$51, DW_AT_name("BAUD")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$339)
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external

$C$DW$52	.dwtag  DW_TAG_variable
	.dwattr $C$DW$52, DW_AT_name("INTERFACE")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwendtag $C$DW$53


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54

$C$DW$55	.dwtag  DW_TAG_variable
	.dwattr $C$DW$55, DW_AT_name("UNITS")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("InitECan")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwendtag $C$DW$56

$C$DW$57	.dwtag  DW_TAG_variable
	.dwattr $C$DW$57, DW_AT_name("BITMAP")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$300)
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("lcd_clear")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwendtag $C$DW$58


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("lcd_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("scia_init")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$60


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("lcd_puts")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$163)

$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$62


$C$DW$65	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$65, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$65, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$65, DW_AT_declaration
	.dwattr $C$DW$65, DW_AT_external
$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$163)

$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$65


$C$DW$68	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$68, DW_AT_name("led_init")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
	.dwendtag $C$DW$68


$C$DW$69	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$69, DW_AT_name("gpio_init")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$69, DW_AT_declaration
	.dwattr $C$DW$69, DW_AT_external
	.dwendtag $C$DW$69


$C$DW$70	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$70, DW_AT_name("led_set")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$36)

$C$DW$72	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$70

$C$DW$73	.dwtag  DW_TAG_variable
	.dwattr $C$DW$73, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external


$C$DW$74	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$74, DW_AT_name("getModVoltage")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_getModVoltage")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external
	.dwendtag $C$DW$74


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("getShelfMaxTemp")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_getShelfMaxTemp")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
	.dwendtag $C$DW$75

$C$DW$76	.dwtag  DW_TAG_variable
	.dwattr $C$DW$76, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external


$C$DW$77	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$77, DW_AT_name("canVarInit")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_canVarInit")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
	.dwendtag $C$DW$77


$C$DW$78	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$78, DW_AT_name("getSystemCapVoltageF")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("_getSystemCapVoltageF")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
	.dwendtag $C$DW$78

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$79	.dwtag  DW_TAG_variable
	.dwattr $C$DW$79, DW_AT_name("cmd_mode")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$79, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$79, DW_AT_external

$C$DW$80	.dwtag  DW_TAG_variable
	.dwattr $C$DW$80, DW_AT_name("port4004")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external

$C$DW$81	.dwtag  DW_TAG_variable
	.dwattr $C$DW$81, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$82	.dwtag  DW_TAG_variable
	.dwattr $C$DW$82, DW_AT_name("autoidchanged")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$82, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$82, DW_AT_external


$C$DW$83	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$83, DW_AT_name("getShelfMinTempID")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_getShelfMinTempID")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwendtag $C$DW$83


$C$DW$84	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$84, DW_AT_name("getShelfMinTemp")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("_getShelfMinTemp")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwendtag $C$DW$84


$C$DW$85	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$85, DW_AT_name("getSystemOutCurrentF")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("_getSystemOutCurrentF")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwendtag $C$DW$85

$C$DW$86	.dwtag  DW_TAG_variable
	.dwattr $C$DW$86, DW_AT_name("port400e")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("getShelfMaxTempID")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_getShelfMaxTempID")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwendtag $C$DW$87


$C$DW$88	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$88, DW_AT_name("getSystemCapVoltage")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("_getSystemCapVoltage")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
	.dwendtag $C$DW$88

$C$DW$89	.dwtag  DW_TAG_variable
	.dwattr $C$DW$89, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external

$C$DW$90	.dwtag  DW_TAG_variable
	.dwattr $C$DW$90, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external

$C$DW$91	.dwtag  DW_TAG_variable
	.dwattr $C$DW$91, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external


$C$DW$92	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$92, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external
	.dwendtag $C$DW$92


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("SPICANRead")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$93


$C$DW$95	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$95, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
$C$DW$96	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$163)

$C$DW$97	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$95


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("conf_write")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("scia_getparam")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
$C$DW$101	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$163)

$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$163)

$C$DW$103	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$100


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("atoi")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
$C$DW$106	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$105


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("scia_puts")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
$C$DW$108	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$107


$C$DW$109	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$109, DW_AT_name("conf_read")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
	.dwendtag $C$DW$109


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("sprintf")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$163)

$C$DW$112	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$180)

$C$DW$113	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$110


$C$DW$114	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$114, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$163)

$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$114


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
	.dwendtag $C$DW$117


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
	.dwendtag $C$DW$118


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("tagdetect")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$119


$C$DW$121	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$121, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$121, DW_AT_declaration
	.dwattr $C$DW$121, DW_AT_external
	.dwendtag $C$DW$121


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
	.dwendtag $C$DW$122


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$123


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
	.dwendtag $C$DW$125


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("strlen")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
$C$DW$127	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$126

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$128	.dwtag  DW_TAG_variable
	.dwattr $C$DW$128, DW_AT_name("VEL_U")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$128, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$128, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$129	.dwtag  DW_TAG_variable
	.dwattr $C$DW$129, DW_AT_name("POS_U")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$129, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$129, DW_AT_external


$C$DW$130	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$130, DW_AT_name("memcpy")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external
$C$DW$131	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$3)

$C$DW$132	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$148)

$C$DW$133	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$130


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
$C$DW$135	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$134


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("strtod")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
$C$DW$137	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$180)

$C$DW$138	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$359)

	.dwendtag $C$DW$136


$C$DW$139	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$139, DW_AT_name("atol")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$139, DW_AT_declaration
	.dwattr $C$DW$139, DW_AT_external
$C$DW$140	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$139


$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("ds1820read")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
	.dwendtag $C$DW$141


$C$DW$142	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$142, DW_AT_name("prod_getnext")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$142, DW_AT_declaration
	.dwattr $C$DW$142, DW_AT_external
	.dwendtag $C$DW$142


$C$DW$143	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$143, DW_AT_name("prod_getavail")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$143, DW_AT_declaration
	.dwattr $C$DW$143, DW_AT_external
	.dwendtag $C$DW$143


$C$DW$144	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$144, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external
	.dwendtag $C$DW$144


$C$DW$145	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$145, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external
	.dwendtag $C$DW$145


$C$DW$146	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$146, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$146, DW_AT_declaration
	.dwattr $C$DW$146, DW_AT_external
	.dwendtag $C$DW$146

$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$147, DW_AT_declaration
	.dwattr $C$DW$147, DW_AT_external

$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external


$C$DW$149	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$149, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external
	.dwendtag $C$DW$149

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("autoid")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$150, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$150, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("tagwasthere")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$151, DW_AT_external


$C$DW$152	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$152, DW_AT_name("tagid")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$152, DW_AT_declaration
	.dwattr $C$DW$152, DW_AT_external
$C$DW$153	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$152

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$154	.dwtag  DW_TAG_variable
	.dwattr $C$DW$154, DW_AT_name("rtc")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$154, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$154, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$155	.dwtag  DW_TAG_variable
	.dwattr $C$DW$155, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$155, DW_AT_declaration
	.dwattr $C$DW$155, DW_AT_external

_buff$6:	.usect	".ebss",64,1,0
_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$156	.dwtag  DW_TAG_variable
	.dwattr $C$DW$156, DW_AT_name("tsensor")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$156, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$156, DW_AT_external

$C$DW$157	.dwtag  DW_TAG_variable
	.dwattr $C$DW$157, DW_AT_name("_ctypes_")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$157, DW_AT_declaration
	.dwattr $C$DW$157, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$158	.dwtag  DW_TAG_variable
	.dwattr $C$DW$158, DW_AT_name("fileOb")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$158, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$158, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$159	.dwtag  DW_TAG_variable
	.dwattr $C$DW$159, DW_AT_name("Fatfs")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$159, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$159, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$160	.dwtag  DW_TAG_variable
	.dwattr $C$DW$160, DW_AT_name("conf_data")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$160, DW_AT_declaration
	.dwattr $C$DW$160, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\bin\opt2000.exe C:\\Users\\antons\\AppData\\Local\\Temp\\{B1435CAB-735C-4FC4-8000-D74B81E88A7F} C:\\Users\\antons\\AppData\\Local\\Temp\\{D3933351-C572-4BFD-B365-DB4A8EEF3222} 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\bin\ac2000.exe -@C:\\Users\\antons\\AppData\\Local\\Temp\\{F57A0E5F-D141-4D2F-9FFD-0358E4FB35C4} 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$161	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$161, DW_AT_name("update_units")
	.dwattr $C$DW$161, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$161, DW_AT_high_pc(0x00)
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$161, DW_AT_external
	.dwattr $C$DW$161, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$161, DW_AT_TI_begin_line(0x17e9)
	.dwattr $C$DW$161, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$161, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6121,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$162	.dwtag  DW_TAG_variable
	.dwattr $C$DW$162, DW_AT_name("buff")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6121 | void update_units(void) {                                              
; 6123 | int l;                                                                 
; 6124 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6126,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6126 | lcd_clear();                                                           
; 6127 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$163, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6126| 
        ; call occurs [#_lcd_clear] ; [] |6126| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6128,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6128 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6128| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6128| 
        ADDL      XAR4,ACC              ; [CPU_] |6128| 
        MOV       AL,AR1                ; [CPU_] |6128| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6128| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$164, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6128| 
        ; call occurs [#_lcd_puts] ; [] |6128| 
	.dwpsn	file "../Source/prod.c",line 6129,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6129 | switch (conf_data.vfd[l].what) {                                       
; 6130 | case VFD_LOAD:                                                         
; 6131 | case VFD_PEAK:                                                         
; 6132 | case VFD_VALL:                                                         
; 6133 | case VFD_POSI:                                                         
; 6134 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6129| 
        CMPB      AL,#4                 ; [CPU_] |6129| 
        B         $C$L2,LOS             ; [CPU_] |6129| 
        ; branchcc occurs ; [] |6129| 
        CMPB      AL,#5                 ; [CPU_] |6129| 
        B         $C$L8,EQ              ; [CPU_] |6129| 
        ; branchcc occurs ; [] |6129| 
        CMPB      AL,#6                 ; [CPU_] |6129| 
        B         $C$L7,EQ              ; [CPU_] |6129| 
        ; branchcc occurs ; [] |6129| 
        B         $C$L10,UNC            ; [CPU_] |6129| 
        ; branch occurs ; [] |6129| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6135,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6135 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6135| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6135| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6135| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6135| 
        ADDB      AL,#1                 ; [CPU_] |6135| 
        MOVL      XAR4,XAR3             ; [CPU_] |6135| 
        MOV       *-SP[3],AL            ; [CPU_] |6135| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("_sprintf")
	.dwattr $C$DW$165, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6135| 
        ; call occurs [#_sprintf] ; [] |6135| 
	.dwpsn	file "../Source/prod.c",line 6136,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6136 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6136| 
        ADD       AL,AR1                ; [CPU_] |6136| 
        MOVL      XAR4,XAR3             ; [CPU_] |6136| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6136| 
        ; call occurs [#_lcd_puts] ; [] |6136| 
	.dwpsn	file "../Source/prod.c",line 6137,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6137 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6137| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6137| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6137| 
        B         $C$L3,EQ              ; [CPU_] |6137| 
        ; branchcc occurs ; [] |6137| 
	.dwpsn	file "../Source/prod.c",line 6138,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6138 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6138| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6138| 
        ADD       AL,AR1                ; [CPU_] |6138| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6138| 
        ; call occurs [#_lcd_puts] ; [] |6138| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6141,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6141 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6142 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6141| 
        CMPB      AL,#3                 ; [CPU_] |6141| 
        B         $C$L6,EQ              ; [CPU_] |6141| 
        ; branchcc occurs ; [] |6141| 
	.dwpsn	file "../Source/prod.c",line 6143,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6143 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6144 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6145 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6143| 
        CMPB      AL,#4                 ; [CPU_] |6143| 
        B         $C$L5,EQ              ; [CPU_] |6143| 
        ; branchcc occurs ; [] |6143| 
	.dwpsn	file "../Source/prod.c",line 6146,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6146 | lcd_puts(                                                              
; 6147 |                 (char*) UNITS[0x0f                                     
; 6148 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6149 |                 18 + 20 * l);                                          
; 6151 | break;                                                                 
; 6152 | case VFD_LIMIT:                                                        
; 6153 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6154 | lcd_puts(buff, 5 + 20 * l);                                            
; 6155 | break;                                                                 
; 6156 | case VFD_TEMP:                                                         
; 6157 | #if(VFD==1)                                                            
; 6158 | buff[0] = 0xb0;                                                        
; 6159 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6146| 
        MOV       T,#10                 ; [CPU_] |6146| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6146| 
        ADDL      ACC,XAR6              ; [CPU_] |6146| 
        MOVL      XAR4,ACC              ; [CPU_] |6146| 
        MOVB      XAR0,#42              ; [CPU_] |6146| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6146| 
        MPYB      ACC,T,#152            ; [CPU_] |6146| 
        ADDL      ACC,XAR6              ; [CPU_] |6146| 
        MOVL      XAR4,ACC              ; [CPU_] |6146| 
        MOVB      XAR0,#125             ; [CPU_] |6146| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6146| 
        ANDB      AL,#0x0f              ; [CPU_] |6146| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6146| 
        MOV       ACC,AL << 1           ; [CPU_] |6146| 
        ADDL      XAR4,ACC              ; [CPU_] |6146| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6146| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6146| 
        B         $C$L9,UNC             ; [CPU_] |6146| 
        ; branch occurs ; [] |6146| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6144,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6144| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6144| 
	.dwpsn	file "../Source/prod.c",line 6145,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6145| 
        ; branch occurs ; [] |6145| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6142,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6142| 
	.dwpsn	file "../Source/prod.c",line 6143,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6143| 
        ; branch occurs ; [] |6143| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6160,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6160 | buff[0] = 0xdf;                                                        
; 6161 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6160| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6160| 
	.dwpsn	file "../Source/prod.c",line 6162,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6162 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6162| 
	.dwpsn	file "../Source/prod.c",line 6163,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6163 | buff[2] = '\0';                                                        
; 6164 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6163| 
	.dwpsn	file "../Source/prod.c",line 6165,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6165 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6165| 
        ; branch occurs ; [] |6165| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6153,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6153| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6153| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6153| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6153| 
        ADDB      AL,#1                 ; [CPU_] |6153| 
        MOVL      XAR4,XAR3             ; [CPU_] |6153| 
        MOV       *-SP[3],AL            ; [CPU_] |6153| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_sprintf")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6153| 
        ; call occurs [#_sprintf] ; [] |6153| 
	.dwpsn	file "../Source/prod.c",line 6154,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6154| 
        MOVL      XAR4,XAR3             ; [CPU_] |6154| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6154| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6154| 
        ; call occurs [#_lcd_puts] ; [] |6154| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6127,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6127| 
        SUBB      XAR6,#1               ; [CPU_U] |6127| 
        MOVZ      AR0,AR6               ; [CPU_] |6127| 
        ADDB      XAR2,#3               ; [CPU_] |6127| 
        ADDB      XAR1,#20              ; [CPU_] |6127| 
        MOV       *-SP[4],AR6           ; [CPU_] |6127| 
        CMP       AR0,#-1               ; [CPU_] |6127| 
        B         $C$L1,NEQ             ; [CPU_] |6127| 
        ; branchcc occurs ; [] |6127| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$161, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$161, DW_AT_TI_end_line(0x1818)
	.dwattr $C$DW$161, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$161

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$171	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$171, DW_AT_name("print_vfd")
	.dwattr $C$DW$171, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$171, DW_AT_high_pc(0x00)
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$171, DW_AT_external
	.dwattr $C$DW$171, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$171, DW_AT_TI_begin_line(0x1774)
	.dwattr $C$DW$171, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$171, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6004,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$172	.dwtag  DW_TAG_variable
	.dwattr $C$DW$172, DW_AT_name("buff")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 6004 | void print_vfd(void) {                                                 
; 6005 | int l;                                                                 
; 6006 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$173	.dwtag  DW_TAG_variable
	.dwattr $C$DW$173, DW_AT_name("l")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6008,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6008 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |6008| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("_scia_puts")
	.dwattr $C$DW$174, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6008| 
        ; call occurs [#_scia_puts] ; [] |6008| 
	.dwpsn	file "../Source/prod.c",line 6009,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6009 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6009| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 6010,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6010 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |6010| 
        MOVB      AL,#1                 ; [CPU_] |6010| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6010| 
        ADD       AL,AR1                ; [CPU_] |6010| 
        MOV       *-SP[3],AL            ; [CPU_] |6010| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6010| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6010| 
        ADDL      XAR4,ACC              ; [CPU_] |6010| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6010| 
        MOVL      XAR4,XAR3             ; [CPU_] |6010| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6010| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("_sprintf")
	.dwattr $C$DW$175, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6010| 
        ; call occurs [#_sprintf] ; [] |6010| 
	.dwpsn	file "../Source/prod.c",line 6011,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6011 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6011| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6011| 
        ; call occurs [#_scia_puts] ; [] |6011| 
	.dwpsn	file "../Source/prod.c",line 6013,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6013 | switch (conf_data.vfd[l].what) {                                       
; 6014 | case VFD_LOAD:                                                         
; 6015 | case VFD_PEAK:                                                         
; 6016 | case VFD_VALL:                                                         
; 6017 | case VFD_POSI:                                                         
; 6018 | case VFD_VELO:                                                         
; 6019 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 6020 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 6021 |         scia_puts(buff);                                               
; 6022 |         break;                                                         
; 6023 | case VFD_LIMIT:                                                        
; 6024 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 6025 |         scia_puts(buff);                                               
; 6026 |         break;                                                         
; 6027 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6013| 
        CMPB      AL,#4                 ; [CPU_] |6013| 
        B         $C$L13,LOS            ; [CPU_] |6013| 
        ; branchcc occurs ; [] |6013| 
        CMPB      AL,#5                 ; [CPU_] |6013| 
        B         $C$L12,EQ             ; [CPU_] |6013| 
        ; branchcc occurs ; [] |6013| 
        CMPB      AL,#6                 ; [CPU_] |6013| 
        B         $C$L16,NEQ            ; [CPU_] |6013| 
        ; branchcc occurs ; [] |6013| 
	.dwpsn	file "../Source/prod.c",line 6028,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |6028| 
	.dwpsn	file "../Source/prod.c",line 6029,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6029 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |6029| 
        ; branch occurs ; [] |6029| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 6024,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |6024| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6024| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6024| 
        ADDB      AL,#1                 ; [CPU_] |6024| 
        MOV       *-SP[3],AL            ; [CPU_] |6024| 
	.dwpsn	file "../Source/prod.c",line 6026,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |6026| 
        ; branch occurs ; [] |6026| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 6019,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |6019| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6019| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6019| 
        ADDB      AL,#1                 ; [CPU_] |6019| 
        MOV       *-SP[3],AL            ; [CPU_] |6019| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |6019| 
        MOV       *-SP[4],AL            ; [CPU_] |6019| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |6019| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("_sprintf")
	.dwattr $C$DW$177, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6019| 
        ; call occurs [#_sprintf] ; [] |6019| 
	.dwpsn	file "../Source/prod.c",line 6021,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6021| 
$C$L15:    
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6021| 
        ; call occurs [#_scia_puts] ; [] |6021| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 6031,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6031 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6031| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6031| 
        ; call occurs [#_scia_puts] ; [] |6031| 
	.dwpsn	file "../Source/prod.c",line 6009,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6009| 
        ADDB      XAR2,#3               ; [CPU_] |6009| 
        MOV       AL,AR1                ; [CPU_] |6009| 
        CMPB      AL,#4                 ; [CPU_] |6009| 
        B         $C$L11,LT             ; [CPU_] |6009| 
        ; branchcc occurs ; [] |6009| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$171, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$171, DW_AT_TI_end_line(0x1791)
	.dwattr $C$DW$171, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$171

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$181	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$181, DW_AT_name("print_sensor")
	.dwattr $C$DW$181, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$181, DW_AT_high_pc(0x00)
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$181, DW_AT_external
	.dwattr $C$DW$181, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$181, DW_AT_TI_begin_line(0x171d)
	.dwattr $C$DW$181, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$181, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5917,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$182	.dwtag  DW_TAG_variable
	.dwattr $C$DW$182, DW_AT_name("buff")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$183	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$183, DW_AT_name("ss")
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$183, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$183, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$184	.dwtag  DW_TAG_variable
	.dwattr $C$DW$184, DW_AT_name("ss")
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$184, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$184, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$185	.dwtag  DW_TAG_variable
	.dwattr $C$DW$185, DW_AT_name("j")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_reg0]

$C$DW$186	.dwtag  DW_TAG_variable
	.dwattr $C$DW$186, DW_AT_name("j")
	.dwattr $C$DW$186, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$186, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$186, DW_AT_location[DW_OP_breg20 -7]

$C$DW$187	.dwtag  DW_TAG_variable
	.dwattr $C$DW$187, DW_AT_name("j")
	.dwattr $C$DW$187, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$187, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$187, DW_AT_location[DW_OP_breg20 -7]

$C$DW$188	.dwtag  DW_TAG_variable
	.dwattr $C$DW$188, DW_AT_name("j")
	.dwattr $C$DW$188, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$188, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$188, DW_AT_location[DW_OP_breg20 -7]

$C$DW$189	.dwtag  DW_TAG_variable
	.dwattr $C$DW$189, DW_AT_name("j")
	.dwattr $C$DW$189, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$189, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$189, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5917 | void print_sensor(int ss) {                                            
; 5918 | int j;                                                                 
; 5919 | static char buff[100];                                                 
; 5921 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5917| 
	.dwpsn	file "../Source/prod.c",line 5922,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5922 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5923 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5924 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5922| 
        MPYB      P,T,#152              ; [CPU_] |5922| 
        MOVL      ACC,XAR3              ; [CPU_] |5922| 
        ADDL      ACC,P                 ; [CPU_] |5922| 
        MOVL      XAR2,ACC              ; [CPU_] |5922| 
        MOVB      XAR0,#118             ; [CPU_] |5922| 
        MOVL      *-SP[12],P            ; [CPU_] |5922| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5922| 
        B         $C$L28,EQ             ; [CPU_] |5922| 
        ; branchcc occurs ; [] |5922| 
	.dwpsn	file "../Source/prod.c",line 5925,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5925 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5925| 
        MOVL      ACC,XAR2              ; [CPU_] |5925| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5925| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5925| 
        ADDB      ACC,#82               ; [CPU_] |5925| 
        MOVL      XAR4,XAR1             ; [CPU_] |5925| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5925| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5925| 
        ; call occurs [#_sprintf] ; [] |5925| 
	.dwpsn	file "../Source/prod.c",line 5926,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5926 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5926| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5926| 
        ; call occurs [#_scia_puts] ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5927,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5927 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5927| 
        MOVL      ACC,XAR2              ; [CPU_] |5927| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5927| 
        ADDB      ACC,#98               ; [CPU_] |5927| 
        MOVL      XAR4,XAR1             ; [CPU_] |5927| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5927| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5927| 
        ; call occurs [#_sprintf] ; [] |5927| 
	.dwpsn	file "../Source/prod.c",line 5928,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5928| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5928| 
        ; call occurs [#_scia_puts] ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5929,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5929 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5930 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5929| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5929| 
        MOVL      XAR4,XAR2             ; [CPU_] |5929| 
        ADDB      XAR4,#114             ; [CPU_] |5929| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5929| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5929| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5929| 
        MOVL      XAR4,XAR1             ; [CPU_] |5929| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5929| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5929| 
        ; call occurs [#_sprintf] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5931,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5931 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5931| 
        ; call occurs [#_scia_puts] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5932,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5932 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5933 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5932| 
        MOVB      XAR0,#118             ; [CPU_] |5932| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5932| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5932| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5932| 
        ADDL      XAR4,ACC              ; [CPU_] |5932| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5932| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5932| 
        MOVL      XAR4,XAR1             ; [CPU_] |5932| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5932| 
        ; call occurs [#_sprintf] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5934,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5934 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5934| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5934| 
        ; call occurs [#_scia_puts] ; [] |5934| 
	.dwpsn	file "../Source/prod.c",line 5935,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5935 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5936 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5935| 
        MOVB      XAR0,#124             ; [CPU_] |5935| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5935| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5935| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5935| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5935| 
        ANDB      AL,#0x0f              ; [CPU_] |5935| 
        MOV       ACC,AL << 1           ; [CPU_] |5935| 
        ADDL      XAR4,ACC              ; [CPU_] |5935| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5935| 
        MOVL      XAR4,XAR1             ; [CPU_] |5935| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5935| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5935| 
        ; call occurs [#_sprintf] ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5937,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5937 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5937| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5937| 
        ; call occurs [#_scia_puts] ; [] |5937| 
	.dwpsn	file "../Source/prod.c",line 5938,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5938 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5939 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5938| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5938| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5938| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5938| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5938| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5938| 
        MOV       ACC,AL << 1           ; [CPU_] |5938| 
        ADDL      ACC,XAR6              ; [CPU_] |5938| 
        MOVL      XAR4,ACC              ; [CPU_] |5938| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5938| 
        MOVL      XAR4,XAR1             ; [CPU_] |5938| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5938| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5938| 
        ; call occurs [#_sprintf] ; [] |5938| 
	.dwpsn	file "../Source/prod.c",line 5940,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5940 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5940| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5940| 
        ; call occurs [#_scia_puts] ; [] |5940| 
	.dwpsn	file "../Source/prod.c",line 5941,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5941 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5942 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5941| 
        MOVB      XAR0,#126             ; [CPU_] |5941| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5941| 
        MOVL      XAR4,XAR1             ; [CPU_] |5941| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5941| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5941| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5941| 
        ; call occurs [#_sprintf] ; [] |5941| 
	.dwpsn	file "../Source/prod.c",line 5943,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5943 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5943| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5944,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5944 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5945 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5944| 
        MOVB      XAR0,#122             ; [CPU_] |5944| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5944| 
        MOVL      XAR4,XAR1             ; [CPU_] |5944| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5944| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5944| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5944| 
        ; call occurs [#_sprintf] ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5946,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5946 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5946| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5946| 
        ; call occurs [#_scia_puts] ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5947,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5947 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5948 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5947| 
        MOVB      XAR0,#222             ; [CPU_] |5947| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5947| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5947| 
        MOVL      XAR4,XAR1             ; [CPU_] |5947| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5947| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5947| 
        ; call occurs [#_sprintf] ; [] |5947| 
	.dwpsn	file "../Source/prod.c",line 5949,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5949 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5949| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5949| 
        ; call occurs [#_scia_puts] ; [] |5949| 
	.dwpsn	file "../Source/prod.c",line 5950,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5950 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5951 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5950| 
        MOVB      XAR0,#224             ; [CPU_] |5950| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5950| 
        MOVL      XAR4,XAR1             ; [CPU_] |5950| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5950| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5950| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_sprintf")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5950| 
        ; call occurs [#_sprintf] ; [] |5950| 
	.dwpsn	file "../Source/prod.c",line 5952,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5952 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5952| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5952| 
        ; call occurs [#_scia_puts] ; [] |5952| 
	.dwpsn	file "../Source/prod.c",line 5953,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5953 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5954 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5953| 
        MOVB      XAR0,#228             ; [CPU_] |5953| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5953| 
        MOVL      XAR4,XAR1             ; [CPU_] |5953| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5953| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5953| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_sprintf")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5953| 
        ; call occurs [#_sprintf] ; [] |5953| 
	.dwpsn	file "../Source/prod.c",line 5955,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5955 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5955| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5955| 
        ; call occurs [#_scia_puts] ; [] |5955| 
	.dwpsn	file "../Source/prod.c",line 5956,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5956 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5957 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5956| 
        MOVB      XAR0,#230             ; [CPU_] |5956| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5956| 
        MOVL      XAR4,XAR1             ; [CPU_] |5956| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5956| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5956| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_sprintf")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5956| 
        ; call occurs [#_sprintf] ; [] |5956| 
	.dwpsn	file "../Source/prod.c",line 5958,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5958 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5958| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5958| 
        ; call occurs [#_scia_puts] ; [] |5958| 
	.dwpsn	file "../Source/prod.c",line 5960,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5960 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5961 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5962 |                         conf_data.sensor[ss].points);                  
; 5963 |         scia_puts(buff);                                               
; 5965 |         scia_puts("  Point:");                                         
; 5966 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5967 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5968 |                 scia_puts(buff);                                       
; 5970 |         scia_puts("\r\n  Mass: ");                                     
; 5971 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5972 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5973 |                 scia_puts(buff);                                       
; 5975 |         scia_puts("\r\n  Count:");                                     
; 5976 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5977 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5978 |                 scia_puts(buff);                                       
; 5980 |         scia_puts("\r\n  Slope:    ");                                 
; 5981 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5982 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5983 |                 scia_puts(buff);                                       
; 5985 |         scia_puts("\r\n  Intercept:");                                 
; 5986 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5987 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5988 |                 scia_puts(buff);                                       
; 5990 |         scia_puts("\r\n");                                             
; 5991 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5960| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5960| 
        CMPB      AL,#2                 ; [CPU_] |5960| 
        B         $C$L17,EQ             ; [CPU_] |5960| 
        ; branchcc occurs ; [] |5960| 
	.dwpsn	file "../Source/prod.c",line 5992,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5992 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5993 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5992| 
        MOVB      XAR0,#178             ; [CPU_] |5992| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5992| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5992| 
        MOVL      XAR4,XAR1             ; [CPU_] |5992| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5992| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_sprintf")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5992| 
        ; call occurs [#_sprintf] ; [] |5992| 
	.dwpsn	file "../Source/prod.c",line 5994,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5994 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5994| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5994| 
        ; call occurs [#_scia_puts] ; [] |5994| 
	.dwpsn	file "../Source/prod.c",line 5995,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5995 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5996 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5995| 
        MOVB      XAR0,#200             ; [CPU_] |5995| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5995| 
        MOVL      XAR4,XAR1             ; [CPU_] |5995| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5995| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5995| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5995| 
        ; call occurs [#_sprintf] ; [] |5995| 
	.dwpsn	file "../Source/prod.c",line 5997,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5997 | scia_puts(buff);                                                       
; 6000 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5997| 
        B         $C$L29,UNC            ; [CPU_] |5997| 
        ; branch occurs ; [] |5997| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5961,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5961| 
        MOVB      XAR0,#128             ; [CPU_] |5961| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5961| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5961| 
        MOVL      XAR4,XAR1             ; [CPU_] |5961| 
        MOV       *-SP[3],AL            ; [CPU_] |5961| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_sprintf")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5961| 
        ; call occurs [#_sprintf] ; [] |5961| 
	.dwpsn	file "../Source/prod.c",line 5963,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5963| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5963| 
        ; call occurs [#_scia_puts] ; [] |5963| 
	.dwpsn	file "../Source/prod.c",line 5965,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5965| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5965| 
        ; call occurs [#_scia_puts] ; [] |5965| 
	.dwpsn	file "../Source/prod.c",line 5966,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5966| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5966,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5966| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5966| 
        B         $C$L27,LT             ; [CPU_] |5966| 
        ; branchcc occurs ; [] |5966| 
	.dwpsn	file "../Source/prod.c",line 5970,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5970| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5970| 
        ; call occurs [#_scia_puts] ; [] |5970| 
	.dwpsn	file "../Source/prod.c",line 5971,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5971| 
        MOV       *-SP[7],AL            ; [CPU_] |5971| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5971,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5971| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5971| 
        B         $C$L26,LT             ; [CPU_] |5971| 
        ; branchcc occurs ; [] |5971| 
	.dwpsn	file "../Source/prod.c",line 5975,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5975| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5975| 
        ; call occurs [#_scia_puts] ; [] |5975| 
	.dwpsn	file "../Source/prod.c",line 5976,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5976| 
        MOV       *-SP[7],AL            ; [CPU_] |5976| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5976,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5976| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5976| 
        B         $C$L25,LT             ; [CPU_] |5976| 
        ; branchcc occurs ; [] |5976| 
	.dwpsn	file "../Source/prod.c",line 5980,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5980| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5980| 
        ; call occurs [#_scia_puts] ; [] |5980| 
	.dwpsn	file "../Source/prod.c",line 5981,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5981| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5981,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5981| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5981| 
        ADDB      AL,#-1                ; [CPU_] |5981| 
        CMP       AL,*-SP[7]            ; [CPU_] |5981| 
        B         $C$L24,GT             ; [CPU_] |5981| 
        ; branchcc occurs ; [] |5981| 
	.dwpsn	file "../Source/prod.c",line 5985,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5985| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5985| 
        ; call occurs [#_scia_puts] ; [] |5985| 
	.dwpsn	file "../Source/prod.c",line 5986,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5986| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5986,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5986| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5986| 
        ADDB      AL,#-1                ; [CPU_] |5986| 
        CMP       AL,*-SP[7]            ; [CPU_] |5986| 
        B         $C$L23,GT             ; [CPU_] |5986| 
        ; branchcc occurs ; [] |5986| 
	.dwpsn	file "../Source/prod.c",line 5990,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5990| 
	.dwpsn	file "../Source/prod.c",line 5991,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5991| 
        ; branch occurs ; [] |5991| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5987,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5987| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5987| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5987| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5987| 
        MOV       ACC,AL << 1           ; [CPU_] |5987| 
        ADDL      ACC,XAR6              ; [CPU_] |5987| 
        ADDL      ACC,XAR3              ; [CPU_] |5987| 
        MOVL      XAR4,ACC              ; [CPU_] |5987| 
        MOVB      XAR0,#200             ; [CPU_] |5987| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5987| 
        MOVL      XAR4,XAR1             ; [CPU_] |5987| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5987| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_sprintf")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5987| 
        ; call occurs [#_sprintf] ; [] |5987| 
	.dwpsn	file "../Source/prod.c",line 5988,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5988| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5988| 
        ; call occurs [#_scia_puts] ; [] |5988| 
	.dwpsn	file "../Source/prod.c",line 5986,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5986| 
        B         $C$L22,UNC            ; [CPU_] |5986| 
        ; branch occurs ; [] |5986| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5982,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5982| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5982| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5982| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5982| 
        MOV       ACC,AL << 1           ; [CPU_] |5982| 
        ADDL      ACC,XAR6              ; [CPU_] |5982| 
        ADDL      ACC,XAR3              ; [CPU_] |5982| 
        MOVL      XAR4,ACC              ; [CPU_] |5982| 
        MOVB      XAR0,#178             ; [CPU_] |5982| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5982| 
        MOVL      XAR4,XAR1             ; [CPU_] |5982| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5982| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_sprintf")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5982| 
        ; call occurs [#_sprintf] ; [] |5982| 
	.dwpsn	file "../Source/prod.c",line 5983,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5983| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5983| 
        ; call occurs [#_scia_puts] ; [] |5983| 
	.dwpsn	file "../Source/prod.c",line 5981,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5981| 
        B         $C$L21,UNC            ; [CPU_] |5981| 
        ; branch occurs ; [] |5981| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5977,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5977| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5977| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5977| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5977| 
        ADDL      ACC,XAR6              ; [CPU_] |5977| 
        ADDL      ACC,XAR3              ; [CPU_] |5977| 
        MOVL      XAR4,ACC              ; [CPU_] |5977| 
        MOVB      XAR0,#154             ; [CPU_] |5977| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5977| 
        MOVL      XAR4,XAR1             ; [CPU_] |5977| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5977| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_sprintf")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5977| 
        ; call occurs [#_sprintf] ; [] |5977| 
	.dwpsn	file "../Source/prod.c",line 5978,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5978| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_scia_puts")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5978| 
        ; call occurs [#_scia_puts] ; [] |5978| 
	.dwpsn	file "../Source/prod.c",line 5976,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5976| 
	.dwpsn	file "../Source/prod.c",line 5978,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5978| 
	.dwpsn	file "../Source/prod.c",line 5976,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5976| 
        ; branch occurs ; [] |5976| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5972,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5972| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5972| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5972| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5972| 
        ADDL      ACC,XAR6              ; [CPU_] |5972| 
        ADDL      ACC,XAR3              ; [CPU_] |5972| 
        MOVL      XAR4,ACC              ; [CPU_] |5972| 
        MOVB      XAR0,#130             ; [CPU_] |5972| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5972| 
        MOVL      XAR4,XAR1             ; [CPU_] |5972| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5972| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_sprintf")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5972| 
        ; call occurs [#_sprintf] ; [] |5972| 
	.dwpsn	file "../Source/prod.c",line 5973,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5973| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_scia_puts")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5973| 
        ; call occurs [#_scia_puts] ; [] |5973| 
	.dwpsn	file "../Source/prod.c",line 5971,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5971| 
	.dwpsn	file "../Source/prod.c",line 5973,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5973| 
	.dwpsn	file "../Source/prod.c",line 5971,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5971| 
        ; branch occurs ; [] |5971| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5967,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5967| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5967| 
        ADD       AH,AL                 ; [CPU_] |5967| 
        MOV       *-SP[7],AH            ; [CPU_] |5967| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5967| 
        MOVL      XAR4,XAR1             ; [CPU_] |5967| 
        MOV       *-SP[3],AH            ; [CPU_] |5967| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_sprintf")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5967| 
        ; call occurs [#_sprintf] ; [] |5967| 
	.dwpsn	file "../Source/prod.c",line 5968,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5968| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5968| 
        ; call occurs [#_scia_puts] ; [] |5968| 
        MOV       AL,*-SP[7]            ; [CPU_] |5968| 
	.dwpsn	file "../Source/prod.c",line 5966,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5966| 
        ; branch occurs ; [] |5966| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5923,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5923| 
$C$L29:    
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5923| 
        ; call occurs [#_scia_puts] ; [] |5923| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$181, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$181, DW_AT_TI_end_line(0x1771)
	.dwattr $C$DW$181, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$181

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$236	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$236, DW_AT_name("print_limits")
	.dwattr $C$DW$236, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$236, DW_AT_high_pc(0x00)
	.dwattr $C$DW$236, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$236, DW_AT_external
	.dwattr $C$DW$236, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$236, DW_AT_TI_begin_line(0x17b8)
	.dwattr $C$DW$236, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$236, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6072,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$237	.dwtag  DW_TAG_variable
	.dwattr $C$DW$237, DW_AT_name("buff")
	.dwattr $C$DW$237, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$237, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$237, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6072 | void print_limits(void) {                                              
; 6073 | int ii;                                                                
; 6074 | static char buff[64];                                                  
; 6075 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$238	.dwtag  DW_TAG_variable
	.dwattr $C$DW$238, DW_AT_name("ii")
	.dwattr $C$DW$238, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$238, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$238, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$239	.dwtag  DW_TAG_variable
	.dwattr $C$DW$239, DW_AT_name("up")
	.dwattr $C$DW$239, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$239, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$239, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6077,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6077 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6077| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6077| 
        ; call occurs [#_scia_puts] ; [] |6077| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6079,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6079 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6079| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6080,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6080 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6080| 
        MOVB      AL,#1                 ; [CPU_] |6080| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6080| 
        ADD       AL,*-SP[9]            ; [CPU_] |6080| 
        MOVL      XAR4,XAR2             ; [CPU_] |6080| 
        MOV       *-SP[3],AL            ; [CPU_] |6080| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_sprintf")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6080| 
        ; call occurs [#_sprintf] ; [] |6080| 
	.dwpsn	file "../Source/prod.c",line 6081,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6081 | scia_puts(buff);                                                       
; 6083 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6081| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6081| 
        ; call occurs [#_scia_puts] ; [] |6081| 
	.dwpsn	file "../Source/prod.c",line 6085,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6085 | switch (conf_data.lim[ii].what) {                                      
; 6086 | case VFD_LOAD:                                                         
; 6087 | case VFD_PEAK:                                                         
; 6088 | case VFD_VALL:                                                         
; 6089 |         up =                                                           
; 6090 |                         UNITS[0x0f                                     
; 6091 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6092 |         break;                                                         
; 6093 | case VFD_POSI:                                                         
; 6094 |         up = POS_U;                                                    
; 6095 |         break;                                                         
; 6096 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6085| 
        B         $C$L40,NTC            ; [CPU_] |6085| 
        ; branchcc occurs ; [] |6085| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6085| 
        CMPB      AL,#2                 ; [CPU_] |6085| 
        B         $C$L32,LOS            ; [CPU_] |6085| 
        ; branchcc occurs ; [] |6085| 
        CMPB      AL,#3                 ; [CPU_] |6085| 
        B         $C$L31,EQ             ; [CPU_] |6085| 
        ; branchcc occurs ; [] |6085| 
        CMPB      AL,#4                 ; [CPU_] |6085| 
        B         $C$L33,NEQ            ; [CPU_] |6085| 
        ; branchcc occurs ; [] |6085| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6097,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6097 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6097| 
	.dwpsn	file "../Source/prod.c",line 6098,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6098 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6098| 
        ; branch occurs ; [] |6098| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6094,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6094| 
	.dwpsn	file "../Source/prod.c",line 6095,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6095| 
        ; branch occurs ; [] |6095| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6089,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6089| 
        MOV       T,#10                 ; [CPU_] |6089| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6089| 
        ADDL      ACC,XAR6              ; [CPU_] |6089| 
        MOVL      XAR4,ACC              ; [CPU_] |6089| 
        MOVB      XAR0,#42              ; [CPU_] |6089| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6089| 
        MPYB      ACC,T,#152            ; [CPU_] |6089| 
        ADDL      ACC,XAR6              ; [CPU_] |6089| 
        MOVL      XAR4,ACC              ; [CPU_] |6089| 
        MOVB      XAR0,#125             ; [CPU_] |6089| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6089| 
        ANDB      AL,#0x0f              ; [CPU_] |6089| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6089| 
        MOV       ACC,AL << 1           ; [CPU_] |6089| 
        ADDL      XAR4,ACC              ; [CPU_] |6089| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6089| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6101,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6101 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6102 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6101| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6101| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6101| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6101| 
        ADDL      XAR4,ACC              ; [CPU_] |6101| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6101| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6101| 
        MOVL      XAR4,XAR2             ; [CPU_] |6101| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6101| 
        ADDB      AL,#1                 ; [CPU_] |6101| 
        MOV       *-SP[5],AL            ; [CPU_] |6101| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_sprintf")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6101| 
        ; call occurs [#_sprintf] ; [] |6101| 
	.dwpsn	file "../Source/prod.c",line 6103,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6103 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6103| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6103| 
        ; call occurs [#_scia_puts] ; [] |6103| 
	.dwpsn	file "../Source/prod.c",line 6104,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6104 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6105 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6106 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6107 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6104| 
        B         $C$L34,TC             ; [CPU_] |6104| 
        ; branchcc occurs ; [] |6104| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6104| 
        B         $C$L35,UNC            ; [CPU_] |6104| 
        ; branch occurs ; [] |6104| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6104| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6104| 
        B         $C$L36,TC             ; [CPU_] |6104| 
        ; branchcc occurs ; [] |6104| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6104| 
        B         $C$L37,UNC            ; [CPU_] |6104| 
        ; branch occurs ; [] |6104| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6104| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6104| 
        B         $C$L38,TC             ; [CPU_] |6104| 
        ; branchcc occurs ; [] |6104| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6104| 
        B         $C$L39,UNC            ; [CPU_] |6104| 
        ; branch occurs ; [] |6104| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6104| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6104| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6104| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6104| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6104| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6104| 
        MOVL      XAR4,XAR2             ; [CPU_] |6104| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_sprintf")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6104| 
        ; call occurs [#_sprintf] ; [] |6104| 
	.dwpsn	file "../Source/prod.c",line 6108,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6108 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6108| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_scia_puts")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6108| 
        ; call occurs [#_scia_puts] ; [] |6108| 
	.dwpsn	file "../Source/prod.c",line 6109,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6109 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6110 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6109| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6109| 
        MOVL      XAR4,XAR2             ; [CPU_] |6109| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6109| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6109| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6109| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_sprintf")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6109| 
        ; call occurs [#_sprintf] ; [] |6109| 
	.dwpsn	file "../Source/prod.c",line 6111,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6111 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6111| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_scia_puts")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6111| 
        ; call occurs [#_scia_puts] ; [] |6111| 
	.dwpsn	file "../Source/prod.c",line 6112,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6112 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6113 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6112| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6112| 
        MOVL      XAR4,XAR2             ; [CPU_] |6112| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6112| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6112| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6112| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_sprintf")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6112| 
        ; call occurs [#_sprintf] ; [] |6112| 
	.dwpsn	file "../Source/prod.c",line 6114,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6114 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6114| 
	.dwpsn	file "../Source/prod.c",line 6115,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6115 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6115| 
        ; branch occurs ; [] |6115| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6116,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6116 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6116| 
$C$L41:    
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6116| 
        ; call occurs [#_scia_puts] ; [] |6116| 
	.dwpsn	file "../Source/prod.c",line 6079,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6079| 
        INC       *-SP[9]               ; [CPU_] |6079| 
        MOV       AL,*-SP[9]            ; [CPU_] |6079| 
        CMPB      AL,#4                 ; [CPU_] |6079| 
        B         $C$L30,LT             ; [CPU_] |6079| 
        ; branchcc occurs ; [] |6079| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$236, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$236, DW_AT_TI_end_line(0x17e7)
	.dwattr $C$DW$236, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$236

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$252	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$252, DW_AT_name("print_dac")
	.dwattr $C$DW$252, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$252, DW_AT_high_pc(0x00)
	.dwattr $C$DW$252, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$252, DW_AT_external
	.dwattr $C$DW$252, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$252, DW_AT_TI_begin_line(0x1794)
	.dwattr $C$DW$252, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$252, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 6036,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$253	.dwtag  DW_TAG_variable
	.dwattr $C$DW$253, DW_AT_name("buff")
	.dwattr $C$DW$253, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$253, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$253, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 6036 | void print_dac(void) {                                                 
; 6037 | int l;                                                                 
; 6038 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$254	.dwtag  DW_TAG_variable
	.dwattr $C$DW$254, DW_AT_name("l")
	.dwattr $C$DW$254, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$254, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$254, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 6040,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6040 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |6040| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6040| 
        ; call occurs [#_scia_puts] ; [] |6040| 
	.dwpsn	file "../Source/prod.c",line 6042,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6042 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6042| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 6043,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6043 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |6043| 
        MOVB      AL,#1                 ; [CPU_] |6043| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6043| 
        ADD       AL,AR1                ; [CPU_] |6043| 
        MOV       *-SP[3],AL            ; [CPU_] |6043| 
        MOVL      XAR4,XAR3             ; [CPU_] |6043| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_sprintf")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6043| 
        ; call occurs [#_sprintf] ; [] |6043| 
	.dwpsn	file "../Source/prod.c",line 6044,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6044 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6044| 
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_scia_puts")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6044| 
        ; call occurs [#_scia_puts] ; [] |6044| 
	.dwpsn	file "../Source/prod.c",line 6046,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6046 | sprintf(buff,                                                          
; 6047 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 6048 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 6049 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |6046| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6046| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6046| 
        MOVL      XAR4,XAR3             ; [CPU_] |6046| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6046| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6046| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6046| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |6046| 
        MOVL      *-SP[8],ACC           ; [CPU_] |6046| 
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_name("_sprintf")
	.dwattr $C$DW$258, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6046| 
        ; call occurs [#_sprintf] ; [] |6046| 
	.dwpsn	file "../Source/prod.c",line 6050,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6050 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6050| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("_scia_puts")
	.dwattr $C$DW$259, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6050| 
        ; call occurs [#_scia_puts] ; [] |6050| 
	.dwpsn	file "../Source/prod.c",line 6052,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6052 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |6052| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6052| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6052| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6052| 
        ADDL      XAR4,ACC              ; [CPU_] |6052| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6052| 
        MOVL      XAR4,XAR3             ; [CPU_] |6052| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6052| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("_sprintf")
	.dwattr $C$DW$260, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6052| 
        ; call occurs [#_sprintf] ; [] |6052| 
	.dwpsn	file "../Source/prod.c",line 6053,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6053 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6053| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_scia_puts")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6053| 
        ; call occurs [#_scia_puts] ; [] |6053| 
	.dwpsn	file "../Source/prod.c",line 6055,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6055 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6055| 
        CMPB      AL,#7                 ; [CPU_] |6055| 
        B         $C$L43,EQ             ; [CPU_] |6055| 
        ; branchcc occurs ; [] |6055| 
	.dwpsn	file "../Source/prod.c",line 6056,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6056 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |6056| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6056| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6056| 
        ADDB      AL,#1                 ; [CPU_] |6056| 
        MOVL      XAR4,XAR3             ; [CPU_] |6056| 
        MOV       *-SP[3],AL            ; [CPU_] |6056| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_sprintf")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6056| 
        ; call occurs [#_sprintf] ; [] |6056| 
	.dwpsn	file "../Source/prod.c",line 6057,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6057 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6057| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6057| 
        ; call occurs [#_scia_puts] ; [] |6057| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 6060,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6060 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 6061 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 6062 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 6063 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6064 |         scia_puts(buff);                                               
; 6065 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6060| 
        CMPB      AL,#3                 ; [CPU_] |6060| 
        B         $C$L44,EQ             ; [CPU_] |6060| 
        ; branchcc occurs ; [] |6060| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |6060| 
        CMPB      AL,#4                 ; [CPU_] |6060| 
        B         $C$L44,EQ             ; [CPU_] |6060| 
        ; branchcc occurs ; [] |6060| 
	.dwpsn	file "../Source/prod.c",line 6066,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6066 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6066| 
        B         $C$L45,UNC            ; [CPU_] |6066| 
        ; branch occurs ; [] |6066| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 6062,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |6062| 
        MOVB      XAR0,#8               ; [CPU_] |6062| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6062| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6062| 
        MOVB      XAR0,#10              ; [CPU_] |6062| 
        MOVL      XAR4,XAR3             ; [CPU_] |6062| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6062| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6062| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6062| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_sprintf")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6062| 
        ; call occurs [#_sprintf] ; [] |6062| 
	.dwpsn	file "../Source/prod.c",line 6064,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6064| 
$C$L45:    
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6064| 
        ; call occurs [#_scia_puts] ; [] |6064| 
	.dwpsn	file "../Source/prod.c",line 6042,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6042| 
        ADDB      XAR2,#12              ; [CPU_] |6042| 
        MOV       AL,AR1                ; [CPU_] |6042| 
        CMPB      AL,#4                 ; [CPU_] |6042| 
        B         $C$L42,LT             ; [CPU_] |6042| 
        ; branchcc occurs ; [] |6042| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$252, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$252, DW_AT_TI_end_line(0x17b5)
	.dwattr $C$DW$252, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$252

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$267	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$267, DW_AT_name("print_channel")
	.dwattr $C$DW$267, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$267, DW_AT_high_pc(0x00)
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$267, DW_AT_external
	.dwattr $C$DW$267, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$267, DW_AT_TI_begin_line(0x1702)
	.dwattr $C$DW$267, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$267, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5890,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$268	.dwtag  DW_TAG_variable
	.dwattr $C$DW$268, DW_AT_name("buff")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$268, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$269	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$269, DW_AT_name("ch")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("ch")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5890 | void print_channel(Uint16 ch) {                                        
; 5891 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5890| 
	.dwpsn	file "../Source/prod.c",line 5893,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5893 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5893| 
        MOVZ      AR1,AR2               ; [CPU_] |5893| 
        MOVB      AH,#1                 ; [CPU_] |5893| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5893| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5893| 
        ADD       AH,AR1                ; [CPU_] |5893| 
        MOVL      XAR4,XAR3             ; [CPU_] |5893| 
        MOV       *-SP[3],AH            ; [CPU_] |5893| 
$C$DW$271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$271, DW_AT_name("_sprintf")
	.dwattr $C$DW$271, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5893| 
        ; call occurs [#_sprintf] ; [] |5893| 
	.dwpsn	file "../Source/prod.c",line 5894,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5894 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5894| 
$C$DW$272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$272, DW_AT_name("_scia_puts")
	.dwattr $C$DW$272, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5894| 
        ; call occurs [#_scia_puts] ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5896,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5896| 
        MOV       T,AR1                 ; [CPU_] |5896| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5896| 
        MPYU      ACC,T,AL              ; [CPU_] |5896| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5896| 
        ADDL      XAR1,ACC              ; [CPU_] |5896| 
        MOVB      XAR0,#44              ; [CPU_] |5896| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5896| 
        MOVL      XAR4,XAR3             ; [CPU_] |5896| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5896| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5896| 
$C$DW$273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$273, DW_AT_name("_sprintf")
	.dwattr $C$DW$273, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5896| 
        ; call occurs [#_sprintf] ; [] |5896| 
	.dwpsn	file "../Source/prod.c",line 5897,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5897 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5897| 
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("_scia_puts")
	.dwattr $C$DW$274, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5897| 
        ; call occurs [#_scia_puts] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5907,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5907| 
        MOVB      XAR0,#42              ; [CPU_] |5907| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5907| 
        MOVL      XAR4,XAR3             ; [CPU_] |5907| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5907| 
        ADDB      AL,#1                 ; [CPU_] |5907| 
        MOV       *-SP[3],AL            ; [CPU_] |5907| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("_sprintf")
	.dwattr $C$DW$275, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5907| 
        ; call occurs [#_sprintf] ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5908,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5908 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5908| 
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("_scia_puts")
	.dwattr $C$DW$276, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5908| 
        ; call occurs [#_scia_puts] ; [] |5908| 
	.dwpsn	file "../Source/prod.c",line 5910,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5910 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5910| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5910| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5910| 
        B         $C$L46,EQ             ; [CPU_] |5910| 
        ; branchcc occurs ; [] |5910| 
	.dwpsn	file "../Source/prod.c",line 5911,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5911 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5911| 
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("_scia_puts")
	.dwattr $C$DW$277, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5911| 
        ; call occurs [#_scia_puts] ; [] |5911| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$267, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$267, DW_AT_TI_end_line(0x1719)
	.dwattr $C$DW$267, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$267

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$279	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$279, DW_AT_name("matchTag")
	.dwattr $C$DW$279, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$279, DW_AT_high_pc(0x00)
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$279, DW_AT_external
	.dwattr $C$DW$279, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$279, DW_AT_TI_begin_line(0x16de)
	.dwattr $C$DW$279, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$279, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5854,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$280	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$280, DW_AT_name("ch")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5854 | void matchTag(Uint16 ch) {                                             
; 5855 | Uint16 sns;                                                            
; 5856 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("ch")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("sns")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("tag")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5858,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5858 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5858| 
	.dwpsn	file "../Source/prod.c",line 5854,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5854| 
	.dwpsn	file "../Source/prod.c",line 5858,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5858| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5858| 
        MOVL      XAR1,ACC              ; [CPU_] |5858| 
	.dwpsn	file "../Source/prod.c",line 5860,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5860 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5860| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5860| 
	.dwpsn	file "../Source/prod.c",line 5858,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5858| 
	.dwpsn	file "../Source/prod.c",line 5860,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5861 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5860| 
        B         $C$L50,EQ             ; [CPU_] |5860| 
        ; branchcc occurs ; [] |5860| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5860| 
        B         $C$L50,HIS            ; [CPU_] |5860| 
        ; branchcc occurs ; [] |5860| 
	.dwpsn	file "../Source/prod.c",line 5864,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5864 | tag = tagid(ch);                                                       
; 5865 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5866 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$284, DW_AT_name("_tagid")
	.dwattr $C$DW$284, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5864| 
        ; call occurs [#_tagid] ; [] |5864| 
        MOVB      XAR6,#0               ; [CPU_] |5864| 
        MOVL      XAR3,ACC              ; [CPU_] |5864| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5864| 
        MOV       *-SP[2],#0            ; [CPU_] |5864| 
        MOV       *-SP[1],#0            ; [CPU_] |5864| 
$C$DW$285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$285, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$285, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5864| 
        ; call occurs [#ULL$$CMP] ; [] |5864| 
        CMPB      AL,#0                 ; [CPU_] |5864| 
        B         $C$L50,EQ             ; [CPU_] |5864| 
        ; branchcc occurs ; [] |5864| 
        MOVB      ACC,#0                ; [CPU_] |5864| 
        SUBB      ACC,#1                ; [CPU_] |5864| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5864| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5864| 
        MOVL      ACC,XAR3              ; [CPU_] |5864| 
$C$DW$286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$286, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$286, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5864| 
        ; call occurs [#ULL$$CMP] ; [] |5864| 
        CMPB      AL,#0                 ; [CPU_] |5864| 
        B         $C$L50,EQ             ; [CPU_] |5864| 
        ; branchcc occurs ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5867,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5867 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5867| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5867| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5867| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5869,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5869 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5871 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5869| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5872,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5872 | continue;                       // not calibrated                      
; 5875 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5872| 
        B         $C$L48,EQ             ; [CPU_] |5872| 
        ; branchcc occurs ; [] |5872| 
	.dwpsn	file "../Source/prod.c",line 5876,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5876 | continue;                       // doesn't match, skip                 
; 5879 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5876| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5876| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5876| 
        MOVL      ACC,XAR3              ; [CPU_] |5876| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5876| 
$C$DW$287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$287, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$287, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5876| 
        ; call occurs [#ULL$$CMP] ; [] |5876| 
        CMPB      AL,#0                 ; [CPU_] |5876| 
        B         $C$L49,EQ             ; [CPU_] |5876| 
        ; branchcc occurs ; [] |5876| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5869,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5869| 
        MOVL      XAR0,ACC              ; [CPU_] |5869| 
        ADDB      XAR4,#1               ; [CPU_] |5869| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5869| 
        ; branchcc occurs ; [] |5869| 
        B         $C$L50,UNC            ; [CPU_] |5869| 
        ; branch occurs ; [] |5869| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5880,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5880 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5880| 
	.dwpsn	file "../Source/prod.c",line 5881,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5881 | conf_data.ch[ch].ci = sns;                                             
; 5883 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5881| 
        MOV       T,*-SP[5]             ; [CPU_] |5881| 
        MPYU      ACC,T,AL              ; [CPU_] |5881| 
        ADDL      ACC,XAR2              ; [CPU_] |5881| 
        MOVL      XAR5,ACC              ; [CPU_] |5881| 
        MOVB      XAR0,#42              ; [CPU_] |5881| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5881| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$288, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$279, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$279, DW_AT_TI_end_line(0x16fe)
	.dwattr $C$DW$279, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$279

	.sect	".text"
	.clink
	.global	_main

$C$DW$289	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$289, DW_AT_name("main")
	.dwattr $C$DW$289, DW_AT_low_pc(_main)
	.dwattr $C$DW$289, DW_AT_high_pc(0x00)
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$289, DW_AT_external
	.dwattr $C$DW$289, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$289, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$289, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$289, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("buff")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("cmdbuff")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U147
;* AR1   assigned to $O$U333
;* AR1   assigned to $O$U362
;* AR1   assigned to $O$U571
;* AR1   assigned to $O$U698
;* AR1   assigned to $O$U797
;* AR1   assigned to $O$U834
;* AR5   assigned to $O$U850
;* AL    assigned to $O$U1008
;* AR1   assigned to $O$U986
;* AR1   assigned to $O$U1077
;* AR1   assigned to $O$U976
;* AR6   assigned to $O$U1287
;* AR1   assigned to $O$U1313
;* AR7   assigned to $O$U1549
;* XT    assigned to $O$U1576
;* PL    assigned to $O$U1577
;* AR5   assigned to $O$U1601
;* PL    assigned to $O$U1606
;* PL    assigned to $O$U1613
;* AR7   assigned to $O$U1615
;* AR5   assigned to $O$U1616
;* AR5   assigned to $O$U1630
;* XT    assigned to $O$U1672
;* PL    assigned to $O$U1673
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("ccp")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -104]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("tempft")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -12]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("templg")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -14]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("ds_ct")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -47]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("ds_sn")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -49]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("ds_bm")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -50]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("ds_dec")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -51]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("ds_dn")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -52]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("ds_stop")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -53]

$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("ds_en")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_breg20 -54]

$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("bincmdresult")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_breg20 -47]

$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("line")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_breg20 -55]

$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("daccbm")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_breg20 -56]

$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("tempvalue")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_breg20 -106]

$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("scale")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_breg20 -16]

$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("unsaved")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_breg20 -48]

$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("tagch")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_breg20 -143]

$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("ss")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_breg20 -57]

$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("ch")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_breg20 -58]

$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("version")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U36
;* AR7   assigned to $O$U36
;* AR4   assigned to $O$U36
;* AR7   assigned to $O$U36
;* AR5   assigned to $O$U40
;* AR5   assigned to $O$U40
;* AR1   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR5   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR5   assigned to $O$K120
;* AR7   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR7   assigned to $O$K120
;* AR7   assigned to $O$K120
;* AR5   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR7   assigned to $O$K120
;* AR1   assigned to $O$K120
;* AR1   assigned to $O$K120
;* AR1   assigned to $O$K120
;* AR1   assigned to $O$K120
;* AR1   assigned to $O$K120
;* AR1   assigned to $O$K120
;* AR7   assigned to $O$K120
;* AR5   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR4   assigned to $O$K120
;* AR7   assigned to $O$K120
;* AR5   assigned to $O$U261
;* AR1   assigned to $O$U261
;* AR5   assigned to $O$U261
;* AR5   assigned to $O$U261
;* AR5   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR7   assigned to $O$U261
;* AR7   assigned to $O$U261
;* AR7   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR5   assigned to $O$U261
;* AR5   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR1   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR5   assigned to $O$U261
;* AR1   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR1   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR4   assigned to $O$U261
;* AR1   assigned to $O$U261
;* AR5   assigned to $O$K30
;* AR1   assigned to $O$K30
;* AR1   assigned to $O$K30
;* AR1   assigned to $O$K30
;* AR1   assigned to $O$U430
;* AR1   assigned to $O$U430
;* AR1   assigned to $O$U430
;* AR1   assigned to $O$U408
;* AR1   assigned to $O$U408
;* AR1   assigned to $O$U408
;* AR1   assigned to $O$U408
;* AR1   assigned to $O$U408
;* AR5   assigned to $O$U408
;* AR7   assigned to $O$U408
;* AR1   assigned to $O$U299
;* AR1   assigned to $O$U592
;* AR1   assigned to $O$U592
;* AR1   assigned to $O$U637
;* AR1   assigned to $O$U637
;* AR4   assigned to $O$K825
;* AR4   assigned to $O$K825
;* AR1   assigned to $O$K825
;* AR4   assigned to $O$K825
;* AR1   assigned to $O$K825
;* AR1   assigned to $O$K825
;* AR1   assigned to $O$K825
;* AR1   assigned to $O$K825
;* AR5   assigned to $O$K825
;* AR5   assigned to $O$K825
;* AR1   assigned to $O$K825
;* AR1   assigned to $O$U879
;* AR1   assigned to $O$U879
;* AR1   assigned to $O$U901
;* AR3   assigned to $O$U901
;* AR1   assigned to $O$U901
;* AR6   assigned to $O$U859
;* AL    assigned to $O$U859
;* AR1   assigned to $O$U927
;* AR1   assigned to $O$U927
;* AR1   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR5   assigned to $O$U1007
;* AR5   assigned to $O$U1007
;* AR5   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR4   assigned to $O$U1007
;* AR4   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR7   assigned to $O$U1007
;* AR1   assigned to $O$K316
;* AR7   assigned to $O$U1152
;* AR7   assigned to $O$U1152
;* AR7   assigned to $O$U1152
;* AR7   assigned to $O$U1152
;* AR4   assigned to $O$U1154
;* AR4   assigned to $O$U1154
;* AR4   assigned to $O$U1154
;* AR4   assigned to $O$U1154
;* AR3   assigned to $O$U1188
;* AR1   assigned to $O$U1188
;* AR1   assigned to $O$U1188
;* AR1   assigned to $O$U1194
;* AR4   assigned to $O$U1206
;* AR4   assigned to $O$U1203
;* AR7   assigned to $O$U1203
;* PL    assigned to $O$U1203
;* AR7   assigned to $O$U1203
;* AR4   assigned to $O$U1203
;* AR5   assigned to $O$U1263
;* AR4   assigned to $O$U1263
;* AR5   assigned to $O$U1342
;* AR5   assigned to $O$U1342
;* AR4   assigned to $O$U1338
;* AR4   assigned to $O$U1338
;* AR5   assigned to $O$U1397
;* AR5   assigned to $O$U1397
;* PL    assigned to $O$U1403
;* AR0   assigned to $O$U1403
;* AR1   assigned to $O$U1404
;* AR7   assigned to $O$U1404
;* AR0   assigned to $O$U1440
;* AR5   assigned to $O$U1440
;* PL    assigned to $O$U1443
;* AR1   assigned to $O$U1443
;* AR1   assigned to $O$U1444
;* AR7   assigned to $O$U1444
;* AR5   assigned to $O$U1482
;* AR5   assigned to $O$U1482
;* AR0   assigned to $O$U1517
;* AR5   assigned to $O$U1517
;* AR4   assigned to $O$U1552
;* AR1   assigned to $O$U1552
;* AR5   assigned to $O$U1552
;* AR5   assigned to $O$U1552
;* AR4   assigned to $O$U1641
;* AR5   assigned to $O$U1641
;* AR4   assigned to $O$U1641
;* AR5   assigned to $O$U1650
;* AR3   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("intp")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("intp")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("intp")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("intp")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("intp")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("intp")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("intp")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("intp")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("intp")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("intp")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("tempint")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("tempint")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("temp16")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg10]

$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("temp16")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_breg20 -59]

$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("temp32")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("temp32")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("cmethod")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg6]

$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("cmethod")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("flash_ret")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("flash_ret")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("flash_ret")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("flash_ret")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("slen")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("slen")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("slen")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("slen")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("slen")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("slen")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("pt")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("pt")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg0]

$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("pt")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_breg20 -59]

$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("pt")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("pt")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("pt")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("pt")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg12]

$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("pt")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("pt")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("wtp")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("wtp")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("wtp")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("wtp")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_reg12]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("cmdlen")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("cmdlen")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_reg0]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("cmdlen")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -47]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("cmdlen")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("cmdlen")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("cmdlen")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("cmdlen")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg0]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("k")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -59]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("k")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -60]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("k")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -60]

$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("k")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("k")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_reg16]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("k")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -59]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("k")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("k")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_reg2]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("k")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("k")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("k")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_reg10]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -47]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -47]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_reg6]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -47]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -47]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -47]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -47]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -60]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("j")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -60]

$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("j")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_breg20 -47]

$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("j")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_breg20 -59]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("j")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -61]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("j")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -48]

$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("j")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_breg20 -48]

$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("j")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_breg20 -48]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("j")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -48]

$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("j")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_breg20 -48]

$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("j")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_breg20 -48]

$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("j")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_breg20 -47]

$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("j")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg0]

$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg18]

$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg0]

$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_breg20 -47]

$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_breg20 -47]

$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("i")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("i")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("i")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("i")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("i")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$474	.dwtag  DW_TAG_variable
	.dwattr $C$DW$474, DW_AT_name("i")
	.dwattr $C$DW$474, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$474, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$474, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$475	.dwtag  DW_TAG_variable
	.dwattr $C$DW$475, DW_AT_name("i")
	.dwattr $C$DW$475, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$475, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$475, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$476	.dwtag  DW_TAG_variable
	.dwattr $C$DW$476, DW_AT_name("i")
	.dwattr $C$DW$476, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$476, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$476, DW_AT_location[DW_OP_reg16]

$C$DW$477	.dwtag  DW_TAG_variable
	.dwattr $C$DW$477, DW_AT_name("i")
	.dwattr $C$DW$477, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$477, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$477, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$478	.dwtag  DW_TAG_variable
	.dwattr $C$DW$478, DW_AT_name("i")
	.dwattr $C$DW$478, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$478, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$478, DW_AT_location[DW_OP_reg16]

$C$DW$479	.dwtag  DW_TAG_variable
	.dwattr $C$DW$479, DW_AT_name("volt")
	.dwattr $C$DW$479, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$479, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$479, DW_AT_location[DW_OP_breg20 -24]

$C$DW$480	.dwtag  DW_TAG_variable
	.dwattr $C$DW$480, DW_AT_name("dsum")
	.dwattr $C$DW$480, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$480, DW_AT_type(*$C$DW$T$354)
	.dwattr $C$DW$480, DW_AT_location[DW_OP_breg20 -32]

$C$DW$481	.dwtag  DW_TAG_variable
	.dwattr $C$DW$481, DW_AT_name("dacc")
	.dwattr $C$DW$481, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$481, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$481, DW_AT_location[DW_OP_breg20 -35]

$C$DW$482	.dwtag  DW_TAG_variable
	.dwattr $C$DW$482, DW_AT_name("sampcnt")
	.dwattr $C$DW$482, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$482, DW_AT_type(*$C$DW$T$335)
	.dwattr $C$DW$482, DW_AT_location[DW_OP_breg20 -38]

$C$DW$483	.dwtag  DW_TAG_variable
	.dwattr $C$DW$483, DW_AT_name("data")
	.dwattr $C$DW$483, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$483, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$483, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_sys_init")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_delay_us")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_gpio_init")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_extio_init")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_InitECan")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
;----------------------------------------------------------------------
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_configCAN")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 242,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 242 | canVarInit();                                                          
; 244 | // Set SD select output as appropriate (Usually high)                  
; 245 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 258 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_canVarInit")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_canVarInit          ; [CPU_] |242| 
        ; call occurs [#_canVarInit] ; [] |242| 
	.dwpsn	file "../Source/prod.c",line 259,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 259 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 260 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 262 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |259| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |259| 
        MOVL      ACC,XAR5              ; [CPU_] |259| 
        SUBL      XAR4,ACC              ; [CPU_] |259| 
        MOVL      ACC,XAR4              ; [CPU_] |259| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |259| 
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_memcpy")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |259| 
        ; call occurs [#_memcpy] ; [] |259| 
	.dwpsn	file "../Source/prod.c",line 263,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 263 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 264 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |263| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |263| 
        MOVL      ACC,XAR5              ; [CPU_] |263| 
        SUBL      XAR4,ACC              ; [CPU_] |263| 
        MOVL      ACC,XAR4              ; [CPU_] |263| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |263| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_memcpy")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |263| 
        ; call occurs [#_memcpy] ; [] |263| 
	.dwpsn	file "../Source/prod.c",line 281,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 281 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |281| 
        MOV       AH,#479               ; [CPU_] |281| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |281| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 291,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 291 | Flash_CallbackPtr = NULL;                                              
; 293 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |291| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |291| 
	.dwpsn	file "../Source/prod.c",line 294,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 294 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_flash_init")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |294| 
        ; call occurs [#_flash_init] ; [] |294| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_led_init")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |296| 
        ; call occurs [#_led_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 297,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 297 | lcd_init();                             // lcd/vfd display             
; 299 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_lcd_init")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |297| 
        ; call occurs [#_lcd_init] ; [] |297| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(0, 1);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |301| 
        MOVB      AH,#1                 ; [CPU_] |301| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_ssr_set")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_ssr_set")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_ssr_set")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 304,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 304 | ssr_set(3, 0);                  // indicate gui not connected          
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |304| 
        MOVB      AH,#0                 ; [CPU_] |304| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_ssr_set")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |304| 
        ; call occurs [#_ssr_set] ; [] |304| 
        MOVW      DP,#_GpioDataRegs     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 307,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 307 | GpioDataRegs.GPADAT.bit.GPIOA0 = 0;                     // Error Reset 
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xfffe ; [CPU_] |307| 
	.dwpsn	file "../Source/prod.c",line 308,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 308 | GpioDataRegs.GPADAT.bit.GPIOA1 = 1;                     // Master Sleep
;----------------------------------------------------------------------
        OR        @_GpioDataRegs,#0x0002 ; [CPU_] |308| 
	.dwpsn	file "../Source/prod.c",line 309,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 309 | GpioDataRegs.GPADAT.bit.GPIOA2 = 0;                     // Alarm Reset 
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xfffb ; [CPU_] |309| 
	.dwpsn	file "../Source/prod.c",line 310,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 310 | GpioDataRegs.GPADAT.bit.GPIOA3 = 0;                     // Disable Mod
;     | Sleep                                                                  
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xfff7 ; [CPU_] |310| 
	.dwpsn	file "../Source/prod.c",line 311,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 311 | GpioDataRegs.GPADAT.bit.GPIOA4 = 0;                     // Disable Bal 
; 314 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        AND       @_GpioDataRegs,#0xffef ; [CPU_] |311| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_conf_read")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |327| 
        ; call occurs [#_conf_read] ; [] |327| 
	.dwpsn	file "../Source/prod.c",line 328,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 328 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |328| 
        MOV       AH,#21930             ; [CPU_] |328| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |328| 
        B         $C$L51,EQ             ; [CPU_] |328| 
        ; branchcc occurs ; [] |328| 
	.dwpsn	file "../Source/prod.c",line 329,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 329 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_conf_default")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |329| 
        ; call occurs [#_conf_default] ; [] |329| 
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_conf_write")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |330| 
        ; call occurs [#_conf_write] ; [] |330| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 333 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |333| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |333| 
        ; call occurs [#_shunt_switch] ; [] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |335| 
        ; call occurs [#_ad7738_init] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 336 | ad7738_setcal();                                                       
; 338 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |336| 
        ; call occurs [#_ad7738_setcal] ; [] |336| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 339,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | tagwasthere[i] = 0;                                                    
; 342 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |340| 
	.dwpsn	file "../Source/prod.c",line 338,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |338| 
        ; branchcc occurs ; [] |338| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 344,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 344 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |344| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |342| 
	.dwpsn	file "../Source/prod.c",line 344,column 2,is_stmt,isa 0
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_delay_us")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |344| 
        ; call occurs [#_delay_us] ; [] |344| 
	.dwpsn	file "../Source/prod.c",line 346,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | lcd_clear();                                                           
; 347 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |346| 
        ; call occurs [#_lcd_clear] ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 348,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |348| 
	.dwpsn	file "../Source/prod.c",line 347,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |347| 
	.dwpsn	file "../Source/prod.c",line 348,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |348| 
        MOVL      XAR0,#44              ; [CPU_] |348| 
	.dwpsn	file "../Source/prod.c",line 347,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |347| 
	.dwpsn	file "../Source/prod.c",line 348,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |348| 
        MOVL      *-SP[4],ACC           ; [CPU_] |348| 
        MOVL      XAR4,XAR1             ; [CPU_] |348| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |348| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_sprintf")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |348| 
        ; call occurs [#_sprintf] ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |349| 
        MOVL      XAR4,XAR1             ; [CPU_] |349| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |349| 
        ; call occurs [#_lcd_dputs] ; [] |349| 
	.dwpsn	file "../Source/prod.c",line 350,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 350 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |350| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |350| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |350| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |350| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |350| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |350| 
        MOVL      XAR4,XAR1             ; [CPU_] |350| 
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_sprintf")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |350| 
        ; call occurs [#_sprintf] ; [] |350| 
	.dwpsn	file "../Source/prod.c",line 351,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 351 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |351| 
        MOVL      XAR4,XAR1             ; [CPU_] |351| 
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |351| 
        ; call occurs [#_lcd_dputs] ; [] |351| 
	.dwpsn	file "../Source/prod.c",line 352,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |352| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |352| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |352| 
        ; call occurs [#_lcd_dputs] ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 354,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 354 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |354| 
	.dwpsn	file "../Source/prod.c",line 355,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 355 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |355| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 357,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |357| 
        TBIT      AL,#4                 ; [CPU_] |357| 
        B         $C$L54,TC             ; [CPU_] |357| 
        ; branchcc occurs ; [] |357| 
	.dwpsn	file "../Source/prod.c",line 358,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 358 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |358| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 361,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 361 | if (1 & i) {                                                           
; 362 |         led_set( LED1, LED_RED);                                       
; 363 |         led_set( LED2, LED_RED);                                       
; 364 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |361| 
        B         $C$L55,TC             ; [CPU_] |361| 
        ; branchcc occurs ; [] |361| 
	.dwpsn	file "../Source/prod.c",line 365,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |365| 
        MOVB      AH,#2                 ; [CPU_] |365| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_led_set")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |365| 
        ; call occurs [#_led_set] ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |366| 
        B         $C$L56,UNC            ; [CPU_] |366| 
        ; branch occurs ; [] |366| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 362,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#1                 ; [CPU_] |362| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_led_set")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |363| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |363| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_led_set")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |368| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_delay_us")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |368| 
        ; call occurs [#_delay_us] ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 355,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |355| 
        MOV       AL,AR1                ; [CPU_] |355| 
        CMPB      AL,#100               ; [CPU_] |355| 
        B         $C$L53,LT             ; [CPU_] |355| 
        ; branchcc occurs ; [] |355| 
	.dwpsn	file "../Source/prod.c",line 371,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 371 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |371| 
        MOVB      AH,#0                 ; [CPU_] |371| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |371| 
        ; call occurs [#_led_set] ; [] |371| 
	.dwpsn	file "../Source/prod.c",line 372,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |372| 
        MOVB      AH,#0                 ; [CPU_] |372| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_led_set")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |372| 
        ; call occurs [#_led_set] ; [] |372| 
        MOV       AL,AR1                ; [CPU_] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |374| 
        CMPB      AL,#20                ; [CPU_] |374| 
        B         $C$L58,GEQ            ; [CPU_] |374| 
        ; branchcc occurs ; [] |374| 
	.dwpsn	file "../Source/prod.c",line 375,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 375 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |375| 
        MOVL      XAR4,XAR5             ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 377,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 375,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |375| 
        INC       *+XAR4[0]             ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 377,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |377| 
        CMPB      AL,#4                 ; [CPU_] |377| 
        B         $C$L57,LT             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
	.dwpsn	file "../Source/prod.c",line 378,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 378 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |378| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |378| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 381 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |381| 
        MOVB      AL,#40                ; [CPU_] |381| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |381| 
        ; call occurs [#_lcd_dputs] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 383 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_conf_write")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |383| 
        ; call occurs [#_conf_write] ; [] |383| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 386,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 386 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |386| 
        MOVL      XAR0,#74              ; [CPU_] |386| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |386| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |386| 
        MOVB      XAR0,#35              ; [CPU_] |386| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |386| 
        ADDL      XAR4,ACC              ; [CPU_] |386| 
        MOVL      XAR0,#88              ; [CPU_] |386| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |386| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 386,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |386| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 388,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 388 | switch (conf_data.rxdir) {                                             
; 389 | case SDIR_RS232:                        // RS232, 0                    
; 390 |         led_set( LED1, LED_RED);                                       
; 391 |         led_set( LED2, LED_RED);                                       
; 392 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 393 |         scia_init(temp32);                                             
; 394 |         break;                                                         
; 395 | case SDIR_RS485:                        // RS485, 1                    
; 396 |         led_set( LED1, LED_GREEN);                                     
; 397 |         led_set( LED2, LED_RED);                                       
; 398 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 399 |         scia_init(temp32);                                             
; 400 |         break;                                                         
; 401 | case SDIR_ENET:                 // Ethernet, 2                         
; 402 |         led_set( LED1, LED_RED);                                       
; 403 |         led_set( LED2, LED_GREEN);                                     
; 404 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 405 |         scia_init(921600L);                                            
; 406 |         //scia_init( 460800L );                                        
; 407 |         break;                                                         
; 408 | case SDIR_USB:                  // USB, 3                              
; 409 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 410 |         led_set( LED1, LED_GREEN);                                     
; 411 |         led_set( LED2, LED_GREEN);                                     
; 412 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 413 |         // the USB chip can't handle 921600bps without dropping bytes  
; 414 |         // it seems 460800bps is fine so far.                          
; 415 |         // the client (PC Host) side can use any baudrate.             
; 416 |         scia_init(460800L);                                            
; 417 |         break;                                                         
; 418 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |388| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |388| 
        B         $C$L64,EQ             ; [CPU_] |388| 
        ; branchcc occurs ; [] |388| 
        CMPB      AL,#1                 ; [CPU_] |388| 
        B         $C$L63,EQ             ; [CPU_] |388| 
        ; branchcc occurs ; [] |388| 
        CMPB      AL,#2                 ; [CPU_] |388| 
        B         $C$L60,EQ             ; [CPU_] |388| 
        ; branchcc occurs ; [] |388| 
        CMPB      AL,#3                 ; [CPU_] |388| 
        B         $C$L59,EQ             ; [CPU_] |388| 
        ; branchcc occurs ; [] |388| 
	.dwpsn	file "../Source/prod.c",line 419,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 419 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |419| 
	.dwpsn	file "../Source/prod.c",line 420,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |420| 
        MOVB      AH,#1                 ; [CPU_] |420| 
	.dwpsn	file "../Source/prod.c",line 419,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |419| 
	.dwpsn	file "../Source/prod.c",line 420,column 3,is_stmt,isa 0
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_led_set")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |420| 
        ; call occurs [#_led_set] ; [] |420| 
	.dwpsn	file "../Source/prod.c",line 421,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |421| 
        MOVB      AH,#2                 ; [CPU_] |421| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_led_set")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |421| 
        ; call occurs [#_led_set] ; [] |421| 
	.dwpsn	file "../Source/prod.c",line 422,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 422 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 423 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |422| 
        MOVL      XAR0,#72              ; [CPU_] |422| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |422| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |422| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |422| 
        MOVB      XAR0,#34              ; [CPU_] |422| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |422| 
	.dwpsn	file "../Source/prod.c",line 424,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 424 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |424| 
        ; branch occurs ; [] |424| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |410| 
        MOVB      AH,#2                 ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_led_set")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |410| 
        ; call occurs [#_led_set] ; [] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |411| 
        MOVB      AH,#2                 ; [CPU_] |411| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_led_set")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |412| 
        MOVL      XAR0,#72              ; [CPU_] |412| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |412| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |412| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |412| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |412| 
        ADDL      XAR4,ACC              ; [CPU_] |412| 
        MOVL      XAR0,#44              ; [CPU_] |412| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |412| 
        MOVL      *-SP[4],ACC           ; [CPU_] |412| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |412| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_sprintf")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |412| 
        ; call occurs [#_sprintf] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 416,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |416| 
	.dwpsn	file "../Source/prod.c",line 417,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |417| 
        ; branch occurs ; [] |417| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |402| 
        MOVB      AH,#1                 ; [CPU_] |402| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_led_set")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |403| 
        MOVB      AH,#2                 ; [CPU_] |403| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_led_set")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |403| 
        ; call occurs [#_led_set] ; [] |403| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 404,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |404| 
        MOVL      XAR0,#72              ; [CPU_] |404| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |404| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |404| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |404| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |404| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |404| 
        MOVL      XAR0,#44              ; [CPU_] |404| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |404| 
        MOVL      *-SP[4],ACC           ; [CPU_] |404| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |404| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_sprintf")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |404| 
        ; call occurs [#_sprintf] ; [] |404| 
	.dwpsn	file "../Source/prod.c",line 405,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |405| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |405| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |407| 
        ; branch occurs ; [] |407| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |400| 
        ; branch occurs ; [] |400| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 390,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |390| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |390| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_led_set")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |390| 
        ; call occurs [#_led_set] ; [] |390| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |391| 
        MOVB      AH,#1                 ; [CPU_] |391| 
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_led_set")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |391| 
        ; call occurs [#_led_set] ; [] |391| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 392,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |392| 
        MOVL      XAR0,#72              ; [CPU_] |392| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |392| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |392| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |392| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |392| 
        ADDL      XAR4,ACC              ; [CPU_] |392| 
        MOVL      XAR0,#88              ; [CPU_] |392| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |392| 
        MOVL      *-SP[4],ACC           ; [CPU_] |392| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |392| 
        MOVL      XAR0,#44              ; [CPU_] |392| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |392| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |392| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_sprintf")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |392| 
        ; call occurs [#_sprintf] ; [] |392| 
        MOVL      ACC,XAR1              ; [CPU_] |392| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_scia_init")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |393| 
        ; call occurs [#_scia_init] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 426,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 426 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |426| 
        ; call occurs [#_lcd_clear] ; [] |426| 
        MOVL      XAR0,#44              ; [CPU_] |426| 
	.dwpsn	file "../Source/prod.c",line 427,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 427 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |427| 
	.dwpsn	file "../Source/prod.c",line 426,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |426| 
	.dwpsn	file "../Source/prod.c",line 427,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 429 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |427| 
        ; call occurs [#_lcd_dputs] ; [] |427| 
	.dwpsn	file "../Source/prod.c",line 430,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 430 | uart_set_dir(conf_data.rxdir);                                         
; 432 | // initalize hardware and SFCLIB buffers                               
; 433 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 435 | // Enable global Interrupts and higher priority real-time debug events:
; 436 | EINT;                                                                  
; 437 | // Enable Global interrupt INTM                                        
; 438 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |430| 
        MOVL      XAR0,#40              ; [CPU_] |430| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |430| 
        MOVB      XAR0,#34              ; [CPU_] |430| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |430| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |430| 
        ; call occurs [#_uart_set_dir] ; [] |430| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 440,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 440 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 442 |         for (i = 0; i < 50; i++)                // 1s                  
; 444 |                 delay_us(20000);                // delay for 20ms      
; 446 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |440| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |440| 
        CMPB      AL,#3                 ; [CPU_] |440| 
        B         $C$L76,NEQ            ; [CPU_] |440| 
        ; branchcc occurs ; [] |440| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 448,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |448| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 450,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 450 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 452 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |450| 
        ; branch occurs ; [] |450| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 453,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |453| 
        ; call occurs [#_scia_rx_getcmds] ; [] |453| 
        CMPB      AL,#0                 ; [CPU_] |453| 
        B         $C$L70,EQ             ; [CPU_] |453| 
        ; branchcc occurs ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 452,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |452| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 454,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |454| 
        MOVL      XAR4,XAR1             ; [CPU_] |454| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |454| 
        ; call occurs [#_scia_rx_getcmd] ; [] |454| 
        MOV       T,*-SP[47]            ; [CPU_] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | lcd_puts(cmdbuff, 20 * j);                                             
; 456 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |455| 
        MOVL      XAR4,XAR1             ; [CPU_] |455| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |455| 
        ; call occurs [#_lcd_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 457,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 457 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |457| 
	.dwpsn	file "../Source/prod.c",line 455,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |455| 
	.dwpsn	file "../Source/prod.c",line 457,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |457| 
        B         $C$L69,LT             ; [CPU_] |457| 
        ; branchcc occurs ; [] |457| 
	.dwpsn	file "../Source/prod.c",line 458,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |458| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 453,column 4,is_stmt,isa 0
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |453| 
        ; call occurs [#_scia_rx_getcmds] ; [] |453| 
        CMPB      AL,#0                 ; [CPU_] |453| 
        B         $C$L68,NEQ            ; [CPU_] |453| 
        ; branchcc occurs ; [] |453| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 450,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |450| 
        TBIT      AL,#5                 ; [CPU_] |450| 
        B         $C$L67,NTC            ; [CPU_] |450| 
        ; branchcc occurs ; [] |450| 
	.dwpsn	file "../Source/prod.c",line 462,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |462| 
        SPM       #0                    ; [CPU_] 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_scia_puts")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |462| 
        ; call occurs [#_scia_puts] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |463| 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_delay_us")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |463| 
        ; call occurs [#_delay_us] ; [] |463| 
	.dwpsn	file "../Source/prod.c",line 464,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 464 | scia_puts("E\r");                                                      
; 465 | j = 0;                                                                 
; 466 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |464| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_scia_puts")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |464| 
        ; call occurs [#_scia_puts] ; [] |464| 
	.dwpsn	file "../Source/prod.c",line 467,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 467 | for (i = 0; i < WTT; i++)               // 10s                         
; 469 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |467| 
	.dwpsn	file "../Source/prod.c",line 465,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |465| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 470,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 470 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |470| 
        ; call occurs [#_scia_rx_getcmds] ; [] |470| 
        CMPB      AL,#0                 ; [CPU_] |470| 
        B         $C$L72,EQ             ; [CPU_] |470| 
        ; branchcc occurs ; [] |470| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 471,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 471 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |471| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |471| 
        ; call occurs [#_scia_rx_getcmd] ; [] |471| 
	.dwpsn	file "../Source/prod.c",line 472,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 472 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |472| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 474,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |474| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_delay_us")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |474| 
        ; call occurs [#_delay_us] ; [] |474| 
        MOV       AL,*-SP[47]           ; [CPU_] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |475| 
        B         $C$L73,LT             ; [CPU_] |475| 
        ; branchcc occurs ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 477,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | i = WTT - 10;                                                          
; 482 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |478| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 467,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |467| 
        CMP       AR1,#500              ; [CPU_] |467| 
        B         $C$L71,LT             ; [CPU_] |467| 
        ; branchcc occurs ; [] |467| 
	.dwpsn	file "../Source/prod.c",line 483,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 483 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |483| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_scia_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |483| 
        ; call occurs [#_scia_puts] ; [] |483| 
	.dwpsn	file "../Source/prod.c",line 484,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 484 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |484| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_delay_us")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |484| 
        ; call occurs [#_delay_us] ; [] |484| 
	.dwpsn	file "../Source/prod.c",line 485,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 485 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |485| 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_scia_puts")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |485| 
        ; call occurs [#_scia_puts] ; [] |485| 
	.dwpsn	file "../Source/prod.c",line 486,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |486| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_delay_us")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |486| 
        ; call occurs [#_delay_us] ; [] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |487| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_scia_puts")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |487| 
        ; call occurs [#_scia_puts] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |488| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_delay_us")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |488| 
        ; call occurs [#_delay_us] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |489| 
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_scia_puts")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |489| 
        ; call occurs [#_scia_puts] ; [] |489| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 491,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 491 | j = 0;                                                                 
; 492 | for (i = 0; i < 100; i++)               // 2s                          
; 494 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |491| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 495,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 495 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |495| 
        ; call occurs [#_scia_rx_getcmds] ; [] |495| 
        CMPB      AL,#0                 ; [CPU_] |495| 
        B         $C$L75,EQ             ; [CPU_] |495| 
        ; branchcc occurs ; [] |495| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 496,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |496| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |496| 
        ; call occurs [#_scia_rx_getcmd] ; [] |496| 
	.dwpsn	file "../Source/prod.c",line 497,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 497 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |497| 
	.dwpsn	file "../Source/prod.c",line 496,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |496| 
	.dwpsn	file "../Source/prod.c",line 497,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |497| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |497| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |497| 
        ; call occurs [#_lcd_puts] ; [] |497| 
	.dwpsn	file "../Source/prod.c",line 498,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 498 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |498| 
	.dwpsn	file "../Source/prod.c",line 497,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |497| 
	.dwpsn	file "../Source/prod.c",line 498,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |498| 
        B         $C$L75,LT             ; [CPU_] |498| 
        ; branchcc occurs ; [] |498| 
	.dwpsn	file "../Source/prod.c",line 499,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |499| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 502,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 502 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |502| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_delay_us")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |502| 
        ; call occurs [#_delay_us] ; [] |502| 
	.dwpsn	file "../Source/prod.c",line 492,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |492| 
        ; branchcc occurs ; [] |492| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 505,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 505 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |505| 
        B         $C$L78,UNC            ; [CPU_] |505| 
        ; branch occurs ; [] |505| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |444| 
        SPM       #0                    ; [CPU_] 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_delay_us")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |444| 
        ; call occurs [#_delay_us] ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 442,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |442| 
        ; branchcc occurs ; [] |442| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 508,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 508 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 510 | #ifdef SDHCCARD                                                        
; 512 | // check SD card                                                       
; 513 | lcd_puts( "SD Card Testing...", 0 );                                   
; 514 | sd_write = 0;                                                          
; 515 | sd_close = 0;                                                          
; 516 | sd_cnt = 0;                                                            
; 517 | fp = NULL;                                                             
; 519 | f_mount( 0, &Fatfs );                                                  
; 521 | res = f_getfree( "0:", &fsize, &fs );                                  
; 523 | sprintf( buff, "%02X", res );                                          
; 524 | lcd_puts( buff, 18 );                                                  
; 526 | if( !res )                                                             
; 528 |         switch( fs->fs_type & 3 )                                      
; 530 |                 case 1:                                                
; 531 |                 lcd_puts( "FAT12", 20 );                               
; 532 |                 break;                                                 
; 533 |                 case 2:                                                
; 534 |                 lcd_puts( "FAT16", 20 );                               
; 535 |                 break;                                                 
; 536 |                 case 3:                                                
; 537 |                 lcd_puts( "FAT32", 20 );                               
; 538 |                 break;                                                 
; 541 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 542 |         lcd_puts( buff, 40 );                                          
; 544 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 545 |         lcd_puts( buff, 60 );                                          
; 547 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 549 |                 switch( res )                                          
; 551 |                         case CT_MMC:                                   
; 552 |                         lcd_puts( "on MMC", 26 );                      
; 553 |                         break;                                         
; 554 |                         case CT_SD1:                                   
; 555 |                         lcd_puts( "on SDV1", 26 );                     
; 556 |                         break;                                         
; 557 |                         case CT_SD2:                                   
; 558 |                         lcd_puts( "on SDV2", 26 );                     
; 559 |                         break;                                         
; 560 |                         case CT_SD2|CT_BLOCK:                          
; 561 |                         lcd_puts( "on SDHC", 26 );                     
; 562 |                         break;                                         
; 563 |                         default:                                       
; 564 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 565 |                         break;                                         
; 570 | else                                                                   
; 572 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 588 | for( i = 0; i < 100; i++ )                      // 2s                  
; 590 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 592 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |508| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |508| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |508| 
	.dwpsn	file "../Source/prod.c",line 594,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 594 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |594| 
        MOVB      AH,#2                 ; [CPU_] |594| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_led_set")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |594| 
        ; call occurs [#_led_set] ; [] |594| 
	.dwpsn	file "../Source/prod.c",line 595,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 595 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |595| 
        MOVB      AH,#0                 ; [CPU_] |595| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_led_set")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |595| 
        ; call occurs [#_led_set] ; [] |595| 
	.dwpsn	file "../Source/prod.c",line 597,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 597 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_update_units")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |597| 
        ; call occurs [#_update_units] ; [] |597| 
	.dwpsn	file "../Source/prod.c",line 599,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 599 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |599| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |599| 
        ; call occurs [#_ad7738_resetpeak] ; [] |599| 
	.dwpsn	file "../Source/prod.c",line 600,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 600 | ad7738_resetvall( BM_ALL);              // reset valley                
; 601 | line = 0;                                                              
; 603 | //=====================================================================
;     | =====//                                                                
; 604 | // main loop                                                           
; 605 | //=====================================================================
;     | =====//                                                                
; 607 | Uint16 data[8];                                                        
; 608 | Uint16 data2[8];                                                       
; 609 | Uint16 data3[8];                                                       
; 610 | int n;                                                                 
; 611 | Uint16 res_1;                                                          
; 612 | volatile Uint16 res_2;                                                 
; 613 | res_1 = 0;                                                             
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |600| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |600| 
        ; call occurs [#_ad7738_resetvall] ; [] |600| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 614 | SPICANCheckInts(604);                                                  
;----------------------------------------------------------------------
        MOV       AL,#604               ; [CPU_] |614| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |614| 
        ; call occurs [#_SPICANCheckInts] ; [] |614| 
	.dwpsn	file "../Source/prod.c",line 615,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 615 | SPICANInit();                                                          
;----------------------------------------------------------------------
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |615| 
        ; call occurs [#_SPICANInit] ; [] |615| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | SPICANCheckInts(606);                                                  
; 617 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
        MOV       AL,#606               ; [CPU_] |616| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |616| 
        ; call occurs [#_SPICANCheckInts] ; [] |616| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 619,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 619 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |619| 
	.dwpsn	file "../Source/prod.c",line 622,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 622 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |622| 
        ; call occurs [#_SPICANReadStat] ; [] |622| 
        MOV       *-SP[46],AL           ; [CPU_] |622| 
	.dwpsn	file "../Source/prod.c",line 623,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 623 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |623| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |623| 
        ; call occurs [#_SPICANRead] ; [] |623| 
        MOV       *-SP[45],AL           ; [CPU_] |623| 
	.dwpsn	file "../Source/prod.c",line 624,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 624 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |624| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |624| 
        ; call occurs [#_SPICANRead] ; [] |624| 
        MOV       *-SP[44],AL           ; [CPU_] |624| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 625 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |625| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |625| 
        ; call occurs [#_SPICANRead] ; [] |625| 
        MOV       *-SP[43],AL           ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 626,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 626 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |626| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |626| 
        ; call occurs [#_SPICANRead] ; [] |626| 
        MOV       *-SP[42],AL           ; [CPU_] |626| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 627 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |627| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |627| 
        ; call occurs [#_SPICANRead] ; [] |627| 
        MOV       *-SP[41],AL           ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 628 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |628| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |628| 
        ; call occurs [#_SPICANRead] ; [] |628| 
        MOV       *-SP[40],AL           ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 629 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |629| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |629| 
        ; call occurs [#_SPICANRead] ; [] |629| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 631 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |631| 
        MOVB      AL,#161               ; [CPU_] |631| 
        SUBB      XAR4,#46              ; [CPU_U] |631| 
        MOVZ      AR4,AR4               ; [CPU_] |631| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |631| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |631| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | SPICANWaitForTXBuf(0);                                                 
; 633 | //      SPICAN_T0_RTS();                                               
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |632| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |632| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |632| 
	.dwpsn	file "../Source/prod.c",line 635,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 635 | data[0] = res_1;                                                       
; 636 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        MOVB      *-SP[46],#1,UNC       ; [CPU_] |635| 
	.dwpsn	file "../Source/prod.c",line 637,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 637 | data[1] = data[1] + 1;                                                 
; 638 | data[2] = data[2] + 1;                                                 
; 639 | data[3] = data[3] + 1;                                                 
; 640 | data[4] = data[4] + 1;                                                 
; 641 | data[5] = data[5] + 1;                                                 
; 642 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |637| 
	.dwpsn	file "../Source/prod.c",line 644,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 644 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |644| 
	.dwpsn	file "../Source/prod.c",line 638,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |638| 
	.dwpsn	file "../Source/prod.c",line 639,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |639| 
	.dwpsn	file "../Source/prod.c",line 640,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |640| 
	.dwpsn	file "../Source/prod.c",line 641,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |641| 
	.dwpsn	file "../Source/prod.c",line 642,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |642| 
	.dwpsn	file "../Source/prod.c",line 644,column 2,is_stmt,isa 0
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |644| 
        ; call occurs [#_SPICANRead] ; [] |644| 
        MOV       *-SP[46],AL           ; [CPU_] |644| 
	.dwpsn	file "../Source/prod.c",line 645,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 645 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |645| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |645| 
        ; call occurs [#_SPICANRead] ; [] |645| 
        MOV       *-SP[45],AL           ; [CPU_] |645| 
	.dwpsn	file "../Source/prod.c",line 646,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 646 | data[2] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |646| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |646| 
        ; call occurs [#_SPICANRead] ; [] |646| 
        MOV       *-SP[44],AL           ; [CPU_] |646| 
	.dwpsn	file "../Source/prod.c",line 647,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 647 | data[3] = SPICANRead(0x2C);                                            
;----------------------------------------------------------------------
        MOVB      AL,#44                ; [CPU_] |647| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |647| 
        ; call occurs [#_SPICANRead] ; [] |647| 
        MOV       *-SP[43],AL           ; [CPU_] |647| 
	.dwpsn	file "../Source/prod.c",line 648,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 648 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |648| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |648| 
        ; call occurs [#_SPICANRead] ; [] |648| 
        MOV       *-SP[42],AL           ; [CPU_] |648| 
	.dwpsn	file "../Source/prod.c",line 649,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 649 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |649| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |649| 
        ; call occurs [#_SPICANRead] ; [] |649| 
        MOV       *-SP[41],AL           ; [CPU_] |649| 
	.dwpsn	file "../Source/prod.c",line 650,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 650 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 652 | volatile Uint16 interrupts;                                            
; 653 | char buff_ints[80];                                                    
; 655 | for (;;) {                                                             
; 657 | //              Uint16 should_send;                                    
; 658 | //              // Check interrupts for what all happened              
; 659 | //              interrupts = SPICANRead(0x2C);                         
; 660 | //              delay_us(10);                                          
; 662 | //              // TX Interrupts                                       
; 663 | //              buff_ints[0] = interrupts;                             
; 664 | //              // RX Interrupts                                       
; 665 | //              if(interrupts > 0x00 && interrupts != 0xFF)            
; 666 | //              {                                                      
; 667 | //                      sprintf(buff_ints, "There were interrupts %d",
;     | interrupts);                                                           
; 668 | // //                   printf("%s", buff_ints);                       
; 669 | //              }                                                      
; 670 | //              SPICANRoutine();                                       
; 671 |         // data[7] = SPICANReadBufs(data2, data3);                     
; 672 | //              should_send = SPICANReadBufs(data2, data3);            
; 674 | //              res_1 = SPICANRead(0x2C);                              
; 675 | //              delay_us(10);                                          
; 676 | //              res_2 = (res_1 & 0xFC);                                
; 677 | //              SPICANBitModify(0x2C, 0x03, 0x00);                     
; 678 | //              // delay_us(10);                                       
; 679 | //              res_2 = SPICANReadInts();                              
; 680 | //              // SPICANWrite(0x2C, res_2);                           
; 681 | // //           res_2 = SPICANRead(0x2C);                              
; 682 | // //           res_2 = 0x00;                                          
; 683 | //              if((res_2 & 0x01) == 0x01)                             
; 684 | //              {                                                      
; 685 | //                      SPICANWaitForTXBuf(0);                         
; 686 | //                      SPICANReadSetT0Message(0xA2, 8, data2);        
; 687 | //                      SPICANWaitForTXBuf(0);                         
; 688 | //                      SPICAN_T0_RTS();                               
; 689 | //                      res_2 = SPICANRead(0x2C);                      
; 690 | //              }                                                      
; 691 | //              else if((res_2 & 0x02) == 0x02)                        
; 692 | //              {                                                      
; 693 | //                      SPICANWaitForTXBuf(0);                         
; 694 | //                      SPICANReadSetT0Message(0xA3, 8, data3);        
; 695 | //                      SPICANWaitForTXBuf(0);                         
; 696 | //                      SPICAN_T0_RTS();                               
; 697 | //              }                                                      
; 699 |         // Check for any errors                                        
; 700 | //              data[6] = SPICANRead(0x2D);                            
; 702 |         // check SW2 for reset command                                 
; 703 |         if (!(0x0010 & INBTTN)) {                                      
; 705 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 706 |                 ad7738_resetpeak(0x0f);                                
; 707 |                 ad7738_resetvall(0x0f);                                
; 709 | #if(0)                                                                 
; 710 |                 // DEBUG: tagid                                        
; 711 |                 lcd_clear();                                           
; 712 |                 for( i = 0; i < 4; i++ )                               
; 714 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 715 |                         lcd_puts( buff, i * 20 );                      
; 717 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 719 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 721 |                 // DEBUG: tagid                                        
; 722 |                 update_units();                                        
; 723 | #endif                                                                 
; 727 | #ifdef SDHCCARD                                                        
; 728 |         // write to SD card file if flag set                           
; 729 |         if( sd_write && fp )                                           
; 731 |                 if( prod_getavail() > 31 || sd_close )                 
; 733 |                         led_set( LED2, LED_RED );                      
; 735 |                         k = 32;                                        
; 737 |                         while( prod_getavail() && k-- )                
; 739 |                                 wtp = prod_getnext();                  
; 741 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 743 |                                         intp = (Uint16*)&wtp->adw[i];  
; 745 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 747 |                                         for( j = 0; j < 2; j++ )       
; 749 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 750 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 751 |                                                 intp++;                
; 754 |                                 sd_cnt++;                              
; 757 |                         if( sd_close )                                 
; 759 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 760 |                                 if( res )                              
; 762 |                                         sprintf( buff, "%02X ", res ); 
; 763 |                                         scia_puts( buff );             
; 766 |                                 res = f_close( fp );                   
; 767 |                                 fp = NULL;                             
; 769 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 770 |                                 scia_puts( buff );                     
; 772 |                                 sd_write = 0;                          
; 773 |                                 sd_close = 0;                          
; 776 |                         led_set( LED2, LED_OFF );                      
; 779 | #endif                                                                 
; 781 |         //=============================================================
;     | =====================//                                                
; 782 |         // update the vfd
;     |                          //                                            
; 783 |         //=============================================================
;     | =====================//                                                
; 784 |         // if there is new "monitor data" ready                        
; 785 |         if (ad7738_monrdy()) {                                         
; 786 |                 // clear the ready flag                                
; 787 |                 ad7738_monclr();                                       
; 789 |                 // display the appropriate data                        
; 790 |                 switch (conf_data.vfd[line].what) {                    
; 791 |                 case VFD_LOAD:                                         
; 792 |                         wtp = ad7738_getmon();                         
; 793 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 794 |                         goto VFD_LINE_BUFF;                            
; 796 |                 case VFD_PEAK:                                         
; 797 |                         wtp = ad7738_getpeak();                        
; 798 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 799 |                         goto VFD_LINE_BUFF;                            
; 801 |                 case VFD_VALL:                                         
; 802 |                         wtp = ad7738_getvall();                        
; 803 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 804 |                         goto VFD_LINE_BUFF;                            
; 806 |                 case VFD_POSI:                                         
; 807 |                         wtp = ad7738_getmon();                         
; 808 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 809 |                         goto VFD_LINE_BUFF;                            
; 811 |                 case VFD_VELO:                                         
; 812 |                         wtp = ad7738_getmon();                         
; 813 |                         //wtp = ad7738_getpeak();                      
; 814 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 816 |                         // display appropriate decimal points          
; 817 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 818 |                         case 0:                                        
; 819 |                                 sprintf(buff, "%10.0f", tempft);       
; 820 |                                 break;                                 
; 821 |                         case 1:                                        
; 822 |                                 sprintf(buff, "%10.1f", tempft);       
; 823 |                                 break;                                 
; 824 |                         case 2:                                        
; 825 |                                 sprintf(buff, "%10.2f", tempft);       
; 826 |                                 break;                                 
; 827 |                         case 3:                                        
; 828 |                                 sprintf(buff, "%10.3f", tempft);       
; 829 |                                 break;                                 
; 830 |                         case 4:                                        
; 831 |                                 sprintf(buff, "%10.4f", tempft);       
; 832 |                                 break;                                 
; 833 |                         case 5:                                        
; 834 |                                 sprintf(buff, "%10.5f", tempft);       
; 835 |                                 break;                                 
; 837 |                         break;                                         
; 839 |                 case VFD_LIMIT:                                        
; 840 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 841 |                         sprintf(buff, "  %s",                          
; 842 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 843 |                         break;                                         
; 844 |                 case VFD_TEMP:                                         
; 845 |                         sprintf(buff, "%10.1f", tempvalue);            
; 846 |                         break;                                         
; 849 |                 // print to LCD                                        
; 850 |                 lcd_puts(buff, 7 + 20 * line);                         
; 852 |                 line++;                                                
; 853 |                 if (line >= VFD_MAX) {                                 
; 854 |                         line = 0;                                      
; 858 |         //=============================================================
;     | =====================//                                                
; 859 |         // temperature sensor reading
;     |                  //                                                    
; 860 |         //=============================================================
;     | =====================//                                                
; 862 |         // if its time to start a temp conversion...                   
; 863 |         if (ad7738_tempstart()) {                                      
; 864 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 867 |         // if its time to start a temp reading...                      
; 868 |         else if (ad7738_tempread()) {                                  
; 869 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 870 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 873 |         //=============================================================
;     | =====================//                                                
; 874 |         // Auto ID detection
;     |                  //                                                    
; 875 |         //=============================================================
;     | =====================//                                                
; 876 |         // check for changes in the load cells connected by "TAG ID"   
; 877 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 878 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 880 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 882 |                                 // new loadcell just plugged in        
; 883 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 884 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 886 |                                         DINT;                          
; 887 |                                         maf_rst();                     
; 888 |                                         ad7738_setcal();               
; 889 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 890 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 891 |                                         EINT;                          
; 893 |                                         lcd_clear();                   
; 894 |                                         update_units();                
; 895 |                                         autoidchanged = 1;             
; 898 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 899 |                 } else {                                               
; 901 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 903 |                         if (autoid[tagch]) {                           
; 904 |                                 autoid[tagch] = 0;                     
; 905 |                                 lcd_clear();                           
; 906 |                                 update_units();                        
; 907 |                                 autoidchanged = 1;                     
; 911 |                 tagch++;                                               
; 912 |                 if (tagch >= CHS_MAX) {                                
; 913 |                         tagch = 0;                                     
; 917 |         //=============================================================
;     | =====================//                                                
; 918 |         // Data streamming
;     |                          //                                            
; 919 |         //=============================================================
;     | =====================//                                                
; 920 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 921 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 922 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 923 |                 //      taking into account decimation, etc.           
; 924 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 926 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 928 |                         ds_ct = 0;                                     
; 929 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 930 |                         j = 0;                                         
; 931 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 932 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 933 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 934 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 935 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 936 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 937 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 939 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 940 |                                 wtp = prod_getnext();                  
; 941 |                                 if (--k) {                             
; 942 |                                         continue;
;     |          // decimation                                                 
; 944 |                                 k = ds_dec;                            
; 945 |                                 ds_ct++;                               
; 947 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 948 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 949 |                                         if (ds_bm & ch) {              
; 950 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 951 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 952 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 953 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 954 |                                                         intp++;        
; 957 |                                         ch <<= 1;
;     |          // next channel                                               
; 960 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 961 |                                         if (ds_bm & ch) {              
; 962 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 963 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 964 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 965 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 966 |                                                         intp++;        
; 969 |                                         ch <<= 1;
;     |          // next channel                                               
; 972 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 973 |                                         if (ds_bm & ch) {              
; 974 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 975 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 976 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 977 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 978 |                                                         intp++;        
; 981 |                                         ch <<= 1;
;     |          // next channel                                               
; 985 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 987 |                         if (ds_stop) {                                 
; 988 |                                 ds_en = 0;                             
; 991 |                         scia_send_bin(buff, j);         // send data   
; 993 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 994 |                 } else if (ad7738_getlimitchgd()) {                    
; 995 |                         j = 0;                                         
; 996 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 997 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 998 |                         for (i = 0; i < LIM_MAX; i++) {                
; 999 |                                 buff[j++] = ad7738_getlimitst(i);      
; 1001 |                         scia_send_bin(buff, j);         // send data   
; 1002 |                 } else if (autoidchanged) {                            
; 1003 |                         autoidchanged = 0;                             
; 1005 |                         j = 0;                                         
; 1006 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 1007 |                         buff[j++] = GetAutoId;                  // 1,  
; 1008 |                         buff[j++] = conf_data.tagiden;                 
; 1009 |                         for (i = 0; i < CHS_MAX; i++) {                
; 1010 |                                 buff[j++] = autoid[i];                 
; 1012 |                         scia_send_bin(buff, j);         // send data   
; 1018 |         //=============================================================
;     | =====================//                                                
; 1019 |         // serial command processing
;     |                  //                                                    
; 1020 |         //=============================================================
;     | =====================//                                                
; 1022 |         //=============================================================
;     | =====================//                                                
; 1023 |         // Check for available command in the command buffer
;     |                  //                                                    
; 1024 |         //=============================================================
;     | =====================//                                                
; 1025 |         if (0 == scia_rx_getcmds()) {                                  
; 1026 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 1029 |         //=============================================================
;     | =====================//                                                
; 1030 |         // Read one command from command buffer
;     |                  //                                                    
; 1031 |         //=============================================================
;     | =====================//                                                
; 1032 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 1034 |         //=============================================================
;     | =====================//                                                
; 1035 |         // Empty command
;     |                          //                                            
; 1036 |         //=============================================================
;     | =====================//                                                
; 1037 |         if (0 == cmdlen) {                                             
; 1038 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 1039 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 1040 |                 continue;                                              
; 1043 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 1045 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1046 |                 // ASCII command mode processing
;     |                                  //                                    
; 1047 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1049 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 1052 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1053 |                 // Current configuration print out
;     |                          //                                            
; 1054 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1056 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1058 |                 case 'A':                                              
; 1060 |                         sprintf(buff, "\r\nVoltage:            %.2f %.2
;     | f\r\n",  getSystemCapVoltageF(), (float)getSystemCapVoltage()/10.0);   
; 1061 |                         scia_puts(buff);                               
; 1062 |                         sprintf(buff, "ShelfV :            %.2f %.2f\r\
;     | n",      (float)getModVoltage(1,1)/10.0,(float)getModVoltage(1,2)/10.0)
;     | ;                                                                      
; 1063 |                         scia_puts(buff);                               
; 1064 |                         sprintf(buff, "ShelfT :            %.2f (%d) %.
;     | 2f (%d)\r\n",    (float)getShelfMaxTemp(1)/10.0,getShelfMaxTempID(1),(f
;     | loat)getShelfMinTemp(1)/10.0,getShelfMinTempID(1));                    
; 1065 |                         scia_puts(buff);                               
; 1068 |                         sprintf(buff, "Current:            %.2f\r\n",
;     |  getSystemOutCurrentF());                                              
; 1069 |                         scia_puts(buff);                               
; 1072 |                         break;                                         
; 1125 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1127 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1129 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1132 |                         case 'A':                               // all 
; 1134 |                                 version = VERSION;                     
; 1135 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1136 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1137 |                                 scia_puts(buff);                       
; 1138 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1139 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1140 |                                 scia_puts(buff);                       
; 1141 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1142 |                                 scia_puts(buff);                       
; 1143 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1144 |                                                 conf_data.uname);      
; 1145 |                                 scia_puts(buff);                       
; 1147 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1148 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1149 |                                 scia_puts(buff);                       
; 1150 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1151 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1152 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1153 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1154 |                                         scia_puts(buff);               
; 1156 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1157 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1158 |                                 scia_puts(buff);                       
; 1160 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1161 |                                                 conf_data.filter);     
; 1162 |                                 scia_puts(buff);                       
; 1164 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1165 |                                         scia_puts("\r\n");             
; 1166 |                                         print_channel(ch);
;     |          // channel info                                               
; 1167 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1170 |                                 scia_puts("\r\n");                     
; 1171 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1172 |                                                 conf_data.velfilter);  
; 1173 |                                 scia_puts(buff);                       
; 1174 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1175 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1176 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1177 |                                         scia_puts(buff);               
; 1179 |                                 print_vfd();                           
; 1180 |                                 print_dac();                           
; 1181 |                                 print_limits();                        
; 1182 |                                 break;                                 
; 1184 |                         case 'S':
;     |  // sensor list                                                        
; 1186 |                                 scia_puts("\r\n");                     
; 1188 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1189 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1190 |                                         scia_puts(buff);               
; 1191 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1193 |                                 break;                                 
; 1195 |                         case 'D':
;     |  // Display settings                                                   
; 1197 |                                 print_vfd();                           
; 1198 |                                 break;                                 
; 1200 |                         case 'O':
;     |  // DAC settings                                                       
; 1202 |                                 print_dac();                           
; 1203 |                                 break;                                 
; 1205 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1207 |                                 print_limits();                        
; 1208 |                                 break;                                 
; 1210 |                         default:                                       
; 1211 |                                 goto INVALIDCMD;                       
; 1214 |                         break;                                         
; 1216 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1217 |                         // Unit config commands
;     |                                  //                                    
; 1218 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1219 |                 case 'U':                                       // Unit
; 1221 |                         if (cmdlen < 2) {                              
; 1222 |                                 goto INVALIDCMD;                       
; 1225 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1228 |                         case 'S':
;     |  // unit serial number                                                 
; 1230 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1231 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1232 |                                 conf_data.usn = atol(cmdbuff);         
; 1234 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1235 |                                 scia_puts(buff);                       
; 1236 |                                 unsaved = 1;                           
; 1237 |                                 break;                                 
; 1239 |                         case 'N':
;     |  // unit name                                                          
; 1241 |                                 j = sizeof(conf_data.uname) - 1;       
; 1242 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1243 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1244 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1246 |                                         cmdlen = j;                    
; 1247 |                                         cmdbuff[j] = '\0';             
; 1249 |                                 // also copy the null terminater       
; 1250 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1251 |                                                 cmdlen + 1);           
; 1252 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1254 |                                 scia_puts(cmdbuff);                    
; 1255 |                                 scia_puts("\r\n");                     
; 1256 |                                 unsaved = 1;                           
; 1257 |                                 break;                                 
; 1259 |                         case 'C':
;     |  // current sensor                                                     
; 1261 |                                 // channel number                      
; 1262 |                                 j = CHS_MAX;                           
; 1263 |                                 do {                                   
; 1264 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1265 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1266 |                                         ch = atoi(cmdbuff);            
; 1267 |                                         scia_puts(cmdbuff);            
; 1268 |                                         if (ch > 0 && ch <= j) {       
; 1269 |                                                 break;
;     |          // valid input channel number                                 
; 1271 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1272 |                                 } while (j);                           
; 1273 |                                 scia_puts("\r\n");                     
; 1274 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1276 |                                 // sensor number                       
; 1277 |                                 j = SENSPCH;                           
; 1278 |                                 do {                                   
; 1279 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1280 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1281 |                                         ss = atoi(cmdbuff);            
; 1282 |                                         scia_puts(cmdbuff);            
; 1283 |                                         if (ss > 0 && ss <= j) {       
; 1284 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1286 |                                                 break;                 
; 1288 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1289 |                                 } while (j);                           
; 1290 |                                 scia_puts("\r\n");                     
; 1291 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1293 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1294 |                                                 ch + 1, ss + 1);       
; 1295 |                                 scia_puts(buff);                       
; 1296 |                                 print_sensor(ss);                      
; 1297 |                                 unsaved = 1;                           
; 1299 |                                 DINT;                                  
; 1300 |                                 conf_data.ch[ch].ci = ss;              
; 1301 |                                 ad7738_setcal();                       
; 1303 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1304 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1305 |                                 EINT;                                  
; 1307 |                                 update_units();                        
; 1308 |                                 break;                                 
; 1310 |                         case 'I':
;     |  // interface                                                          
; 1312 |                                 for (j = 0; j < 4; j++) {              
; 1313 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1314 |                                         scia_puts(buff);               
; 1315 |                                         if (j < 3) {                   
; 1316 |                                                 scia_puts(", ");       
; 1319 |                                 scia_puts("\r\n");                     
; 1320 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1321 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1322 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1323 |                                 scia_puts(cmdbuff);                    
; 1324 |                                 scia_puts("\r\n");                     
; 1325 |                                 if (cmdlen == 0) {                     
; 1326 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1327 |                                         break;                         
; 1329 |                                 pt = atoi(cmdbuff);                    
; 1330 |                                 if (pt > 3) {                          
; 1331 |                                         scia_puts(                     
; 1332 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1333 |                                         break;                         
; 1335 |                                 conf_data.rxdir = pt;                  
; 1336 |                                 sprintf(buff,                          
; 1337 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1338 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1339 |                                 scia_puts(buff);                       
; 1340 |                                 scia_puts(                             
; 1341 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1342 |                                 unsaved = 1;                           
; 1343 |                                 break;                                 
; 1345 |                         case 'B':
;     |  // baudrate                                                           
; 1347 |                                 if (conf_data.rxdir == SDIR_USB        
; 1348 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1349 |                                         scia_puts(                     
; 1350 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1351 |                                         break;                         
; 1354 |                                 for (j = 0; j < 8; j++) {              
; 1355 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1356 |                                         scia_puts(buff);               
; 1357 |                                         if (j < 7) {                   
; 1358 |                                                 scia_puts(", ");       
; 1361 |                                 scia_puts("\r\n");                     
; 1362 |                                 cmdlen = sprintf(buff,                 
; 1363 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1364 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1365 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1366 |                                 scia_puts(cmdbuff);                    
; 1367 |                                 scia_puts("\r\n");                     
; 1368 |                                 if (cmdlen == 0) {                     
; 1369 |                                         scia_puts(                     
; 1370 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1371 |                                         break;                         
; 1373 |                                 pt = atoi(cmdbuff);                    
; 1374 |                                 if (pt > 7) {                          
; 1375 |                                         scia_puts(                     
; 1376 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1377 |                                         break;                         
; 1379 |                                 conf_data.baud = pt;                   
; 1380 |                                 sprintf(buff,                          
; 1381 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1382 |                                                 BAUD[conf_data.baud]); 
; 1383 |                                 scia_puts(buff);                       
; 1384 |                                 scia_puts(                             
; 1385 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1386 |                                 unsaved = 1;                           
; 1387 |                                 break;                                 
; 1389 |                         case 'F':
;     |  // averaging filter size                                              
; 1391 |                                 j = MAF_MAX;                           
; 1392 |                                 do {                                   
; 1393 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1394 |                                                         j);            
; 1395 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1396 |                                         i = atoi(cmdbuff);             
; 1397 |                                         scia_puts(cmdbuff);            
; 1398 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1399 |                                                 break;
;     |          // valid number input                                         
; 1401 |                                         scia_puts(                     
; 1402 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1403 |                                 } while (j);                           
; 1404 |                                 scia_puts("\r\n");                     
; 1406 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1407 |                                                 i);                    
; 1408 |                                 scia_puts(buff);                       
; 1409 |                                 unsaved = 1;                           
; 1411 |                                 // update new value                    
; 1412 |                                 DINT;                                  
; 1413 |                                 conf_data.filter = i;                  
; 1414 |                                 maf_rst();                             
; 1415 |                                 EINT;                                  
; 1416 |                                 break;                                 
; 1418 |                         case 'W':
;     |  // diff window ratio                                                  
; 1420 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1421 |                                                 conf_data.diffwin);    
; 1422 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1423 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1424 |                                 scia_puts(cmdbuff);                    
; 1425 |                                 scia_puts("\r\n");                     
; 1427 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1428 |                                                 conf_data.diffwin);    
; 1429 |                                 scia_puts(buff);                       
; 1430 |                                 unsaved = 1;                           
; 1432 |                                 DINT;                                  
; 1433 |                                 ad7738_setcal();                       
; 1434 |                                 maf_rst();                             
; 1435 |                                 EINT;                                  
; 1436 |                                 break;                                 
; 1438 |                         default:                                       
; 1439 |                                 goto INVALIDCMD;                       
; 1442 |                         break;                                         
; 1444 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1445 |                         // Board calibration
;     |                                  //                                    
; 1446 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1447 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1449 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1450 |                                 goto INVALIDCMD;                       
; 1453 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1454 |                                 goto INVALIDCMD;                       
; 1455 |                                 // invalid calibration method          
; 1458 |                         // channel index                               
; 1459 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1460 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1461 |                                 goto INVALIDCMD;                       
; 1462 |                                 // invalid channel number              
; 1464 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1466 |                         volt[0] = 0;                                   
; 1467 |                         volt[1] = 0;                                   
; 1468 |                         for (j = 3; j < cmdlen; j++) {                 
; 1469 |                                 if (cmdbuff[j] == 'X') {               
; 1470 |                                         j++;                           
; 1471 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1474 |                                 if (cmdbuff[j] == 'Y') {               
; 1475 |                                         j++;                           
; 1476 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1480 |                         if (volt[0] == volt[1]) {                      
; 1481 |                                 goto INVALIDCMD;                       
; 1482 |                                 // invalid parameters                  
; 1485 |                         lcd_clear();                                   
; 1486 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1487 |                         lcd_puts(buff, 20);                            
; 1488 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1489 |                         lcd_puts(buff, 40);                            
; 1490 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1491 |                         lcd_puts(buff, 60);                            
; 1493 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1496 |                         case 'C':
;     |  // board ADC calibration                                              
; 1498 |                                 lcd_puts("Board Calibration...", 0);   
; 1500 |                                 sprintf(buff,                          
; 1501 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1502 |                                                 ch + 1);               
; 1503 |                                 scia_puts(buff);                       
; 1515 |                                 for (j = 0; j < 2; j++) {              
; 1516 |                                         sprintf(buff,                  
; 1517 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1518 |                                                         volt[j]);      
; 1519 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1520 |                                         scia_puts("Reading ... ");     
; 1522 |                                         dsum[j] = 0;                   
; 1523 |                                         sampcnt = CAL_SAMPLES;         
; 1524 |                                         while (sampcnt--) {            
; 1525 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1526 |                                                         delay_us(1);
;     |                  // wait                                               
; 1528 |                                                 cntp = ad7738_getraw();
; 1529 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1532 |                                         scia_puts("done\r\n");         
; 1535 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1536 |                                                 / (dsum[1] - dsum[0]); 
; 1538 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1539 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1540 |                                 scia_puts(buff);                       
; 1541 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1542 |                                 break;                                 
; 1544 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1546 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1547 |                                                 || volt[1] < -10) {    
; 1548 |                                         lcd_clear();                   
; 1549 |                                         update_units();                
; 1550 |                                         goto INVALIDCMD;               
; 1551 |                                         // invalid parameters          
; 1554 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1556 |                                 sprintf(buff,                          
; 1557 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1558 |                                                 ch + 1);               
; 1559 |                                 scia_puts(buff);                       
; 1560 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1561 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1563 |                                 for (j = 0; j < 2; j++) {              
; 1564 |                                         if (volt[j] < 0) {             
; 1565 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1566 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1567 |                                         } else {                       
; 1568 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1569 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1571 |                                         if (dsum[0] <= 0) {            
; 1572 |                                                 dacc[j] = 0;           
; 1573 |                                         } else if (dsum[0] >= 0xffff) {
; 1574 |                                                 dacc[j] = 0xffff;      
; 1575 |                                         } else {                       
; 1576 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1579 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1580 |                                         scia_puts(buff);               
; 1581 |                                         cmdbuff[0] = '\0';             
; 1583 |                                         do {                           
; 1584 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1585 |                                                 latch_dac();           
; 1587 |                                                 do {                   
; 1588 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1589 | 
;     |  sizeof(cmdbuff));                                                     
; 1590 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1591 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1593 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1594 |                                                         break;
;     |                  // done                                               
; 1597 |                                                 i = atoi(cmdbuff + 1); 
; 1598 |                                                 if (i == 0) {          
; 1599 |                                                         i = 1;         
; 1602 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1604 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1605 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1606 |                                                         } else {       
; 1607 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1609 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1611 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1612 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1613 |                                                         } else {       
; 1614 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1617 |                                         } while (i);                   
; 1619 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1620 |                                         scia_puts(buff);               
; 1623 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1625 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1626 |                                 cmdbuff[0] = '\0';                     
; 1628 |                                 do {                                   
; 1629 |                                         mcbsp_xmit(dacc[2], ch);       
; 1630 |                                         latch_dac();                   
; 1632 |                                         do {                           
; 1633 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1634 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1635 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1637 |                                         if ('S' == cmdbuff[0]) {       
; 1638 |                                                 break;
;     |          // done                                                       
; 1641 |                                         i = atoi(cmdbuff + 1);         
; 1642 |                                         if (i == 0) {                  
; 1643 |                                                 i = 1;                 
; 1646 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1648 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1649 |                                                         dacc[2] += i;  
; 1650 |                                                 } else {               
; 1651 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1653 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1655 |                                                 if (dacc[2] >= i) {    
; 1656 |                                                         dacc[2] -= i;  
; 1657 |                                                 } else {               
; 1658 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1661 |                                 } while (i);                           
; 1663 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1664 |                                 scia_puts(buff);                       
; 1666 |                                 // do the calculations                 
; 1667 |                                 if (volt[0] < 0) {                     
; 1668 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1669 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1670 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1671 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1672 |                                 } else {                               
; 1673 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1674 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1675 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1676 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1678 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1680 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1682 |                                 sprintf(buff,                          
; 1683 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1684 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1685 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1686 |                                 scia_puts(buff);                       
; 1688 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1689 |                                 break;                                 
; 1691 |                         default:                                       
; 1692 |                                 goto INVALIDCMD;                       
; 1695 |                         unsaved = 1;                                   
; 1696 |                         lcd_clear();                                   
; 1697 |                         update_units();                                
; 1699 |                         DINT;                                          
; 1700 |                         ad7738_setcal();                               
; 1701 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1702 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1703 |                         EINT;                                          
; 1704 |                         break;                                         
; 1706 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1707 |                         // Channel sensor calibration
;     |                                  //                                    
; 1708 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1709 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1711 |                         if (cmdlen < 2) {                              
; 1712 |                                 goto INVALIDCMD;                       
; 1715 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1716 |                                         && 'S' != cmdbuff[1]) {        
; 1717 |                                 goto INVALIDCMD;                       
; 1718 |                                 // invalid calibration method          
; 1720 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1722 |                         lcd_clear();                                   
; 1723 |                         lcd_puts("Sensor Calibration..", 0);           
; 1725 |                         // === read informations ====                  
; 1726 |                         // channel number                              
; 1727 |                         j = CHS_MAX;                                   
; 1728 |                         do {                                           
; 1729 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1730 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1731 |                                 ch = atoi(cmdbuff);                    
; 1732 |                                 scia_puts(cmdbuff);                    
; 1733 |                                 if (ch > 0 && ch <= j) {               
; 1734 |                                         break;
;     |  // valid input channel number                                         
; 1736 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1737 |                         } while (j);                                   
; 1738 |                         scia_puts("\r\n");                             
; 1739 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1741 |                         // sensor number                               
; 1742 |                         j = SENSPCH;                                   
; 1743 |                         do {                                           
; 1744 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1745 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1746 |                                 ss = atoi(cmdbuff);                    
; 1747 |                                 scia_puts(cmdbuff);                    
; 1748 |                                 if (ss > 0 && ss <= j) {               
; 1749 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1751 |                                         break;                         
; 1753 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1754 |                         } while (j);                                   
; 1755 |                         scia_puts("\r\n");                             
; 1756 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1758 |                         // put on the vfd                              
; 1759 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1760 |                         lcd_puts(buff, 20);                            
; 1762 |                         // sensor serial number                        
; 1763 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1764 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1765 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1766 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1768 |                                 cmdlen = j;                            
; 1769 |                                 cmdbuff[j] = '\0';                     
; 1771 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1772 |                         scia_puts(cmdbuff);                            
; 1773 |                         scia_puts("\r\n");                             
; 1775 |                         // sensor label                                
; 1776 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1777 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1778 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1779 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1781 |                                 cmdlen = j;                            
; 1782 |                                 cmdbuff[j] = '\0';                     
; 1784 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1785 |                         scia_puts(cmdbuff);                            
; 1786 |                         scia_puts("\r\n");                             
; 1788 |                         // unit                                        
; 1789 |                         for (j = 0; j < 7; j++) {                      
; 1790 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1792 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1793 |                         scia_puts(buff);                               
; 1794 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1795 |                                         sizeof(cmdbuff));              
; 1796 |                         tsensor.unit = atoi(cmdbuff);                  
; 1798 |                         switch (tsensor.unit) {                        
; 1799 |                         case 0:                                 // lb  
; 1800 |                         case 1:                                 // kg  
; 1801 |                                 tsensor.unit |= 0x10;                  
; 1802 |                                 break;                                 
; 1803 |                         case 2:                                 // in  
; 1804 |                         case 3:                                 // cm  
; 1805 |                         case 4:                                 // mm  
; 1806 |                                 tsensor.unit |= 0x20;                  
; 1807 |                                 break;                                 
; 1808 |                         case 5:                                 // ps  
; 1809 |                                 tsensor.unit |= 0x30;                  
; 1810 |                                 break;                                 
; 1811 |                         case 6:                                 // nm  
; 1812 |                                 tsensor.unit |= 0x40;                  
; 1813 |                                 break;                                 
; 1814 |                         case 7:                                        
; 1815 |                         case 8:                                        
; 1816 |                         case 15:                                       
; 1817 |                                 tsensor.unit |= 0xf0;                  
; 1818 |                                 break;                                 
; 1819 |                         default:                                       
; 1820 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1821 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1822 |                                 break;                                 
; 1824 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1825 |                         tsensor.ufactor = 1;                    // 1:1 
; 1827 |                         scia_puts(cmdbuff);                            
; 1828 |                         scia_puts("\r\n");                             
; 1830 |                         // range                                       
; 1831 |                         j = 1;                                         
; 1832 |                         do {                                           
; 1833 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1834 |                                 tsensor.range = atof(cmdbuff);         
; 1835 |                                 if (tsensor.range != 0) {              
; 1836 |                                         break;                         
; 1838 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1839 |                         } while (j);                                   
; 1840 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1841 |                         scia_puts(cmdbuff);                            
; 1842 |                         scia_puts("\r\n");                             
; 1844 |                         tsensor.tagid = tagid(ch);                     
; 1846 |                         if (tsensor.tagid == 0) {                      
; 1847 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1848 |                         } else {                                       
; 1849 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1851 |                         scia_puts(buff);                               
; 1853 |                         switch (cmethod)
;     |  // on method code                                                     
; 1856 |                         case 'V':
;     |  // mv/v cal                                                           
; 1858 |                                 lcd_puts("Method: mv/v", 40);          
; 1860 |                                 tsensor.method = MD_RUN_MVV;           
; 1861 |                                 tsensor.points = 1;                    
; 1863 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1864 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1865 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1866 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1867 |                                 if (tsensor.slope[0] == 0) {           
; 1868 |                                         tsensor.slope[0] = 1;          
; 1870 |                                 scia_puts(cmdbuff);                    
; 1871 |                                 scia_puts("\r\n");                     
; 1873 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1874 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1876 |                                 scia_puts("Reading ... ");             
; 1878 |                                 dsum[0] = 0;                           
; 1879 |                                 sampcnt = CAL_SAMPLES;                 
; 1880 |                                 while (sampcnt--) {                    
; 1881 |                                         while (0 == ad7738_rawrdy()) { 
; 1882 |                                                 delay_us(1);
;     |          // wait                                                       
; 1885 |                                         cntp = ad7738_getraw();        
; 1886 |                                         dsum[0] += cntp->adc[ch];      
; 1888 |                                 scia_puts("done\r\n");                 
; 1890 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1891 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1892 |                                 break;                                 
; 1894 |                         case 'M':
;     |  // mass cal                                                           
; 1896 |                                 tsensor.method = MD_RUN_MAS;           
; 1898 |                                 // calibration points for mass cal only
; 1899 |                                 j = PNT_MAX;                           
; 1900 |                                 do {                                   
; 1901 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1902 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1903 |                                         tsensor.points = atoi(cmdbuff);
; 1904 |                                         scia_puts(cmdbuff);            
; 1905 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1906 |                                                 break;                 
; 1908 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1910 |                                 } while (j);                           
; 1911 |                                 scia_puts("\r\n");                     
; 1913 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1914 |                                 lcd_puts(buff, 40);                    
; 1916 |                                 // calculate the default point values  
; 1917 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1918 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1919 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1922 |                                 // read in value with default provided 
; 1923 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1924 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1925 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1926 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1928 |                                         // zero length response set the
;     |  default                                                               
; 1929 |                                         if (cmdlen > 0) {              
; 1930 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1932 |                                         scia_puts(cmdbuff);            
; 1933 |                                         scia_puts("\r\n");             
; 1936 |                                 // TODO: sort the list of points       
; 1938 |                                 // read adc count for each point       
; 1939 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1940 |                                         sprintf(buff,                  
; 1941 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1942 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1943 |                                                         j + 1);        
; 1944 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1945 |                                         scia_puts("Reading ... ");     
; 1947 |                                         dsum[0] = 0;                   
; 1948 |                                         sampcnt = CAL_SAMPLES;         
; 1949 |                                         while (sampcnt--) {            
; 1950 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1951 |                                                         delay_us(1);
;     |                  // wait                                               
; 1954 |                                                 cntp = ad7738_getraw();
; 1955 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1957 |                                         scia_puts("done\r\n");         
; 1958 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1961 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1962 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1963 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1964 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1965 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1966 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1967 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1968 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1969 | 
;     |  * tsensor.adc[j];                                                     
; 1971 |                                 break;                                 
; 1973 |                         case 'S':
;     |  // shunt cal                                                          
; 1975 |                                 lcd_puts("Method: shunt", 40);         
; 1977 |                                 tsensor.method = MD_RUN_SHT;           
; 1978 |                                 tsensor.points = 1;                    
; 1980 |                                 sprintf(buff,                          
; 1981 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1982 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1983 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1984 |                                 scia_puts(cmdbuff);                    
; 1985 |                                 scale = atof(cmdbuff);                 
; 1986 |                                 if (scale == 0) {                      
; 1987 |                                         scale = 1.46;                  
; 1988 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1990 |                                 scia_puts("\r\n");                     
; 1992 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1993 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1995 |                                 scia_puts("Reading ... ");             
; 1997 |                                 for (j = 0; j < 2; j++) {              
; 1998 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 2000 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 2001 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 2002 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 2004 |                                                 DINT;                  
; 2005 |                                                 maf_rst();             
; 2006 |                                                 EINT;                  
; 2007 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 2010 |                                         dsum[j] = 0;                   
; 2011 |                                         sampcnt = CAL_SAMPLES;         
; 2012 |                                         while (sampcnt--) {            
; 2013 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 2014 |                                                         delay_us(1);
;     |                  // wait                                               
; 2017 |                                                 cntp = ad7738_getraw();
; 2018 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 2022 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 2023 |                                 DINT;                                  
; 2024 |                                 maf_rst();                             
; 2025 |                                 EINT;                                  
; 2027 |                                 scia_puts("done\r\n");                 
; 2029 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 2030 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 2031 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 2032 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 2033 |                                 break;                                 
; 2035 |                         default:                                       
; 2036 |                                 lcd_clear();                           
; 2037 |                                 update_units();                        
; 2038 |                                 goto INVALIDCMD;                       
; 2041 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 2042 |                         scia_getparam(                                 
; 2043 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 2044 |                                         cmdbuff, sizeof(cmdbuff));     
; 2045 |                         scia_puts("Reading ... ");                     
; 2047 |                         for (j = 0; j < 2; j++) {                      
; 2048 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 2050 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 2051 |                                         for (i = 0; i < 50; i++) {     
; 2052 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 2054 |                                         DINT;                          
; 2055 |                                         maf_rst();                     
; 2056 |                                         EINT;                          
; 2057 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 2060 |                                 dsum[j] = 0;                           
; 2061 |                                 sampcnt = CAL_SAMPLES;                 
; 2062 |                                 while (sampcnt--) {                    
; 2063 |                                         while (0 == ad7738_rawrdy()) { 
; 2064 |                                                 delay_us(1);
;     |          // wait                                                       
; 2067 |                                         cntp = ad7738_getraw();        
; 2068 |                                         dsum[j] += cntp->adc[ch];      
; 2070 |                                 dsum[j] /= CAL_SAMPLES;                
; 2072 |                                 pt = 0;                                
; 2073 |                                 if (tsensor.points > 2) {              
; 2074 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2075 |                                                 pt++;                  
; 2078 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2079 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2082 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2083 |                         DINT;                                          
; 2084 |                         maf_rst();                                     
; 2085 |                         EINT;                                          
; 2087 |                         scia_puts("done\r\n");                         
; 2089 |                         tsensor.shunt = volt[1] - volt[0];             
; 2091 |                         // setup some other members of the structure   
; 2092 |                         tsensor.tare = 0;                              
; 2093 |                         tsensor.dacgain = 1;                           
; 2094 |                         tsensor.dacoff = 0;                            
; 2095 |                         tsensor.ch = ch;                               
; 2097 |                         DINT;                                          
; 2098 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2099 |                                         sizeof(sconf_t));              
; 2101 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2103 |                         ad7738_setcal();                               
; 2104 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2105 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2106 |                         EINT;                                          
; 2108 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2109 |                                         ch + 1, ss + 1);               
; 2110 |                         scia_puts(buff);                               
; 2111 |                         print_sensor(ss);                              
; 2113 |                         unsaved = 1;                                   
; 2114 |                         lcd_clear();                                   
; 2115 |                         update_units();                                
; 2116 |                         break;                                         
; 2118 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2119 |                         // sensor config commands
;     |                                          //                            
; 2120 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2121 |                 case 'S':                               // sensor      
; 2123 |                         if (cmdlen < 2) {                              
; 2124 |                                 goto INVALIDCMD;                       
; 2127 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2128 |                                         && 'D' != cmdbuff[1]) {        
; 2129 |                                 goto INVALIDCMD;                       
; 2130 |                                 // invalid command                     
; 2132 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2152 |                         // sensor number                               
; 2153 |                         j = SENSPCH;                                   
; 2154 |                         do {                                           
; 2155 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2156 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2157 |                                 ss = atoi(cmdbuff);                    
; 2158 |                                 scia_puts(cmdbuff);                    
; 2159 |                                 if (ss > 0 && ss <= j) {               
; 2160 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2162 |                                         break;                         
; 2164 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2165 |                         } while (j);                                   
; 2166 |                         scia_puts("\r\n");                             
; 2167 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2169 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2172 |                         case 'N':
;     |  // change sensor label                                                
; 2174 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2175 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2176 |                                                 ss + 1, j);            
; 2177 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2178 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2180 |                                         cmdlen = j;                    
; 2181 |                                         cmdbuff[j] = '\0';             
; 2183 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2184 |                                                 cmdlen + 1);           
; 2185 |                                 scia_puts(cmdbuff);                    
; 2186 |                                 scia_puts("\r\n");                     
; 2187 |                                 unsaved = 1;                           
; 2189 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2190 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2191 |                                 scia_puts(buff);                       
; 2192 |                                 break;                                 
; 2194 |                         case 'U':
;     |  // change the output unit                                             
; 2196 |                                 scale = 0;                             
; 2198 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2199 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2201 |                                         do {                           
; 2202 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2203 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2204 |                                                 j = atoi(cmdbuff);     
; 2205 |                                                 scia_puts(cmdbuff);    
; 2206 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2207 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2209 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2210 |                                         scia_puts("\r\n");             
; 2212 |                                         switch (j) {                   
; 2213 |                                         case 0:                        
; 2214 |                                                 scale = 1;             
; 2215 |                                                 j |= 0x10;             
; 2216 |                                                 break;                 
; 2217 |                                         case 1:                        
; 2218 |                                                 scale = LB_TO_KG;      
; 2219 |                                                 j |= 0x10;             
; 2220 |                                                 break;                 
; 2221 |                                         case 7:                        
; 2222 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2223 |                                                 j |= 0xf0;             
; 2224 |                                                 break;                 
; 2226 |                                         break;                         
; 2228 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2230 |                                         do {                           
; 2231 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2232 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2233 |                                                 j = atoi(cmdbuff);     
; 2234 |                                                 scia_puts(cmdbuff);    
; 2235 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2236 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2238 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2239 |                                         scia_puts("\r\n");             
; 2241 |                                         switch (j) {                   
; 2242 |                                         case 0:                        
; 2243 |                                                 scale = 1.0 / LB_TO_KG;
; 2244 |                                                 j |= 0x10;             
; 2245 |                                                 break;                 
; 2246 |                                         case 1:                        
; 2247 |                                                 scale = 1;             
; 2248 |                                                 j |= 0x10;             
; 2249 |                                                 break;                 
; 2250 |                                         case 7:                        
; 2251 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2252 |                                                 j |= 0xf0;             
; 2253 |                                                 break;                 
; 2255 |                                         break;                         
; 2257 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2259 |                                         do {                           
; 2260 |                                                 scia_getparam(         
; 2261 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2262 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2263 |                                                 j = atoi(cmdbuff);     
; 2264 |                                                 scia_puts(cmdbuff);    
; 2265 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2266 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2268 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2269 |                                         scia_puts("\r\n");             
; 2271 |                                         switch (j) {                   
; 2272 |                                         case 2:                        
; 2273 |                                                 scale = 1;             
; 2274 |                                                 j |= 0x20;             
; 2275 |                                                 break;                 
; 2276 |                                         case 3:                        
; 2277 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2278 |                                                 j |= 0x20;             
; 2279 |                                                 break;                 
; 2280 |                                         case 4:                        
; 2281 |                                                 scale = IN_TO_MM;      
; 2282 |                                                 j |= 0x20;             
; 2283 |                                                 break;                 
; 2284 |                                         case 7:                        
; 2285 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2286 |                                                 j |= 0xf0;             
; 2287 |                                                 break;                 
; 2289 |                                         break;                         
; 2291 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2293 |                                         do {                           
; 2294 |                                                 scia_getparam(         
; 2295 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2296 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2297 |                                                 j = atoi(cmdbuff);     
; 2298 |                                                 scia_puts(cmdbuff);    
; 2299 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2300 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2302 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2303 |                                         scia_puts("\r\n");             
; 2305 |                                         switch (j) {                   
; 2306 |                                         case 2:                        
; 2307 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2308 |                                                 j |= 0x20;             
; 2309 |                                                 break;                 
; 2310 |                                         case 3:                        
; 2311 |                                                 scale = 1;             
; 2312 |                                                 j |= 0x20;             
; 2313 |                                                 break;                 
; 2314 |                                         case 4:                        
; 2315 |                                                 scale = 10;            
; 2316 |                                                 j |= 0x20;             
; 2317 |                                                 break;                 
; 2318 |                                         case 7:                        
; 2319 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2320 |                                                 j |= 0xf0;             
; 2321 |                                                 break;                 
; 2323 |                                         break;                         
; 2325 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2327 |                                         do {                           
; 2328 |                                                 scia_getparam(         
; 2329 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2330 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2331 |                                                 j = atoi(cmdbuff);     
; 2332 |                                                 scia_puts(cmdbuff);    
; 2333 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2334 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2336 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2337 |                                         scia_puts("\r\n");             
; 2339 |                                         switch (j) {                   
; 2340 |                                         case 2:                        
; 2341 |                                                 scale = 1.0 / IN_TO_MM;
; 2342 |                                                 j |= 0x20;             
; 2343 |                                                 break;                 
; 2344 |                                         case 3:                        
; 2345 |                                                 scale = 0.1;           
; 2346 |                                                 j |= 0x20;             
; 2347 |                                                 break;                 
; 2348 |                                         case 4:                        
; 2349 |                                                 scale = 1;             
; 2350 |                                                 j |= 0x20;             
; 2351 |                                                 break;                 
; 2352 |                                         case 7:                        
; 2353 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2354 |                                                 j |= 0xf0;             
; 2355 |                                                 break;                 
; 2357 |                                         break;                         
; 2359 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2361 |                                         do {                           
; 2362 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2363 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2364 |                                                 j = atoi(cmdbuff);     
; 2365 |                                                 scia_puts(cmdbuff);    
; 2366 |                                                 if (j != 5 && j != 7) {
; 2367 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2369 |                                         } while (j != 5 && j != 7);    
; 2370 |                                         scia_puts("\r\n");             
; 2372 |                                         switch (j) {                   
; 2373 |                                         case 5:                        
; 2374 |                                                 scale = 1;             
; 2375 |                                                 j |= 0x30;             
; 2376 |                                                 break;                 
; 2377 |                                         case 7:                        
; 2378 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2379 |                                                 j |= 0xf0;             
; 2380 |                                                 break;                 
; 2382 |                                         break;                         
; 2384 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2386 |                                         do {                           
; 2387 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2388 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2389 |                                                 j = atoi(cmdbuff);     
; 2390 |                                                 scia_puts(cmdbuff);    
; 2391 |                                                 if (j != 6 && j != 7) {
; 2392 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2394 |                                         } while (j != 6 && j != 7);    
; 2395 |                                         scia_puts("\r\n");             
; 2397 |                                         switch (j) {                   
; 2398 |                                         case 6:                        
; 2399 |                                                 scale = 1;             
; 2400 |                                                 j |= 0x40;             
; 2401 |                                                 break;                 
; 2402 |                                         case 7:                        
; 2403 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2404 |                                                 j |= 0xf0;             
; 2405 |                                                 break;                 
; 2407 |                                         break;                         
; 2409 |                                 default:                               
; 2410 |                                         break;                         
; 2413 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2414 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2415 |                                         break;                         
; 2418 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2419 |                                         scia_puts(                     
; 2420 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2421 |                                         break;                         
; 2424 |                                 conf_data.sensor[ss].ounit = j;        
; 2425 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2426 |                                 unsaved = 1;                           
; 2428 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2429 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2430 |                                 scia_puts(buff);                       
; 2432 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2433 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2434 |                                                 update_units();        
; 2435 |                                                 DINT;                  
; 2436 |                                                 ad7738_setcal();       
; 2437 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2438 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2439 |                                                 EINT;                  
; 2442 |                                 break;                                 
; 2444 |                         case 'B':
;     |  // change percent base                                                
; 2446 |                                 // base                                
; 2447 |                                 j = 1;                                 
; 2448 |                                 do {                                   
; 2449 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2450 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2451 |                                         scale = atof(cmdbuff);         
; 2452 |                                         scia_puts(cmdbuff);            
; 2453 |                                         if (scale != 0) {              
; 2454 |                                                 break;                 
; 2456 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2457 |                                 } while (j);                           
; 2458 |                                 scia_puts("\r\n");                     
; 2459 |                                 conf_data.sensor[ss].base = scale;     
; 2460 |                                 unsaved = 1;                           
; 2462 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2463 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2464 |                                 scia_puts(buff);                       
; 2466 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2467 |                                         // output unit is percent      
; 2468 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2469 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2471 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2472 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2473 |                                                         // changed is f
;     | or the current sensor                                                  
; 2474 |                                                         DINT;          
; 2475 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2476 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2477 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2478 |                                                         EINT;          
; 2482 |                                 break;                                 
; 2484 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2486 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2487 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2488 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2489 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2490 |                                 scia_puts(cmdbuff);                    
; 2491 |                                 scia_puts("\r\n");                     
; 2493 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2494 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2495 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2496 |                                 scia_puts(cmdbuff);                    
; 2497 |                                 scia_puts("\r\n");                     
; 2498 |                                 unsaved = 1;                           
; 2500 |                                 sprintf(buff,                          
; 2501 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2502 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2503 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2504 |                                 scia_puts(buff);                       
; 2506 |                                 DINT;                                  
; 2507 |                                 ad7738_setcal();                       
; 2508 |                                 EINT;                                  
; 2509 |                                 break;                                 
; 2511 |                         default:                                       
; 2512 |                                 goto INVALIDCMD;                       
; 2515 |                         break;                                         
; 2517 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2518 |                         // Encoder config commands
;     |                                  //                                    
; 2519 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2520 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2522 |                         if (cmdlen < 2) {                              
; 2523 |                                 goto INVALIDCMD;                       
; 2526 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2529 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2531 |                                 j = MAF_MAX;                           
; 2532 |                                 do {                                   
; 2533 |                                         sprintf(buff,                  
; 2534 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2535 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2536 |                                         i = atoi(cmdbuff);             
; 2537 |                                         scia_puts(cmdbuff);            
; 2538 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2539 |                                                 break;
;     |          // valid number input                                         
; 2541 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2542 |                                 } while (j);                           
; 2543 |                                 scia_puts("\r\n");                     
; 2545 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2546 |                                                 i);                    
; 2547 |                                 scia_puts(buff);                       
; 2548 |                                 unsaved = 1;                           
; 2550 |                                 // update new value                    
; 2551 |                                 DINT;                                  
; 2552 |                                 conf_data.velfilter = i;               
; 2553 |                                 ad7738_setcal();                       
; 2554 |                                 velf_rst();                            
; 2555 |                                 EINT;                                  
; 2556 |                                 break;                                 
; 2558 |                         case 'P':
;     |  // count per inch                                                     
; 2560 |                                 // channel number                      
; 2561 |                                 j = ENC_MAX;                           
; 2562 |                                 do {                                   
; 2563 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2564 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2565 |                                         ss = atoi(cmdbuff);            
; 2566 |                                         scia_puts(cmdbuff);            
; 2567 |                                         if (ss > 0 && ss <= j) {       
; 2568 |                                                 break;
;     |          // valid input line number                                    
; 2570 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2571 |                                 } while (j);                           
; 2572 |                                 scia_puts("\r\n");                     
; 2573 |                                 ss--;
;     |  // line number, convert to index                                      
; 2575 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2576 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2577 |                                 templg = atol(cmdbuff);                
; 2578 |                                 scia_puts(cmdbuff);                    
; 2579 |                                 scia_puts("\r\n");                     
; 2580 |                                 if (templg == 0) {                     
; 2581 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2582 |                                         break;                         
; 2584 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2585 |                                                 ss + 1, templg);       
; 2586 |                                 scia_puts(buff);                       
; 2587 |                                 unsaved = 1;                           
; 2589 |                                 // update new value                    
; 2590 |                                 DINT;                                  
; 2591 |                                 conf_data.cntperin[ss] = templg;       
; 2592 |                                 ad7738_setcal();                       
; 2593 |                                 velf_rst();                            
; 2594 |                                 EINT;                                  
; 2595 |                                 break;                                 
; 2597 |                         break;                                         
; 2599 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2600 |                         // Display command
;     |                                  //                                    
; 2601 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2602 |                 case 'D':                                              
; 2604 |                         if (cmdlen < 2) {                              
; 2605 |                                 goto INVALIDCMD;                       
; 2608 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2610 |                         case 'S':
;     |  // selection                                                          
; 2612 |                                 // line number                         
; 2613 |                                 j = VFD_MAX;                           
; 2614 |                                 do {                                   
; 2615 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2616 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2617 |                                         ss = atoi(cmdbuff);            
; 2618 |                                         scia_puts(cmdbuff);            
; 2619 |                                         if (ss > 0 && ss <= j) {       
; 2620 |                                                 break;
;     |          // valid input line number                                    
; 2622 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2623 |                                 } while (j);                           
; 2624 |                                 scia_puts("\r\n");                     
; 2625 |                                 ss--;
;     |  // line number, convert to index                                      
; 2627 |                                 // what                                
; 2628 |                                 for (j = 0; j < 7; j++) {              
; 2629 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2630 |                                         scia_puts(buff);               
; 2631 |                                         if (j < 6) {                   
; 2632 |                                                 scia_puts(", ");       
; 2635 |                                 scia_puts("\r\n");                     
; 2636 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2637 |                                                 ss + 1);               
; 2638 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2639 |                                 pt = atoi(cmdbuff);                    
; 2640 |                                 if (pt >= 7) {                         
; 2641 |                                         pt = 0;                        
; 2642 |                                         scia_puts(                     
; 2643 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2645 |                                 scia_puts(cmdbuff);                    
; 2646 |                                 scia_puts("\r\n");                     
; 2647 |                                 conf_data.vfd[ss].what = pt;           
; 2649 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2651 |                                 case VFD_LOAD:                         
; 2652 |                                 case VFD_PEAK:                         
; 2653 |                                 case VFD_VALL:                         
; 2655 |                                         j = CHS_MAX;                   
; 2656 |                                         goto VFD_CHANNEL;              
; 2658 |                                 case VFD_POSI:                         
; 2659 |                                 case VFD_VELO:                         
; 2661 |                                         j = ENC_MAX;                   
; 2663 |                                         VFD_CHANNEL:                   
; 2664 |                                         // channel number              
; 2665 |                                         do {                           
; 2666 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2667 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2668 |                                                 ch = atoi(cmdbuff);    
; 2669 |                                                 scia_puts(cmdbuff);    
; 2670 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2671 |                                                         break;
;     |          // valid input channel number                                 
; 2673 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2674 |                                         } while (j);                   
; 2675 |                                         scia_puts("\r\n");             
; 2676 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2677 |                                         conf_data.vfd[ss].ch = ch;     
; 2679 |                                         // digits after decimal point  
; 2680 |                                         j = 1;                         
; 2681 |                                         do {                           
; 2682 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2683 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2684 |                                                 i = atoi(cmdbuff);     
; 2685 |                                                 if (i >= 0 && i <= 5) {
; 2686 |                                                         break;         
; 2688 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2689 |                                         } while (j);                   
; 2690 |                                         scia_puts(cmdbuff);            
; 2691 |                                         scia_puts("\r\n");             
; 2692 |                                         conf_data.vfd[ss].adec = i;    
; 2694 |                                         sprintf(buff,                  
; 2695 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2696 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2697 |                                         scia_puts(buff);               
; 2698 |                                         break;                         
; 2700 |                                 case VFD_LIMIT:                        
; 2701 |                                         // channel number              
; 2702 |                                         j = CHS_MAX;                   
; 2703 |                                         do {                           
; 2704 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2705 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2706 |                                                 ch = atoi(cmdbuff);    
; 2707 |                                                 scia_puts(cmdbuff);    
; 2708 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2709 |                                                         break;
;     |          // valid input channel number                                 
; 2711 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2712 |                                         } while (j);                   
; 2713 |                                         scia_puts("\r\n");             
; 2714 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2715 |                                         conf_data.vfd[ss].ch = ch;     
; 2717 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2718 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2719 |                                         scia_puts(buff);               
; 2720 |                                         break;                         
; 2721 |                                 case VFD_TEMP:                         
; 2722 |                                         // no more info                
; 2723 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2724 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2725 |                                         scia_puts(buff);               
; 2726 |                                         break;                         
; 2729 |                                 lcd_clear();                           
; 2730 |                                 update_units();                        
; 2731 |                                 unsaved = 1;                           
; 2732 |                                 break;                                 
; 2734 |                         default:                                       
; 2735 |                                 goto INVALIDCMD;                       
; 2738 |                         break;                                         
; 2740 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2741 |                         // DAC out command
;     |                                  //                                    
; 2742 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2743 |                 case 'O':                                              
; 2745 |                         if (cmdlen < 2) {                              
; 2746 |                                 goto INVALIDCMD;                       
; 2749 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2751 |                         case 'S':
;     |  // selection                                                          
; 2753 |                                 // DAC channel number                  
; 2754 |                                 j = DAC_MAX;                           
; 2755 |                                 do {                                   
; 2756 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2757 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2758 |                                         ss = atoi(cmdbuff);            
; 2759 |                                         scia_puts(cmdbuff);            
; 2760 |                                         if (ss > 0 && ss <= j) {       
; 2761 |                                                 break;
;     |          // valid input channel number                                 
; 2763 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2764 |                                 } while (j);                           
; 2765 |                                 scia_puts("\r\n");                     
; 2766 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2768 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2769 |                                 for (j = 0; j < 5; j++) {              
; 2770 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2771 |                                         scia_puts(buff);               
; 2772 |                                         scia_puts(", ");               
; 2774 |                                 j = 7;                                 
; 2775 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2776 |                                 scia_puts(buff);                       
; 2777 |                                 scia_puts("\r\n");                     
; 2778 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2779 |                                                 ss + 1);               
; 2780 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2781 |                                 pt = atoi(cmdbuff);                    
; 2782 |                                 if (pt >= 5 && pt != 7) {              
; 2783 |                                         pt = 0;                        
; 2784 |                                         scia_puts(                     
; 2785 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2787 |                                 scia_puts(cmdbuff);                    
; 2788 |                                 scia_puts("\r\n");                     
; 2789 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2791 |                                 if ( VFD_VOLT != pt) {                 
; 2793 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2794 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2795 |                                                 j = CHS_MAX;           
; 2796 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2797 |                                                 j = ENC_MAX;           
; 2800 |                                         // linked load/... channel numb
;     | er                                                                     
; 2801 |                                         do {                           
; 2802 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2803 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2804 |                                                 ch = atoi(cmdbuff);    
; 2805 |                                                 scia_puts(cmdbuff);    
; 2806 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2807 |                                                         break;
;     |          // valid input channel number                                 
; 2809 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2810 |                                         } while (j);                   
; 2811 |                                         scia_puts("\r\n");             
; 2812 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2813 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2815 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2816 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2817 |                                                 // gain                
; 2818 |                                                 if ( VFD_POSI == pt) { 
; 2819 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2820 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2821 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2823 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2824 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2825 |                                                 scia_puts(cmdbuff);    
; 2826 |                                                 scia_puts("\r\n");     
; 2828 |                                                 // offset              
; 2829 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2830 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2831 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2832 |                                                 scia_puts(cmdbuff);    
; 2833 |                                                 scia_puts("\r\n");     
; 2837 |                                 unsaved = 1;                           
; 2839 |                                 // print result                        
; 2840 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2841 |                                                 LPV[pt]);              
; 2842 |                                 scia_puts(buff);                       
; 2844 |                                 if ( VFD_VOLT == pt) {                 
; 2845 |                                         scia_puts("\r\n");             
; 2846 |                                 } else {                               
; 2847 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2848 |                                         scia_puts(buff);               
; 2850 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2851 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2852 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2853 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2854 |                                                 scia_puts(buff);       
; 2858 |                                 DINT;                                  
; 2859 |                                 ad7738_setcal();                       
; 2860 |                                 EINT;                                  
; 2861 |                                 break;                                 
; 2863 |                         case 'D':
;     |  // direct voltage output                                              
; 2865 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2866 |                                                 || 'V' != cmdbuff[3]) {
; 2867 |                                         goto INVALIDCMD;               
; 2870 |                                 // channel index                       
; 2871 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2872 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2873 |                                         goto INVALIDCMD;               
; 2874 |                                         // invalid channel number      
; 2876 |                                 ss--;
;     |  // change to zero based index                                         
; 2878 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2879 |                                         goto INVALIDCMD;               
; 2880 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2883 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2884 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2885 |                                         goto INVALIDCMD;               
; 2886 |                                         // invalid voltage             
; 2889 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2890 |                                 if (volt[0] < 0) {                     
; 2891 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2892 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2893 |                                 } else {                               
; 2894 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2895 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2898 |                                 if (dsum[0] <= 0) {                    
; 2899 |                                         dacc[0] = 0;                   
; 2900 |                                 } else if (dsum[0] >= 0xffff) {        
; 2901 |                                         dacc[0] = 0xffff;              
; 2902 |                                 } else {                               
; 2903 |                                         dacc[0] = (Uint16) dsum[0];    
; 2906 |                                 mcbsp_xmit(dacc[0], ss);               
; 2907 |                                 latch_dac();                           
; 2909 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2910 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2911 |                                 scia_puts(buff);                       
; 2913 |                                 break;                                 
; 2915 |                         default:                                       
; 2916 |                                 goto INVALIDCMD;                       
; 2919 |                         break;                                         
; 2921 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2922 |                         // LIMIT command
;     |                                          //                            
; 2923 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2924 |                 case 'L':                                              
; 2926 |                         if (cmdlen < 2) {                              
; 2927 |                                 goto INVALIDCMD;                       
; 2930 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2932 |                         case 'S':
;     |  // selection                                                          
; 2934 |                                 // LIMIT channel number                
; 2935 |                                 j = LIM_MAX;                           
; 2936 |                                 do {                                   
; 2937 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2938 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2939 |                                         ss = atoi(cmdbuff);            
; 2940 |                                         scia_puts(cmdbuff);            
; 2941 |                                         if (ss > 0 && ss <= j) {       
; 2942 |                                                 break;
;     |          // valid input channel number                                 
; 2944 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2945 |                                 } while (j);                           
; 2946 |                                 scia_puts("\r\n");                     
; 2947 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2949 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2950 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2951 |                                 scia_puts(cmdbuff);                    
; 2952 |                                 scia_puts("\r\n");                     
; 2954 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2956 |                                         // set on flag                 
; 2957 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2959 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2960 |                                         for (j = 0; j < 5; j++) {      
; 2961 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2962 |                                                 scia_puts(buff);       
; 2963 |                                                 if (j < 4) {           
; 2964 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2967 |                                         scia_puts("\r\n");             
; 2968 |                                         sprintf(buff,                  
; 2969 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2970 |                                                         ss + 1);       
; 2971 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2972 |                                         pt = atoi(cmdbuff);            
; 2973 |                                         if (pt >= 5) {                 
; 2974 |                                                 pt = 0;                
; 2975 |                                                 scia_puts(             
; 2976 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2978 |                                         scia_puts(cmdbuff);            
; 2979 |                                         scia_puts("\r\n");             
; 2980 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2982 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2983 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2984 |                                                 j = CHS_MAX;           
; 2985 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2986 |                                                 j = ENC_MAX;           
; 2989 |                                         // linked load/... channel numb
;     | er                                                                     
; 2990 |                                         do {                           
; 2991 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2992 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2993 |                                                 ch = atoi(cmdbuff);    
; 2994 |                                                 scia_puts(cmdbuff);    
; 2995 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2996 |                                                         break;
;     |          // valid input channel number                                 
; 2998 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2999 |                                         } while (j);                   
; 3000 |                                         scia_puts("\r\n");             
; 3001 |                                         ch--;
;     |  // channel number, convert to index                                   
; 3002 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 3004 |                                         // NO/NC                       
; 3005 |                                         scia_getparam(                 
; 3006 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 3007 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3008 |                                         scia_puts(cmdbuff);            
; 3009 |                                         scia_puts("\r\n");             
; 3011 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 3013 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 3014 |                                         } else {                       
; 3015 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 3018 |                                         scia_getparam(                 
; 3019 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 3020 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3021 |                                         scia_puts(cmdbuff);            
; 3022 |                                         scia_puts("\r\n");             
; 3024 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 3026 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 3027 |                                         } else {                       
; 3028 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 3031 |                                         scia_getparam(                 
; 3032 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 3033 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3034 |                                         scia_puts(cmdbuff);            
; 3035 |                                         scia_puts("\r\n");             
; 3037 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 3039 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 3040 |                                         } else {                       
; 3041 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 3044 |                                         // unit (output)               
; 3045 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 3046 |                                         case VFD_LOAD:                 
; 3047 |                                         case VFD_PEAK:                 
; 3048 |                                         case VFD_VALL:                 
; 3049 |                                                 ccp =                  
; 3050 |                                                                 UNITS[0
;     | x0f                                                                    
; 3051 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 3052 |                                                 break;                 
; 3053 |                                         case VFD_POSI:                 
; 3054 |                                                 ccp = POS_U;           
; 3055 |                                                 break;                 
; 3056 |                                         case VFD_VELO:                 
; 3057 |                                                 ccp = VEL_U;           
; 3058 |                                                 break;                 
; 3061 |                                         // set value                   
; 3062 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 3063 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3064 |                                         scia_puts(cmdbuff);            
; 3065 |                                         scia_puts("\r\n");             
; 3067 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3068 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3069 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3071 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3072 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3073 |                                         scia_puts(cmdbuff);            
; 3074 |                                         scia_puts("\r\n");             
; 3076 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3077 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3078 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3079 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3081 |                                         // print result                
; 3082 |                                         sprintf(buff,                  
; 3083 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3084 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3085 |                                         scia_puts(buff);               
; 3087 |                                         sprintf(buff,                  
; 3088 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3089 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3090 | 
;     |  "NC" : "NO",                                                          
; 3091 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3092 | 
;     |  "ON" : "OFF",                                                         
; 3093 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3094 |                                         scia_puts(buff);               
; 3095 |                                         sprintf(buff,                  
; 3096 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3097 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3098 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3099 |                                         scia_puts(buff);               
; 3101 |                                 } else
;     |  // turn off                                                           
; 3103 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3104 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3107 |                                 unsaved = 1;                           
; 3109 |                                 DINT;                                  
; 3110 |                                 ad7738_setcal();                       
; 3111 |                                 EINT;                                  
; 3112 |                                 break;                                 
; 3114 |                         default:                                       
; 3115 |                                 goto INVALIDCMD;                       
; 3118 |                         break;                                         
; 3120 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3121 |                         // reset commands
;     |                                          //                            
; 3122 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3123 |                 case 'R':                                              
; 3125 |                         if (cmdlen < 2) {                              
; 3126 |                                 goto INVALIDCMD;                       
; 3129 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3131 |                         case 'T':
;     |  // tare                                                               
; 3133 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3134 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3135 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3136 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3137 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3138 |                                 } else {                               
; 3139 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3140 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3141 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3143 |                                 break;                                 
; 3145 |                         case 'P':
;     |  // peak                                                               
; 3147 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3148 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3149 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3150 |                                 } else {                               
; 3151 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3153 |                                 break;                                 
; 3155 |                         case 'V':
;     |  // valley                                                             
; 3157 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3158 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3159 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3160 |                                 } else {                               
; 3161 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3163 |                                 break;                                 
; 3165 |                         case 'S':
;     |  // shunt switch                                                       
; 3167 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3168 |                                         shunt_switch(1);               
; 3169 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3170 |                                 } else {                               
; 3171 |                                         shunt_switch(0);               
; 3172 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3174 |                                 break;                                 
; 3176 |                         case 'L':
;     |  // limit                                                              
; 3178 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3179 |                                 ch--;                                  
; 3181 |                                 ad7738_resetlimit(ch);                 
; 3182 |                                 break;                                 
; 3184 |                         case 'I':
;     |  // posItion                                                           
; 3186 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3187 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3188 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3189 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3190 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3191 |                                 } else {                               
; 3192 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3193 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3194 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3196 |                                 break;                                 
; 3198 |                         default:                                       
; 3199 |                                 goto INVALIDCMD;                       
; 3201 |                         break;                                         
; 3203 | #ifdef SDHCCARD                                                        
; 3205 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3206 |                         // Stream to SD Card
;     |                                  //                                    
; 3207 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3208 |                         case 'W':// Write control                      
; 3210 |                         if( cmdlen < 2 )                               
; 3212 |                                 goto INVALIDCMD;                       
; 3215 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3217 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3219 |                                 if( cmdlen < 3 )                       
; 3221 |                                         goto INVALIDCMD;               
; 3224 |                                 if( sd_write )                         
; 3226 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3227 |                                         break;                         
; 3230 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3231 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3233 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3235 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3236 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3238 |                                 if( !res )                             
; 3240 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3241 |                                         if( res || cmdlen != temp16 )  
; 3243 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3244 |                                                 scia_puts( buff );     
; 3245 |                                                 f_close( fp );         
; 3246 |                                                 fp = NULL;             
; 3247 |                                                 break;                 
; 3264 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3266 |                                         if( res )                      
; 3268 |                                                 f_close( fp );         
; 3269 |                                                 fp = NULL;             
; 3270 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3271 |                                                 break;                 
; 3274 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3275 |                                         scia_puts( buff );             
; 3277 |                                         prod_init();                   
; 3278 |                                         sd_write = 1;                  
; 3279 |                                         sd_cnt = 0;                    
; 3280 |                                         break;                         
; 3283 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3284 |                                 scia_puts( buff );                     
; 3285 |                                 break;                                 
; 3287 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3289 |                                 if( sd_write )                         
; 3291 |                                         sd_close = 1;                  
; 3292 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3293 |                                         break;                         
; 3295 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3296 |                                 break;                                 
; 3298 |                                 case 'L':
;     |          // list files                                                 
; 3300 |                                 if( sd_write )                         
; 3302 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3303 |                                         break;                         
; 3306 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3307 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3309 |                                 res = f_opendir(&dir, "0:");           
; 3310 |                                 if (res)                               
; 3312 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3313 |                                         scia_puts( buff );             
; 3314 |                                         break;                         
; 3317 |                                 p1 = s1 = s2 = 0;                      
; 3318 |                                 for(;;)                                
; 3320 |                                         res = f_readdir(&dir, &Finfo); 
; 3321 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3322 |                                         break;                         
; 3323 |                                         if (Finfo.fattrib & AM_DIR)    
; 3325 |                                                 s2++;                  
; 3327 |                                         else                           
; 3329 |                                                 s1++;                  
; 3330 |                                                 p1 += Finfo.fsize;     
; 3332 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3333 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3334 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3335 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3336 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3337 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3338 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3339 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3340 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3341 |                                         scia_puts( buff );             
; 3343 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3344 |                                 scia_puts( buff );                     
; 3345 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3347 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3348 |                                         scia_puts( buff );             
; 3350 |                                 break;                                 
; 3352 |                                 case 'G':
;     |          // get a file                                                 
; 3354 |                                 if( sd_write )                         
; 3356 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3357 |                                         break;                         
; 3360 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3361 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3363 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3365 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3366 |                                 res = f_open( fp, buff, FA_READ );     
; 3367 |                                 if (res)                               
; 3369 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3370 |                                         scia_puts( buff );             
; 3371 |                                         break;                         
; 3374 |                                 do                                     
; 3376 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3377 |                                         scia_send( buff, temp16 );     
; 3378 |                                 }while( !res && temp16 == 512 );       
; 3380 |                                 f_close( fp );                         
; 3381 |                                 fp = NULL;                             
; 3382 |                                 break;                                 
; 3384 |                                 case 'R':
;     |          // remove a file                                              
; 3386 |                                 if( sd_write )                         
; 3388 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3389 |                                         break;                         
; 3392 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3393 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3395 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3397 |                                 res = f_unlink( buff );                
; 3399 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3400 |                                 scia_puts( buff );                     
; 3401 |                                 break;                                 
; 3403 |                                 default:                               
; 3404 |                                 goto INVALIDCMD;                       
; 3407 |                         break;                                         
; 3408 | #endif                                                                 
; 3410 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3411 |                         // Flash memory access commands
;     |                                    //                                  
; 3412 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3413 |                 case 'F':                                       // flas
;     | h access                                                               
; 3415 |                         if (cmdlen < 2) {                              
; 3416 |                                 goto INVALIDCMD;                       
; 3419 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3421 |                         case 'W':
;     |  // write flash                                                        
; 3423 |                                 if (unsaved) {                         
; 3424 |                                         // flash writing               
; 3425 |                                         lcd_clear();                   
; 3426 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3427 |                                         scia_puts("Flash writing..."); 
; 3429 |                                         for (i = 0; i < 50; i++) {     
; 3430 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3433 |                                         DINT;                          
; 3434 |                                         flash_ret = conf_write();      
; 3435 |                                         EINT;                          
; 3437 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3438 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3439 |                                                 unsaved = 0;           
; 3440 |                                         } else {                       
; 3441 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3443 |                                         lcd_clear();                   
; 3444 |                                         update_units();                
; 3445 |                                         break;                         
; 3447 |                                 scia_puts(                             
; 3448 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3449 |                                 break;                                 
; 3451 |                         case 'R':
;     |  // read flash                                                         
; 3453 |                                 // flash reading                       
; 3454 |                                 conf_read();                           
; 3456 |                                 DINT;                                  
; 3457 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3458 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3459 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3460 |                                 EINT;                                  
; 3462 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3463 |                                 unsaved = 0;                           
; 3465 |                                 update_units();                        
; 3467 |                                 break;                                 
; 3469 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3471 |                                 conf_default();                        
; 3473 |                                 // flash writing                       
; 3474 |                                 lcd_clear();                           
; 3475 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3476 |                                 scia_puts("Flash write...");           
; 3478 |                                 for (i = 0; i < 50; i++) {             
; 3479 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3482 |                                 DINT;                                  
; 3483 |                                 flash_ret = conf_write();              
; 3484 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3485 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3486 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3487 |                                 EINT;                                  
; 3489 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3490 |                                         scia_puts(                     
; 3491 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3492 |                                         unsaved = 0;                   
; 3493 |                                 } else {                               
; 3494 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3496 |                                 lcd_clear();                           
; 3497 |                                 update_units();                        
; 3498 |                                 break;                                 
; 3500 |                         default:                                       
; 3501 |                                 goto INVALIDCMD;                       
; 3504 |                         break;                                         
; 3506 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3507 |                         // Help manu
;     |                                  //                                    
; 3508 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3509 |                 case 'H':                               // help menu   
; 3511 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3513 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3514 |                         scia_puts(                                     
; 3515 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3516 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3517 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3518 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3519 |                         scia_puts("\r\n");                             
; 3521 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3522 |                         scia_puts("UN          Set unit name.\r\n");   
; 3523 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3524 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3525 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3526 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3527 |                         scia_puts("\r\n");                             
; 3529 |                         scia_puts(                                     
; 3530 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3531 |                         scia_puts(                                     
; 3532 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3533 |                         scia_puts("\r\n");                             
; 3535 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3536 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3537 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3538 |                         scia_puts("\r\n");                             
; 3540 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3541 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3542 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3543 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3544 |                         scia_puts("\r\n");                             
; 3546 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3547 |                         scia_puts(                                     
; 3548 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3549 |                         scia_puts("\r\n");                             
; 3551 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3552 |                         scia_puts("\r\n");                             
; 3554 |                         scia_puts(                                     
; 3555 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3556 |                         scia_puts(                                     
; 3557 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3558 |                         scia_puts("\r\n");                             
; 3560 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3561 |                         scia_puts("\r\n");                             
; 3563 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3564 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3565 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3566 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3567 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3568 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3569 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3570 |                         scia_puts("\r\n");                             
; 3572 | #ifdef SDHCCARD                                                        
; 3573 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3574 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3575 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3576 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3577 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3578 |                         scia_puts( "\r\n" );                           
; 3579 | #endif                                                                 
; 3581 |                         scia_puts(                                     
; 3582 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3583 |                         scia_puts(                                     
; 3584 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3585 |                         scia_puts(                                     
; 3586 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3587 |                         scia_puts("\r\n");                             
; 3589 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3591 |                         // not implemented                             
; 3592 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3594 |                         scia_puts("\r\n");                             
; 3596 |                         break;                                         
; 3598 |                 case 'X':                                              
; 3600 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3602 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3604 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3607 |                         cmd_mode = SCI_MODE_BIN;                       
; 3608 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3610 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3612 |                         break;                                         
; 3614 |                 case 'Z':                                              
; 3616 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3618 |                         for (i = 0; i < 100; i++)       // 2s          
; 3620 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3623 |                         reboot();                                      
; 3624 |                         break;                                         
; 3648 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3649 |                         // Invalid commands
;     |                                  //                                    
; 3650 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3651 |                 default:                                               
; 3653 |                         INVALIDCMD:                                    
; 3655 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3656 |                         scia_puts(cmdbuff);                            
; 3657 |                         scia_puts("\", ignored.\r\n");                 
; 3658 |                         break;                                         
; 3660 |                 } // switch on 1st byte                                
; 3662 |                 if (unsaved) {                                         
; 3663 |                         scia_puts(                                     
; 3664 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3667 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3668 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3669 |                 // BIN command mode processing
;     |                          //                                            
; 3670 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3672 |                 // ------------------------------------------------    
; 3673 |                 // DEBUG: put received command on LCD                  
; 3682 |                 // ------------------------------------------------    
; 3683 |                 if (cmdlen < 2) {                                      
; 3684 |                         // INVALID COMMAND, less than 2 byte           
; 3685 |                         // may need to send NACK back                  
; 3686 |                         continue;                                      
; 3689 |                 for (i = 0; i < 2; i++) {                              
; 3690 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3693 |                 j = 2;                                  // buff length 
; 3694 |                 bincmdresult = Error_UnImpl;                           
; 3696 |                 // DEBUG, sending the command back                     
; 3697 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3699 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3701 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3704 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3819 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3821 |                 case CheckAddress:                                     
; 3823 |                         buff[j++] = 0;                                 
; 3824 |                         bincmdresult = OK_SendResult;                  
; 3825 |                         break;                                         
; 3827 |                 case SetAddress:                                       
; 3829 |                         buff[j] = cmdbuff[j];                          
; 3830 |                         j++;                                           
; 3831 |                         bincmdresult = OK_SendResult;                  
; 3832 |                         break;                                         
; 3834 |                 case RemoveAddress:                                    
; 3836 |                         buff[j] = cmdbuff[j];                          
; 3837 |                         j++;                                           
; 3838 |                         bincmdresult = OK_SendResult;                  
; 3839 |                         break;                                         
; 3841 |                 case GetUnitInfo:                                      
; 3843 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3844 |                         for (i = 0; i < 2; i++) {                      
; 3845 |                                 buff[j++] = 0xff & *intp;              
; 3846 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3847 |                                 intp++;                                
; 3850 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3851 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3853 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3854 |                         for (i = 0; i < 2; i++) {                      
; 3855 |                                 buff[j++] = 0xff & *intp;              
; 3856 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3857 |                                 intp++;                                
; 3860 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3861 |                         buff[j++] = slen;                              
; 3862 |                         for (i = 0; i < slen; i++) {                   
; 3863 |                                 buff[j++] = conf_data.uname[i]; // name
; 3865 |                         bincmdresult = OK_SendResult;                  
; 3867 |                         break;                                         
; 3869 |                 case SetUnitSN:                                        
; 3871 |                         if (cmdlen < 6) {                              
; 3872 |                                 bincmdresult = Error_Invalid;          
; 3873 |                                 break;                                 
; 3876 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3877 |                         for (i = 0; i < 2; i++) {                      
; 3878 |                                 *intp = cmdbuff[j];                    
; 3879 |                                 buff[j++] = 0xff & *intp;              
; 3880 |                                 *intp += cmdbuff[j] << 8;              
; 3881 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3882 |                                 intp++;                                
; 3884 |                         unsaved = 1;                                   
; 3886 |                         bincmdresult = OK_SendResult;                  
; 3887 |                         break;                                         
; 3889 |                 case SetUnitName:                                      
; 3891 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3892 |                                 bincmdresult = Error_Invalid;          
; 3893 |                                 break;                                 
; 3896 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3897 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3899 |                         conf_data.uname[i] = '\0';                     
; 3900 |                         unsaved = 1;                                   
; 3902 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3903 |                         buff[j++] = slen;                              
; 3904 |                         for (i = 0; i < slen; i++) {                   
; 3905 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3907 |                         bincmdresult = OK_SendResult;                  
; 3908 |                         break;                                         
; 3910 |                 case GetInterface:                                     
; 3912 |                         buff[j++] = conf_data.rxdir;                   
; 3914 |                         if (conf_data.rxdir == SDIR_RS485              
; 3915 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3916 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3917 |                                 for (i = 0; i < 2; i++) {              
; 3918 |                                         buff[j++] = 0xff & *intp;      
; 3919 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3920 |                                         intp++;                        
; 3923 |                         bincmdresult = OK_SendResult;                  
; 3924 |                         break;                                         
; 3926 |                 case SetInterface:                                     
; 3928 |                         if (cmdlen < 3) {                              
; 3929 |                                 bincmdresult = Error_Invalid;          
; 3930 |                                 break;                                 
; 3932 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3933 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3934 |                                 bincmdresult = Error_Invalid;          
; 3935 |                                 break;                                 
; 3938 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3939 |                                 if (cmdlen < 7) {                      
; 3940 |                                         bincmdresult = Error_Invalid;  
; 3941 |                                         break;                         
; 3944 |                                 temp32 = 0;                            
; 3945 |                                 for (k = 6; k > 2; k--) {              
; 3946 |                                         temp32 += cmdbuff[k];          
; 3947 |                                         temp32 <<= 8;                  
; 3950 |                                 for (i = 0; i < 8; i++) {              
; 3951 |                                         if (temp32 == BAUD[i]) {       
; 3952 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3953 |                                                 break;                 
; 3956 |                                 if (i == 8) {                          
; 3957 |                                         bincmdresult = Error_Invalid;  
; 3958 |                                         break;                         
; 3962 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3964 |                         while (j < cmdlen) {                           
; 3965 |                                 buff[j] = cmdbuff[j];                  
; 3966 |                                 j++;                                   
; 3968 |                         unsaved = 1;                                   
; 3969 |                         bincmdresult = OK_SendResult;                  
; 3970 |                         break;                                         
; 3972 |                 case GetChannel:                                       
; 3974 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3975 |                                 bincmdresult = Error_Invalid;          
; 3976 |                                 break;                                 
; 3978 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3980 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3982 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3984 |                                 buff[j++] = 0;                         
; 3987 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3988 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3990 |                                 buff[j++] = 0xff & *intp;              
; 3991 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3992 |                                 intp++;                                
; 3995 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3996 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3998 |                                 buff[j++] = 0xff & *intp;              
; 3999 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4000 |                                 intp++;                                
; 4003 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4004 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 4006 |                                 buff[j++] = 0xff & *intp;              
; 4007 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4008 |                                 intp++;                                
; 4011 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4012 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 4014 |                                 buff[j++] = 0xff & *intp;              
; 4015 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4016 |                                 intp++;                                
; 4019 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4020 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 4022 |                                 buff[j++] = 0xff & *intp;              
; 4023 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4024 |                                 intp++;                                
; 4027 |                         bincmdresult = OK_SendResult;                  
; 4028 |                         break;                                         
; 4030 |                 case GetSensor:                                        
; 4032 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4033 |                                 bincmdresult = Error_Invalid;          
; 4034 |                                 break;                                 
; 4036 |                         ss = cmdbuff[2];                               
; 4037 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4039 |                         // sensor serial name                          
; 4040 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 4041 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4042 |                         for (i = 0; i < slen; i++) {                   
; 4043 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 4046 |                         // sensor name/label                           
; 4047 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4048 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4049 |                         for (i = 0; i < slen; i++) {                   
; 4050 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4053 |                         // TAGID                                       
; 4054 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 4055 |                         for (i = 0; i < 4; i++) {                      
; 4056 |                                 buff[j++] = 0xff & *intp;              
; 4057 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4058 |                                 intp++;                                
; 4061 |                         // Method                                      
; 4062 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4064 |                         // Date                                        
; 4065 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4066 |                         for (i = 0; i < 2; i++) {                      
; 4067 |                                 buff[j++] = 0xff & *intp;              
; 4068 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4069 |                                 intp++;                                
; 4072 |                         // Range                                       
; 4073 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4074 |                         for (i = 0; i < 2; i++) {                      
; 4075 |                                 buff[j++] = 0xff & *intp;              
; 4076 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4077 |                                 intp++;                                
; 4080 |                         // Unit                                        
; 4081 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4083 |                         // Output Unit                                 
; 4084 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4086 |                         // Unit Factor                                 
; 4087 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4088 |                         for (i = 0; i < 2; i++) {                      
; 4089 |                                 buff[j++] = 0xff & *intp;              
; 4090 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4091 |                                 intp++;                                
; 4094 |                         // calibration points.                         
; 4095 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4096 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4097 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4098 |                                         // mass point                  
; 4099 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4100 |                                         for (i = 0; i < 2; i++) {      
; 4101 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4102 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4103 |                                                 intp++;                
; 4105 |                                         // adc counts point            
; 4106 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4107 |                                         for (i = 0; i < 2; i++) {      
; 4108 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4109 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4110 |                                                 intp++;                
; 4114 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4115 |                                         // slope point                 
; 4116 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4117 |                                         for (i = 0; i < 2; i++) {      
; 4118 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4119 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4120 |                                                 intp++;                
; 4122 |                                         // intercept point             
; 4123 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4124 |                                         for (i = 0; i < 2; i++) {      
; 4125 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4126 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4127 |                                                 intp++;                
; 4130 |                         } else {                                       
; 4131 |                                 buff[j++] = 0;                         
; 4132 |                                 // slope                               
; 4133 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4134 |                                 for (i = 0; i < 2; i++) {              
; 4135 |                                         buff[j++] = 0xff & *intp;      
; 4136 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4137 |                                         intp++;                        
; 4139 |                                 // intercept                           
; 4140 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4141 |                                 for (i = 0; i < 2; i++) {              
; 4142 |                                         buff[j++] = 0xff & *intp;      
; 4143 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4144 |                                         intp++;                        
; 4148 |                         // shunt                                       
; 4149 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4150 |                         for (i = 0; i < 2; i++) {                      
; 4151 |                                 buff[j++] = 0xff & *intp;              
; 4152 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4153 |                                 intp++;                                
; 4156 |                         // base                                        
; 4157 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4158 |                         for (i = 0; i < 2; i++) {                      
; 4159 |                                 buff[j++] = 0xff & *intp;              
; 4160 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4161 |                                 intp++;                                
; 4164 |                         // DAC calibration gain                        
; 4165 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4166 |                         for (i = 0; i < 2; i++) {                      
; 4167 |                                 buff[j++] = 0xff & *intp;              
; 4168 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4169 |                                 intp++;                                
; 4172 |                         // DAC calibration offset                      
; 4173 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4174 |                         for (i = 0; i < 2; i++) {                      
; 4175 |                                 buff[j++] = 0xff & *intp;              
; 4176 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4177 |                                 intp++;                                
; 4180 |                         // channel calibrated on                       
; 4181 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4183 |                         bincmdresult = OK_SendResult;                  
; 4184 |                         break;                                         
; 4186 |                 case GetQEPChannels:                                   
; 4188 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4189 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4190 |                                 for (i = 0; i < 2; i++) {              
; 4191 |                                         buff[j++] = 0xff & *intp;      
; 4192 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4193 |                                         intp++;                        
; 4197 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4198 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4200 |                         bincmdresult = OK_SendResult;                  
; 4201 |                         break;                                         
; 4203 |                 case GetCurSensor:                                     
; 4205 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4206 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4209 |                         bincmdresult = OK_SendResult;                  
; 4210 |                         break;                                         
; 4212 |                 case GetAFilterSize:                                   
; 4214 |                         // filter size                                 
; 4215 |                         intp = (Uint16*) &conf_data.filter;            
; 4216 |                         buff[j++] = 0xff & *intp;                      
; 4217 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4218 |                         // filter window                               
; 4219 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4220 |                         for (i = 0; i < 2; i++) {                      
; 4221 |                                 buff[j++] = 0xff & *intp;              
; 4222 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4223 |                                 intp++;                                
; 4225 |                         bincmdresult = OK_SendResult;                  
; 4226 |                         break;                                         
; 4228 |                 case GetAutoId:                                        
; 4230 |                         buff[j++] = conf_data.tagiden;                 
; 4231 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4232 |                                 buff[j++] = autoid[i];                 
; 4234 |                         bincmdresult = OK_SendResult;                  
; 4235 |                         break;                                         
; 4237 |                 case GetDisplay:                                       
; 4239 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4240 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4241 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4242 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4244 |                         bincmdresult = OK_SendResult;                  
; 4245 |                         break;                                         
; 4247 |                 case GetDAC:                                           
; 4249 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4250 |                                 buff[j++] = conf_data.dac[i].what;     
; 4251 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4253 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4254 |                                 //{                                    
; 4255 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4256 |                                 //}                                    
; 4257 |                                 //else                                 
; 4258 |                                 //{                                    
; 4259 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4260 |                                 //}                                    
; 4261 |                                 for (k = 0; k < 2; k++) {              
; 4262 |                                         buff[j++] = 0xff & *intp;      
; 4263 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4264 |                                         intp++;                        
; 4266 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4267 |                                 //{                                    
; 4268 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4269 |                                 //}                                    
; 4270 |                                 //else                                 
; 4271 |                                 //{                                    
; 4272 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4273 |                                 //}                                    
; 4274 |                                 for (k = 0; k < 2; k++) {              
; 4275 |                                         buff[j++] = 0xff & *intp;      
; 4276 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4277 |                                         intp++;                        
; 4279 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4280 |                                 for (k = 0; k < 2; k++) {              
; 4281 |                                         buff[j++] = 0xff & *intp;      
; 4282 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4283 |                                         intp++;                        
; 4285 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4286 |                                 for (k = 0; k < 2; k++) {              
; 4287 |                                         buff[j++] = 0xff & *intp;      
; 4288 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4289 |                                         intp++;                        
; 4291 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4292 |                                 for (k = 0; k < 2; k++) {              
; 4293 |                                         buff[j++] = 0xff & *intp;      
; 4294 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4295 |                                         intp++;                        
; 4298 |                         bincmdresult = OK_SendResult;                  
; 4299 |                         break;                                         
; 4301 |                 case GetLIMIT:                                         
; 4303 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4304 |                                 buff[j++] = conf_data.lim[i].what;     
; 4305 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4306 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4308 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4309 |                                 for (k = 0; k < 2; k++) {              
; 4310 |                                         buff[j++] = 0xff & *intp;      
; 4311 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4312 |                                         intp++;                        
; 4314 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4315 |                                 for (k = 0; k < 2; k++) {              
; 4316 |                                         buff[j++] = 0xff & *intp;      
; 4317 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4318 |                                         intp++;                        
; 4321 |                         bincmdresult = OK_SendResult;                  
; 4322 |                         break;                                         
; 4324 |                 case GetLIMITStatus:                                   
; 4326 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4327 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4329 |                         bincmdresult = OK_SendResult;                  
; 4330 |                         break;                                         
; 4332 |                         // Heat Cal commands.                          
; 4333 |                 case GetTCLoadA:                                       
; 4334 |                 case GetTCLoadB:                                       
; 4335 |                 case GetTCLoadC:                                       
; 4336 |                 case GetTCLoadD:                                       
; 4338 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4339 |                         intp = (Uint16*) &temp16;                      
; 4340 |                         buff[j++] = 0xff & *intp;                      
; 4341 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4343 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4344 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4345 |                         intp = (Uint16*) &templg;                      
; 4346 |                         for (i = 0; i < 2; i++) {                      
; 4347 |                                 buff[j++] = 0xff & *intp;              
; 4348 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4349 |                                 intp++;                                
; 4351 |                         bincmdresult = OK_SendResult;                  
; 4352 |                         break;                                         
; 4354 |                 case GetTCTemp:                                        
; 4356 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4357 |                         intp = (Uint16*) &temp16;                      
; 4358 |                         buff[j++] = 0xff & *intp;                      
; 4359 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4360 |                         bincmdresult = OK_SendResult;                  
; 4361 |                         break;                                         
; 4363 |                 case GetTCStatus:                                      
; 4365 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4366 |                         for (i = 0; i < 2; i++) {                      
; 4367 |                                 buff[j++] = 0xff & *intp;              
; 4368 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4369 |                                 intp++;                                
; 4372 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4373 |                                 temp16 = 0x80;                         
; 4374 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4375 |                                         temp16 |= 0x01;                
; 4377 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4378 |                                         temp16 |= 0x02;                
; 4380 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4381 |                                         temp16 |= 0x04;                
; 4383 |                                 buff[j++] = 0xff & temp16;             
; 4385 |                         bincmdresult = OK_SendResult;                  
; 4386 |                         break;                                         
; 4388 |                 case GetTCParam:                                       
; 4390 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4391 |                                 bincmdresult = Error_Invalid;          
; 4392 |                                 break;                                 
; 4395 |                         ch = cmdbuff[2];                               
; 4396 |                         buff[j++] = ch;                                
; 4398 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4399 |                         for (k = 0; k < 2; k++) {                      
; 4400 |                                 buff[j++] = 0xff & *intp;              
; 4401 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4402 |                                 intp++;                                
; 4404 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4405 |                         for (k = 0; k < 2; k++) {                      
; 4406 |                                 buff[j++] = 0xff & *intp;              
; 4407 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4408 |                                 intp++;                                
; 4410 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4411 |                         for (k = 0; k < 2; k++) {                      
; 4412 |                                 buff[j++] = 0xff & *intp;              
; 4413 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4414 |                                 intp++;                                
; 4416 |                         bincmdresult = OK_SendResult;                  
; 4417 |                         break;                                         
; 4419 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4420 | #if 1                                                                  
; 4421 |                 case Open_SSR_IN1:                                     
; 4422 |                         ssr_set(0, SSR_OPEN);                          
; 4423 |                         break;                                         
; 4425 |                 case Close_SSR_IN1:                                    
; 4426 |                         ssr_set(0, SSR_CLOSE);                         
; 4427 |                         break;                                         
; 4428 | #endif                                                                 
; 4430 |                 case SetTCParam:                                       
; 4432 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4433 |                                 bincmdresult = Error_Invalid;          
; 4434 |                                 break;                                 
; 4437 |                         ch = cmdbuff[2];                               
; 4438 |                         buff[j++] = ch;                                
; 4440 |                         k = 3;                                         
; 4441 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4442 |                         for (i = 0; i < 2; i++) {                      
; 4443 |                                 *intp = cmdbuff[k++];                  
; 4444 |                                 *intp += cmdbuff[k++] << 8;            
; 4445 |                                 intp++;                                
; 4447 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4448 |                         for (i = 0; i < 2; i++) {                      
; 4449 |                                 *intp = cmdbuff[k++];                  
; 4450 |                                 *intp += cmdbuff[k++] << 8;            
; 4451 |                                 intp++;                                
; 4453 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4454 |                         for (i = 0; i < 2; i++) {                      
; 4455 |                                 *intp = cmdbuff[k++];                  
; 4456 |                                 *intp += cmdbuff[k++] << 8;            
; 4457 |                                 intp++;                                
; 4460 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4461 |                         for (k = 0; k < 2; k++) {                      
; 4462 |                                 buff[j++] = 0xff & *intp;              
; 4463 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4464 |                                 intp++;                                
; 4466 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4467 |                         for (k = 0; k < 2; k++) {                      
; 4468 |                                 buff[j++] = 0xff & *intp;              
; 4469 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4470 |                                 intp++;                                
; 4472 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4473 |                         for (k = 0; k < 2; k++) {                      
; 4474 |                                 buff[j++] = 0xff & *intp;              
; 4475 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4476 |                                 intp++;                                
; 4478 |                         unsaved = 1;                                   
; 4479 |                         bincmdresult = OK_SendResult;                  
; 4480 |                         break;                                         
; 4482 |                 case SetBCalParam:                                     
; 4484 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4485 |                                         || cmdbuff[3] != 2) {          
; 4486 |                                 bincmdresult = Error_Invalid;          
; 4487 |                                 break;                                 
; 4490 |                         ch = cmdbuff[2];                               
; 4491 |                         buff[j++] = ch;                                
; 4492 |                         buff[j] = cmdbuff[j++];                        
; 4494 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4495 |                                 intp = (Uint16*) &volt[k];             
; 4496 |                                 for (i = 0; i < 2; i++) {              
; 4497 |                                         *intp = cmdbuff[j];            
; 4498 |                                         buff[j++] = 0xff & *intp;      
; 4499 |                                         *intp += cmdbuff[j] << 8;      
; 4500 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4501 |                                         intp++;                        
; 4504 |                         bincmdresult = OK_SendResult;                  
; 4505 |                         break;                                         
; 4507 |                 case StartBCRead:                                      
; 4509 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4510 |                                         || cmdbuff[3] >= 2) {          
; 4511 |                                 bincmdresult = Error_Invalid;          
; 4512 |                                 break;                                 
; 4515 |                         k = cmdbuff[3];                                
; 4516 |                         intp = (Uint16*) &tempft;                      
; 4517 |                         for (i = 0; i < 2; i++) {                      
; 4518 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4519 |                                 intp++;                                
; 4521 |                         if (volt[k] != tempft) {                       
; 4522 |                                 bincmdresult = Error_Invalid;          
; 4523 |                                 break;                                 
; 4525 |                         lcd_clear();                                   
; 4526 |                         lcd_puts("Board Calibration...", 0);           
; 4527 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4528 |                         lcd_puts(buff, 20);                            
; 4529 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4530 |                         lcd_puts(buff, 40);                            
; 4531 |                         lcd_puts("Reading ... ", 60);                  
; 4533 |                         dsum[k] = 0;                                   
; 4534 |                         sampcnt = CAL_SAMPLES;                         
; 4535 |                         while (sampcnt--) {                            
; 4536 |                                 while (0 == ad7738_rawrdy()) {         
; 4537 |                                         delay_us(1);
;     |  // wait                                                               
; 4539 |                                 cntp = ad7738_getraw();                
; 4540 |                                 dsum[k] += cntp->adc[ch];              
; 4542 |                         if (1 == k) {                                  
; 4543 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4544 |                                                 / (dsum[1] - dsum[0]); 
; 4546 |                                 unsaved = 1;                           
; 4547 |                                 DINT;                                  
; 4548 |                                 ad7738_setcal();                       
; 4549 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4550 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4551 |                                 EINT;                                  
; 4553 |                         for (i = 0; i < cmdlen; i++) {                 
; 4554 |                                 buff[i] = cmdbuff[i];                  
; 4556 |                         j = cmdlen;                                    
; 4557 |                         bincmdresult = OK_SendResult;                  
; 4559 |                         lcd_clear();                                   
; 4560 |                         update_units();                                
; 4561 |                         break;                                         
; 4563 |                 case SetDCalParam:                                     
; 4565 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4566 |                                         || (0x07 | daccbm) != 0x07) {  
; 4567 |                                 bincmdresult = Error_Invalid;          
; 4568 |                                 break;                                 
; 4570 |                         ch = cmdbuff[2];                               
; 4571 |                         buff[j++] = ch;                                
; 4573 |                         for (k = 0; k < 3; k++) {                      
; 4574 |                                 intp = (Uint16*) &volt[k];             
; 4575 |                                 for (i = 0; i < 2; i++) {              
; 4576 |                                         *intp = cmdbuff[j];            
; 4577 |                                         buff[j++] = 0xff & *intp;      
; 4578 |                                         *intp += cmdbuff[j] << 8;      
; 4579 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4580 |                                         intp++;                        
; 4584 |                         // order: - o +                                
; 4585 |                         // do the calculations                         
; 4586 |                         conf_data.dac[ch].dslopen =                    
; 4587 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4588 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4589 |                         conf_data.dac[ch].dslopep =                    
; 4590 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4591 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4592 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4593 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4595 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4596 |                         daccbm = 0;                                    
; 4598 |                         unsaved = 1;                                   
; 4600 |                         DINT;                                          
; 4601 |                         ad7738_setcal();                               
; 4602 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4603 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4604 |                         EINT;                                          
; 4606 |                         bincmdresult = OK_SendResult;                  
; 4607 |                         break;                                         
; 4609 |                 case StartDCRead:                                      
; 4611 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4612 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4613 |                                 bincmdresult = Error_Invalid;          
; 4614 |                                 break;                                 
; 4617 |                         if (daccbm == 0) {                             
; 4618 |                                 ch = cmdbuff[2];                       
; 4619 |                         } else {                                       
; 4620 |                                 if (ch != cmdbuff[2]) {                
; 4621 |                                         bincmdresult = Error_Invalid;  
; 4622 |                                         break;                         
; 4625 |                         buff[j++] = ch;                                
; 4626 |                         k = cmdbuff[j];                                
; 4627 |                         buff[j++] = k;                                 
; 4629 |                         intp = (Uint16*) &volt[k];                     
; 4630 |                         for (i = 0; i < 2; i++) {                      
; 4631 |                                 *intp = cmdbuff[j];                    
; 4632 |                                 buff[j++] = 0xff & *intp;              
; 4633 |                                 *intp += cmdbuff[j] << 8;              
; 4634 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4635 |                                 intp++;                                
; 4637 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4638 |                                 bincmdresult = Error_Invalid;          
; 4639 |                                 break;                                 
; 4642 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4643 |                         if (dsum[0] <= 0) {                            
; 4644 |                                 dacc[k] = 0;                           
; 4645 |                         } else if (dsum[0] >= 0xffff) {                
; 4646 |                                 dacc[k] = 0xffff;                      
; 4647 |                         } else {                                       
; 4648 |                                 dacc[k] = (Uint16) dsum[0];            
; 4651 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4653 |                         mcbsp_xmit(dacc[k], ch);                       
; 4654 |                         latch_dac();                                   
; 4656 |                         daccbm |= (0x1 << k);                          
; 4658 |                         bincmdresult = OK_SendResult;                  
; 4659 |                         break;                                         
; 4661 |                 case SetSensorCalPa:                                   
; 4663 |                         if (cmdlen < 20) {                             
; 4664 |                                 bincmdresult = Error_Invalid;          
; 4665 |                                 break;                                 
; 4667 |                         k = 2;                                         
; 4668 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4669 |                         ss = cmdbuff[k++];              // sensor index
; 4670 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4671 |                                 bincmdresult = Error_Invalid;          
; 4672 |                                 break;                                 
; 4675 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4676 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4677 |                                 bincmdresult = Error_Invalid;          
; 4678 |                                 break;                                 
; 4680 |                         for (i = 0; i < tempint; i++) {                
; 4681 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4683 |                         tsensor.ssn[i] = '\0';                         
; 4685 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4686 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4687 |                                 bincmdresult = Error_Invalid;          
; 4688 |                                 break;                                 
; 4690 |                         for (i = 0; i < tempint; i++) {                
; 4691 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4693 |                         tsensor.slbl[i] = '\0';                        
; 4695 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4697 |                         intp = (Uint16*) &tsensor.date; // date        
; 4698 |                         for (i = 0; i < 2; i++) {                      
; 4699 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4700 |                                 k += 2;                                
; 4701 |                                 intp++;                                
; 4704 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4705 |                         for (i = 0; i < 2; i++) {                      
; 4706 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4707 |                                 k += 2;                                
; 4708 |                                 intp++;                                
; 4710 |                         tsensor.base = tsensor.range;                  
; 4712 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4713 |                         switch (tsensor.unit) {                        
; 4714 |                         case 0:                                 // lb  
; 4715 |                         case 1:                                 // kg  
; 4716 |                                 tsensor.unit |= UNIT_WT;               
; 4717 |                                 break;                                 
; 4718 |                         case 2:                                 // in  
; 4719 |                         case 3:                                 // cm  
; 4720 |                         case 4:                                 // mm  
; 4721 |                                 tsensor.unit |= UNIT_LT;               
; 4722 |                                 break;                                 
; 4723 |                         case 5:                                 // ps  
; 4724 |                                 tsensor.unit |= UNIT_PR;               
; 4725 |                                 break;                                 
; 4726 |                         case 6:                                 // nm  
; 4727 |                                 tsensor.unit |= UNIT_TQ;               
; 4728 |                                 break;                                 
; 4729 |                         case 7:                                        
; 4730 |                         case 8:                                        
; 4731 |                         case 15:                                       
; 4732 |                                 tsensor.unit |= 0xf0;                  
; 4733 |                                 break;                                 
; 4734 |                         default:                                       
; 4735 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4736 |                                 break;                                 
; 4738 |                         tsensor.ounit = tsensor.unit;                  
; 4739 |                         tsensor.ufactor = 1;                           
; 4741 |                         switch (tsensor.method) {                      
; 4742 |                         case MD_RUN_MVV:                               
; 4744 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4745 |                                 for (i = 0; i < 2; i++) {              
; 4746 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4747 |                                         k += 2;                        
; 4748 |                                         intp++;                        
; 4750 |                                 if (tsensor.slope[0] == 0) {           
; 4751 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4753 |                                 tsensor.points = 1;                    
; 4754 |                                 break;                                 
; 4756 |                         case MD_RUN_MAS:                               
; 4758 |                                 tsensor.points = cmdbuff[k++];         
; 4759 |                                 if (tsensor.points > PNT_MAX) {        
; 4760 |                                         tsensor.method = MD_UNCALED;   
; 4761 |                                         break;                         
; 4764 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4765 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4766 |                                         for (i = 0; i < 2; i++) {      
; 4767 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4768 |                                                 k += 2;                
; 4769 |                                                 intp++;                
; 4772 |                                 break;                                 
; 4774 |                         case MD_RUN_SHT:                               
; 4776 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4777 |                                 for (i = 0; i < 2; i++) {              
; 4778 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4779 |                                         k += 2;                        
; 4780 |                                         intp++;                        
; 4782 |                                 if (scale == 0) {                      
; 4783 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4785 |                                 tsensor.points = 1;                    
; 4786 |                                 break;                                 
; 4788 |                         default:                                       
; 4790 |                                 tsensor.method = MD_UNCALED;           
; 4791 |                                 break;                                 
; 4794 |                         if (tsensor.method == MD_UNCALED) {            
; 4795 |                                 bincmdresult = Error_Invalid;          
; 4796 |                                 break;                                 
; 4798 |                         tsensor.tare = 0;                              
; 4799 |                         tsensor.dacgain = 1;                           
; 4800 |                         tsensor.dacoff = 0;                            
; 4801 |                         tsensor.ch = ch;                               
; 4803 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4804 |                                 buff[j] = cmdbuff[j++];                
; 4806 |                         bincmdresult = OK_SendResult;                  
; 4807 |                         break;                                         
; 4809 |                 case StartSCRead:                                      
; 4811 |                         if (cmdlen < 5) {                              
; 4812 |                                 bincmdresult = Error_Invalid;          
; 4813 |                                 break;                                 
; 4815 |                         k = 2;                                         
; 4816 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4817 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4818 |                                 bincmdresult = Error_Invalid;          
; 4819 |                                 break;                                 
; 4822 |                         lcd_clear();                                   
; 4823 |                         lcd_puts("Sensor Calibration..", 0);           
; 4824 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4825 |                         lcd_puts(buff, 20);                            
; 4826 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4827 |                         lcd_puts(buff, 40);                            
; 4829 |                         switch (tsensor.method) {                      
; 4831 |                         case MD_RUN_MVV:                               
; 4833 |                                 lcd_puts("Reading zero point...", 60); 
; 4835 |                                 dsum[0] = 0;                           
; 4836 |                                 sampcnt = CAL_SAMPLES;                 
; 4837 |                                 while (sampcnt--) {                    
; 4838 |                                         while (0 == ad7738_rawrdy()) { 
; 4839 |                                                 delay_us(1);
;     |          // wait                                                       
; 4842 |                                         cntp = ad7738_getraw();        
; 4843 |                                         dsum[0] += cntp->adc[ch];      
; 4845 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4846 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4848 |                                 bincmdresult = OK_SendResult;          
; 4849 |                                 break;                                 
; 4851 |                         case MD_RUN_MAS:                               
; 4853 |                                 pt = cmdbuff[k++];                     
; 4854 |                                 intp = (Uint16*) &scale;               
; 4855 |                                 for (i = 0; i < 2; i++) {              
; 4856 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4857 |                                         k += 2;                        
; 4858 |                                         intp++;                        
; 4860 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4861 |                                         bincmdresult = Error_Invalid;  
; 4862 |                                         break;                         
; 4864 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4865 |                                 lcd_puts(buff, 60);                    
; 4867 |                                 dsum[0] = 0;                           
; 4868 |                                 sampcnt = CAL_SAMPLES;                 
; 4869 |                                 while (sampcnt--) {                    
; 4870 |                                         while (0 == ad7738_rawrdy()) { 
; 4871 |                                                 delay_us(1);
;     |          // wait                                                       
; 4874 |                                         cntp = ad7738_getraw();        
; 4875 |                                         dsum[0] += cntp->adc[ch];      
; 4877 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4879 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4881 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4882 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4883 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4884 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4885 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4886 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4887 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4888 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4889 | 
;     |          * tsensor.adc[k];                                             
; 4893 |                                 bincmdresult = OK_SendResult;          
; 4894 |                                 break;                                 
; 4896 |                         case MD_RUN_SHT:                               
; 4898 |                                 lcd_puts("Reading zero point...", 60); 
; 4900 |                                 for (k = 0; k < 2; k++) {              
; 4901 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4903 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4904 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4905 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4907 |                                                 DINT;                  
; 4908 |                                                 maf_rst();             
; 4909 |                                                 EINT;                  
; 4910 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4913 |                                         dsum[k] = 0;                   
; 4914 |                                         sampcnt = CAL_SAMPLES;         
; 4915 |                                         while (sampcnt--) {            
; 4916 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4917 |                                                         delay_us(1);
;     |                  // wait                                               
; 4920 |                                                 cntp = ad7738_getraw();
; 4921 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4925 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4926 |                                 DINT;                                  
; 4927 |                                 maf_rst();                             
; 4928 |                                 EINT;                                  
; 4930 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4931 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4932 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4933 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4935 |                                 bincmdresult = OK_SendResult;          
; 4936 |                                 break;                                 
; 4938 |                         default:                                       
; 4940 |                                 bincmdresult = Error_Invalid;          
; 4941 |                                 break;                                 
; 4943 |                         lcd_clear();                                   
; 4944 |                         update_units();                                
; 4946 |                         if (bincmdresult != OK_SendResult) {           
; 4947 |                                 break;                                 
; 4949 |                         for (i = 0; i < cmdlen; i++) {                 
; 4950 |                                 buff[i] = cmdbuff[i];                  
; 4952 |                         j = cmdlen;                                    
; 4953 |                         break;                                         
; 4955 |                 case StartSCShuntRd:                                   
; 4957 |                         if (cmdlen < 5) {                              
; 4958 |                                 bincmdresult = Error_Invalid;          
; 4959 |                                 break;                                 
; 4961 |                         k = 2;                                         
; 4962 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4963 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4964 |                                 bincmdresult = Error_Invalid;          
; 4965 |                                 break;                                 
; 4968 |                         lcd_clear();                                   
; 4969 |                         lcd_puts("Sensor Calibration..", 0);           
; 4970 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4971 |                         lcd_puts(buff, 20);                            
; 4972 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4973 |                         lcd_puts(buff, 40);                            
; 4974 |                         lcd_puts("Reading shunt value...", 60);        
; 4976 |                         for (k = 0; k < 2; k++) {                      
; 4977 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4979 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4980 |                                         for (i = 0; i < 50; i++) {     
; 4981 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4983 |                                         DINT;                          
; 4984 |                                         maf_rst();                     
; 4985 |                                         EINT;                          
; 4986 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4989 |                                 dsum[k] = 0;                           
; 4990 |                                 sampcnt = CAL_SAMPLES;                 
; 4991 |                                 while (sampcnt--) {                    
; 4992 |                                         while (0 == ad7738_rawrdy()) { 
; 4993 |                                                 delay_us(1);
;     |          // wait                                                       
; 4996 |                                         cntp = ad7738_getraw();        
; 4997 |                                         dsum[k] += cntp->adc[ch];      
; 4999 |                                 dsum[k] /= CAL_SAMPLES;                
; 5001 |                                 pt = 0;                                
; 5002 |                                 if (tsensor.points > 2) {              
; 5003 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 5004 |                                                 pt++;                  
; 5007 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 5008 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 5011 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 5012 |                         DINT;                                          
; 5013 |                         maf_rst();                                     
; 5014 |                         EINT;                                          
; 5016 |                         tsensor.shunt = volt[1] - volt[0];             
; 5018 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 5020 |                         DINT;                                          
; 5021 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 5022 |                                         sizeof(sconf_t));              
; 5024 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 5026 |                         ad7738_setcal();                               
; 5027 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5028 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5029 |                         EINT;                                          
; 5031 |                         unsaved = 1;                                   
; 5033 |                         lcd_clear();                                   
; 5034 |                         update_units();                                
; 5036 |                         for (i = 0; i < cmdlen; i++) {                 
; 5037 |                                 buff[i] = cmdbuff[i];                  
; 5039 |                         j = cmdlen;                                    
; 5040 |                         bincmdresult = OK_SendResult;                  
; 5041 |                         break;                                         
; 5043 |                 case SetSensorName:                                    
; 5045 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 5046 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 5047 |                                 bincmdresult = Error_Invalid;          
; 5048 |                                 break;                                 
; 5050 |                         ss = cmdbuff[2];                               
; 5051 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5053 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 5054 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 5055 |                         for (i = 0; i < slen; i++) {                   
; 5056 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 5058 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 5059 |                         unsaved = 1;                                   
; 5061 |                         // sensor name/label                           
; 5062 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 5063 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5064 |                         for (i = 0; i < slen; i++) {                   
; 5065 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5068 |                         bincmdresult = OK_SendResult;                  
; 5069 |                         break;                                         
; 5071 |                 case SetSensorOUnit:                                   
; 5073 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5074 |                                 bincmdresult = Error_Invalid;          
; 5075 |                                 break;                                 
; 5078 |                         ss = cmdbuff[2];                               
; 5079 |                         pt = cmdbuff[3];                               
; 5081 |                         if (pt != UNIT_PC                              
; 5082 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5083 |                                 bincmdresult = Error_Invalid;          
; 5084 |                                 break;                                 
; 5087 |                         conf_data.sensor[ss].ounit = pt;               
; 5088 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5089 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5091 |                         if (pt == UNIT_PC) {                           
; 5092 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5093 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5094 |                         } else if (conf_data.sensor[ss].ounit          
; 5095 |                                         == conf_data.sensor[ss].unit) {
; 5096 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5097 |                         } else {                                       
; 5098 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5099 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5101 |                                         if (pt == UNIT_KG) {           
; 5102 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5104 |                                         break;                         
; 5106 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5108 |                                         if (pt == UNIT_LB) {           
; 5109 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5111 |                                         break;                         
; 5113 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5115 |                                         switch (pt) {                  
; 5116 |                                         case UNIT_CM:                  
; 5117 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5118 |                                                 break;                 
; 5119 |                                         case UNIT_MM:                  
; 5120 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5121 |                                                 break;                 
; 5123 |                                         break;                         
; 5125 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5127 |                                         switch (pt) {                  
; 5128 |                                         case UNIT_IN:                  
; 5129 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5130 |                                                 break;                 
; 5131 |                                         case UNIT_MM:                  
; 5132 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5133 |                                                 break;                 
; 5135 |                                         break;                         
; 5137 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5139 |                                         switch (pt) {                  
; 5140 |                                         case UNIT_IN:                  
; 5141 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5142 |                                                 break;                 
; 5143 |                                         case UNIT_CM:                  
; 5144 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5145 |                                                 break;                 
; 5147 |                                         break;                         
; 5149 |                                 default:                               
; 5151 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5152 |                                         break;                         
; 5156 |                         unsaved = 1;                                   
; 5158 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5159 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5160 |                                         update_units();                
; 5161 |                                         DINT;                          
; 5162 |                                         ad7738_setcal();               
; 5163 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5164 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5165 |                                         EINT;                          
; 5169 |                         bincmdresult = OK_SendResult;                  
; 5170 |                         break;                                         
; 5172 |                 case SetSensorBase:                                    
; 5174 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5175 |                                 bincmdresult = Error_Invalid;          
; 5176 |                                 break;                                 
; 5178 |                         ss = cmdbuff[2];                               
; 5179 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5181 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5182 |                         for (i = 0; i < 2; i++) {                      
; 5183 |                                 *intp = cmdbuff[j];                    
; 5184 |                                 buff[j++] = 0xff & *intp;              
; 5185 |                                 *intp += cmdbuff[j] << 8;              
; 5186 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5187 |                                 intp++;                                
; 5189 |                         unsaved = 1;                                   
; 5191 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5192 |                                 // output unit is percent              
; 5193 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5194 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5196 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5197 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5198 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5199 |                                                 DINT;                  
; 5200 |                                                 ad7738_setcal();       
; 5201 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5202 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5203 |                                                 EINT;                  
; 5208 |                         bincmdresult = OK_SendResult;                  
; 5209 |                         break;                                         
; 5211 |                 case SetQEPChannels:                                   
; 5213 |                         if (cmdlen < 6) {                              
; 5214 |                                 bincmdresult = Error_Invalid;          
; 5215 |                                 break;                                 
; 5218 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5219 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5220 |                                 for (i = 0; i < 2; i++) {              
; 5221 |                                         *intp = cmdbuff[j];            
; 5222 |                                         buff[j++] = 0xff & *intp;      
; 5223 |                                         *intp += cmdbuff[j] << 8;      
; 5224 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5225 |                                         intp++;                        
; 5229 |                         conf_data.velfilter = cmdbuff[j];              
; 5230 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5231 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5232 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5234 |                         unsaved = 1;                                   
; 5236 |                         DINT;                                          
; 5237 |                         ad7738_setcal();                               
; 5238 |                         velf_rst();                                    
; 5239 |                         EINT;                                          
; 5241 |                         bincmdresult = OK_SendResult;                  
; 5242 |                         break;                                         
; 5244 |                         //case SetEnCntperin: // not needed            
; 5245 |                         //break;                                       
; 5247 |                 case SetCurSensor:                                     
; 5249 |                         if (cmdlen < 4||                               
; 5250 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5251 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5252 |                                 bincmdresult = Error_Invalid;          
; 5253 |                                 break;                                 
; 5256 |                         ch = cmdbuff[2];                               
; 5257 |                         ss = cmdbuff[3];                               
; 5259 |                         if (autoid[ch]) {                              
; 5260 |                                 bincmdresult = Error_Exe;              
; 5261 |                                 break;                                 
; 5264 |                         DINT;                                          
; 5265 |                         conf_data.ch[ch].ci = ss;                      
; 5266 |                         ad7738_setcal();                               
; 5268 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5269 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5270 |                         EINT;                                          
; 5272 |                         update_units();                                
; 5273 |                         unsaved = 1;                                   
; 5275 |                         buff[j++] = ch;                                
; 5276 |                         buff[j++] = ss;                                
; 5277 |                         bincmdresult = OK_SendResult;                  
; 5278 |                         break;                                         
; 5280 |                 case SetAFilterSize:                                   
; 5282 |                         if (cmdlen < 4) {                              
; 5283 |                                 bincmdresult = Error_Invalid;          
; 5284 |                                 break;                                 
; 5287 |                         // filter length                               
; 5288 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5289 |                         if (temp16 > MAF_MAX) {                        
; 5290 |                                 bincmdresult = Error_Invalid;          
; 5291 |                                 break;                                 
; 5294 |                         // filter diff window                          
; 5295 |                         intp = (Uint16*) &tempft;                      
; 5296 |                         for (i = 0; i < 2; i++) {                      
; 5297 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5298 |                                 intp++;                                
; 5301 |                         DINT;                                          
; 5302 |                         conf_data.filter = temp16;                     
; 5303 |                         conf_data.diffwin = tempft;                    
; 5304 |                         maf_rst();                                     
; 5305 |                         EINT;                                          
; 5307 |                         unsaved = 1;                                   
; 5309 |                         buff[j++] = 0xff & temp16;                     
; 5310 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5312 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5313 |                         buff[j++] = 0xff & intp[0];                    
; 5314 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5315 |                         buff[j++] = 0xff & intp[1];                    
; 5316 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5318 |                         bincmdresult = OK_SendResult;                  
; 5319 |                         break;                                         
; 5321 |                 case SetAutoId:                                        
; 5323 |                         if (cmdlen < 3) {                              
; 5324 |                                 bincmdresult = Error_Invalid;          
; 5325 |                                 break;                                 
; 5328 |                         conf_data.tagiden = cmdbuff[2];                
; 5329 |                         if (!conf_data.tagiden) {                      
; 5330 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5331 |                                         tagwasthere[i] = 0;            
; 5332 |                                         autoid[i] = 0;                 
; 5334 |                                 update_units();                        
; 5336 |                         unsaved = 1;                                   
; 5338 |                         buff[j] = cmdbuff[j++];                        
; 5339 |                         bincmdresult = OK_SendResult;                  
; 5340 |                         break;                                         
; 5342 |                 case SetDisplayLine:                                   
; 5344 |                         if (cmdlen < 14) {                             
; 5345 |                                 bincmdresult = Error_Invalid;          
; 5346 |                                 break;                                 
; 5349 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5350 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5351 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5352 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5353 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5354 |                                         || cmdbuff[13] > 5) {          
; 5355 |                                 bincmdresult = Error_Invalid;          
; 5356 |                                 break;                                 
; 5359 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5360 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5361 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5362 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5363 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5364 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5365 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5367 |                         unsaved = 1;                                   
; 5369 |                         lcd_clear();                                   
; 5370 |                         update_units();                                
; 5371 |                         bincmdresult = OK_SendResult;                  
; 5372 |                         break;                                         
; 5374 |                 case SetDACCh:                                         
; 5376 |                         if (cmdlen < 42) {                             
; 5377 |                                 bincmdresult = Error_Invalid;          
; 5378 |                                 break;                                 
; 5381 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5382 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5383 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5384 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5385 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5386 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5387 |                                 bincmdresult = Error_Invalid;          
; 5388 |                                 break;                                 
; 5391 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5392 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5393 |                                 buff[j++] = conf_data.dac[i].what;     
; 5394 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5395 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5397 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5398 |                                 //{                                    
; 5399 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5400 |                                 //}                                    
; 5401 |                                 //else                                 
; 5402 |                                 //{                                    
; 5403 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5404 |                                 //}                                    
; 5405 |                                 for (k = 0; k < 2; k++) {              
; 5406 |                                         *intp = cmdbuff[j];            
; 5407 |                                         buff[j++] = 0xff & *intp;      
; 5408 |                                         *intp += cmdbuff[j] << 8;      
; 5409 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5410 |                                         intp++;                        
; 5413 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5414 |                                 //{                                    
; 5415 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5416 |                                 //}                                    
; 5417 |                                 //else                                 
; 5418 |                                 //{                                    
; 5419 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5420 |                                 //}                                    
; 5421 |                                 for (k = 0; k < 2; k++) {              
; 5422 |                                         *intp = cmdbuff[j];            
; 5423 |                                         buff[j++] = 0xff & *intp;      
; 5424 |                                         *intp += cmdbuff[j] << 8;      
; 5425 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5426 |                                         intp++;                        
; 5429 |                         unsaved = 1;                                   
; 5431 |                         DINT;                                          
; 5432 |                         ad7738_setcal();                               
; 5433 |                         EINT;                                          
; 5434 |                         bincmdresult = OK_SendResult;                  
; 5435 |                         break;                                         
; 5437 |                 case SetLIMITCh:                                       
; 5439 |                         if (cmdlen < 46) {                             
; 5440 |                                 bincmdresult = Error_Invalid;          
; 5441 |                                 break;                                 
; 5444 |                         if (cmdbuff[2]                                 
; 5445 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5446 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5447 |                                 bincmdresult = Error_Invalid;          
; 5448 |                                 break;                                 
; 5451 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5452 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5453 |                                 buff[j++] = conf_data.lim[i].what;     
; 5454 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5455 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5456 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5457 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5459 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5460 |                                 for (k = 0; k < 2; k++) {              
; 5461 |                                         *intp = cmdbuff[j];            
; 5462 |                                         buff[j++] = 0xff & *intp;      
; 5463 |                                         *intp += cmdbuff[j] << 8;      
; 5464 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5465 |                                         intp++;                        
; 5467 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5468 |                                 for (k = 0; k < 2; k++) {              
; 5469 |                                         *intp = cmdbuff[j];            
; 5470 |                                         buff[j++] = 0xff & *intp;      
; 5471 |                                         *intp += cmdbuff[j] << 8;      
; 5472 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5473 |                                         intp++;                        
; 5476 |                         unsaved = 1;                                   
; 5478 |                         DINT;                                          
; 5479 |                         ad7738_setcal();                               
; 5480 |                         EINT;                                          
; 5482 |                         bincmdresult = OK_SendResult;                  
; 5483 |                         break;                                         
; 5485 |                 case Tare:                                             
; 5487 |                         if (cmdlen < 3) {                              
; 5488 |                                 //bincmdresult = Error_Invalid;        
; 5489 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5490 |                                 ad7738_resetpeak(0xff);                
; 5491 |                                 ad7738_resetvall(0xff);                
; 5492 |                                 unsaved = 1;                           
; 5494 |                                 buff[j++] = 0xff;                      
; 5495 |                                 bincmdresult = OK_SendResult;          
; 5496 |                                 break;                                 
; 5499 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5500 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5501 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5502 |                         unsaved = 1;                                   
; 5504 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5505 |                         bincmdresult = OK_SendResult;                  
; 5506 |                         break;                                         
; 5508 |                 case ResetPkVly:                                       
; 5510 |                         if (cmdlen < 3) {                              
; 5511 |                                 bincmdresult = Error_Invalid;          
; 5512 |                                 break;                                 
; 5515 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5516 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5517 |                         unsaved = 1;                                   
; 5519 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5520 |                         bincmdresult = OK_SendResult;                  
; 5521 |                         break;                                         
; 5523 |                 case ResetPk:                                          
; 5525 |                         if (cmdlen < 3) {                              
; 5526 |                                 bincmdresult = Error_Invalid;          
; 5527 |                                 break;                                 
; 5530 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5531 |                         unsaved = 1;                                   
; 5533 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5534 |                         bincmdresult = OK_SendResult;                  
; 5535 |                         break;                                         
; 5537 |                 case ResetVly:                                         
; 5539 |                         if (cmdlen < 3) {                              
; 5540 |                                 bincmdresult = Error_Invalid;          
; 5541 |                                 break;                                 
; 5544 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5545 |                         unsaved = 1;                                   
; 5547 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5548 |                         bincmdresult = OK_SendResult;                  
; 5549 |                         break;                                         
; 5551 |                 case ResetLIMIT:                                       
; 5553 |                         if (cmdlen < 3) {                              
; 5554 |                                 bincmdresult = Error_Invalid;          
; 5555 |                                 break;                                 
; 5558 |                         k = 0x01;                                      
; 5559 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5560 |                                 if (k & cmdbuff[2]) {                  
; 5561 |                                         ad7738_resetlimit(i);          
; 5563 |                                 k <<= 1;                               
; 5565 |                         unsaved = 1;                                   
; 5567 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5568 |                         bincmdresult = OK_SendResult;                  
; 5569 |                         break;                                         
; 5571 |                 case ResetPosition:                                    
; 5573 |                         if (cmdlen < 3) {                              
; 5574 |                                 bincmdresult = Error_Invalid;          
; 5575 |                                 break;                                 
; 5578 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5579 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5580 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5581 |                         unsaved = 1;                                   
; 5583 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5584 |                         bincmdresult = OK_SendResult;                  
; 5585 |                         break;                                         
; 5587 |                 case SetShuntSwitch:                                   
; 5589 |                         if (cmdlen < 3) {                              
; 5590 |                                 bincmdresult = Error_Invalid;          
; 5591 |                                 break;                                 
; 5594 |                         shunt_switch(cmdbuff[2]);                      
; 5595 |                         unsaved = 1;                                   
; 5597 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5598 |                         bincmdresult = OK_SendResult;                  
; 5599 |                         break;                                         
; 5601 |                 case SetDirectVolt:                                    
; 5603 |                         if (cmdlen < 7) {                              
; 5604 |                                 bincmdresult = Error_Invalid;          
; 5605 |                                 break;                                 
; 5608 |                         ss = cmdbuff[j];                               
; 5609 |                         buff[j++] = ss;                                
; 5611 |                         intp = (Uint16*) &volt[0];                     
; 5612 |                         for (k = 0; k < 2; k++) {                      
; 5613 |                                 *intp = cmdbuff[j];                    
; 5614 |                                 buff[j++] = 0xff & *intp;              
; 5615 |                                 *intp += cmdbuff[j] << 8;              
; 5616 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5617 |                                 intp++;                                
; 5620 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5621 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5622 |                                 bincmdresult = Error_Invalid;          
; 5623 |                                 break;                                 
; 5626 |                         if (volt[0] < 0) {                             
; 5627 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5628 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5629 |                         } else {                                       
; 5630 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5631 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5634 |                         if (dsum[0] <= 0) {                            
; 5635 |                                 dacc[0] = 0;                           
; 5636 |                         } else if (dsum[0] >= 0xffff) {                
; 5637 |                                 dacc[0] = 0xffff;                      
; 5638 |                         } else {                                       
; 5639 |                                 dacc[0] = (Uint16) dsum[0];            
; 5642 |                         mcbsp_xmit(dacc[0], ss);                       
; 5643 |                         latch_dac();                                   
; 5645 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5646 |                         buff[j++] = 0xff & dacc[0];                    
; 5647 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5649 |                         bincmdresult = OK_SendResult;                  
; 5650 |                         break;                                         
; 5652 |                 case GetAllFlash:                                      
; 5654 |                         break;                                         
; 5656 |                 case SetAllFlash:                                      
; 5658 |                         break;                                         
; 5660 |                 case FlashMemWrite:                                    
; 5662 |                         bincmdresult = OK_SendResult;                  
; 5663 |                         if (unsaved) {                                 
; 5664 |                                 // flash writing                       
; 5665 |                                 lcd_clear();                           
; 5666 |                                 lcd_puts("Flash writing...", 0);       
; 5668 |                                 for (i = 0; i < 50; i++) {             
; 5669 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5672 |                                 DINT;                                  
; 5673 |                                 flash_ret = conf_write();              
; 5674 |                                 EINT;                                  
; 5676 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5677 |                                         lcd_puts("Done", 16);          
; 5678 |                                         unsaved = 0;                   
; 5679 |                                 } else {                               
; 5680 |                                         lcd_puts("Fail", 16);          
; 5681 |                                         bincmdresult = Error_Exe;      
; 5684 |                                 for (i = 0; i < 50; i++) {             
; 5685 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5687 |                                 lcd_clear();                           
; 5688 |                                 update_units();                        
; 5690 |                         break;                                         
; 5692 |                 case FlashMemDefault:                                  
; 5694 |                         conf_default();                                
; 5696 |                         // flash writing                               
; 5697 |                         lcd_clear();                                   
; 5698 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5700 |                         for (i = 0; i < 50; i++) {                     
; 5701 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5704 |                         DINT;                                          
; 5705 |                         flash_ret = conf_write();                      
; 5706 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5707 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5708 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5709 |                         EINT;                                          
; 5711 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5712 |                                 lcd_puts("Done", 31);                  
; 5713 |                                 unsaved = 0;                           
; 5714 |                                 bincmdresult = OK_SendResult;          
; 5715 |                         } else {                                       
; 5716 |                                 lcd_puts("Fail", 31);                  
; 5717 |                                 bincmdresult = Error_Exe;              
; 5719 |                         for (i = 0; i < 50; i++) {                     
; 5720 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5722 |                         lcd_clear();                                   
; 5723 |                         update_units();                                
; 5725 |                         break;                                         
; 5727 |                 case FlashMemRead:                                     
; 5729 |                         // flash reading                               
; 5730 |                         conf_read();                                   
; 5732 |                         DINT;                                          
; 5733 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5734 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5735 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5736 |                         EINT;                                          
; 5738 |                         unsaved = 0;                                   
; 5739 |                         update_units();                                
; 5740 |                         bincmdresult = OK_SendResult;                  
; 5741 |                         break;                                         
; 5743 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |650| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |650| 
        ; call occurs [#_SPICANRead] ; [] |650| 
        MOVL      XAR0,#40              ; [CPU_] |650| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |650| 
        MOV       *-SP[40],AL           ; [CPU_] |650| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 601,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |601| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L636,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5745,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5745 | if (cmdlen < 6) {                                                      
; 5746 |         bincmdresult = Error_Invalid;                                  
; 5747 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5745| 
        B         $C$L320,LO            ; [CPU_] |5745| 
        ; branchcc occurs ; [] |5745| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5750 | ds_dn = cmdbuff[2];                                                    
; 5751 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5752,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5752 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5752| 
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5750| 
        ADDB      ACC,#2                ; [CPU_] |5750| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5752,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5753 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5752| 
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5750| 
        MOV       *-SP[52],AL           ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5752,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5752| 
        ADDB      ACC,#4                ; [CPU_] |5752| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5752| 
	.dwpsn	file "../Source/prod.c",line 5754,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5754 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5754| 
	.dwpsn	file "../Source/prod.c",line 5752,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5752| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5752| 
        MOV       *-SP[51],AL           ; [CPU_] |5752| 
	.dwpsn	file "../Source/prod.c",line 5754,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5756 | tempint = 0;                                                           
; 5757 | k = 0x01;                                                              
; 5758 | for (i = 0; i < 8; i++) {                                              
; 5759 |         if (ds_bm & k) {                                               
; 5760 |                 tempint++;                                             
; 5762 |         k <<= 1;                                                       
; 5765 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5766 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5767 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5768 | //                                      ds_en = 0;                     
; 5769 | //                                      bincmdresult = Error_Invalid;  
; 5770 | //                                      break;                         
; 5771 | //                              }                                      
; 5773 | ds_en = 1;                                                             
; 5774 | ds_stop = 0;                                                           
; 5775 | ds_sn = 0;                                                             
; 5777 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5778 | //                              ad7738_setlimitchgd();                 
; 5780 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5754| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5754| 
        MOV       *-SP[50],AL           ; [CPU_] |5754| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5781,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5781 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5781| 
	.dwpsn	file "../Source/prod.c",line 5773,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5773| 
	.dwpsn	file "../Source/prod.c",line 5774,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5774| 
	.dwpsn	file "../Source/prod.c",line 5775,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5775| 
	.dwpsn	file "../Source/prod.c",line 5782,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5782 | j++;                                                                   
; 5784 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5782| 
	.dwpsn	file "../Source/prod.c",line 5785,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5785 | break;                                                                 
; 5787 | case StopStream:                                                       
; 5789 | ds_stop = 1;                                                           
; 5790 | bincmdresult = OK_SendResult;                                          
; 5791 | break;                                                                 
; 5793 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5795 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L745,UNC           ; [CPU_] |5785| 
        ; branch occurs ; [] |5785| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4957,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4957| 
        B         $C$L320,LO            ; [CPU_] |4957| 
        ; branchcc occurs ; [] |4957| 
	.dwpsn	file "../Source/prod.c",line 4962,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4962| 
        MOVL      ACC,XAR4              ; [CPU_] |4962| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4962| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4962| 
        MOVL      XAR0,#66              ; [CPU_] |4962| 
        ADDB      ACC,#2                ; [CPU_] |4962| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4962| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4962| 
        CMPL      ACC,XAR6              ; [CPU_] |4962| 
        B         $C$L320,NEQ           ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4962| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4962| 
        CMPL      ACC,XAR6              ; [CPU_] |4962| 
        B         $C$L320,NEQ           ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4962| 
        MOVL      XAR0,#64              ; [CPU_] |4962| 
        MOVL      ACC,XAR5              ; [CPU_] |4962| 
        ADDB      ACC,#4                ; [CPU_] |4962| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4962| 
        MOVB      XAR0,#36              ; [CPU_] |4962| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4962| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4962| 
        B         $C$L320,NEQ           ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
	.dwpsn	file "../Source/prod.c",line 4968,column 5,is_stmt,isa 0
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4968| 
        ; call occurs [#_lcd_clear] ; [] |4968| 
	.dwpsn	file "../Source/prod.c",line 4969,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4969| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4969| 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4969| 
        ; call occurs [#_lcd_puts] ; [] |4969| 
	.dwpsn	file "../Source/prod.c",line 4970,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4970| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4970| 
        MOVL      XAR0,#44              ; [CPU_] |4970| 
        ADD       AL,*-SP[58]           ; [CPU_] |4970| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4970| 
        MOV       *-SP[3],AL            ; [CPU_] |4970| 
        MOVB      AL,#1                 ; [CPU_] |4970| 
        ADD       AL,*-SP[57]           ; [CPU_] |4970| 
        MOV       *-SP[4],AL            ; [CPU_] |4970| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4970| 
        MOVL      XAR4,XAR3             ; [CPU_] |4970| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_sprintf")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4970| 
        ; call occurs [#_sprintf] ; [] |4970| 
	.dwpsn	file "../Source/prod.c",line 4971,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4971| 
        MOVL      XAR4,XAR3             ; [CPU_] |4971| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4971| 
        ; call occurs [#_lcd_puts] ; [] |4971| 
	.dwpsn	file "../Source/prod.c",line 4972,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4972| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4972| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4972| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4972| 
        MOVL      XAR0,#58              ; [CPU_] |4972| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4972| 
        MOVB      XAR1,#36              ; [CPU_] |4972| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4972| 
        ADDL      ACC,XAR6              ; [CPU_] |4972| 
        MOVL      XAR4,ACC              ; [CPU_] |4972| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4972| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4972| 
        MOVL      XAR4,XAR3             ; [CPU_] |4972| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_sprintf")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4972| 
        ; call occurs [#_sprintf] ; [] |4972| 
	.dwpsn	file "../Source/prod.c",line 4973,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4973| 
        MOVL      XAR4,XAR3             ; [CPU_] |4973| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4973| 
        ; call occurs [#_lcd_puts] ; [] |4973| 
	.dwpsn	file "../Source/prod.c",line 4974,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4974| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4974| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4974| 
        ; call occurs [#_lcd_puts] ; [] |4974| 
        MOVL      XAR0,#78              ; [CPU_] |4974| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4974| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4974| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4976,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4976| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4976| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4977,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4977| 
        B         $C$L83,LEQ            ; [CPU_] |4977| 
        ; branchcc occurs ; [] |4977| 
	.dwpsn	file "../Source/prod.c",line 4979,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4979| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4979| 
        ; call occurs [#_shunt_switch] ; [] |4979| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4981,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4981| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_delay_us")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4981| 
        ; call occurs [#_delay_us] ; [] |4981| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4981| 
	.dwpsn	file "../Source/prod.c",line 4980,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4980| 
        MOVZ      AR0,AR6               ; [CPU_] |4980| 
        MOV       *-SP[48],AR6          ; [CPU_] |4980| 
        CMP       AR0,#-1               ; [CPU_] |4980| 
        B         $C$L82,NEQ            ; [CPU_] |4980| 
        ; branchcc occurs ; [] |4980| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4984,column 7,is_stmt,isa 0
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("_maf_rst")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4984| 
        ; call occurs [#_maf_rst] ; [] |4984| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4986,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4986| 
        SPM       #0                    ; [CPU_] 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("_delay_us")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4986| 
        ; call occurs [#_delay_us] ; [] |4986| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4989,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4989| 
	.dwpsn	file "../Source/prod.c",line 4990,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4990| 
	.dwpsn	file "../Source/prod.c",line 4989,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4989| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4989| 
	.dwpsn	file "../Source/prod.c",line 4991,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4990,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4990| 
	.dwpsn	file "../Source/prod.c",line 4991,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4991| 
        MOVB      ACC,#0                ; [CPU_] |4991| 
        SUBB      ACC,#1                ; [CPU_] |4991| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4991| 
        B         $C$L86,EQ             ; [CPU_] |4991| 
        ; branchcc occurs ; [] |4991| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4992,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4992| 
        ; branch occurs ; [] |4992| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4993,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4993| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_delay_us")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4993| 
        ; call occurs [#_delay_us] ; [] |4993| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4992,column 14,is_stmt,isa 0
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4992| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4992| 
        CMPB      AL,#0                 ; [CPU_] |4992| 
        B         $C$L84,EQ             ; [CPU_] |4992| 
        ; branchcc occurs ; [] |4992| 
	.dwpsn	file "../Source/prod.c",line 4996,column 7,is_stmt,isa 0
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4996| 
        ; call occurs [#_ad7738_getraw] ; [] |4996| 
	.dwpsn	file "../Source/prod.c",line 4997,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4997| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4997| 
        ADDL      XAR4,ACC              ; [CPU_] |4997| 
        MOVL      XAR0,#34              ; [CPU_] |4997| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4997| 
        MOVL      XAR0,#34              ; [CPU_] |4997| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4997| 
        ASR64     ACC:P,16              ; [CPU_] |4997| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4997| 
        MOVL      XAR0,#34              ; [CPU_] |4997| 
        ASR64     ACC:P,16              ; [CPU_] |4997| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4997| 
        MOVL      XAR0,#34              ; [CPU_] |4997| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4997| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4997| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4997| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4997| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4997| 
	.dwpsn	file "../Source/prod.c",line 4991,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4991| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4991| 
        MOVB      ACC,#0                ; [CPU_] |4991| 
        SUBB      ACC,#1                ; [CPU_] |4991| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4991| 
        B         $C$L85,NEQ            ; [CPU_] |4991| 
        ; branchcc occurs ; [] |4991| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4999,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4999| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4999| 
        MOV       *-SP[2],#0            ; [CPU_] |4999| 
        MOV       *-SP[1],#0            ; [CPU_] |4999| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4999| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4999| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4999| 
        ; call occurs [#LL$$DIV] ; [] |4999| 
	.dwpsn	file "../Source/prod.c",line 5002,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |5002| 
        MOVB      XAR0,#46              ; [CPU_] |5002| 
	.dwpsn	file "../Source/prod.c",line 4999,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4999| 
	.dwpsn	file "../Source/prod.c",line 5001,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |5001| 
	.dwpsn	file "../Source/prod.c",line 4999,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4999| 
	.dwpsn	file "../Source/prod.c",line 5002,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5002| 
        CMPB      AL,#2                 ; [CPU_] |5002| 
        B         $C$L89,LEQ            ; [CPU_] |5002| 
        ; branchcc occurs ; [] |5002| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5003,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |5003| 
        ; branch occurs ; [] |5003| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 5004,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |5004| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5003,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |5003| 
        B         $C$L89,HIS            ; [CPU_] |5003| 
        ; branchcc occurs ; [] |5003| 
        MOVB      AL,#1                 ; [CPU_] |5003| 
        ADD       AL,AR4                ; [CPU_] |5003| 
        MOVZ      AR5,AL                ; [CPU_] |5003| 
        MOV       ACC,AR5 << 1          ; [CPU_] |5003| 
        ADDL      ACC,XAR1              ; [CPU_] |5003| 
        MOVL      XAR6,ACC              ; [CPU_] |5003| 
        MOVB      XAR0,#72              ; [CPU_] |5003| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |5003| 
        MOVL      XAR0,#32              ; [CPU_] |5003| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |5003| 
        MOVL      XAR0,#32              ; [CPU_] |5003| 
        ASR64     ACC:P,16              ; [CPU_] |5003| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5003| 
        MOVL      XAR0,#32              ; [CPU_] |5003| 
        ASR64     ACC:P,16              ; [CPU_] |5003| 
        MOVL      *+FP[AR0],P           ; [CPU_] |5003| 
        MOVL      *-SP[4],P             ; [CPU_] |5003| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5003| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5003| 
        MOVL      P,*-SP[32]            ; [CPU_] |5003| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$601, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5003| 
        ; call occurs [#LL$$CMP] ; [] |5003| 
        CMPB      AL,#0                 ; [CPU_] |5003| 
        B         $C$L87,GT             ; [CPU_] |5003| 
        ; branchcc occurs ; [] |5003| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5007,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |5007| 
        ADDL      ACC,XAR1              ; [CPU_] |5007| 
        MOVL      XAR4,ACC              ; [CPU_] |5007| 
        MOVL      XAR0,#88              ; [CPU_] |5007| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5007| 
        MOVB      XAR0,#96              ; [CPU_] |5007| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5007| 
        MOVL      XAR0,#38              ; [CPU_] |5007| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5007| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5007| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5007| 
        ; call occurs [#FS$$MPY] ; [] |5007| 
        MOVL      XAR0,#30              ; [CPU_] |5007| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5007| 
        MOVL      P,*XAR3++             ; [CPU_] |5007| 
        MOVL      ACC,*XAR3++           ; [CPU_] |5007| 
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |5007| 
        ; call occurs [#LL$$TOFS] ; [] |5007| 
        MOVL      XAR0,#30              ; [CPU_] |5007| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5007| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5007| 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5007| 
        ; call occurs [#FS$$MPY] ; [] |5007| 
        MOVL      XAR0,#88              ; [CPU_] |5007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5007| 
        MOVB      XAR1,#118             ; [CPU_] |5007| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |5007| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5007| 
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5007| 
        ; call occurs [#FS$$ADD] ; [] |5007| 
        MOVL      XAR0,#36              ; [CPU_] |5007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5007| 
        MOVL      XAR0,#36              ; [CPU_] |5007| 
        MOVL      *XAR4++,ACC           ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 4976,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4976| 
	.dwpsn	file "../Source/prod.c",line 5007,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5007| 
        MOV       AL,*-SP[60]           ; [CPU_] |5007| 
	.dwpsn	file "../Source/prod.c",line 4976,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4976| 
        B         $C$L81,LT             ; [CPU_] |4976| 
        ; branchcc occurs ; [] |4976| 
	.dwpsn	file "../Source/prod.c",line 5011,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5011| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5011| 
        ; call occurs [#_shunt_switch] ; [] |5011| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5013,column 5,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_maf_rst")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5013| 
        ; call occurs [#_maf_rst] ; [] |5013| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5016,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |5016| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5016| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |5016| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |5016| 
        ; call occurs [#FS$$SUB] ; [] |5016| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |5016| 
        MOVL      XAR0,#36              ; [CPU_] |5016| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |5016| 
        MOVB      XAR0,#140             ; [CPU_] |5016| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5016| 
        MOV       AL,*-SP[58]           ; [CPU_] |5016| 
	.dwpsn	file "../Source/prod.c",line 5018,column 5,is_stmt,isa 0
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_tagid")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5018| 
        ; call occurs [#_tagid] ; [] |5018| 
        MOVL      XAR4,XAR1             ; [CPU_] |5018| 
        ADDB      XAR4,#32              ; [CPU_] |5018| 
        MOVL      *+XAR4[0],P           ; [CPU_] |5018| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |5018| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5021,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |5021| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |5021| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5021| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5021| 
        MOV       AL,*-SP[57]           ; [CPU_] |5021| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5024,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5026,column 5,is_stmt,isa 0
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5026| 
        ; call occurs [#_ad7738_setcal] ; [] |5026| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |5026| 
	.dwpsn	file "../Source/prod.c",line 5027,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5027| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5027| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5027| 
        MOV       AL,AR1                ; [CPU_] |5027| 
	.dwpsn	file "../Source/prod.c",line 5028,column 5,is_stmt,isa 0
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5028| 
        ; call occurs [#_ad7738_resetvall] ; [] |5028| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5033,column 5,is_stmt,isa 0
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5033| 
        ; call occurs [#_lcd_clear] ; [] |5033| 
	.dwpsn	file "../Source/prod.c",line 5034,column 5,is_stmt,isa 0
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_update_units")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5034| 
        ; call occurs [#_update_units] ; [] |5034| 
        MOVL      XAR0,#42              ; [CPU_] |5034| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5034| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5036,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |5036| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 5037,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5037| 
	.dwpsn	file "../Source/prod.c",line 5036,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |5036| 
	.dwpsn	file "../Source/prod.c",line 5037,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5037| 
	.dwpsn	file "../Source/prod.c",line 5036,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |5036| 
	.dwpsn	file "../Source/prod.c",line 5037,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5037| 
	.dwpsn	file "../Source/prod.c",line 5036,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |5036| 
        B         $C$L90,HI             ; [CPU_] |5036| 
        ; branchcc occurs ; [] |5036| 
	.dwpsn	file "../Source/prod.c",line 5039,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |5039| 
	.dwpsn	file "../Source/prod.c",line 5041,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5041| 
        ; branch occurs ; [] |5041| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4811,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4811| 
        B         $C$L320,LO            ; [CPU_] |4811| 
        ; branchcc occurs ; [] |4811| 
	.dwpsn	file "../Source/prod.c",line 4816,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4816| 
        MOVL      XAR0,#66              ; [CPU_] |4816| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4816| 
        ADDB      ACC,#2                ; [CPU_] |4816| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4816| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4816| 
        CMPL      ACC,XAR6              ; [CPU_] |4816| 
        B         $C$L320,NEQ           ; [CPU_] |4816| 
        ; branchcc occurs ; [] |4816| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4816| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4816| 
        CMPL      ACC,XAR6              ; [CPU_] |4816| 
        B         $C$L320,NEQ           ; [CPU_] |4816| 
        ; branchcc occurs ; [] |4816| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4816| 
        MOVL      XAR0,#64              ; [CPU_] |4816| 
        MOVL      ACC,XAR5              ; [CPU_] |4816| 
        ADDB      ACC,#4                ; [CPU_] |4816| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4816| 
        MOVB      XAR0,#36              ; [CPU_] |4816| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4816| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4816| 
        B         $C$L320,NEQ           ; [CPU_] |4816| 
        ; branchcc occurs ; [] |4816| 
	.dwpsn	file "../Source/prod.c",line 4822,column 5,is_stmt,isa 0
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4822| 
        ; call occurs [#_lcd_clear] ; [] |4822| 
	.dwpsn	file "../Source/prod.c",line 4823,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4823| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4823| 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4823| 
        ; call occurs [#_lcd_puts] ; [] |4823| 
	.dwpsn	file "../Source/prod.c",line 4824,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4824| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4824| 
        MOVL      XAR0,#44              ; [CPU_] |4824| 
        ADD       AL,*-SP[58]           ; [CPU_] |4824| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4824| 
        MOV       *-SP[3],AL            ; [CPU_] |4824| 
        MOVB      AL,#1                 ; [CPU_] |4824| 
        ADD       AL,*-SP[57]           ; [CPU_] |4824| 
        MOV       *-SP[4],AL            ; [CPU_] |4824| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4824| 
        MOVL      XAR4,XAR1             ; [CPU_] |4824| 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_sprintf")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4824| 
        ; call occurs [#_sprintf] ; [] |4824| 
	.dwpsn	file "../Source/prod.c",line 4825,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4825| 
	.dwpsn	file "../Source/prod.c",line 4824,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4824| 
	.dwpsn	file "../Source/prod.c",line 4825,column 5,is_stmt,isa 0
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4825| 
        ; call occurs [#_lcd_puts] ; [] |4825| 
	.dwpsn	file "../Source/prod.c",line 4826,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4826| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4826| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4826| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4826| 
        MOVL      XAR0,#58              ; [CPU_] |4826| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4826| 
        MOVB      XAR1,#36              ; [CPU_] |4826| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4826| 
        ADDL      ACC,XAR6              ; [CPU_] |4826| 
        MOVL      XAR4,ACC              ; [CPU_] |4826| 
        MOVL      XAR0,#44              ; [CPU_] |4826| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4826| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4826| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4826| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_sprintf")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4826| 
        ; call occurs [#_sprintf] ; [] |4826| 
        MOVL      XAR0,#44              ; [CPU_] |4826| 
	.dwpsn	file "../Source/prod.c",line 4827,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4827| 
	.dwpsn	file "../Source/prod.c",line 4826,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4826| 
	.dwpsn	file "../Source/prod.c",line 4827,column 5,is_stmt,isa 0
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4827| 
        ; call occurs [#_lcd_puts] ; [] |4827| 
	.dwpsn	file "../Source/prod.c",line 4829,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4829| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4829| 
        MOVB      XAR1,#36              ; [CPU_] |4829| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4829| 
        CMPB      AL,#1                 ; [CPU_] |4829| 
        B         $C$L92,EQ             ; [CPU_] |4829| 
        ; branchcc occurs ; [] |4829| 
        CMPB      AL,#2                 ; [CPU_] |4829| 
        B         $C$L105,EQ            ; [CPU_] |4829| 
        ; branchcc occurs ; [] |4829| 
        CMPB      AL,#3                 ; [CPU_] |4829| 
        B         $C$L96,EQ             ; [CPU_] |4829| 
        ; branchcc occurs ; [] |4829| 
        B         $C$L112,UNC           ; [CPU_] |4829| 
        ; branch occurs ; [] |4829| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4833,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4833| 
        MOVB      AL,#60                ; [CPU_] |4833| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4833| 
        ; call occurs [#_lcd_puts] ; [] |4833| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4835| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4836,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4836| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4837| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4836,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4836| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4837| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4835| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4837| 
        SUBB      ACC,#1                ; [CPU_] |4837| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4837| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4837| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4837| 
        ; branchcc occurs ; [] |4837| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4838,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4838| 
        ; branch occurs ; [] |4838| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4839,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4839| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("_delay_us")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4839| 
        ; call occurs [#_delay_us] ; [] |4839| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4838,column 14,is_stmt,isa 0
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4838| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4838| 
        CMPB      AL,#0                 ; [CPU_] |4838| 
        B         $C$L93,EQ             ; [CPU_] |4838| 
        ; branchcc occurs ; [] |4838| 
	.dwpsn	file "../Source/prod.c",line 4842,column 7,is_stmt,isa 0
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4842| 
        ; call occurs [#_ad7738_getraw] ; [] |4842| 
	.dwpsn	file "../Source/prod.c",line 4843,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4843| 
        ADDL      XAR4,ACC              ; [CPU_] |4843| 
        MOVL      XAR0,#28              ; [CPU_] |4843| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4843| 
        MOVL      XAR0,#28              ; [CPU_] |4843| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4843| 
        ASR64     ACC:P,16              ; [CPU_] |4843| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4843| 
        MOVL      XAR0,#28              ; [CPU_] |4843| 
        ASR64     ACC:P,16              ; [CPU_] |4843| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4843| 
        MOVL      XAR0,#28              ; [CPU_] |4843| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4843| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4843| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4843| 
        MOVL      *-SP[32],P            ; [CPU_] |4843| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4843| 
	.dwpsn	file "../Source/prod.c",line 4837,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4837| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4837| 
        MOVB      ACC,#0                ; [CPU_] |4837| 
        SUBB      ACC,#1                ; [CPU_] |4837| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4837| 
        B         $C$L94,NEQ            ; [CPU_] |4837| 
        ; branchcc occurs ; [] |4837| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4845,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4845| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4849| 
        ; branch occurs ; [] |4849| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4898,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4898| 
        MOVB      AL,#60                ; [CPU_] |4898| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4898| 
        ; call occurs [#_lcd_puts] ; [] |4898| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4900,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4900| 
        MOV       *-SP[60],AL           ; [CPU_] |4900| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4901,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4901| 
        B         $C$L99,LEQ            ; [CPU_] |4901| 
        ; branchcc occurs ; [] |4901| 
	.dwpsn	file "../Source/prod.c",line 4903,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4903| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4903| 
        ; call occurs [#_shunt_switch] ; [] |4903| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4905,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4905| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("_delay_us")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4905| 
        ; call occurs [#_delay_us] ; [] |4905| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4905| 
	.dwpsn	file "../Source/prod.c",line 4904,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4904| 
        MOVZ      AR0,AR6               ; [CPU_] |4904| 
        MOV       *-SP[47],AR6          ; [CPU_] |4904| 
        CMP       AR0,#-1               ; [CPU_] |4904| 
        B         $C$L98,NEQ            ; [CPU_] |4904| 
        ; branchcc occurs ; [] |4904| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4908,column 8,is_stmt,isa 0
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("_maf_rst")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4908| 
        ; call occurs [#_maf_rst] ; [] |4908| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4910,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4910| 
        SPM       #0                    ; [CPU_] 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("_delay_us")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4910| 
        ; call occurs [#_delay_us] ; [] |4910| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4913,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4913| 
	.dwpsn	file "../Source/prod.c",line 4914,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4914| 
	.dwpsn	file "../Source/prod.c",line 4913,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4913| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4913| 
	.dwpsn	file "../Source/prod.c",line 4915,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4915| 
	.dwpsn	file "../Source/prod.c",line 4914,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4914| 
	.dwpsn	file "../Source/prod.c",line 4915,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4915| 
        MOVB      ACC,#0                ; [CPU_] |4915| 
        SUBB      ACC,#1                ; [CPU_] |4915| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4915| 
        B         $C$L101,EQ            ; [CPU_] |4915| 
        ; branchcc occurs ; [] |4915| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4916,column 15,is_stmt,isa 0
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4916| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4916| 
        CMPB      AL,#0                 ; [CPU_] |4916| 
        B         $C$L104,EQ            ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
	.dwpsn	file "../Source/prod.c",line 4920,column 8,is_stmt,isa 0
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4920| 
        ; call occurs [#_ad7738_getraw] ; [] |4920| 
	.dwpsn	file "../Source/prod.c",line 4921,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4921| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4921| 
        ADDL      XAR4,ACC              ; [CPU_] |4921| 
        MOVL      XAR0,#26              ; [CPU_] |4921| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4921| 
        MOVL      XAR0,#26              ; [CPU_] |4921| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4921| 
        ASR64     ACC:P,16              ; [CPU_] |4921| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4921| 
        MOVL      XAR0,#26              ; [CPU_] |4921| 
        ASR64     ACC:P,16              ; [CPU_] |4921| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4921| 
        MOVL      XAR0,#26              ; [CPU_] |4921| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4921| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4921| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4921| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4921| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4921| 
	.dwpsn	file "../Source/prod.c",line 4915,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4915| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4915| 
        MOVB      ACC,#0                ; [CPU_] |4915| 
        SUBB      ACC,#1                ; [CPU_] |4915| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4915| 
        B         $C$L100,NEQ           ; [CPU_] |4915| 
        ; branchcc occurs ; [] |4915| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4900,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4900| 
        ADDB      XAR1,#4               ; [CPU_] |4900| 
        MOV       AL,*-SP[60]           ; [CPU_] |4900| 
        CMPB      AL,#2                 ; [CPU_] |4900| 
        B         $C$L97,LT             ; [CPU_] |4900| 
        ; branchcc occurs ; [] |4900| 
	.dwpsn	file "../Source/prod.c",line 4925,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4925| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4925| 
        ; call occurs [#_shunt_switch] ; [] |4925| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("_maf_rst")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4927| 
        ; call occurs [#_maf_rst] ; [] |4927| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4930,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4930| 
        MOV       AH,#17948             ; [CPU_] |4930| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4930| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4930| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4930| 
        ; call occurs [#FS$$MPY] ; [] |4930| 
        MOVL      XAR1,ACC              ; [CPU_] |4930| 
        MOVL      P,*-SP[28]            ; [CPU_] |4930| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4930| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4930| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4930| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4930| 
        ; call occurs [#LL$$TOFS] ; [] |4930| 
        MOVL      XAR0,#88              ; [CPU_] |4930| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4930| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4930| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4930| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4930| 
        ; call occurs [#FS$$MPY] ; [] |4930| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4930| 
        MOVL      ACC,XAR1              ; [CPU_] |4930| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4930| 
        ; call occurs [#FS$$DIV] ; [] |4930| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4930| 
        MOVB      XAR0,#96              ; [CPU_] |4930| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4930| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4932,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4932| 
        MOVL      XAR0,#52              ; [CPU_] |4932| 
        ADDB      ACC,#96               ; [CPU_] |4932| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4932| 
        MOVL      XAR0,#88              ; [CPU_] |4932| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4932| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4932| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4932| 
        ; call occurs [#FS$$NEG] ; [] |4932| 
        MOVB      XAR0,#96              ; [CPU_] |4932| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4932| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4932| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4932| 
        ; call occurs [#FS$$MPY] ; [] |4932| 
        MOVL      XAR1,ACC              ; [CPU_] |4932| 
        MOVL      P,*-SP[32]            ; [CPU_] |4932| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4932| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4932| 
        ; call occurs [#LL$$TOFS] ; [] |4932| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4932| 
        MOVL      ACC,XAR1              ; [CPU_] |4932| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4932| 
        ; call occurs [#FS$$MPY] ; [] |4932| 
        MOVL      XAR6,ACC              ; [CPU_] |4932| 
        MOV       AL,#16384             ; [CPU_] |4932| 
        MOV       AH,#17948             ; [CPU_] |4932| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4932| 
        MOVL      ACC,XAR6              ; [CPU_] |4932| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4932| 
        ; call occurs [#FS$$DIV] ; [] |4932| 
        MOVL      XAR0,#36              ; [CPU_] |4932| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4932| 
        MOVB      XAR1,#118             ; [CPU_] |4932| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4932| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4936,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4936| 
        ; branch occurs ; [] |4936| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4917,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4917| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("_delay_us")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4917| 
        ; call occurs [#_delay_us] ; [] |4917| 
	.dwpsn	file "../Source/prod.c",line 4916,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4916| 
        ; branch occurs ; [] |4916| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4853,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4853| 
	.dwpsn	file "../Source/prod.c",line 4854,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4854| 
	.dwpsn	file "../Source/prod.c",line 4853,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4853| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4853| 
	.dwpsn	file "../Source/prod.c",line 4854,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4854| 
        MOVZ      AR5,AR5               ; [CPU_] |4854| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4856,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4856| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4856| 
        MOV       *XAR5++,AL            ; [CPU_] |4856| 
	.dwpsn	file "../Source/prod.c",line 4857,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4857| 
	.dwpsn	file "../Source/prod.c",line 4855,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4855| 
        ; branchcc occurs ; [] |4855| 
	.dwpsn	file "../Source/prod.c",line 4860,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4860| 
        MOVB      XAR0,#46              ; [CPU_] |4860| 
        MOV       AL,*-SP[47]           ; [CPU_] |4860| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4860| 
        B         $C$L112,HIS           ; [CPU_] |4860| 
        ; branchcc occurs ; [] |4860| 
        MOVL      XAR0,#36              ; [CPU_] |4860| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4860| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4860| 
        ADDL      ACC,XAR6              ; [CPU_] |4860| 
        ADDB      ACC,#48               ; [CPU_] |4860| 
        MOVL      XAR1,ACC              ; [CPU_] |4860| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4860| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4860| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4860| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4860| 
        ; call occurs [#FS$$CMP] ; [] |4860| 
        CMPB      AL,#0                 ; [CPU_] |4860| 
        B         $C$L112,NEQ           ; [CPU_] |4860| 
        ; branchcc occurs ; [] |4860| 
	.dwpsn	file "../Source/prod.c",line 4864,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4864| 
        MOVB      AL,#1                 ; [CPU_] |4864| 
        MOVL      XAR0,#44              ; [CPU_] |4864| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4864| 
        ADD       AL,*-SP[47]           ; [CPU_] |4864| 
        MOV       *-SP[3],AL            ; [CPU_] |4864| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4864| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("_sprintf")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4864| 
        ; call occurs [#_sprintf] ; [] |4864| 
        MOVL      XAR0,#44              ; [CPU_] |4864| 
	.dwpsn	file "../Source/prod.c",line 4865,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4865| 
	.dwpsn	file "../Source/prod.c",line 4864,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4864| 
	.dwpsn	file "../Source/prod.c",line 4865,column 6,is_stmt,isa 0
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4865| 
        ; call occurs [#_lcd_puts] ; [] |4865| 
	.dwpsn	file "../Source/prod.c",line 4867,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4867| 
	.dwpsn	file "../Source/prod.c",line 4868,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4868| 
	.dwpsn	file "../Source/prod.c",line 4867,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4867| 
	.dwpsn	file "../Source/prod.c",line 4868,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4868| 
	.dwpsn	file "../Source/prod.c",line 4867,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4867| 
	.dwpsn	file "../Source/prod.c",line 4869,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4869| 
	.dwpsn	file "../Source/prod.c",line 4867,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4867| 
	.dwpsn	file "../Source/prod.c",line 4869,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4869| 
        MOVB      ACC,#0                ; [CPU_] |4869| 
        SUBB      ACC,#1                ; [CPU_] |4869| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4869| 
        B         $C$L108,EQ            ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4870,column 14,is_stmt,isa 0
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4870| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4870| 
        CMPB      AL,#0                 ; [CPU_] |4870| 
        B         $C$L111,EQ            ; [CPU_] |4870| 
        ; branchcc occurs ; [] |4870| 
	.dwpsn	file "../Source/prod.c",line 4874,column 7,is_stmt,isa 0
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4874| 
        ; call occurs [#_ad7738_getraw] ; [] |4874| 
	.dwpsn	file "../Source/prod.c",line 4875,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4875| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4875| 
        ADDL      XAR4,ACC              ; [CPU_] |4875| 
        MOVL      XAR0,#24              ; [CPU_] |4875| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4875| 
        MOVL      XAR0,#24              ; [CPU_] |4875| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4875| 
        ASR64     ACC:P,16              ; [CPU_] |4875| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4875| 
        MOVL      XAR0,#24              ; [CPU_] |4875| 
        ASR64     ACC:P,16              ; [CPU_] |4875| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4875| 
        MOVL      XAR0,#24              ; [CPU_] |4875| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4875| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4875| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4875| 
        MOVL      *-SP[32],P            ; [CPU_] |4875| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4875| 
	.dwpsn	file "../Source/prod.c",line 4869,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4869| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4869| 
        MOVB      ACC,#0                ; [CPU_] |4869| 
        SUBB      ACC,#1                ; [CPU_] |4869| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4869| 
        B         $C$L107,NEQ           ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4877,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4877| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4877| 
        MOV       *-SP[2],#0            ; [CPU_] |4877| 
        MOV       *-SP[1],#0            ; [CPU_] |4877| 
        MOVL      P,*-SP[32]            ; [CPU_] |4877| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4877| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4877| 
        ; call occurs [#LL$$DIV] ; [] |4877| 
        ADDB      XAR1,#24              ; [CPU_] |4877| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4879| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4879| 
	.dwpsn	file "../Source/prod.c",line 4877,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4877| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4879| 
        MOV       AL,*-SP[47]           ; [CPU_] |4879| 
        SUB       AL,AR6                ; [CPU_] |4879| 
        MOVZ      AR7,AL                ; [CPU_] |4879| 
        MOVL      XAR4,#65535           ; [CPU_U] |4879| 
        MOVL      ACC,XAR4              ; [CPU_] |4879| 
        CMPL      ACC,XAR7              ; [CPU_] |4879| 
        B         $C$L103,NEQ           ; [CPU_] |4879| 
        ; branchcc occurs ; [] |4879| 
	.dwpsn	file "../Source/prod.c",line 4882,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4882| 
        B         $C$L110,UNC           ; [CPU_] |4882| 
        ; branch occurs ; [] |4882| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4883,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4883| 
        MOVB      AL,#10                ; [CPU_] |4883| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4883| 
        MOV       T,*-SP[58]            ; [CPU_] |4883| 
        MPYU      ACC,T,AL              ; [CPU_] |4883| 
        MOVL      XAR0,#88              ; [CPU_] |4883| 
        ADDL      ACC,XAR6              ; [CPU_] |4883| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4883| 
        MOVL      XAR0,#36              ; [CPU_] |4883| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4883| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4883| 
        MOV       ACC,AL << 1           ; [CPU_] |4883| 
        ADDL      ACC,XAR6              ; [CPU_] |4883| 
        MOVL      XAR3,ACC              ; [CPU_] |4883| 
        MOVB      XAR0,#48              ; [CPU_] |4883| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4883| 
        MOVB      XAR0,#50              ; [CPU_] |4883| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4883| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4883| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4883| 
        ; call occurs [#FS$$SUB] ; [] |4883| 
        MOVL      XAR0,#42              ; [CPU_] |4883| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4883| 
        MOVB      XAR0,#74              ; [CPU_] |4883| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4883| 
        MOVB      XAR0,#72              ; [CPU_] |4883| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4883| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4883| 
        ; call occurs [#L$$TOFS] ; [] |4883| 
        MOVL      XAR0,#42              ; [CPU_] |4883| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4883| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4883| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4883| 
        ; call occurs [#FS$$DIV] ; [] |4883| 
        MOVL      XAR0,#88              ; [CPU_] |4883| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4883| 
        MOVB      XAR1,#44              ; [CPU_] |4883| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4883| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4883| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4883| 
        ; call occurs [#FS$$DIV] ; [] |4883| 
        MOVB      XAR0,#96              ; [CPU_] |4883| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4883| 
	.dwpsn	file "../Source/prod.c",line 4887,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4887| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4887| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4887| 
        MOVB      XAR1,#44              ; [CPU_] |4887| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4887| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4887| 
        ; call occurs [#FS$$MPY] ; [] |4887| 
        MOVL      XAR0,#88              ; [CPU_] |4887| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4887| 
        MOVB      XAR0,#72              ; [CPU_] |4887| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4887| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4887| 
        ; call occurs [#L$$TOFS] ; [] |4887| 
        MOVL      XAR0,#88              ; [CPU_] |4887| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4887| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4887| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4887| 
        ; call occurs [#FS$$MPY] ; [] |4887| 
        MOVB      XAR0,#48              ; [CPU_] |4887| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4887| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4887| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4887| 
        ; call occurs [#FS$$SUB] ; [] |4887| 
        MOVB      XAR0,#118             ; [CPU_] |4887| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4887| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4882,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4882| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4882,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4882| 
        ADDB      AL,#-1                ; [CPU_] |4882| 
        CMP       AL,*-SP[47]           ; [CPU_] |4882| 
        B         $C$L109,GT            ; [CPU_] |4882| 
        ; branchcc occurs ; [] |4882| 
	.dwpsn	file "../Source/prod.c",line 4894,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4894| 
        ; branch occurs ; [] |4894| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4871,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4871| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("_delay_us")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4871| 
        ; call occurs [#_delay_us] ; [] |4871| 
	.dwpsn	file "../Source/prod.c",line 4870,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4870| 
        ; branch occurs ; [] |4870| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4861,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4861| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4943,column 5,is_stmt,isa 0
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4943| 
        ; call occurs [#_lcd_clear] ; [] |4943| 
	.dwpsn	file "../Source/prod.c",line 4944,column 5,is_stmt,isa 0
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("_update_units")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4944| 
        ; call occurs [#_update_units] ; [] |4944| 
        MOV       AL,*-SP[47]           ; [CPU_] |4944| 
	.dwpsn	file "../Source/prod.c",line 4947,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4949,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4949| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4950,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4950,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4950,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4949| 
        B         $C$L114,HI            ; [CPU_] |4949| 
        ; branchcc occurs ; [] |4949| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4952| 
	.dwpsn	file "../Source/prod.c",line 4953,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4953| 
        ; branch occurs ; [] |4953| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4663,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4663| 
        B         $C$L320,LO            ; [CPU_] |4663| 
        ; branchcc occurs ; [] |4663| 
	.dwpsn	file "../Source/prod.c",line 4668,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4668| 
        MOV       *-SP[58],AL           ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4670,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4669,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4669| 
        MOV       *-SP[57],AL           ; [CPU_] |4669| 
	.dwpsn	file "../Source/prod.c",line 4670,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4670| 
        MOV       AL,*-SP[58]           ; [CPU_] |4670| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4670| 
        CMPB      AL,#4                 ; [CPU_] |4670| 
        B         $C$L320,HIS           ; [CPU_] |4670| 
        ; branchcc occurs ; [] |4670| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4670| 
        B         $C$L320,HIS           ; [CPU_] |4670| 
        ; branchcc occurs ; [] |4670| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4676,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4676| 
        MOVL      ACC,XAR4              ; [CPU_] |4676| 
        ADDB      ACC,#4                ; [CPU_] |4676| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4676| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4676| 
        CMPB      AL,#16                ; [CPU_] |4676| 
        B         $C$L320,HIS           ; [CPU_] |4676| 
        ; branchcc occurs ; [] |4676| 
	.dwpsn	file "../Source/prod.c",line 4680,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4680| 
        MOVL      XAR0,#64              ; [CPU_] |4680| 
        CMPB      AL,#0                 ; [CPU_] |4680| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4680| 
        B         $C$L116,LEQ           ; [CPU_] |4680| 
        ; branchcc occurs ; [] |4680| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4680| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4680| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4680| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4680| 
        MOVL      XAR0,ACC              ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4681| 
        ADD       AL,AR4                ; [CPU_] |4681| 
        MOVZ      AR6,AL                ; [CPU_] |4681| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4680,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4680| 
        ; branch occurs ; [] |4680| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4675,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4675| 
	.dwpsn	file "../Source/prod.c",line 4680,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4680| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4683,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4683| 
        MOVL      XAR0,#86              ; [CPU_] |4683| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4683| 
	.dwpsn	file "../Source/prod.c",line 4685,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4685| 
        MOVL      XAR4,ACC              ; [CPU_] |4685| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4685| 
        CMPB      AL,#16                ; [CPU_] |4685| 
        B         $C$L320,HIS           ; [CPU_] |4685| 
        ; branchcc occurs ; [] |4685| 
        ADDB      XAR4,#1               ; [CPU_] |4685| 
	.dwpsn	file "../Source/prod.c",line 4690,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4690| 
	.dwpsn	file "../Source/prod.c",line 4685,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4685| 
        MOVL      P,XAR4                ; [CPU_] |4685| 
	.dwpsn	file "../Source/prod.c",line 4690,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4690| 
        ; branchcc occurs ; [] |4690| 
        MOVZ      AR5,AL                ; [CPU_] |4690| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4691,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4691| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4691| 
        MOV       *XAR4++,AL            ; [CPU_] |4691| 
        ADDB      XAR7,#1               ; [CPU_] |4691| 
        MOVL      P,XAR7                ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4690,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4690| 
        ; branchcc occurs ; [] |4690| 
        B         $C$L120,UNC           ; [CPU_] |4690| 
        ; branch occurs ; [] |4690| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4690,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4690| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4693,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4693| 
        ADD       ACC,AR5               ; [CPU_] |4693| 
        MOVL      XAR4,ACC              ; [CPU_] |4693| 
        MOVB      XAR0,#16              ; [CPU_] |4693| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4693| 
	.dwpsn	file "../Source/prod.c",line 4695,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4695| 
        MOV       AL,*XAR7              ; [CPU_] |4695| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4695| 
        ADDB      XAR7,#1               ; [CPU_] |4695| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4695| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4695| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4699,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4699| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4699| 
	.dwpsn	file "../Source/prod.c",line 4700,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4700| 
	.dwpsn	file "../Source/prod.c",line 4699,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4699| 
        MOV       *XAR5++,AL            ; [CPU_] |4699| 
	.dwpsn	file "../Source/prod.c",line 4700,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4700| 
        MOVL      P,XAR7                ; [CPU_] |4700| 
	.dwpsn	file "../Source/prod.c",line 4698,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4706,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4706| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4706| 
	.dwpsn	file "../Source/prod.c",line 4707,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4707| 
	.dwpsn	file "../Source/prod.c",line 4706,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4706| 
        MOV       *XAR0++,AL            ; [CPU_] |4706| 
	.dwpsn	file "../Source/prod.c",line 4707,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4707| 
        MOVL      P,XAR5                ; [CPU_] |4707| 
	.dwpsn	file "../Source/prod.c",line 4705,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4705| 
        ; branchcc occurs ; [] |4705| 
	.dwpsn	file "../Source/prod.c",line 4710,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4710| 
        MOVB      XAR0,#40              ; [CPU_] |4710| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4710,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4710| 
        MOVB      XAR0,#142             ; [CPU_] |4710| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4710,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4710| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4712| 
        MOV       AL,*XAR7              ; [CPU_] |4712| 
        ADDB      XAR7,#1               ; [CPU_] |4712| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4713| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4713| 
        CMPB      AL,#6                 ; [CPU_] |4713| 
        B         $C$L123,GT            ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        CMPB      AL,#6                 ; [CPU_] |4713| 
        B         $C$L126,EQ            ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        CMPB      AL,#1                 ; [CPU_] |4713| 
        B         $C$L129,LOS           ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        MOV       AH,AL                 ; [CPU_] |4713| 
        ADDB      AH,#-2                ; [CPU_] |4713| 
        CMPB      AH,#2                 ; [CPU_] |4713| 
        B         $C$L128,LOS           ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        CMPB      AL,#5                 ; [CPU_] |4713| 
        B         $C$L127,EQ            ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        B         $C$L124,UNC           ; [CPU_] |4713| 
        ; branch occurs ; [] |4713| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4713| 
        ADDB      AH,#-7                ; [CPU_] |4713| 
        CMPB      AH,#1                 ; [CPU_] |4713| 
        B         $C$L125,LOS           ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        CMPB      AL,#15                ; [CPU_] |4713| 
        B         $C$L125,EQ            ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4735| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4736,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4736| 
        ; branch occurs ; [] |4736| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4732,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4733,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4733| 
        ; branch occurs ; [] |4733| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4727| 
	.dwpsn	file "../Source/prod.c",line 4728,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4728| 
        ; branch occurs ; [] |4728| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4724,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4725| 
        ; branch occurs ; [] |4725| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4721,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4721| 
	.dwpsn	file "../Source/prod.c",line 4722,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4722| 
        ; branch occurs ; [] |4722| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4716,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4716| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4738,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4738| 
        MOVB      XAR0,#43              ; [CPU_] |4738| 
        ADDB      XAR7,#42              ; [CPU_] |4738| 
        MOV       AL,*XAR7              ; [CPU_] |4738| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4738| 
	.dwpsn	file "../Source/prod.c",line 4739,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4739| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4739| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4739| 
	.dwpsn	file "../Source/prod.c",line 4741,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4741| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4741| 
        CMPB      AL,#1                 ; [CPU_] |4741| 
        B         $C$L137,EQ            ; [CPU_] |4741| 
        ; branchcc occurs ; [] |4741| 
        CMPB      AL,#2                 ; [CPU_] |4741| 
        B         $C$L131,EQ            ; [CPU_] |4741| 
        ; branchcc occurs ; [] |4741| 
        CMPB      AL,#3                 ; [CPU_] |4741| 
        B         $C$L135,EQ            ; [CPU_] |4741| 
        ; branchcc occurs ; [] |4741| 
        B         $C$L134,UNC           ; [CPU_] |4741| 
        ; branch occurs ; [] |4741| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4758| 
        MOVB      XAR0,#46              ; [CPU_] |4758| 
        MOV       AL,*XAR7              ; [CPU_] |4758| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4759| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4759| 
        CMPB      AL,#12                ; [CPU_] |4759| 
        B         $C$L134,GT            ; [CPU_] |4759| 
        ; branchcc occurs ; [] |4759| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4764,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4764| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4758| 
        MOVL      P,XAR6                ; [CPU_] |4758| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4772,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4772| 
        B         $C$L140,LEQ           ; [CPU_] |4772| 
        ; branchcc occurs ; [] |4772| 
	.dwpsn	file "../Source/prod.c",line 4765,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4765| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4765| 
        ADDB      ACC,#48               ; [CPU_] |4765| 
        MOVL      XAR0,ACC              ; [CPU_] |4765| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4767,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4767| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4768,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4768| 
	.dwpsn	file "../Source/prod.c",line 4767,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4767| 
        MOV       *XAR0++,AL            ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4768,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4768| 
        MOVL      P,XAR5                ; [CPU_] |4768| 
	.dwpsn	file "../Source/prod.c",line 4766,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4766| 
        ; branchcc occurs ; [] |4766| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4764,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4764| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4764| 
        ; branch occurs ; [] |4764| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4790| 
	.dwpsn	file "../Source/prod.c",line 4791,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4791| 
        ; branch occurs ; [] |4791| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4776,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4776| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4776| 
        MOVZ      AR0,AR5               ; [CPU_] |4776| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4778,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4778| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4778| 
	.dwpsn	file "../Source/prod.c",line 4779,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4779| 
	.dwpsn	file "../Source/prod.c",line 4778,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4778| 
        MOV       *XAR0++,AL            ; [CPU_] |4778| 
	.dwpsn	file "../Source/prod.c",line 4779,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4779| 
        MOVL      P,XAR5                ; [CPU_] |4779| 
	.dwpsn	file "../Source/prod.c",line 4777,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4777| 
        ; branchcc occurs ; [] |4777| 
	.dwpsn	file "../Source/prod.c",line 4782,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4782| 
        MOV       AH,#0                 ; [CPU_] |4782| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4782| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4782| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4782| 
        ; call occurs [#FS$$CMP] ; [] |4782| 
        CMPB      AL,#0                 ; [CPU_] |4782| 
        B         $C$L139,NEQ           ; [CPU_] |4782| 
        ; branchcc occurs ; [] |4782| 
	.dwpsn	file "../Source/prod.c",line 4783,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4783| 
        MOV       AH,#16314             ; [CPU_] |4783| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4783| 
        B         $C$L139,UNC           ; [CPU_] |4783| 
        ; branch occurs ; [] |4783| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4746,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4746| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4747,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4746,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4746| 
        MOV       *XAR0++,AL            ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4747,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4747| 
        MOVL      P,XAR5                ; [CPU_] |4747| 
	.dwpsn	file "../Source/prod.c",line 4745,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4745| 
        ; branchcc occurs ; [] |4745| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4750| 
        MOVL      XAR0,#88              ; [CPU_] |4750| 
        MOVL      ACC,XAR1              ; [CPU_] |4750| 
        ADDB      ACC,#96               ; [CPU_] |4750| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4750| 
        MOVL      XAR0,#52              ; [CPU_] |4750| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4750| 
        MOV       AL,#0                 ; [CPU_] |4750| 
        MOV       AH,#0                 ; [CPU_] |4750| 
        MOVB      XAR0,#96              ; [CPU_] |4750| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4750| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4750| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4750| 
        ; call occurs [#FS$$CMP] ; [] |4750| 
        CMPB      AL,#0                 ; [CPU_] |4750| 
        B         $C$L139,NEQ           ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
	.dwpsn	file "../Source/prod.c",line 4751,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4751| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4751| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4751| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4753,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4753| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4794,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4794| 
        MOVB      XAR0,#36              ; [CPU_] |4794| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4794| 
        B         $C$L320,EQ            ; [CPU_] |4794| 
        ; branchcc occurs ; [] |4794| 
	.dwpsn	file "../Source/prod.c",line 4798,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4798| 
        MOV       AL,#0                 ; [CPU_] |4798| 
        MOV       AH,#0                 ; [CPU_] |4798| 
	.dwpsn	file "../Source/prod.c",line 4799,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4799| 
	.dwpsn	file "../Source/prod.c",line 4798,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4798| 
	.dwpsn	file "../Source/prod.c",line 4799,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4799| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4799| 
	.dwpsn	file "../Source/prod.c",line 4800,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4800| 
        MOV       AL,#0                 ; [CPU_] |4800| 
        MOV       AH,#0                 ; [CPU_] |4800| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4800| 
	.dwpsn	file "../Source/prod.c",line 4801,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4801| 
        MOV       AL,*-SP[58]           ; [CPU_] |4801| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4801| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4801| 
	.dwpsn	file "../Source/prod.c",line 4803,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4803| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4803| 
        ; branch occurs ; [] |4803| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4804,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4804| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4804| 
        ADD       ACC,PL                ; [CPU_] |4804| 
        MOVL      XAR7,ACC              ; [CPU_] |4804| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4804| 
        ADD       ACC,PL                ; [CPU_] |4804| 
        MOVL      XAR4,ACC              ; [CPU_] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4804,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4804| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4804| 
        MOV       AL,PL                 ; [CPU_] |4804| 
        ADDB      AL,#1                 ; [CPU_] |4804| 
        MOV       *-SP[61],AL           ; [CPU_] |4804| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4803,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4803| 
        B         $C$L141,HI            ; [CPU_] |4803| 
        ; branchcc occurs ; [] |4803| 
        B         $C$L745,UNC           ; [CPU_] |4803| 
        ; branch occurs ; [] |4803| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4611| 
        B         $C$L320,LO            ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
        MOVL      ACC,XAR4              ; [CPU_] |4611| 
        MOVL      XAR0,#66              ; [CPU_] |4611| 
        ADDB      ACC,#2                ; [CPU_] |4611| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4611| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4611| 
        B         $C$L320,LT            ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
        MOVL      XAR5,XAR4             ; [CPU_] |4611| 
        MOVL      XAR0,#66              ; [CPU_] |4611| 
        CMPB      AL,#4                 ; [CPU_] |4611| 
        ADDB      XAR5,#2               ; [CPU_] |4611| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4611| 
        B         $C$L320,GEQ           ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4611| 
        B         $C$L320,LT            ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
        CMPB      AH,#2                 ; [CPU_] |4611| 
        B         $C$L320,GT            ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4617,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4617| 
        ; branchcc occurs ; [] |4617| 
	.dwpsn	file "../Source/prod.c",line 4620,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4620| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4620| 
        MOVL      XAR0,#66              ; [CPU_] |4620| 
        MOVU      ACC,AL                ; [CPU_] |4620| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4620| 
        CMPL      ACC,XAR6              ; [CPU_] |4620| 
        B         $C$L145,EQ            ; [CPU_] |4620| 
        ; branchcc occurs ; [] |4620| 
        B         $C$L320,UNC           ; [CPU_] |4620| 
        ; branch occurs ; [] |4620| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4618,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4618| 
        MOVL      XAR0,#66              ; [CPU_] |4618| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4618| 
        MOV       *-SP[58],AL           ; [CPU_] |4618| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4618| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4626,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4626| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4625,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4625| 
        MOV       *-SP[47],AL           ; [CPU_] |4625| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4626,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4626| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4629| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4626,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4629| 
        MOVZ      AR4,AR4               ; [CPU_] |4629| 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4629| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4629| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4631,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4631| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4631| 
	.dwpsn	file "../Source/prod.c",line 4632,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4632| 
        MOV       *XAR7++,AL            ; [CPU_] |4632| 
	.dwpsn	file "../Source/prod.c",line 4633,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4633| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4633| 
        MOV       *XAR4++,AL            ; [CPU_] |4633| 
	.dwpsn	file "../Source/prod.c",line 4634,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4634| 
        MOV       *XAR7++,AL            ; [CPU_] |4634| 
	.dwpsn	file "../Source/prod.c",line 4630,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4630| 
        ; branchcc occurs ; [] |4630| 
	.dwpsn	file "../Source/prod.c",line 4637,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4637| 
        SUBB      XAR4,#24              ; [CPU_U] |4637| 
        MOVZ      AR4,AR4               ; [CPU_] |4637| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4637| 
        ADDL      XAR4,ACC              ; [CPU_] |4637| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4637| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4637| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4637| 
        MOVL      ACC,XAR1              ; [CPU_] |4637| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4637| 
        ; call occurs [#FS$$CMP] ; [] |4637| 
        CMPB      AL,#0                 ; [CPU_] |4637| 
        B         $C$L320,LT            ; [CPU_] |4637| 
        ; branchcc occurs ; [] |4637| 
        MOV       AL,#0                 ; [CPU_] |4637| 
        MOV       AH,#16672             ; [CPU_] |4637| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4637| 
        MOVL      ACC,XAR1              ; [CPU_] |4637| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4637| 
        ; call occurs [#FS$$CMP] ; [] |4637| 
        CMPB      AL,#0                 ; [CPU_] |4637| 
        B         $C$L320,GT            ; [CPU_] |4637| 
        ; branchcc occurs ; [] |4637| 
	.dwpsn	file "../Source/prod.c",line 4642,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4642| 
        MOV       AH,#16672             ; [CPU_] |4642| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4642| 
        MOVL      ACC,XAR1              ; [CPU_] |4642| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4642| 
        ; call occurs [#FS$$ADD] ; [] |4642| 
        MOVL      XAR6,ACC              ; [CPU_] |4642| 
        MOV       AL,#65024             ; [CPU_] |4642| 
        MOV       AH,#18175             ; [CPU_] |4642| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4642| 
        MOVL      ACC,XAR6              ; [CPU_] |4642| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4642| 
        ; call occurs [#FS$$MPY] ; [] |4642| 
        MOVL      XAR6,ACC              ; [CPU_] |4642| 
        MOV       AL,#0                 ; [CPU_] |4642| 
        MOV       AH,#16672             ; [CPU_] |4642| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4642| 
        MOVL      ACC,XAR6              ; [CPU_] |4642| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4642| 
        ; call occurs [#FS$$DIV] ; [] |4642| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4642| 
        ; call occurs [#FS$$TOLL] ; [] |4642| 
	.dwpsn	file "../Source/prod.c",line 4643,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4643| 
	.dwpsn	file "../Source/prod.c",line 4642,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4642| 
	.dwpsn	file "../Source/prod.c",line 4633,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4633| 
	.dwpsn	file "../Source/prod.c",line 4642,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4642| 
	.dwpsn	file "../Source/prod.c",line 4643,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4643| 
        CMP64     ACC:P                 ; [CPU_] |4643| 
        B         $C$L148,LEQ           ; [CPU_] |4643| 
        ; branchcc occurs ; [] |4643| 
	.dwpsn	file "../Source/prod.c",line 4645,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4645| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4645| 
        MOV       *-SP[2],#0            ; [CPU_] |4645| 
        MOV       *-SP[1],#0            ; [CPU_] |4645| 
        MOVL      P,*-SP[32]            ; [CPU_] |4645| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4645| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$669, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4645| 
        ; call occurs [#LL$$CMP] ; [] |4645| 
        CMPB      AL,#0                 ; [CPU_] |4645| 
        B         $C$L147,GEQ           ; [CPU_] |4645| 
        ; branchcc occurs ; [] |4645| 
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4648| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4648| 
        MOVU      ACC,AR4               ; [CPU_] |4648| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4648| 
        MOVL      XAR1,ACC              ; [CPU_] |4648| 
        MOV       AL,*-SP[32]           ; [CPU_] |4648| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4648| 
        B         $C$L149,UNC           ; [CPU_] |4648| 
        ; branch occurs ; [] |4648| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4646,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4646| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4646| 
        MOVU      ACC,AR4               ; [CPU_] |4646| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4646| 
        MOVL      XAR1,ACC              ; [CPU_] |4646| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4647,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4647| 
        ; branch occurs ; [] |4647| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4644,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4644| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4644| 
        MOVU      ACC,AR4               ; [CPU_] |4644| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4644| 
        MOVL      XAR1,ACC              ; [CPU_] |4644| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4644| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4651,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4651| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4651| 
        ; call occurs [#_dac_setmode] ; [] |4651| 
	.dwpsn	file "../Source/prod.c",line 4653,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4653| 
        MOV       AH,*-SP[47]           ; [CPU_] |4653| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4653| 
        ; call occurs [#_mcbsp_xmit] ; [] |4653| 
	.dwpsn	file "../Source/prod.c",line 4654,column 5,is_stmt,isa 0
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_latch_dac")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4654| 
        ; call occurs [#_latch_dac] ; [] |4654| 
	.dwpsn	file "../Source/prod.c",line 4656,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4656| 
        MOV       T,*-SP[59]            ; [CPU_] |4656| 
        LSL       AL,T                  ; [CPU_] |4656| 
        OR        *-SP[56],AL           ; [CPU_] |4656| 
	.dwpsn	file "../Source/prod.c",line 4659,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4659| 
        ; branch occurs ; [] |4659| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4565| 
        B         $C$L320,LO            ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4565| 
        MOVL      XAR0,#66              ; [CPU_] |4565| 
        MOVL      ACC,XAR5              ; [CPU_] |4565| 
        ADDB      ACC,#2                ; [CPU_] |4565| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4565| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4565| 
        MOVZ      AR7,AR6               ; [CPU_] |4565| 
        MOV       AL,*-SP[58]           ; [CPU_] |4565| 
        MOVU      ACC,AL                ; [CPU_] |4565| 
        CMPL      ACC,XAR7              ; [CPU_] |4565| 
        B         $C$L320,NEQ           ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4565| 
        CMPB      AL,#7                 ; [CPU_] |4565| 
        B         $C$L320,NEQ           ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4571| 
        MOVL      ACC,XAR5              ; [CPU_] |4571| 
        MOVL      XAR0,#66              ; [CPU_] |4571| 
	.dwpsn	file "../Source/prod.c",line 4570,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4570| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4571| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4571| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4571| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4571| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4574,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4574| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4576,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4576| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4576| 
	.dwpsn	file "../Source/prod.c",line 4577,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4577| 
        MOV       *XAR7++,AL            ; [CPU_] |4577| 
	.dwpsn	file "../Source/prod.c",line 4578,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4578| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4578| 
        MOV       *XAR0++,AL            ; [CPU_] |4578| 
	.dwpsn	file "../Source/prod.c",line 4579,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4579| 
        MOV       *XAR7++,AL            ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4575,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4575| 
        ; branchcc occurs ; [] |4575| 
	.dwpsn	file "../Source/prod.c",line 4573,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4573| 
	.dwpsn	file "../Source/prod.c",line 4579,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4573,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4573| 
        ; branchcc occurs ; [] |4573| 
	.dwpsn	file "../Source/prod.c",line 4586,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4586| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4586| 
        ; call occurs [#U$$TOFS] ; [] |4586| 
        MOVL      XAR1,ACC              ; [CPU_] |4586| 
        MOV       AL,*-SP[35]           ; [CPU_] |4586| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4586| 
        ; call occurs [#U$$TOFS] ; [] |4586| 
        MOVL      XAR0,#86              ; [CPU_] |4586| 
        MOV       T,*-SP[58]            ; [CPU_] |4586| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4586| 
        MOVL      XAR0,#40              ; [CPU_] |4586| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4586| 
        MOVB      AL,#12                ; [CPU_] |4586| 
        MPYU      ACC,T,AL              ; [CPU_] |4586| 
        MOVL      XAR0,#88              ; [CPU_] |4586| 
        ADDL      ACC,XAR6              ; [CPU_] |4586| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4586| 
        MOVL      XAR0,#86              ; [CPU_] |4586| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4586| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4586| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4586| 
        ; call occurs [#FS$$SUB] ; [] |4586| 
        MOVL      XAR0,#42              ; [CPU_] |4586| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4586| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4586| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4586| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4586| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4586| 
        ; call occurs [#FS$$SUB] ; [] |4586| 
        MOVL      XAR0,#42              ; [CPU_] |4586| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4586| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4586| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4586| 
        ; call occurs [#FS$$DIV] ; [] |4586| 
        MOVL      XAR0,#88              ; [CPU_] |4586| 
        MOVL      XAR6,ACC              ; [CPU_] |4586| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4586| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4586| 
        MOVL      XAR4,ACC              ; [CPU_] |4586| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4586| 
	.dwpsn	file "../Source/prod.c",line 4589,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4589| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4589| 
        ; call occurs [#U$$TOFS] ; [] |4589| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4589| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4589| 
        ; call occurs [#FS$$SUB] ; [] |4589| 
        MOVL      XAR1,ACC              ; [CPU_] |4589| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4589| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4589| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4589| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4589| 
        ; call occurs [#FS$$SUB] ; [] |4589| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4589| 
        MOVL      ACC,XAR1              ; [CPU_] |4589| 
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4589| 
        ; call occurs [#FS$$DIV] ; [] |4589| 
        MOVL      XAR0,#88              ; [CPU_] |4589| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4589| 
        MOVL      XAR6,ACC              ; [CPU_] |4589| 
        MOVL      ACC,XAR1              ; [CPU_] |4589| 
        ADD       ACC,#49 << 6          ; [CPU_] |4589| 
        MOVL      XAR4,ACC              ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4592,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4589,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4592,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4592| 
        MOVL      XAR4,ACC              ; [CPU_] |4592| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4592| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4592| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4592| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4592| 
        ; call occurs [#FS$$MPY] ; [] |4592| 
        MOVL      XAR0,#86              ; [CPU_] |4592| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4592| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4592| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4592| 
        ; call occurs [#FS$$SUB] ; [] |4592| 
        MOVL      XAR6,ACC              ; [CPU_] |4592| 
        MOVL      ACC,XAR1              ; [CPU_] |4592| 
        ADD       ACC,#785 << 2         ; [CPU_] |4592| 
        MOVL      XAR4,ACC              ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4595,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4595| 
	.dwpsn	file "../Source/prod.c",line 4592,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4595,column 5,is_stmt,isa 0
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4595| 
        ; call occurs [#_dac_setmode] ; [] |4595| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4601,column 5,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4601| 
        ; call occurs [#_ad7738_setcal] ; [] |4601| 
        MOVL      XAR0,#78              ; [CPU_] |4601| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4602| 
        MOVL      XAR1,ACC              ; [CPU_] |4602| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4602| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4602| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4602| 
	.dwpsn	file "../Source/prod.c",line 4603,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4603| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4603| 
        ; call occurs [#_ad7738_resetvall] ; [] |4603| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4607,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4607| 
        ; branch occurs ; [] |4607| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4509,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4509| 
        B         $C$L320,LO            ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
        MOVL      XAR0,#88              ; [CPU_] |4509| 
        MOVL      ACC,XAR4              ; [CPU_] |4509| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4509| 
        MOVL      XAR0,#66              ; [CPU_] |4509| 
        ADDB      ACC,#2                ; [CPU_] |4509| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4509| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4509| 
        MOV       AL,*-SP[58]           ; [CPU_] |4509| 
        MOVU      ACC,AL                ; [CPU_] |4509| 
        CMPL      ACC,XAR6              ; [CPU_] |4509| 
        B         $C$L320,NEQ           ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4509| 
        B         $C$L320,LT            ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
        CMPB      AL,#2                 ; [CPU_] |4509| 
        B         $C$L320,GEQ           ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4515| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4516| 
        MOVZ      AR7,AR6               ; [CPU_] |4516| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4518,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4518| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4517,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4517| 
        ADDB      XAR4,#2               ; [CPU_] |4517| 
	.dwpsn	file "../Source/prod.c",line 4518,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4517,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4517| 
        ; branchcc occurs ; [] |4517| 
	.dwpsn	file "../Source/prod.c",line 4521,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4521| 
        SUBB      XAR4,#24              ; [CPU_U] |4521| 
        MOVZ      AR1,AR4               ; [CPU_] |4521| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4521| 
        ADDL      XAR1,ACC              ; [CPU_] |4521| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4521| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4521| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4521| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4521| 
        ; call occurs [#FS$$CMP] ; [] |4521| 
        CMPB      AL,#0                 ; [CPU_] |4521| 
        B         $C$L320,NEQ           ; [CPU_] |4521| 
        ; branchcc occurs ; [] |4521| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4525| 
        ; call occurs [#_lcd_clear] ; [] |4525| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4526| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4526| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4526| 
        ; call occurs [#_lcd_puts] ; [] |4526| 
	.dwpsn	file "../Source/prod.c",line 4527,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4527| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4527| 
        MOVL      XAR0,#44              ; [CPU_] |4527| 
        ADD       AL,*-SP[58]           ; [CPU_] |4527| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4527| 
        MOV       *-SP[3],AL            ; [CPU_] |4527| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4527| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_sprintf")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4527| 
        ; call occurs [#_sprintf] ; [] |4527| 
        MOVL      XAR0,#44              ; [CPU_] |4527| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4528| 
	.dwpsn	file "../Source/prod.c",line 4527,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4527| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4528| 
        ; call occurs [#_lcd_puts] ; [] |4528| 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4529| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4529| 
        MOVL      XAR0,#44              ; [CPU_] |4529| 
        ADD       AL,*-SP[47]           ; [CPU_] |4529| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4529| 
        MOV       *-SP[3],AL            ; [CPU_] |4529| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4529| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4529| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4529| 
        MOVL      XAR4,XAR1             ; [CPU_] |4529| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_sprintf")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4529| 
        ; call occurs [#_sprintf] ; [] |4529| 
	.dwpsn	file "../Source/prod.c",line 4530,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4530| 
	.dwpsn	file "../Source/prod.c",line 4529,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4529| 
	.dwpsn	file "../Source/prod.c",line 4530,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4530| 
        ; call occurs [#_lcd_puts] ; [] |4530| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4531| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4531| 
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4531| 
        ; call occurs [#_lcd_puts] ; [] |4531| 
	.dwpsn	file "../Source/prod.c",line 4533,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4533| 
        SUBB      XAR4,#32              ; [CPU_U] |4533| 
        MOVZ      AR1,AR4               ; [CPU_] |4533| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4531| 
	.dwpsn	file "../Source/prod.c",line 4533,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4533| 
        ADDL      XAR1,ACC              ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4534,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4534| 
	.dwpsn	file "../Source/prod.c",line 4533,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4533| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4533| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4535| 
	.dwpsn	file "../Source/prod.c",line 4534,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4534| 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4535| 
        MOVB      ACC,#0                ; [CPU_] |4535| 
        SUBB      ACC,#1                ; [CPU_] |4535| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4535| 
        B         $C$L157,EQ            ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4536,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4536| 
        ; branch occurs ; [] |4536| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4537,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4537| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_delay_us")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4537| 
        ; call occurs [#_delay_us] ; [] |4537| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4536,column 13,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4536| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4536| 
        CMPB      AL,#0                 ; [CPU_] |4536| 
        B         $C$L155,EQ            ; [CPU_] |4536| 
        ; branchcc occurs ; [] |4536| 
	.dwpsn	file "../Source/prod.c",line 4539,column 6,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4539| 
        ; call occurs [#_ad7738_getraw] ; [] |4539| 
	.dwpsn	file "../Source/prod.c",line 4540,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4540| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4540| 
        ADDL      XAR4,ACC              ; [CPU_] |4540| 
        MOVL      XAR0,#22              ; [CPU_] |4540| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4540| 
        MOVL      XAR0,#22              ; [CPU_] |4540| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4540| 
        ASR64     ACC:P,16              ; [CPU_] |4540| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4540| 
        MOVL      XAR0,#22              ; [CPU_] |4540| 
        ASR64     ACC:P,16              ; [CPU_] |4540| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4540| 
        MOVL      XAR0,#22              ; [CPU_] |4540| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4540| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4540| 
        MOVL      XAR0,#22              ; [CPU_] |4540| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4540| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4540| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4540| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4540| 
	.dwpsn	file "../Source/prod.c",line 4535,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4535| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4535| 
        MOVB      ACC,#0                ; [CPU_] |4535| 
        SUBB      ACC,#1                ; [CPU_] |4535| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4535| 
        B         $C$L156,NEQ           ; [CPU_] |4535| 
        ; branchcc occurs ; [] |4535| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4542| 
        B         $C$L158,NEQ           ; [CPU_] |4542| 
        ; branchcc occurs ; [] |4542| 
	.dwpsn	file "../Source/prod.c",line 4543,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4543| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4543| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4543| 
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4543| 
        ; call occurs [#FS$$SUB] ; [] |4543| 
        MOVL      XAR6,ACC              ; [CPU_] |4543| 
        MOV       AL,#16384             ; [CPU_] |4543| 
        MOV       AH,#17948             ; [CPU_] |4543| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4543| 
        MOVL      ACC,XAR6              ; [CPU_] |4543| 
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4543| 
        ; call occurs [#FS$$MPY] ; [] |4543| 
        MOVL      XAR1,ACC              ; [CPU_] |4543| 
        MOVL      P,*-SP[28]            ; [CPU_] |4543| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4543| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4543| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4543| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4543| 
        ; call occurs [#LL$$TOFS] ; [] |4543| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4543| 
        MOVL      ACC,XAR1              ; [CPU_] |4543| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4543| 
        ; call occurs [#FS$$DIV] ; [] |4543| 
        MOVL      XAR0,#40              ; [CPU_] |4543| 
        MOV       T,*-SP[58]            ; [CPU_] |4543| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4543| 
        MOVL      XAR6,ACC              ; [CPU_] |4543| 
        MOVB      AL,#10                ; [CPU_] |4543| 
        MPYU      ACC,T,AL              ; [CPU_] |4543| 
        ADDL      ACC,XAR7              ; [CPU_] |4543| 
        MOVL      XAR4,ACC              ; [CPU_] |4543| 
        MOVB      XAR0,#44              ; [CPU_] |4543| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4543| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4548,column 6,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4548| 
        ; call occurs [#_ad7738_setcal] ; [] |4548| 
        MOVL      XAR0,#78              ; [CPU_] |4548| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4548| 
	.dwpsn	file "../Source/prod.c",line 4549,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4549| 
        MOVL      XAR1,ACC              ; [CPU_] |4549| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4549| 
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4549| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4549| 
	.dwpsn	file "../Source/prod.c",line 4550,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4550| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4550| 
        ; call occurs [#_ad7738_resetvall] ; [] |4550| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4546,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4546| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4553,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4553| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4554,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4554| 
	.dwpsn	file "../Source/prod.c",line 4553,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4553| 
	.dwpsn	file "../Source/prod.c",line 4554,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4554| 
	.dwpsn	file "../Source/prod.c",line 4553,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4553| 
	.dwpsn	file "../Source/prod.c",line 4554,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4554| 
	.dwpsn	file "../Source/prod.c",line 4553,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4553| 
        B         $C$L159,HI            ; [CPU_] |4553| 
        ; branchcc occurs ; [] |4553| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4556| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4559| 
        ; call occurs [#_lcd_clear] ; [] |4559| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_update_units")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4560| 
        ; call occurs [#_update_units] ; [] |4560| 
	.dwpsn	file "../Source/prod.c",line 4561,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4561| 
        ; branch occurs ; [] |4561| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4484| 
        B         $C$L320,LO            ; [CPU_] |4484| 
        ; branchcc occurs ; [] |4484| 
        MOVL      ACC,XAR4              ; [CPU_] |4484| 
        MOVL      XAR0,#66              ; [CPU_] |4484| 
        ADDB      ACC,#2                ; [CPU_] |4484| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4484| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4484| 
        B         $C$L320,LT            ; [CPU_] |4484| 
        ; branchcc occurs ; [] |4484| 
        MOVL      XAR5,XAR4             ; [CPU_] |4484| 
        MOVL      XAR0,#66              ; [CPU_] |4484| 
        CMPB      AL,#4                 ; [CPU_] |4484| 
        ADDB      XAR5,#2               ; [CPU_] |4484| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4484| 
        B         $C$L320,GEQ           ; [CPU_] |4484| 
        ; branchcc occurs ; [] |4484| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4484| 
        CMPB      AH,#2                 ; [CPU_] |4484| 
        B         $C$L320,NEQ           ; [CPU_] |4484| 
        ; branchcc occurs ; [] |4484| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4491| 
        MOVL      XAR0,#66              ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4490,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4494,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4494| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4491| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4491| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4492,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4492| 
        MOV       *-SP[61],#4           ; [CPU_] |4492| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4494,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4494| 
        ; branch occurs ; [] |4494| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4495,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4495| 
        SUBB      XAR4,#24              ; [CPU_U] |4495| 
        MOVZ      AR4,AR4               ; [CPU_] |4495| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4495| 
        MOVL      XAR0,#44              ; [CPU_] |4495| 
        ADDL      XAR4,ACC              ; [CPU_] |4495| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4495| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4497,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4497| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4497| 
	.dwpsn	file "../Source/prod.c",line 4498,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4498| 
        MOV       *XAR7++,AL            ; [CPU_] |4498| 
	.dwpsn	file "../Source/prod.c",line 4499,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4499| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4499| 
        MOV       *XAR4++,AL            ; [CPU_] |4499| 
	.dwpsn	file "../Source/prod.c",line 4500,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4500| 
        MOV       *XAR7++,AL            ; [CPU_] |4500| 
	.dwpsn	file "../Source/prod.c",line 4496,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4496| 
        ; branchcc occurs ; [] |4496| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4500,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4500| 
	.dwpsn	file "../Source/prod.c",line 4494,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4494| 
        MOV       PL,AL                 ; [CPU_] |4494| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4494,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4494| 
        MOV       AL,PL                 ; [CPU_] |4494| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4494| 
        B         $C$L161,LT            ; [CPU_] |4494| 
        ; branchcc occurs ; [] |4494| 
        B         $C$L745,UNC           ; [CPU_] |4494| 
        ; branch occurs ; [] |4494| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5439,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5439| 
        B         $C$L320,LO            ; [CPU_] |5439| 
        ; branchcc occurs ; [] |5439| 
	.dwpsn	file "../Source/prod.c",line 5444,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5444| 
        MOVL      XAR0,#66              ; [CPU_] |5444| 
        MOVL      ACC,XAR7              ; [CPU_] |5444| 
        ADDB      ACC,#2                ; [CPU_] |5444| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5444| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GT            ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVB      XAR0,#13              ; [CPU_] |5444| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GT            ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVB      XAR0,#24              ; [CPU_] |5444| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GT            ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVB      XAR0,#35              ; [CPU_] |5444| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GT            ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GEQ           ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVB      XAR0,#14              ; [CPU_] |5444| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GEQ           ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVB      XAR0,#25              ; [CPU_] |5444| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GEQ           ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVB      XAR0,#36              ; [CPU_] |5444| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5444| 
        CMPB      AL,#4                 ; [CPU_] |5444| 
        B         $C$L320,GEQ           ; [CPU_] |5444| 
        ; branchcc occurs ; [] |5444| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5452,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5452| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5452| 
        MOVL      XAR6,ACC              ; [CPU_] |5452| 
        MOV       AL,*XAR7              ; [CPU_] |5452| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5452| 
	.dwpsn	file "../Source/prod.c",line 5453,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5453| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5453| 
        MOVL      XAR6,ACC              ; [CPU_] |5453| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5453| 
        MOV       *XAR4++,AL            ; [CPU_] |5453| 
	.dwpsn	file "../Source/prod.c",line 5454,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5454| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5454| 
        MOVL      XAR6,ACC              ; [CPU_] |5454| 
	.dwpsn	file "../Source/prod.c",line 5452,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5452| 
	.dwpsn	file "../Source/prod.c",line 5454,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5454| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5454| 
	.dwpsn	file "../Source/prod.c",line 5455,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5455| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5455| 
        MOVL      XAR6,ACC              ; [CPU_] |5455| 
	.dwpsn	file "../Source/prod.c",line 5454,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5454| 
	.dwpsn	file "../Source/prod.c",line 5455,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5455| 
        MOV       *XAR4++,AL            ; [CPU_] |5455| 
	.dwpsn	file "../Source/prod.c",line 5456,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5456| 
        ANDB      AL,#0xfe              ; [CPU_] |5456| 
        MOVZ      AR0,AL                ; [CPU_] |5456| 
        MOVL      ACC,XAR5              ; [CPU_] |5456| 
        ADD       ACC,#199 << 4         ; [CPU_] |5456| 
        MOVL      XAR6,ACC              ; [CPU_] |5456| 
	.dwpsn	file "../Source/prod.c",line 5457,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5457| 
        ADD       ACC,#199 << 4         ; [CPU_] |5457| 
	.dwpsn	file "../Source/prod.c",line 5456,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5456| 
	.dwpsn	file "../Source/prod.c",line 5457,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5457| 
        MOVL      XAR0,P                ; [CPU_] |5457| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5457| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5457| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5461,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5461| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5461| 
	.dwpsn	file "../Source/prod.c",line 5462,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5462| 
        MOV       *XAR4++,AL            ; [CPU_] |5462| 
	.dwpsn	file "../Source/prod.c",line 5463,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5463| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5463| 
        MOV       *XAR0++,AL            ; [CPU_] |5463| 
	.dwpsn	file "../Source/prod.c",line 5464,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5464| 
        MOV       *XAR4++,AL            ; [CPU_] |5464| 
	.dwpsn	file "../Source/prod.c",line 5460,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5460| 
        ; branchcc occurs ; [] |5460| 
	.dwpsn	file "../Source/prod.c",line 5467,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5467| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5469,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5469| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5469| 
	.dwpsn	file "../Source/prod.c",line 5470,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5470| 
        MOV       *XAR4++,AL            ; [CPU_] |5470| 
	.dwpsn	file "../Source/prod.c",line 5471,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5471| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5471| 
        MOV       *XAR0++,AL            ; [CPU_] |5471| 
	.dwpsn	file "../Source/prod.c",line 5472,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5472| 
        MOV       *XAR4++,AL            ; [CPU_] |5472| 
	.dwpsn	file "../Source/prod.c",line 5468,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5468| 
        ; branchcc occurs ; [] |5468| 
	.dwpsn	file "../Source/prod.c",line 5451,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5451| 
	.dwpsn	file "../Source/prod.c",line 5454,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5454| 
        ADD       *-SP[61],#11          ; [CPU_] |5454| 
	.dwpsn	file "../Source/prod.c",line 5451,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5451| 
        ADDB      XAR1,#8               ; [CPU_] |5451| 
        ADDB      ACC,#8                ; [CPU_] |5451| 
        SUBB      XAR6,#1               ; [CPU_U] |5451| 
        MOVZ      AR3,AR6               ; [CPU_] |5451| 
        MOVL      P,ACC                 ; [CPU_] |5451| 
        CMP       AR6,#-1               ; [CPU_] |5451| 
        B         $C$L165,NEQ           ; [CPU_] |5451| 
        ; branchcc occurs ; [] |5451| 
        B         $C$L176,UNC           ; [CPU_] |5451| 
        ; branch occurs ; [] |5451| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5376,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5376| 
        B         $C$L320,LO            ; [CPU_] |5376| 
        ; branchcc occurs ; [] |5376| 
	.dwpsn	file "../Source/prod.c",line 5381,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5381| 
        MOVL      XAR0,#66              ; [CPU_] |5381| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5381| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L169,LEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        CMPB      AL,#7                 ; [CPU_] |5381| 
        B         $C$L320,NEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5381| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L170,LEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        CMPB      AL,#7                 ; [CPU_] |5381| 
        B         $C$L320,NEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5381| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L171,LEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        CMPB      AL,#7                 ; [CPU_] |5381| 
        B         $C$L320,NEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5381| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L172,LEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        CMPB      AL,#7                 ; [CPU_] |5381| 
        B         $C$L320,NEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5381| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L320,GEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        MOVB      XAR0,#13              ; [CPU_] |5381| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L320,GEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        MOVB      XAR0,#23              ; [CPU_] |5381| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L320,GEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        MOVB      XAR0,#33              ; [CPU_] |5381| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5381| 
        CMPB      AL,#4                 ; [CPU_] |5381| 
        B         $C$L320,GEQ           ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5392,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5392| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5392| 
        MOVL      XAR5,ACC              ; [CPU_] |5392| 
        MOV       AL,*XAR7              ; [CPU_] |5392| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5393| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5393| 
        MOVL      XAR5,ACC              ; [CPU_] |5393| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5393| 
        MOV       *XAR4++,AL            ; [CPU_] |5393| 
	.dwpsn	file "../Source/prod.c",line 5394,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5394| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5394| 
        MOVL      XAR5,ACC              ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5392,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5394,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5394| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5395,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5395| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5395| 
        MOVL      XAR5,ACC              ; [CPU_] |5395| 
	.dwpsn	file "../Source/prod.c",line 5394,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5395,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5395| 
        MOVL      XAR5,P                ; [CPU_] |5395| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5395| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5406,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5406| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5406| 
	.dwpsn	file "../Source/prod.c",line 5407,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5407| 
        MOV       *XAR4++,AL            ; [CPU_] |5407| 
	.dwpsn	file "../Source/prod.c",line 5408,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5408| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5408| 
        MOV       *XAR5++,AL            ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5409,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5409| 
        MOV       *XAR4++,AL            ; [CPU_] |5409| 
	.dwpsn	file "../Source/prod.c",line 5405,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5405| 
        ; branchcc occurs ; [] |5405| 
	.dwpsn	file "../Source/prod.c",line 5415,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5415| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5422,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5422| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5422| 
	.dwpsn	file "../Source/prod.c",line 5423,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5423| 
        MOV       *XAR4++,AL            ; [CPU_] |5423| 
	.dwpsn	file "../Source/prod.c",line 5424,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5424| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5424| 
        MOV       *XAR5++,AL            ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5425| 
        MOV       *XAR4++,AL            ; [CPU_] |5425| 
	.dwpsn	file "../Source/prod.c",line 5421,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5421| 
        ; branchcc occurs ; [] |5421| 
	.dwpsn	file "../Source/prod.c",line 5391,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5394,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5394| 
        ADD       *-SP[61],#10          ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5391,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5391| 
        ADDB      XAR1,#12              ; [CPU_] |5391| 
        ADDB      ACC,#12               ; [CPU_] |5391| 
        SUBB      XAR6,#1               ; [CPU_U] |5391| 
        MOVZ      AR3,AR6               ; [CPU_] |5391| 
        MOVL      P,ACC                 ; [CPU_] |5391| 
        CMP       AR6,#-1               ; [CPU_] |5391| 
        B         $C$L173,NEQ           ; [CPU_] |5391| 
        ; branchcc occurs ; [] |5391| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5432,column 5,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5432| 
        ; call occurs [#_ad7738_setcal] ; [] |5432| 
	.dwpsn	file "../Source/prod.c",line 5435,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5435| 
        ; branch occurs ; [] |5435| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5344,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5344| 
        B         $C$L320,LO            ; [CPU_] |5344| 
        ; branchcc occurs ; [] |5344| 
	.dwpsn	file "../Source/prod.c",line 5349,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5349| 
        MOVL      XAR0,#66              ; [CPU_] |5349| 
        MOVL      ACC,XAR7              ; [CPU_] |5349| 
        ADDB      ACC,#2                ; [CPU_] |5349| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5349| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GT            ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GT            ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#8               ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GT            ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#11              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GT            ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#9               ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#12              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#4                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVL      ACC,XAR7              ; [CPU_] |5349| 
        MOVL      XAR0,#64              ; [CPU_] |5349| 
        ADDB      ACC,#4                ; [CPU_] |5349| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5349| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#10              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVB      XAR0,#13              ; [CPU_] |5349| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5349| 
        CMPB      AL,#6                 ; [CPU_] |5349| 
        B         $C$L320,GEQ           ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5360,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5360| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5360,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5362,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5362| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5362| 
        ADDB      XAR7,#1               ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5363| 
        MOV       *XAR4++,AL            ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5364,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5364| 
        ADDB      XAR7,#1               ; [CPU_] |5364| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5365| 
	.dwpsn	file "../Source/prod.c",line 5359,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5359| 
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5365| 
	.dwpsn	file "../Source/prod.c",line 5359,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5359| 
        ; branchcc occurs ; [] |5359| 
	.dwpsn	file "../Source/prod.c",line 5369,column 5,is_stmt,isa 0
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5369| 
        ; call occurs [#_lcd_clear] ; [] |5369| 
	.dwpsn	file "../Source/prod.c",line 5370,column 5,is_stmt,isa 0
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_update_units")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5370| 
        ; call occurs [#_update_units] ; [] |5370| 
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5365| 
	.dwpsn	file "../Source/prod.c",line 5372,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5372| 
        ; branch occurs ; [] |5372| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5323,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5323| 
        B         $C$L320,LO            ; [CPU_] |5323| 
        ; branchcc occurs ; [] |5323| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5328,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5328| 
        MOVB      XAR0,#36              ; [CPU_] |5328| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5328| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5329,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5329| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5329| 
        B         $C$L181,NEQ           ; [CPU_] |5329| 
        ; branchcc occurs ; [] |5329| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5331,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5331| 
	.dwpsn	file "../Source/prod.c",line 5332,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5332| 
	.dwpsn	file "../Source/prod.c",line 5330,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5330| 
        ; branchcc occurs ; [] |5330| 
	.dwpsn	file "../Source/prod.c",line 5334,column 6,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_update_units")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5334| 
        ; call occurs [#_update_units] ; [] |5334| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5338,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5338| 
	.dwpsn	file "../Source/prod.c",line 5340,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5340| 
        ; branch occurs ; [] |5340| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5282| 
        B         $C$L320,LO            ; [CPU_] |5282| 
        ; branchcc occurs ; [] |5282| 
	.dwpsn	file "../Source/prod.c",line 5288,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5288| 
        ADDB      XAR4,#2               ; [CPU_] |5288| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5288| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5288| 
        MOVZ      AR3,AL                ; [CPU_] |5288| 
	.dwpsn	file "../Source/prod.c",line 5289,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5289| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5289| 
        CMP       AR3,#4096             ; [CPU_] |5289| 
        B         $C$L320,HI            ; [CPU_] |5289| 
        ; branchcc occurs ; [] |5289| 
	.dwpsn	file "../Source/prod.c",line 5295,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5295| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5295| 
        MOVZ      AR7,AR6               ; [CPU_] |5295| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5297,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5297| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5296,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5296| 
        ADDB      XAR4,#2               ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5296,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5296| 
        ; branchcc occurs ; [] |5296| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5302,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5302| 
        MOVB      XAR1,#38              ; [CPU_] |5302| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5302| 
	.dwpsn	file "../Source/prod.c",line 5303,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5303| 
        MOVB      XAR1,#40              ; [CPU_] |5303| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5303| 
	.dwpsn	file "../Source/prod.c",line 5304,column 5,is_stmt,isa 0
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_maf_rst")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5304| 
        ; call occurs [#_maf_rst] ; [] |5304| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5309,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5309| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5309| 
	.dwpsn	file "../Source/prod.c",line 5313,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5309,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5309| 
	.dwpsn	file "../Source/prod.c",line 5310,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5310| 
        LSR       AL,8                  ; [CPU_] |5310| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5310| 
	.dwpsn	file "../Source/prod.c",line 5313,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5313| 
        MOVB      XAR1,#40              ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5314,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5314| 
        MOVL      XAR0,#50              ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5313,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5313| 
        ANDB      AL,#0xff              ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5314,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5313,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5314,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5315,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5314,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5314| 
        LSR       AL,8                  ; [CPU_] |5314| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5315,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5315| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5316,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5316| 
	.dwpsn	file "../Source/prod.c",line 5315,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5316,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5316| 
        MOV       *-SP[61],#8           ; [CPU_] |5316| 
	.dwpsn	file "../Source/prod.c",line 5319,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5319| 
        ; branch occurs ; [] |5319| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5249| 
        B         $C$L320,LO            ; [CPU_] |5249| 
        ; branchcc occurs ; [] |5249| 
        MOVL      ACC,XAR4              ; [CPU_] |5249| 
        MOVL      XAR0,#66              ; [CPU_] |5249| 
        ADDB      ACC,#2                ; [CPU_] |5249| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5249| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5249| 
        B         $C$L320,LT            ; [CPU_] |5249| 
        ; branchcc occurs ; [] |5249| 
        MOVL      XAR5,XAR4             ; [CPU_] |5249| 
        MOVL      XAR0,#66              ; [CPU_] |5249| 
        CMPB      AL,#4                 ; [CPU_] |5249| 
        ADDB      XAR5,#2               ; [CPU_] |5249| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5249| 
        B         $C$L320,GEQ           ; [CPU_] |5249| 
        ; branchcc occurs ; [] |5249| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5249| 
        B         $C$L320,LT            ; [CPU_] |5249| 
        ; branchcc occurs ; [] |5249| 
        CMPB      AH,#20                ; [CPU_] |5249| 
        B         $C$L320,GEQ           ; [CPU_] |5249| 
        ; branchcc occurs ; [] |5249| 
	.dwpsn	file "../Source/prod.c",line 5259,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5259| 
        MOVL      XAR0,#66              ; [CPU_] |5259| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5259| 
        MOVL      XAR0,#80              ; [CPU_] |5259| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5259| 
	.dwpsn	file "../Source/prod.c",line 5257,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5257| 
	.dwpsn	file "../Source/prod.c",line 5259,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5259| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5259| 
        B         $C$L318,NEQ           ; [CPU_] |5259| 
        ; branchcc occurs ; [] |5259| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5265,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5265| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5265| 
        MOVB      AL,#10                ; [CPU_] |5265| 
        MOV       T,*-SP[58]            ; [CPU_] |5265| 
        MPYU      ACC,T,AL              ; [CPU_] |5265| 
        ADDL      ACC,XAR6              ; [CPU_] |5265| 
        MOVL      XAR4,ACC              ; [CPU_] |5265| 
        MOVB      XAR0,#42              ; [CPU_] |5265| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5265| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5265| 
	.dwpsn	file "../Source/prod.c",line 5266,column 5,is_stmt,isa 0
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5266| 
        ; call occurs [#_ad7738_setcal] ; [] |5266| 
        MOVL      XAR0,#78              ; [CPU_] |5266| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5266| 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5268| 
        MOVL      XAR1,ACC              ; [CPU_] |5268| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5268| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5268| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5268| 
	.dwpsn	file "../Source/prod.c",line 5269,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5269| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5269| 
        ; call occurs [#_ad7738_resetvall] ; [] |5269| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5272,column 5,is_stmt,isa 0
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_update_units")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5272| 
        ; call occurs [#_update_units] ; [] |5272| 
	.dwpsn	file "../Source/prod.c",line 5275,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5275| 
        MOV       AL,*-SP[58]           ; [CPU_] |5275| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5275| 
        MOV       AL,*-SP[57]           ; [CPU_] |5275| 
	.dwpsn	file "../Source/prod.c",line 5276,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5276| 
        MOV       *-SP[61],#4           ; [CPU_] |5276| 
	.dwpsn	file "../Source/prod.c",line 5278,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5278| 
        ; branch occurs ; [] |5278| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5213| 
        B         $C$L320,LO            ; [CPU_] |5213| 
        ; branchcc occurs ; [] |5213| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5219,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5219| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5221,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5221| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5221| 
	.dwpsn	file "../Source/prod.c",line 5222,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5222| 
        MOV       *XAR5++,AL            ; [CPU_] |5222| 
	.dwpsn	file "../Source/prod.c",line 5223,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5223| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5223| 
        MOV       *XAR1++,AL            ; [CPU_] |5223| 
	.dwpsn	file "../Source/prod.c",line 5224,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5224| 
        MOV       *XAR5++,AL            ; [CPU_] |5224| 
	.dwpsn	file "../Source/prod.c",line 5220,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5220| 
        ; branchcc occurs ; [] |5220| 
	.dwpsn	file "../Source/prod.c",line 5218,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5218| 
	.dwpsn	file "../Source/prod.c",line 5224,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5224| 
	.dwpsn	file "../Source/prod.c",line 5218,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5218| 
        ; branchcc occurs ; [] |5218| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5229| 
        MOVL      ACC,XAR4              ; [CPU_] |5229| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5229| 
        MOVL      XAR6,ACC              ; [CPU_] |5229| 
        MOV       AL,*XAR7              ; [CPU_] |5229| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5229| 
	.dwpsn	file "../Source/prod.c",line 5230,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5230| 
        MOVL      XAR6,XAR4             ; [CPU_] |5230| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5230| 
        MOVL      XAR4,ACC              ; [CPU_] |5230| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5230| 
        ANDB      AL,#0xff              ; [CPU_] |5230| 
        MOV       *XAR5++,AL            ; [CPU_] |5230| 
	.dwpsn	file "../Source/prod.c",line 5231,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5231| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5231| 
        MOVL      XAR4,ACC              ; [CPU_] |5231| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5229| 
	.dwpsn	file "../Source/prod.c",line 5231,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5231| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5231| 
	.dwpsn	file "../Source/prod.c",line 5232,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5232| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5232| 
        MOVL      XAR4,ACC              ; [CPU_] |5232| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5232| 
        LSR       AL,8                  ; [CPU_] |5232| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5232| 
	.dwpsn	file "../Source/prod.c",line 5231,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5231| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5237,column 5,is_stmt,isa 0
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5237| 
        ; call occurs [#_ad7738_setcal] ; [] |5237| 
	.dwpsn	file "../Source/prod.c",line 5238,column 5,is_stmt,isa 0
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_velf_rst")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5238| 
        ; call occurs [#_velf_rst] ; [] |5238| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5242,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5242| 
        ; branch occurs ; [] |5242| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5174,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5174| 
        B         $C$L320,LO            ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
        MOVL      ACC,XAR4              ; [CPU_] |5174| 
        MOVL      XAR0,#66              ; [CPU_] |5174| 
        ADDB      ACC,#2                ; [CPU_] |5174| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5174| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5174| 
        B         $C$L320,LT            ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
        MOVL      XAR5,XAR4             ; [CPU_] |5174| 
        MOVL      XAR0,#66              ; [CPU_] |5174| 
        CMPB      AL,#20                ; [CPU_] |5174| 
        ADDB      XAR5,#2               ; [CPU_] |5174| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5174| 
        B         $C$L320,GEQ           ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
	.dwpsn	file "../Source/prod.c",line 5178,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5178| 
	.dwpsn	file "../Source/prod.c",line 5179,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5179| 
	.dwpsn	file "../Source/prod.c",line 5181,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5181| 
	.dwpsn	file "../Source/prod.c",line 5179,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5179| 
	.dwpsn	file "../Source/prod.c",line 5181,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5181| 
        ADDB      ACC,#2                ; [CPU_] |5181| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5181| 
        MOVL      XAR0,#40              ; [CPU_] |5181| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5181| 
        MOV       T,*-SP[57]            ; [CPU_] |5181| 
        MOVB      AL,#152               ; [CPU_] |5181| 
        MPYU      ACC,T,AL              ; [CPU_] |5181| 
        ADDL      ACC,XAR6              ; [CPU_] |5181| 
        ADDB      ACC,#224              ; [CPU_] |5181| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5181| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5183,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5183| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5183| 
	.dwpsn	file "../Source/prod.c",line 5184,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5184| 
        MOV       *XAR5++,AL            ; [CPU_] |5184| 
	.dwpsn	file "../Source/prod.c",line 5185,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5185| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5185| 
        MOV       *XAR7++,AL            ; [CPU_] |5185| 
	.dwpsn	file "../Source/prod.c",line 5186,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5186| 
        MOV       *XAR5++,AL            ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5182,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5182| 
        ; branchcc occurs ; [] |5182| 
	.dwpsn	file "../Source/prod.c",line 5191,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5191| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5191| 
        MOVB      AL,#152               ; [CPU_] |5191| 
        MPYU      ACC,T,AL              ; [CPU_] |5191| 
        ADDL      ACC,XAR6              ; [CPU_] |5191| 
        MOVL      XAR1,ACC              ; [CPU_] |5191| 
        MOVB      XAR0,#125             ; [CPU_] |5191| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5191| 
        CMPB      AL,#247               ; [CPU_] |5191| 
        B         $C$L193,NEQ           ; [CPU_] |5191| 
        ; branchcc occurs ; [] |5191| 
	.dwpsn	file "../Source/prod.c",line 5193,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5193| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5193| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5193| 
        MOV       AL,#0                 ; [CPU_] |5193| 
        MOV       AH,#17096             ; [CPU_] |5193| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5193| 
        ; call occurs [#FS$$DIV] ; [] |5193| 
        MOVB      XAR0,#126             ; [CPU_] |5193| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5193| 
        MOVL      XAR0,#40              ; [CPU_] |5193| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5193| 
	.dwpsn	file "../Source/prod.c",line 5196,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5196| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5197,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5197| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5197| 
        CMPL      ACC,XAR6              ; [CPU_] |5197| 
        B         $C$L192,NEQ           ; [CPU_] |5197| 
        ; branchcc occurs ; [] |5197| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5200,column 8,is_stmt,isa 0
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5200| 
        ; call occurs [#_ad7738_setcal] ; [] |5200| 
        MOVL      XAR0,#78              ; [CPU_] |5200| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5200| 
	.dwpsn	file "../Source/prod.c",line 5201,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5201| 
        MOVL      XAR4,ACC              ; [CPU_] |5201| 
        MOVL      XAR0,#88              ; [CPU_] |5201| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5201| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5201| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5201| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5201| 
        MOVL      XAR0,#88              ; [CPU_] |5201| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5202,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5202| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5202| 
        ; call occurs [#_ad7738_resetvall] ; [] |5202| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5196,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5196| 
        ADDB      XAR1,#10              ; [CPU_] |5196| 
        MOV       AL,*-SP[58]           ; [CPU_] |5196| 
        CMPB      AL,#4                 ; [CPU_] |5196| 
        B         $C$L191,LO            ; [CPU_] |5196| 
        ; branchcc occurs ; [] |5196| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5185,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5185| 
	.dwpsn	file "../Source/prod.c",line 5209,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5209| 
        ; branch occurs ; [] |5209| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5073,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5073| 
        B         $C$L320,LO            ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
        MOVL      ACC,XAR4              ; [CPU_] |5073| 
        MOVL      XAR0,#66              ; [CPU_] |5073| 
        ADDB      ACC,#2                ; [CPU_] |5073| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5073| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5073| 
        B         $C$L320,LT            ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
        MOVL      XAR5,XAR4             ; [CPU_] |5073| 
        MOVL      XAR0,#66              ; [CPU_] |5073| 
        CMPB      AL,#20                ; [CPU_] |5073| 
        ADDB      XAR5,#2               ; [CPU_] |5073| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5073| 
        B         $C$L320,GEQ           ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
	.dwpsn	file "../Source/prod.c",line 5078,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5078| 
        MOVL      XAR0,#66              ; [CPU_] |5078| 
        MOV       *-SP[57],AL           ; [CPU_] |5078| 
        ADDB      XAR5,#2               ; [CPU_] |5078| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5078| 
	.dwpsn	file "../Source/prod.c",line 5079,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5079| 
        MOV       AL,AR6                ; [CPU_] |5079| 
        CMPB      AL,#247               ; [CPU_] |5079| 
        B         $C$L195,EQ            ; [CPU_] |5079| 
        ; branchcc occurs ; [] |5079| 
	.dwpsn	file "../Source/prod.c",line 5081,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5081| 
        MOVL      XAR0,#66              ; [CPU_] |5081| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5081| 
        MOVL      XAR0,#40              ; [CPU_] |5081| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5081| 
        MOVB      AL,#152               ; [CPU_] |5081| 
        MOV       T,*-SP[57]            ; [CPU_] |5081| 
        MPYU      ACC,T,AL              ; [CPU_] |5081| 
        ADDL      ACC,XAR7              ; [CPU_] |5081| 
        MOVL      XAR4,ACC              ; [CPU_] |5081| 
        MOVB      XAR0,#124             ; [CPU_] |5081| 
        MOV       PH,#0                 ; [CPU_] |5081| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5081| 
        ANDB      AL,#0xf0              ; [CPU_] |5081| 
        MOVU      ACC,AL                ; [CPU_] |5081| 
        MOVL      XAR7,ACC              ; [CPU_] |5081| 
        MOV       AL,AR6                ; [CPU_] |5081| 
        ANDB      AL,#240               ; [CPU_] |5081| 
        MOV       PL,AL                 ; [CPU_] |5081| 
        MOVL      ACC,XAR7              ; [CPU_] |5081| 
        CMPL      ACC,P                 ; [CPU_] |5081| 
        B         $C$L320,NEQ           ; [CPU_] |5081| 
        ; branchcc occurs ; [] |5081| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5087,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5087| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5087| 
        MOVB      AL,#152               ; [CPU_] |5087| 
        MOV       T,*-SP[57]            ; [CPU_] |5087| 
        MPYU      ACC,T,AL              ; [CPU_] |5087| 
        ADDL      ACC,XAR7              ; [CPU_] |5087| 
        MOVL      XAR1,ACC              ; [CPU_] |5087| 
        MOVB      XAR0,#125             ; [CPU_] |5087| 
	.dwpsn	file "../Source/prod.c",line 5088,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5088| 
	.dwpsn	file "../Source/prod.c",line 5087,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5087| 
	.dwpsn	file "../Source/prod.c",line 5088,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5088| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5088| 
	.dwpsn	file "../Source/prod.c",line 5089,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5089| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5089| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5089| 
        MOV       AL,AR6                ; [CPU_] |5089| 
        MOV       *-SP[61],#4           ; [CPU_] |5089| 
	.dwpsn	file "../Source/prod.c",line 5091,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5091| 
        B         $C$L205,EQ            ; [CPU_] |5091| 
        ; branchcc occurs ; [] |5091| 
	.dwpsn	file "../Source/prod.c",line 5094,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5094| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5094| 
        B         $C$L204,EQ            ; [CPU_] |5094| 
        ; branchcc occurs ; [] |5094| 
	.dwpsn	file "../Source/prod.c",line 5098,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5098| 
        CMPB      AL,#34                ; [CPU_] |5098| 
        B         $C$L196,GT            ; [CPU_] |5098| 
        ; branchcc occurs ; [] |5098| 
        CMPB      AL,#34                ; [CPU_] |5098| 
        B         $C$L200,EQ            ; [CPU_] |5098| 
        ; branchcc occurs ; [] |5098| 
        CMPB      AL,#16                ; [CPU_] |5098| 
        B         $C$L203,EQ            ; [CPU_] |5098| 
        ; branchcc occurs ; [] |5098| 
        CMPB      AL,#17                ; [CPU_] |5098| 
        B         $C$L202,EQ            ; [CPU_] |5098| 
        ; branchcc occurs ; [] |5098| 
        B         $C$L204,UNC           ; [CPU_] |5098| 
        ; branch occurs ; [] |5098| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5098| 
        B         $C$L198,EQ            ; [CPU_] |5098| 
        ; branchcc occurs ; [] |5098| 
        CMPB      AL,#36                ; [CPU_] |5098| 
        B         $C$L204,NEQ           ; [CPU_] |5098| 
        ; branchcc occurs ; [] |5098| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5139,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5139| 
        B         $C$L197,EQ            ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
        CMPB      AL,#35                ; [CPU_] |5139| 
        B         $C$L207,NEQ           ; [CPU_] |5139| 
        ; branchcc occurs ; [] |5139| 
	.dwpsn	file "../Source/prod.c",line 5144,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5144| 
        MOV       AH,#15820             ; [CPU_] |5144| 
	.dwpsn	file "../Source/prod.c",line 5145,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5145| 
        ; branch occurs ; [] |5145| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5141,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5141| 
        MOV       AH,#15649             ; [CPU_] |5141| 
	.dwpsn	file "../Source/prod.c",line 5142,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5142| 
        ; branch occurs ; [] |5142| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5127,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5127| 
        B         $C$L199,EQ            ; [CPU_] |5127| 
        ; branchcc occurs ; [] |5127| 
        CMPB      AL,#36                ; [CPU_] |5127| 
        B         $C$L207,NEQ           ; [CPU_] |5127| 
        ; branchcc occurs ; [] |5127| 
	.dwpsn	file "../Source/prod.c",line 5132,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5132| 
        MOV       AH,#16672             ; [CPU_] |5132| 
	.dwpsn	file "../Source/prod.c",line 5133,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5133| 
        ; branch occurs ; [] |5133| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5129,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5129| 
        MOV       AH,#16073             ; [CPU_] |5129| 
	.dwpsn	file "../Source/prod.c",line 5130,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5130| 
        ; branch occurs ; [] |5130| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5115,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5115| 
        B         $C$L201,EQ            ; [CPU_] |5115| 
        ; branchcc occurs ; [] |5115| 
        CMPB      AL,#36                ; [CPU_] |5115| 
        B         $C$L207,NEQ           ; [CPU_] |5115| 
        ; branchcc occurs ; [] |5115| 
	.dwpsn	file "../Source/prod.c",line 5120,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5120| 
        MOV       AH,#16843             ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5121,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5121| 
        ; branch occurs ; [] |5121| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5117,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5117| 
        MOV       AH,#16418             ; [CPU_] |5117| 
	.dwpsn	file "../Source/prod.c",line 5118,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5118| 
        ; branch occurs ; [] |5118| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5108,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5108| 
        B         $C$L207,NEQ           ; [CPU_] |5108| 
        ; branchcc occurs ; [] |5108| 
	.dwpsn	file "../Source/prod.c",line 5109,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5109| 
        MOV       AH,#16397             ; [CPU_] |5109| 
        B         $C$L206,UNC           ; [CPU_] |5109| 
        ; branch occurs ; [] |5109| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5101,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5101| 
        B         $C$L207,NEQ           ; [CPU_] |5101| 
        ; branchcc occurs ; [] |5101| 
	.dwpsn	file "../Source/prod.c",line 5102,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5102| 
        MOV       AH,#16104             ; [CPU_] |5102| 
        B         $C$L206,UNC           ; [CPU_] |5102| 
        ; branch occurs ; [] |5102| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5096,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5096| 
	.dwpsn	file "../Source/prod.c",line 5097,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5097| 
        ; branch occurs ; [] |5097| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5092,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5092| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5092| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5092| 
        MOV       AL,#0                 ; [CPU_] |5092| 
        MOV       AH,#17096             ; [CPU_] |5092| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5092| 
        ; call occurs [#FS$$DIV] ; [] |5092| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5092| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5158,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5158| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5159,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5159| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5159| 
        CMPL      ACC,XAR6              ; [CPU_] |5159| 
        B         $C$L209,NEQ           ; [CPU_] |5159| 
        ; branchcc occurs ; [] |5159| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5160,column 7,is_stmt,isa 0
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_update_units")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5160| 
        ; call occurs [#_update_units] ; [] |5160| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5162,column 7,is_stmt,isa 0
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5162| 
        ; call occurs [#_ad7738_setcal] ; [] |5162| 
        MOVL      XAR0,#78              ; [CPU_] |5162| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5162| 
	.dwpsn	file "../Source/prod.c",line 5163,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5163| 
        MOVL      XAR4,ACC              ; [CPU_] |5163| 
        MOVL      XAR0,#88              ; [CPU_] |5163| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5163| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5163| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5163| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5163| 
        MOVL      XAR0,#88              ; [CPU_] |5163| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5163| 
	.dwpsn	file "../Source/prod.c",line 5164,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5164| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5164| 
        ; call occurs [#_ad7738_resetvall] ; [] |5164| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5158,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5158| 
        ADDB      XAR1,#10              ; [CPU_] |5158| 
        MOV       AL,*-SP[58]           ; [CPU_] |5158| 
        CMPB      AL,#4                 ; [CPU_] |5158| 
        B         $C$L208,LO            ; [CPU_] |5158| 
        ; branchcc occurs ; [] |5158| 
        B         $C$L304,UNC           ; [CPU_] |5158| 
        ; branch occurs ; [] |5158| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5045,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5045| 
        B         $C$L320,LO            ; [CPU_] |5045| 
        ; branchcc occurs ; [] |5045| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5045| 
        MOVL      XAR0,#66              ; [CPU_] |5045| 
        MOVL      ACC,XAR7              ; [CPU_] |5045| 
        ADDB      ACC,#2                ; [CPU_] |5045| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5045| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5045| 
        B         $C$L320,LT            ; [CPU_] |5045| 
        ; branchcc occurs ; [] |5045| 
        ADDB      XAR4,#2               ; [CPU_] |5045| 
        MOVL      XAR0,#66              ; [CPU_] |5045| 
        CMPB      AL,#20                ; [CPU_] |5045| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5045| 
        B         $C$L320,GEQ           ; [CPU_] |5045| 
        ; branchcc occurs ; [] |5045| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5045| 
        MOVB      AH,#4                 ; [CPU_] |5045| 
        ADD       AH,AR6                ; [CPU_] |5045| 
        CMP       AH,*-SP[59]           ; [CPU_] |5045| 
        B         $C$L320,HI            ; [CPU_] |5045| 
        ; branchcc occurs ; [] |5045| 
	.dwpsn	file "../Source/prod.c",line 5050,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5050| 
	.dwpsn	file "../Source/prod.c",line 5051,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5051| 
        MOVL      XAR0,#66              ; [CPU_] |5051| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |5051| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5051| 
        MOV       AL,*-SP[57]           ; [CPU_] |5051| 
        MOV       @_buff$1+2,AL         ; [CPU_] |5051| 
        MOV       AL,AR6                ; [CPU_] |5051| 
	.dwpsn	file "../Source/prod.c",line 5053,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5053| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |5053| 
        B         $C$L211,HIS           ; [CPU_] |5053| 
        ; branchcc occurs ; [] |5053| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5053| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 5055,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5055| 
        MOVB      XAR5,#0               ; [CPU_] |5055| 
	.dwpsn	file "../Source/prod.c",line 5055,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |5055| 
        ; branchcc occurs ; [] |5055| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 5056,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5056| 
	.dwpsn	file "../Source/prod.c",line 5055,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |5055| 
	.dwpsn	file "../Source/prod.c",line 5056,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5056| 
	.dwpsn	file "../Source/prod.c",line 5055,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5055| 
	.dwpsn	file "../Source/prod.c",line 5056,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5056| 
	.dwpsn	file "../Source/prod.c",line 5055,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |5055| 
        B         $C$L212,HI            ; [CPU_] |5055| 
        ; branchcc occurs ; [] |5055| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 5058,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5058| 
        MOVB      AL,#152               ; [CPU_] |5058| 
        MOV       T,*-SP[57]            ; [CPU_] |5058| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5058| 
        MPYU      P,T,AL                ; [CPU_] |5058| 
        MOVL      ACC,P                 ; [CPU_] |5058| 
        ADD       ACC,AR5               ; [CPU_] |5058| 
        ADDL      ACC,XAR6              ; [CPU_] |5058| 
        MOVL      XAR4,ACC              ; [CPU_] |5058| 
        MOVB      XAR0,#98              ; [CPU_] |5058| 
	.dwpsn	file "../Source/prod.c",line 5062,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5062| 
	.dwpsn	file "../Source/prod.c",line 5058,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5058| 
	.dwpsn	file "../Source/prod.c",line 5062,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |5062| 
        MOVL      XAR4,ACC              ; [CPU_] |5062| 
        MOVL      XAR1,ACC              ; [CPU_] |5062| 
        ADDB      XAR4,#98              ; [CPU_] |5062| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_strlen")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |5062| 
        ; call occurs [#_strlen] ; [] |5062| 
	.dwpsn	file "../Source/prod.c",line 5063,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5063| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5063| 
	.dwpsn	file "../Source/prod.c",line 5064,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5064| 
	.dwpsn	file "../Source/prod.c",line 5063,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |5063| 
	.dwpsn	file "../Source/prod.c",line 5064,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5064,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5064| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5065,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5065| 
	.dwpsn	file "../Source/prod.c",line 5064,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5064| 
	.dwpsn	file "../Source/prod.c",line 5065,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |5065| 
        INC       *-SP[61]              ; [CPU_] |5065| 
	.dwpsn	file "../Source/prod.c",line 5064,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5064| 
        B         $C$L214,HI            ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
        B         $C$L304,UNC           ; [CPU_] |5064| 
        ; branch occurs ; [] |5064| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5603,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5603| 
        B         $C$L320,LO            ; [CPU_] |5603| 
        ; branchcc occurs ; [] |5603| 
	.dwpsn	file "../Source/prod.c",line 5608,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5608| 
	.dwpsn	file "../Source/prod.c",line 5609,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5609| 
	.dwpsn	file "../Source/prod.c",line 5608,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5608| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5608| 
        MOV       *-SP[57],AL           ; [CPU_] |5608| 
	.dwpsn	file "../Source/prod.c",line 5609,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5609| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5609| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5609| 
	.dwpsn	file "../Source/prod.c",line 5611,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5611| 
        SUBB      XAR5,#24              ; [CPU_U] |5611| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5611| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5613,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5613| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5613| 
	.dwpsn	file "../Source/prod.c",line 5614,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5614| 
        MOV       *XAR1++,AL            ; [CPU_] |5614| 
	.dwpsn	file "../Source/prod.c",line 5615,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5615| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5615| 
        MOV       *XAR5++,AL            ; [CPU_] |5615| 
	.dwpsn	file "../Source/prod.c",line 5616,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5616| 
        MOV       *XAR1++,AL            ; [CPU_] |5616| 
	.dwpsn	file "../Source/prod.c",line 5612,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5612| 
        ; branchcc occurs ; [] |5612| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5620,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5620| 
        B         $C$L320,HIS           ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
        MOVL      XAR0,#40              ; [CPU_] |5620| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5620| 
        MOVB      AL,#12                ; [CPU_] |5620| 
        MOV       T,*-SP[57]            ; [CPU_] |5620| 
        MPYU      ACC,T,AL              ; [CPU_] |5620| 
        ADDL      ACC,XAR6              ; [CPU_] |5620| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5620| 
        MOVL      XAR4,ACC              ; [CPU_] |5620| 
        MOVL      XAR0,#88              ; [CPU_] |5620| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5620| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5620| 
        CMPB      AL,#7                 ; [CPU_] |5620| 
        B         $C$L320,NEQ           ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5620| 
        MOV       *-SP[47],#0           ; [CPU_] |5620| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5620| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5620| 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5620| 
        ; call occurs [#FS$$CMP] ; [] |5620| 
        CMPB      AL,#0                 ; [CPU_] |5620| 
        B         $C$L217,GEQ           ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
        MOV       *-SP[47],#1           ; [CPU_] |5620| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
        MOV       AL,#0                 ; [CPU_] |5620| 
        MOV       AH,#16672             ; [CPU_] |5620| 
        MOV       *-SP[47],#0           ; [CPU_] |5620| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5620| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5620| 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5620| 
        ; call occurs [#FS$$CMP] ; [] |5620| 
        CMPB      AL,#0                 ; [CPU_] |5620| 
        B         $C$L218,LEQ           ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
        MOV       *-SP[47],#1           ; [CPU_] |5620| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
	.dwpsn	file "../Source/prod.c",line 5627,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5627| 
        MOV       AH,#0                 ; [CPU_] |5627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5627| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5627| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5627| 
        ; call occurs [#FS$$CMP] ; [] |5627| 
        CMPB      AL,#0                 ; [CPU_] |5627| 
        B         $C$L219,GEQ           ; [CPU_] |5627| 
        ; branchcc occurs ; [] |5627| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5627| 
        MOVL      XAR0,#88              ; [CPU_] |5627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5627| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5627| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5627| 
        B         $C$L220,UNC           ; [CPU_] |5627| 
        ; branch occurs ; [] |5627| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5627| 
        MOVL      XAR0,#88              ; [CPU_] |5627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5627| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5627| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5627| 
$C$L220:    
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5627| 
        ; call occurs [#FS$$MPY] ; [] |5627| 
        MOVL      XAR0,#88              ; [CPU_] |5627| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5627| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5627| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5627| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5627| 
        ; call occurs [#FS$$ADD] ; [] |5627| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5627| 
        ; call occurs [#FS$$TOLL] ; [] |5627| 
	.dwpsn	file "../Source/prod.c",line 5634,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5634| 
	.dwpsn	file "../Source/prod.c",line 5627,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5627| 
	.dwpsn	file "../Source/prod.c",line 5615,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5615| 
	.dwpsn	file "../Source/prod.c",line 5627,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5627| 
	.dwpsn	file "../Source/prod.c",line 5634,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5634| 
        CMP64     ACC:P                 ; [CPU_] |5634| 
        B         $C$L222,LEQ           ; [CPU_] |5634| 
        ; branchcc occurs ; [] |5634| 
	.dwpsn	file "../Source/prod.c",line 5636,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5636| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5636| 
        MOV       *-SP[2],#0            ; [CPU_] |5636| 
        MOV       *-SP[1],#0            ; [CPU_] |5636| 
        MOVL      P,*-SP[32]            ; [CPU_] |5636| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5636| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$735, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5636| 
        ; call occurs [#LL$$CMP] ; [] |5636| 
        CMPB      AL,#0                 ; [CPU_] |5636| 
        B         $C$L221,GEQ           ; [CPU_] |5636| 
        ; branchcc occurs ; [] |5636| 
	.dwpsn	file "../Source/prod.c",line 5639,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5639| 
        MOV       *-SP[35],AL           ; [CPU_] |5639| 
        B         $C$L223,UNC           ; [CPU_] |5639| 
        ; branch occurs ; [] |5639| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5637,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5637| 
	.dwpsn	file "../Source/prod.c",line 5638,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5638| 
        ; branch occurs ; [] |5638| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5635,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5635| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5642| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5642| 
        ; call occurs [#_mcbsp_xmit] ; [] |5642| 
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_latch_dac")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5643| 
        ; call occurs [#_latch_dac] ; [] |5643| 
	.dwpsn	file "../Source/prod.c",line 5646,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5646| 
        ANDB      AL,#0xff              ; [CPU_] |5646| 
        MOV       *XAR1++,AL            ; [CPU_] |5646| 
	.dwpsn	file "../Source/prod.c",line 5647,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5647| 
        LSR       AL,8                  ; [CPU_] |5647| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5647| 
	.dwpsn	file "../Source/prod.c",line 5650,column 5,is_stmt,isa 0
        B         $C$L737,UNC           ; [CPU_] |5650| 
        ; branch occurs ; [] |5650| 
$C$L224:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5539| 
        B         $C$L320,LO            ; [CPU_] |5539| 
        ; branchcc occurs ; [] |5539| 
	.dwpsn	file "../Source/prod.c",line 5544,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5544| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5544| 
$C$L226:    
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5544| 
        ; call occurs [#_ad7738_resetvall] ; [] |5544| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5547,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5547| 
        MOVL      XAR0,#66              ; [CPU_] |5547| 
        ADDB      ACC,#2                ; [CPU_] |5547| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5547| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5547| 
        ANDB      AL,#0x0f              ; [CPU_] |5547| 
	.dwpsn	file "../Source/prod.c",line 5549,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5549| 
        ; branch occurs ; [] |5549| 
$C$L228:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5525,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5525| 
        B         $C$L320,LO            ; [CPU_] |5525| 
        ; branchcc occurs ; [] |5525| 
	.dwpsn	file "../Source/prod.c",line 5530,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5530| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5530| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5530| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5530| 
	.dwpsn	file "../Source/prod.c",line 5535,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5535| 
        ; branch occurs ; [] |5535| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5589,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5589| 
        B         $C$L320,LO            ; [CPU_] |5589| 
        ; branchcc occurs ; [] |5589| 
	.dwpsn	file "../Source/prod.c",line 5594,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5594| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5594| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5594| 
        ; call occurs [#_shunt_switch] ; [] |5594| 
	.dwpsn	file "../Source/prod.c",line 5599,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5599| 
        ; branch occurs ; [] |5599| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5573,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5573| 
        B         $C$L320,LO            ; [CPU_] |5573| 
        ; branchcc occurs ; [] |5573| 
	.dwpsn	file "../Source/prod.c",line 5578,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5578| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5578| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5578| 
        ; call occurs [#_ad7738_resettare] ; [] |5578| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5579| 
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5579| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5579| 
	.dwpsn	file "../Source/prod.c",line 5580,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5580| 
	.dwpsn	file "../Source/prod.c",line 5585,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5585| 
        ; branch occurs ; [] |5585| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5553,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5553| 
        B         $C$L320,LO            ; [CPU_] |5553| 
        ; branchcc occurs ; [] |5553| 
	.dwpsn	file "../Source/prod.c",line 5558,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5558| 
	.dwpsn	file "../Source/prod.c",line 5559,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5559| 
$C$L232:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5560,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5560| 
        B         $C$L233,EQ            ; [CPU_] |5560| 
        ; branchcc occurs ; [] |5560| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5561,column 7,is_stmt,isa 0
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5561| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5561| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5559,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5559| 
	.dwpsn	file "../Source/prod.c",line 5563,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5563| 
        MOV       *-SP[47],AL           ; [CPU_] |5563| 
	.dwpsn	file "../Source/prod.c",line 5559,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5559| 
        CMPB      AL,#4                 ; [CPU_] |5559| 
        B         $C$L232,LT            ; [CPU_] |5559| 
        ; branchcc occurs ; [] |5559| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5567,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5567| 
        ANDB      AL,#0x0f              ; [CPU_] |5567| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5567| 
        MOVL      XAR0,#66              ; [CPU_] |5567| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5567| 
	.dwpsn	file "../Source/prod.c",line 5569,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5569| 
        ; branch occurs ; [] |5569| 
$C$L235:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5510,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5510| 
        B         $C$L320,LO            ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
	.dwpsn	file "../Source/prod.c",line 5515,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5515| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5515| 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5515| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5515| 
	.dwpsn	file "../Source/prod.c",line 5521,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5521| 
        ; branch occurs ; [] |5521| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5487,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5487| 
        B         $C$L239,LO            ; [CPU_] |5487| 
        ; branchcc occurs ; [] |5487| 
	.dwpsn	file "../Source/prod.c",line 5499,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5499| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5499| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5499| 
        ; call occurs [#_ad7738_resettare] ; [] |5499| 
	.dwpsn	file "../Source/prod.c",line 5500,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5500| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5500| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5500| 
	.dwpsn	file "../Source/prod.c",line 5501,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5501| 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5501| 
        ; call occurs [#_ad7738_resetvall] ; [] |5501| 
	.dwpsn	file "../Source/prod.c",line 5504,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5504| 
        MOVL      ACC,XAR1              ; [CPU_] |5504| 
        ADDB      ACC,#2                ; [CPU_] |5504| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5504| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5504| 
        ANDB      AL,#0xff              ; [CPU_] |5504| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5504| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5504| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5502,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5502| 
	.dwpsn	file "../Source/prod.c",line 5506,column 5,is_stmt,isa 0
        B         $C$L744,UNC           ; [CPU_] |5506| 
        ; branch occurs ; [] |5506| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5489,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5489| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5489| 
        ; call occurs [#_ad7738_resettare] ; [] |5489| 
	.dwpsn	file "../Source/prod.c",line 5490,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5490| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5490| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5490| 
	.dwpsn	file "../Source/prod.c",line 5491,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5491| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5491| 
        ; call occurs [#_ad7738_resetvall] ; [] |5491| 
	.dwpsn	file "../Source/prod.c",line 5494,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5494| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5494| 
	.dwpsn	file "../Source/prod.c",line 5496,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5496| 
        ; branch occurs ; [] |5496| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5662,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5662| 
        MOV       *-SP[47],#0           ; [CPU_] |5662| 
	.dwpsn	file "../Source/prod.c",line 5663,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5663| 
        ; branchcc occurs ; [] |5663| 
	.dwpsn	file "../Source/prod.c",line 5665,column 6,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5665| 
        ; call occurs [#_lcd_clear] ; [] |5665| 
	.dwpsn	file "../Source/prod.c",line 5666,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5666| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5666| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5666| 
        ; call occurs [#_lcd_puts] ; [] |5666| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5669,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5669| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_delay_us")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5669| 
        ; call occurs [#_delay_us] ; [] |5669| 
	.dwpsn	file "../Source/prod.c",line 5668,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5668| 
        ; branchcc occurs ; [] |5668| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5673,column 6,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_conf_write")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5673| 
        ; call occurs [#_conf_write] ; [] |5673| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5676,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5676| 
        B         $C$L242,NEQ           ; [CPU_] |5676| 
        ; branchcc occurs ; [] |5676| 
	.dwpsn	file "../Source/prod.c",line 5677,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5677| 
        MOVB      AL,#16                ; [CPU_] |5677| 
        SPM       #0                    ; [CPU_] 
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5677| 
        ; call occurs [#_lcd_puts] ; [] |5677| 
	.dwpsn	file "../Source/prod.c",line 5678,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5678| 
	.dwpsn	file "../Source/prod.c",line 5679,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5679| 
        ; branch occurs ; [] |5679| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5680,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5680| 
        MOVB      AL,#16                ; [CPU_] |5680| 
        SPM       #0                    ; [CPU_] 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5680| 
        ; call occurs [#_lcd_puts] ; [] |5680| 
	.dwpsn	file "../Source/prod.c",line 5681,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5681| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5685,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5685| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_delay_us")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5685| 
        ; call occurs [#_delay_us] ; [] |5685| 
	.dwpsn	file "../Source/prod.c",line 5684,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5684| 
        ; branchcc occurs ; [] |5684| 
        B         $C$L316,UNC           ; [CPU_] |5684| 
        ; branch occurs ; [] |5684| 
$C$L245:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4432| 
        B         $C$L320,LO            ; [CPU_] |4432| 
        ; branchcc occurs ; [] |4432| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4432| 
        MOVL      XAR0,#66              ; [CPU_] |4432| 
        MOVL      ACC,XAR7              ; [CPU_] |4432| 
        ADDB      ACC,#2                ; [CPU_] |4432| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4432| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4432| 
        B         $C$L320,LT            ; [CPU_] |4432| 
        ; branchcc occurs ; [] |4432| 
        ADDB      XAR4,#2               ; [CPU_] |4432| 
        MOVL      XAR0,#66              ; [CPU_] |4432| 
        CMPB      AL,#4                 ; [CPU_] |4432| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4432| 
        B         $C$L320,GEQ           ; [CPU_] |4432| 
        ; branchcc occurs ; [] |4432| 
	.dwpsn	file "../Source/prod.c",line 4437,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4437| 
	.dwpsn	file "../Source/prod.c",line 4438,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4438| 
	.dwpsn	file "../Source/prod.c",line 4441,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4441| 
	.dwpsn	file "../Source/prod.c",line 4438,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4438| 
	.dwpsn	file "../Source/prod.c",line 4441,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4441| 
        ADDB      ACC,#2                ; [CPU_] |4441| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4441| 
        MOVL      XAR0,#40              ; [CPU_] |4441| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4441| 
        MOV       T,*-SP[58]            ; [CPU_] |4441| 
        MOVB      AL,#10                ; [CPU_] |4441| 
        MPYU      ACC,T,AL              ; [CPU_] |4441| 
        ADDL      ACC,XAR6              ; [CPU_] |4441| 
        ADDB      ACC,#46               ; [CPU_] |4441| 
        MOVL      XAR4,ACC              ; [CPU_] |4441| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4443,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4443| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4443| 
        ADDB      XAR7,#1               ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4444,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4444| 
        ADD       *XAR4++,AL            ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4442,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4442| 
        ; branchcc occurs ; [] |4442| 
	.dwpsn	file "../Source/prod.c",line 4447,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4447| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4447| 
        MOVB      AL,#10                ; [CPU_] |4447| 
        MPYU      ACC,T,AL              ; [CPU_] |4447| 
        ADDL      ACC,XAR6              ; [CPU_] |4447| 
        MOVL      XAR5,ACC              ; [CPU_] |4447| 
        ADDB      ACC,#48               ; [CPU_] |4447| 
        MOVL      XAR4,ACC              ; [CPU_] |4447| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4447| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4449,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4449| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4449| 
        ADDB      XAR7,#1               ; [CPU_] |4449| 
	.dwpsn	file "../Source/prod.c",line 4450,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4450| 
        ADD       *XAR4++,AL            ; [CPU_] |4450| 
	.dwpsn	file "../Source/prod.c",line 4448,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4448| 
        ; branchcc occurs ; [] |4448| 
	.dwpsn	file "../Source/prod.c",line 4453,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4453| 
        ADDB      ACC,#50               ; [CPU_] |4453| 
        MOVL      XAR4,ACC              ; [CPU_] |4453| 
        MOVL      P,ACC                 ; [CPU_] |4453| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4455,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4455| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4455| 
        ADDB      XAR7,#1               ; [CPU_] |4455| 
	.dwpsn	file "../Source/prod.c",line 4456,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4456| 
        ADD       *XAR4++,AL            ; [CPU_] |4456| 
	.dwpsn	file "../Source/prod.c",line 4454,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4460| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4460| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4460| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4462,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4462| 
        ANDB      AL,#0xff              ; [CPU_] |4462| 
        MOV       *XAR4++,AL            ; [CPU_] |4462| 
	.dwpsn	file "../Source/prod.c",line 4463,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4463| 
        LSR       AL,8                  ; [CPU_] |4463| 
        MOV       *XAR4++,AL            ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4461,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4461| 
        ; branchcc occurs ; [] |4461| 
	.dwpsn	file "../Source/prod.c",line 4466,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4466| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4468,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4468| 
        ANDB      AL,#0xff              ; [CPU_] |4468| 
        MOV       *XAR4++,AL            ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4469,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4469| 
        LSR       AL,8                  ; [CPU_] |4469| 
        MOV       *XAR4++,AL            ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4467,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4467| 
        ; branchcc occurs ; [] |4467| 
	.dwpsn	file "../Source/prod.c",line 4472,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4472| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4474,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4474| 
        ANDB      AL,#0xff              ; [CPU_] |4474| 
        MOV       *XAR4++,AL            ; [CPU_] |4474| 
	.dwpsn	file "../Source/prod.c",line 4475,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4475| 
        LSR       AL,8                  ; [CPU_] |4475| 
        MOV       *XAR4++,AL            ; [CPU_] |4475| 
	.dwpsn	file "../Source/prod.c",line 4473,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4473| 
        ; branchcc occurs ; [] |4473| 
	.dwpsn	file "../Source/prod.c",line 4463,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4480,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4480| 
        ; branch occurs ; [] |4480| 
$C$L252:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4390,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4390| 
        B         $C$L320,LO            ; [CPU_] |4390| 
        ; branchcc occurs ; [] |4390| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4390| 
        MOVL      XAR0,#66              ; [CPU_] |4390| 
        MOVL      ACC,XAR5              ; [CPU_] |4390| 
        ADDB      ACC,#2                ; [CPU_] |4390| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4390| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4390| 
        B         $C$L320,LT            ; [CPU_] |4390| 
        ; branchcc occurs ; [] |4390| 
        ADDB      XAR4,#2               ; [CPU_] |4390| 
        MOVL      XAR0,#66              ; [CPU_] |4390| 
        CMPB      AL,#4                 ; [CPU_] |4390| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4390| 
        B         $C$L320,GEQ           ; [CPU_] |4390| 
        ; branchcc occurs ; [] |4390| 
	.dwpsn	file "../Source/prod.c",line 4395,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4395| 
	.dwpsn	file "../Source/prod.c",line 4396,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4396| 
	.dwpsn	file "../Source/prod.c",line 4398,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4398| 
        MOVL      XAR0,#66              ; [CPU_] |4398| 
	.dwpsn	file "../Source/prod.c",line 4396,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4396| 
	.dwpsn	file "../Source/prod.c",line 4398,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4398| 
        MOVL      XAR0,#40              ; [CPU_] |4398| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4398| 
        MOVB      AL,#10                ; [CPU_] |4398| 
        MOV       T,*-SP[58]            ; [CPU_] |4398| 
        MPYU      ACC,T,AL              ; [CPU_] |4398| 
        ADDL      ACC,XAR6              ; [CPU_] |4398| 
        ADDB      ACC,#46               ; [CPU_] |4398| 
        MOVL      XAR5,ACC              ; [CPU_] |4398| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4400,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4400| 
        ANDB      AL,#0xff              ; [CPU_] |4400| 
        MOV       *XAR4++,AL            ; [CPU_] |4400| 
	.dwpsn	file "../Source/prod.c",line 4401,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4401| 
        LSR       AL,8                  ; [CPU_] |4401| 
        MOV       *XAR4++,AL            ; [CPU_] |4401| 
	.dwpsn	file "../Source/prod.c",line 4399,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4399| 
        ; branchcc occurs ; [] |4399| 
	.dwpsn	file "../Source/prod.c",line 4404,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4404| 
        MPYU      ACC,T,AL              ; [CPU_] |4404| 
        ADDL      ACC,XAR6              ; [CPU_] |4404| 
        MOVL      XAR5,ACC              ; [CPU_] |4404| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4404| 
        ADDB      XAR5,#48              ; [CPU_] |4404| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4406,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4406| 
        ANDB      AL,#0xff              ; [CPU_] |4406| 
        MOV       *XAR4++,AL            ; [CPU_] |4406| 
	.dwpsn	file "../Source/prod.c",line 4407,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4407| 
        LSR       AL,8                  ; [CPU_] |4407| 
        MOV       *XAR4++,AL            ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4405,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4405| 
        ; branchcc occurs ; [] |4405| 
	.dwpsn	file "../Source/prod.c",line 4410,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4410| 
	.dwpsn	file "../Source/prod.c",line 4401,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4401| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4410,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4410| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4412,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4412| 
        ANDB      AL,#0xff              ; [CPU_] |4412| 
        MOV       *XAR4++,AL            ; [CPU_] |4412| 
	.dwpsn	file "../Source/prod.c",line 4413,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4413| 
        LSR       AL,8                  ; [CPU_] |4413| 
        MOV       *XAR4++,AL            ; [CPU_] |4413| 
	.dwpsn	file "../Source/prod.c",line 4411,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4411| 
        ; branchcc occurs ; [] |4411| 
        B         $C$L745,UNC           ; [CPU_] |4411| 
        ; branch occurs ; [] |4411| 
$C$L256:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4032,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4032| 
        B         $C$L320,LO            ; [CPU_] |4032| 
        ; branchcc occurs ; [] |4032| 
        MOVL      ACC,XAR4              ; [CPU_] |4032| 
        MOVL      XAR0,#66              ; [CPU_] |4032| 
        ADDB      ACC,#2                ; [CPU_] |4032| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4032| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4032| 
        B         $C$L320,LT            ; [CPU_] |4032| 
        ; branchcc occurs ; [] |4032| 
        MOVL      XAR5,XAR4             ; [CPU_] |4032| 
        MOVL      XAR0,#66              ; [CPU_] |4032| 
        CMPB      AL,#20                ; [CPU_] |4032| 
        ADDB      XAR5,#2               ; [CPU_] |4032| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4032| 
        B         $C$L320,GEQ           ; [CPU_] |4032| 
        ; branchcc occurs ; [] |4032| 
	.dwpsn	file "../Source/prod.c",line 4036,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4036| 
	.dwpsn	file "../Source/prod.c",line 4037,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |4037| 
	.dwpsn	file "../Source/prod.c",line 4040,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4040| 
        MOVL      XAR0,#66              ; [CPU_] |4040| 
	.dwpsn	file "../Source/prod.c",line 4037,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |4037| 
	.dwpsn	file "../Source/prod.c",line 4040,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4040| 
        MOVL      XAR0,#40              ; [CPU_] |4040| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4040| 
        MOVB      AL,#152               ; [CPU_] |4040| 
        MOV       T,*-SP[57]            ; [CPU_] |4040| 
        MPYU      ACC,T,AL              ; [CPU_] |4040| 
        ADDL      ACC,XAR6              ; [CPU_] |4040| 
        ADDB      ACC,#82               ; [CPU_] |4040| 
        MOVL      XAR4,ACC              ; [CPU_] |4040| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_strlen")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4040| 
        ; call occurs [#_strlen] ; [] |4040| 
        MOVZ      AR6,AL                ; [CPU_] |4040| 
	.dwpsn	file "../Source/prod.c",line 4041,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4041,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |4042| 
        ; branchcc occurs ; [] |4042| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4042,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4042| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 4043,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4043,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4043,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4042| 
        B         $C$L257,HI            ; [CPU_] |4042| 
        ; branchcc occurs ; [] |4042| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 4047,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4047| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4047| 
        MOVB      AL,#152               ; [CPU_] |4047| 
        MOV       T,*-SP[57]            ; [CPU_] |4047| 
        MPYU      ACC,T,AL              ; [CPU_] |4047| 
        ADDL      ACC,XAR6              ; [CPU_] |4047| 
        MOVL      XAR4,ACC              ; [CPU_] |4047| 
        MOVL      XAR1,ACC              ; [CPU_] |4047| 
        ADDB      XAR4,#98              ; [CPU_] |4047| 
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_strlen")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4047| 
        ; call occurs [#_strlen] ; [] |4047| 
        MOVL      XAR0,#44              ; [CPU_] |4047| 
	.dwpsn	file "../Source/prod.c",line 4048,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |4048| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4047,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |4047| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4047| 
	.dwpsn	file "../Source/prod.c",line 4048,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |4048| 
        MOVL      XAR4,ACC              ; [CPU_] |4048| 
        MOV       AL,AR7                ; [CPU_] |4048| 
        ADDB      AL,#1                 ; [CPU_] |4048| 
        MOV       *XAR4++,AR6           ; [CPU_] |4048| 
        MOV       *-SP[61],AL           ; [CPU_] |4048| 
        MOV       AL,AR6                ; [CPU_] |4048| 
	.dwpsn	file "../Source/prod.c",line 4049,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |4049| 
        ; branchcc occurs ; [] |4049| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4049,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4049| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4049,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4049,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4049,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4049| 
        B         $C$L259,HI            ; [CPU_] |4049| 
        ; branchcc occurs ; [] |4049| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 4054,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4054| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |4054| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 4056,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4056| 
        ANDB      AL,#0xff              ; [CPU_] |4056| 
        MOV       *XAR4++,AL            ; [CPU_] |4056| 
	.dwpsn	file "../Source/prod.c",line 4057,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4057| 
        LSR       AL,8                  ; [CPU_] |4057| 
        MOV       *XAR4++,AL            ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4055,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |4055| 
        ; branchcc occurs ; [] |4055| 
	.dwpsn	file "../Source/prod.c",line 4062,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4062| 
	.dwpsn	file "../Source/prod.c",line 4065,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4065| 
	.dwpsn	file "../Source/prod.c",line 4062,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4062| 
        MOV       *XAR4++,AL            ; [CPU_] |4062| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4065,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4065| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4067,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4067| 
        ANDB      AL,#0xff              ; [CPU_] |4067| 
        MOV       *XAR4++,AL            ; [CPU_] |4067| 
	.dwpsn	file "../Source/prod.c",line 4068,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4068| 
        LSR       AL,8                  ; [CPU_] |4068| 
        MOV       *XAR4++,AL            ; [CPU_] |4068| 
	.dwpsn	file "../Source/prod.c",line 4066,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4066| 
        ; branchcc occurs ; [] |4066| 
	.dwpsn	file "../Source/prod.c",line 4073,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4073| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4073| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4075,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4075| 
        ANDB      AL,#0xff              ; [CPU_] |4075| 
        MOV       *XAR4++,AL            ; [CPU_] |4075| 
	.dwpsn	file "../Source/prod.c",line 4076,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4076| 
        LSR       AL,8                  ; [CPU_] |4076| 
        MOV       *XAR4++,AL            ; [CPU_] |4076| 
	.dwpsn	file "../Source/prod.c",line 4074,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4074| 
        ; branchcc occurs ; [] |4074| 
	.dwpsn	file "../Source/prod.c",line 4081,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4081| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4087,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4081,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4084,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4081,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4084,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4084| 
	.dwpsn	file "../Source/prod.c",line 4087,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4084,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4084| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4084| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4089,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4089| 
        ANDB      AL,#0xff              ; [CPU_] |4089| 
        MOV       *XAR4++,AL            ; [CPU_] |4089| 
	.dwpsn	file "../Source/prod.c",line 4090,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4090| 
        LSR       AL,8                  ; [CPU_] |4090| 
        MOV       *XAR4++,AL            ; [CPU_] |4090| 
	.dwpsn	file "../Source/prod.c",line 4088,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4088| 
        ; branchcc occurs ; [] |4088| 
	.dwpsn	file "../Source/prod.c",line 4057,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4095,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4095| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4095| 
        CMPB      AL,#2                 ; [CPU_] |4095| 
        B         $C$L267,EQ            ; [CPU_] |4095| 
        ; branchcc occurs ; [] |4095| 
	.dwpsn	file "../Source/prod.c",line 4133,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4133| 
        ADDB      ACC,#178              ; [CPU_] |4133| 
        MOVL      XAR5,ACC              ; [CPU_] |4133| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4131| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4135,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4135| 
        ANDB      AL,#0xff              ; [CPU_] |4135| 
        MOV       *XAR4++,AL            ; [CPU_] |4135| 
	.dwpsn	file "../Source/prod.c",line 4136,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4136| 
        LSR       AL,8                  ; [CPU_] |4136| 
        MOV       *XAR4++,AL            ; [CPU_] |4136| 
	.dwpsn	file "../Source/prod.c",line 4134,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4134| 
        ; branchcc occurs ; [] |4134| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4140| 
        ADDB      ACC,#200              ; [CPU_] |4140| 
        MOVL      XAR5,ACC              ; [CPU_] |4140| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4131| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4142,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4142| 
        ANDB      AL,#0xff              ; [CPU_] |4142| 
        MOV       *XAR4++,AL            ; [CPU_] |4142| 
	.dwpsn	file "../Source/prod.c",line 4143,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4143| 
        LSR       AL,8                  ; [CPU_] |4143| 
        MOV       *XAR4++,AL            ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4141,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4141| 
        ; branchcc occurs ; [] |4141| 
        B         $C$L276,UNC           ; [CPU_] |4141| 
        ; branch occurs ; [] |4141| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4096,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4096| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4097,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4097| 
	.dwpsn	file "../Source/prod.c",line 4096,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4096| 
        INC       *-SP[61]              ; [CPU_] |4096| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4097,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |4097| 
        ; branch occurs ; [] |4097| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4099,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4099| 
        MOVL      XAR0,#40              ; [CPU_] |4099| 
        MOV       T,*-SP[57]            ; [CPU_] |4099| 
        MOVL      XAR6,ACC              ; [CPU_] |4099| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4099| 
        MOVB      AL,#76                ; [CPU_] |4099| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4099| 
        ADDL      ACC,XAR6              ; [CPU_] |4099| 
        LSL       ACC,1                 ; [CPU_] |4099| 
        ADDL      ACC,XAR7              ; [CPU_] |4099| 
        ADDB      ACC,#130              ; [CPU_] |4099| 
        MOVL      XAR7,ACC              ; [CPU_] |4099| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4101,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4101| 
        ANDB      AL,#0xff              ; [CPU_] |4101| 
        MOV       *XAR4++,AL            ; [CPU_] |4101| 
	.dwpsn	file "../Source/prod.c",line 4102,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4102| 
        LSR       AL,8                  ; [CPU_] |4102| 
        MOV       *XAR4++,AL            ; [CPU_] |4102| 
	.dwpsn	file "../Source/prod.c",line 4100,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |4100| 
        ; branchcc occurs ; [] |4100| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4108,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4108| 
        ANDB      AL,#0xff              ; [CPU_] |4108| 
        MOV       *XAR4++,AL            ; [CPU_] |4108| 
	.dwpsn	file "../Source/prod.c",line 4109,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4109| 
        LSR       AL,8                  ; [CPU_] |4109| 
        MOV       *XAR4++,AL            ; [CPU_] |4109| 
	.dwpsn	file "../Source/prod.c",line 4107,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4107| 
        ; branchcc occurs ; [] |4107| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4102,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4102| 
	.dwpsn	file "../Source/prod.c",line 4097,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4097| 
        MOV       PL,AL                 ; [CPU_] |4097| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4097,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4097| 
        MOV       AL,PL                 ; [CPU_] |4097| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4097| 
        B         $C$L268,LT            ; [CPU_] |4097| 
        ; branchcc occurs ; [] |4097| 
	.dwpsn	file "../Source/prod.c",line 4114,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4114| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4114| 
        ; branch occurs ; [] |4114| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4116,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4116| 
        MOVL      XAR0,#40              ; [CPU_] |4116| 
        MOV       T,*-SP[57]            ; [CPU_] |4116| 
        MOVL      P,ACC                 ; [CPU_] |4116| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4116| 
        MOVB      AL,#76                ; [CPU_] |4116| 
        MPYU      ACC,T,AL              ; [CPU_] |4116| 
        ADDL      ACC,P                 ; [CPU_] |4116| 
        LSL       ACC,1                 ; [CPU_] |4116| 
        ADDL      ACC,XAR6              ; [CPU_] |4116| 
        ADDB      ACC,#178              ; [CPU_] |4116| 
        MOVL      XAR7,ACC              ; [CPU_] |4116| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4118,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4118| 
        ANDB      AL,#0xff              ; [CPU_] |4118| 
        MOV       *XAR4++,AL            ; [CPU_] |4118| 
	.dwpsn	file "../Source/prod.c",line 4119,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4119| 
        LSR       AL,8                  ; [CPU_] |4119| 
        MOV       *XAR4++,AL            ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4117,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4117| 
        ; branchcc occurs ; [] |4117| 
	.dwpsn	file "../Source/prod.c",line 4123,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4123| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4125,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4125| 
        ANDB      AL,#0xff              ; [CPU_] |4125| 
        MOV       *XAR4++,AL            ; [CPU_] |4125| 
	.dwpsn	file "../Source/prod.c",line 4126,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4126| 
        LSR       AL,8                  ; [CPU_] |4126| 
        MOV       *XAR4++,AL            ; [CPU_] |4126| 
	.dwpsn	file "../Source/prod.c",line 4124,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4124| 
        ; branchcc occurs ; [] |4124| 
	.dwpsn	file "../Source/prod.c",line 4114,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4114| 
	.dwpsn	file "../Source/prod.c",line 4119,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4119| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4130,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4130| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4130| 
        ADDB      AL,#-1                ; [CPU_] |4130| 
        CMP       AL,AR5                ; [CPU_] |4130| 
        B         $C$L272,GT            ; [CPU_] |4130| 
        ; branchcc occurs ; [] |4130| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4149,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4149| 
        ADDB      ACC,#222              ; [CPU_] |4149| 
        MOVL      XAR5,ACC              ; [CPU_] |4149| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4151,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4151| 
        ANDB      AL,#0xff              ; [CPU_] |4151| 
        MOV       *XAR4++,AL            ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4152,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4152| 
        LSR       AL,8                  ; [CPU_] |4152| 
        MOV       *XAR4++,AL            ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4150,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4150| 
        ; branchcc occurs ; [] |4150| 
	.dwpsn	file "../Source/prod.c",line 4157,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4157| 
        ADDB      ACC,#224              ; [CPU_] |4157| 
        MOVL      XAR5,ACC              ; [CPU_] |4157| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4159,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4159| 
        ANDB      AL,#0xff              ; [CPU_] |4159| 
        MOV       *XAR4++,AL            ; [CPU_] |4159| 
	.dwpsn	file "../Source/prod.c",line 4160,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4160| 
        LSR       AL,8                  ; [CPU_] |4160| 
        MOV       *XAR4++,AL            ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4158,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4158| 
        ; branchcc occurs ; [] |4158| 
	.dwpsn	file "../Source/prod.c",line 4165,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4165| 
        ADDB      ACC,#228              ; [CPU_] |4165| 
        MOVL      XAR5,ACC              ; [CPU_] |4165| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4167,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4167| 
        ANDB      AL,#0xff              ; [CPU_] |4167| 
        MOV       *XAR4++,AL            ; [CPU_] |4167| 
	.dwpsn	file "../Source/prod.c",line 4168,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4168| 
        LSR       AL,8                  ; [CPU_] |4168| 
        MOV       *XAR4++,AL            ; [CPU_] |4168| 
	.dwpsn	file "../Source/prod.c",line 4166,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4166| 
        ; branchcc occurs ; [] |4166| 
	.dwpsn	file "../Source/prod.c",line 4173,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4173| 
        ADDB      ACC,#230              ; [CPU_] |4173| 
        MOVL      XAR5,ACC              ; [CPU_] |4173| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4175,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4175| 
        ANDB      AL,#0xff              ; [CPU_] |4175| 
        MOV       *XAR4++,AL            ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4176| 
        LSR       AL,8                  ; [CPU_] |4176| 
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4174,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4174| 
        ; branchcc occurs ; [] |4174| 
	.dwpsn	file "../Source/prod.c",line 4181,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4181| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4181| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4181| 
	.dwpsn	file "../Source/prod.c",line 4152,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4184,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4184| 
        ; branch occurs ; [] |4184| 
$C$L281:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3974,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3974| 
        B         $C$L320,LO            ; [CPU_] |3974| 
        ; branchcc occurs ; [] |3974| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3974| 
        MOVL      XAR0,#66              ; [CPU_] |3974| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3974| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3974| 
        B         $C$L320,LT            ; [CPU_] |3974| 
        ; branchcc occurs ; [] |3974| 
        CMPB      AL,#4                 ; [CPU_] |3974| 
        B         $C$L320,GEQ           ; [CPU_] |3974| 
        ; branchcc occurs ; [] |3974| 
	.dwpsn	file "../Source/prod.c",line 3978,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3978| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3978| 
	.dwpsn	file "../Source/prod.c",line 3980,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3980| 
        MOVL      XAR0,#40              ; [CPU_] |3980| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3980| 
        MPYB      ACC,T,#10             ; [CPU_] |3980| 
        ADDL      ACC,XAR6              ; [CPU_] |3980| 
        MOVL      XAR4,ACC              ; [CPU_] |3980| 
        MOVL      XAR7,ACC              ; [CPU_] |3980| 
        MOVB      XAR0,#42              ; [CPU_] |3980| 
        MOVL      P,ACC                 ; [CPU_] |3980| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3980| 
	.dwpsn	file "../Source/prod.c",line 3987,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3987| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3987| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3980,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3980| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3984| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3990,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3990| 
        ANDB      AL,#0xff              ; [CPU_] |3990| 
        MOV       *XAR4++,AL            ; [CPU_] |3990| 
	.dwpsn	file "../Source/prod.c",line 3991,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3991| 
        LSR       AL,8                  ; [CPU_] |3991| 
        MOV       *XAR4++,AL            ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3988,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3988| 
        ; branchcc occurs ; [] |3988| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3998,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3998| 
        ANDB      AL,#0xff              ; [CPU_] |3998| 
        MOV       *XAR4++,AL            ; [CPU_] |3998| 
	.dwpsn	file "../Source/prod.c",line 3999,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3999| 
        LSR       AL,8                  ; [CPU_] |3999| 
        MOV       *XAR4++,AL            ; [CPU_] |3999| 
	.dwpsn	file "../Source/prod.c",line 3996,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3996| 
        ; branchcc occurs ; [] |3996| 
	.dwpsn	file "../Source/prod.c",line 4003,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4003| 
        ADDB      XAR5,#46              ; [CPU_] |4003| 
        MOVL      XAR7,XAR5             ; [CPU_] |4003| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 4006,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4006| 
        ANDB      AL,#0xff              ; [CPU_] |4006| 
        MOV       *XAR4++,AL            ; [CPU_] |4006| 
	.dwpsn	file "../Source/prod.c",line 4007,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4007| 
        LSR       AL,8                  ; [CPU_] |4007| 
        MOV       *XAR4++,AL            ; [CPU_] |4007| 
	.dwpsn	file "../Source/prod.c",line 4004,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |4004| 
        ; branchcc occurs ; [] |4004| 
	.dwpsn	file "../Source/prod.c",line 4011,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4011| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 4014,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4014| 
        ANDB      AL,#0xff              ; [CPU_] |4014| 
        MOV       *XAR4++,AL            ; [CPU_] |4014| 
	.dwpsn	file "../Source/prod.c",line 4015,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4015| 
        LSR       AL,8                  ; [CPU_] |4015| 
        MOV       *XAR4++,AL            ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4012,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |4012| 
        ; branchcc occurs ; [] |4012| 
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3984| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 4022,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4022| 
        ANDB      AL,#0xff              ; [CPU_] |4022| 
        MOV       *XAR4++,AL            ; [CPU_] |4022| 
	.dwpsn	file "../Source/prod.c",line 4023,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4023| 
        LSR       AL,8                  ; [CPU_] |4023| 
        MOV       *XAR4++,AL            ; [CPU_] |4023| 
	.dwpsn	file "../Source/prod.c",line 4020,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |4020| 
        ; branchcc occurs ; [] |4020| 
        B         $C$L745,UNC           ; [CPU_] |4020| 
        ; branch occurs ; [] |4020| 
$C$L287:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3928,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3928| 
        B         $C$L320,LO            ; [CPU_] |3928| 
        ; branchcc occurs ; [] |3928| 
	.dwpsn	file "../Source/prod.c",line 3932,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3932| 
        B         $C$L288,EQ            ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
        CMPB      AL,#1                 ; [CPU_] |3932| 
        B         $C$L288,EQ            ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
        CMPB      AL,#2                 ; [CPU_] |3932| 
        B         $C$L288,EQ            ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
        ADDB      XAR4,#2               ; [CPU_] |3932| 
        MOVL      XAR0,#66              ; [CPU_] |3932| 
        CMPB      AL,#3                 ; [CPU_] |3932| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3932| 
        B         $C$L320,NEQ           ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3938,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3938| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3938| 
        MOVL      XAR4,XAR5             ; [CPU_] |3938| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3938| 
        ADDB      XAR5,#2               ; [CPU_] |3938| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3938| 
        ADDB      XAR4,#6               ; [CPU_] |3938| 
        B         $C$L293,NEQ           ; [CPU_] |3938| 
        ; branchcc occurs ; [] |3938| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3939,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3939| 
        B         $C$L320,LO            ; [CPU_] |3939| 
        ; branchcc occurs ; [] |3939| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3944,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3944| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3946,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3946| 
        ADDL      ACC,XT                ; [CPU_] |3946| 
	.dwpsn	file "../Source/prod.c",line 3947,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3947| 
	.dwpsn	file "../Source/prod.c",line 3945,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3945| 
        ; branchcc occurs ; [] |3945| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3950,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3950| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3951,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3951| 
        B         $C$L291,EQ            ; [CPU_] |3951| 
        ; branchcc occurs ; [] |3951| 
	.dwpsn	file "../Source/prod.c",line 3950,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3950| 
        ADDB      XAR4,#1               ; [CPU_] |3950| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3950| 
        ; branchcc occurs ; [] |3950| 
        B         $C$L292,UNC           ; [CPU_] |3950| 
        ; branch occurs ; [] |3950| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3952,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3952| 
        MOVB      XAR0,#35              ; [CPU_] |3952| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3952| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3956| 
        B         $C$L320,EQ            ; [CPU_] |3956| 
        ; branchcc occurs ; [] |3956| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3962,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3962| 
        MOVL      XAR0,#66              ; [CPU_] |3962| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3962| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3962| 
        ADDB      ACC,#2                ; [CPU_] |3962| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3962| 
        MOVB      XAR0,#34              ; [CPU_] |3962| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3962| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3962| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3962| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3962| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3965,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3965| 
        MOV       *XAR4++,AL            ; [CPU_] |3965| 
	.dwpsn	file "../Source/prod.c",line 3964,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3964| 
        MOV       AL,*-SP[59]           ; [CPU_] |3964| 
	.dwpsn	file "../Source/prod.c",line 3965,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3965| 
	.dwpsn	file "../Source/prod.c",line 3964,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3964| 
        B         $C$L294,HI            ; [CPU_] |3964| 
        ; branchcc occurs ; [] |3964| 
        B         $C$L304,UNC           ; [CPU_] |3964| 
        ; branch occurs ; [] |3964| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3912,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3912| 
        MOVB      XAR0,#34              ; [CPU_] |3912| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3912| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3912| 
	.dwpsn	file "../Source/prod.c",line 3914,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3912,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3912| 
        MOV       *-SP[61],#3           ; [CPU_] |3912| 
	.dwpsn	file "../Source/prod.c",line 3914,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3914| 
        CMPB      AL,#1                 ; [CPU_] |3914| 
        B         $C$L296,EQ            ; [CPU_] |3914| 
        ; branchcc occurs ; [] |3914| 
        MOVB      XAR1,#34              ; [CPU_] |3914| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3914| 
        B         $C$L745,NEQ           ; [CPU_] |3914| 
        ; branchcc occurs ; [] |3914| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3916,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3916| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3916| 
        MOVL      XAR0,#74              ; [CPU_] |3916| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3916| 
        MOVL      XAR0,#44              ; [CPU_] |3916| 
        ADDL      ACC,XAR6              ; [CPU_] |3916| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3916| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3916| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3919,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3919| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3919| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3918,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3918| 
        ANDB      AL,#0xff              ; [CPU_] |3918| 
        MOV       *XAR4++,AL            ; [CPU_] |3918| 
	.dwpsn	file "../Source/prod.c",line 3919,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3919| 
        LSR       AL,8                  ; [CPU_] |3919| 
        MOV       *XAR4++,AL            ; [CPU_] |3919| 
	.dwpsn	file "../Source/prod.c",line 3917,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3917| 
        ; branchcc occurs ; [] |3917| 
        B         $C$L745,UNC           ; [CPU_] |3917| 
        ; branch occurs ; [] |3917| 
$C$L298:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3891,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3891| 
        B         $C$L320,LO            ; [CPU_] |3891| 
        ; branchcc occurs ; [] |3891| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3891| 
        MOVL      XAR0,#66              ; [CPU_] |3891| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3891| 
        ADDB      AL,#3                 ; [CPU_] |3891| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3891| 
        CMP       AL,*-SP[59]           ; [CPU_] |3891| 
        B         $C$L320,HI            ; [CPU_] |3891| 
        ; branchcc occurs ; [] |3891| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3896,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3896| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3896| 
        ; branch occurs ; [] |3896| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3897,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3897| 
        ADD       PL,AL                 ; [CPU_] |3897| 
        MOVL      ACC,XAR7              ; [CPU_] |3897| 
        ADD       ACC,PL                ; [CPU_] |3897| 
        MOVL      XAR7,ACC              ; [CPU_] |3897| 
	.dwpsn	file "../Source/prod.c",line 3896,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3896| 
	.dwpsn	file "../Source/prod.c",line 3897,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3897| 
        MOV       *XAR4++,AL            ; [CPU_] |3897| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3896,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3896| 
        MOVL      XAR0,#66              ; [CPU_] |3896| 
        MOVL      ACC,XAR7              ; [CPU_] |3896| 
        ADDB      ACC,#2                ; [CPU_] |3896| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3896| 
        MOV       AL,AR6                ; [CPU_] |3896| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3896| 
        B         $C$L299,LT            ; [CPU_] |3896| 
        ; branchcc occurs ; [] |3896| 
	.dwpsn	file "../Source/prod.c",line 3899,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3899| 
        MOVL      XAR0,#76              ; [CPU_] |3899| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3899| 
	.dwpsn	file "../Source/prod.c",line 3902,column 5,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_strlen")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3902| 
        ; call occurs [#_strlen] ; [] |3902| 
	.dwpsn	file "../Source/prod.c",line 3903,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3903| 
	.dwpsn	file "../Source/prod.c",line 3904,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3904| 
	.dwpsn	file "../Source/prod.c",line 3903,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3903| 
        MOV       *-SP[61],#3           ; [CPU_] |3903| 
	.dwpsn	file "../Source/prod.c",line 3904,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3904| 
        ; branchcc occurs ; [] |3904| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3904,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3904| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3905,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3905| 
	.dwpsn	file "../Source/prod.c",line 3904,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3904| 
	.dwpsn	file "../Source/prod.c",line 3905,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3905| 
        INC       *-SP[61]              ; [CPU_] |3905| 
	.dwpsn	file "../Source/prod.c",line 3904,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3904| 
        B         $C$L301,HI            ; [CPU_] |3904| 
        ; branchcc occurs ; [] |3904| 
	.dwpsn	file "../Source/prod.c",line 3908,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3908| 
        ; branch occurs ; [] |3908| 
$C$L302:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3871,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3871| 
        B         $C$L320,LO            ; [CPU_] |3871| 
        ; branchcc occurs ; [] |3871| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3876,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3876| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3876| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3878,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3878| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3878| 
	.dwpsn	file "../Source/prod.c",line 3879,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3879| 
        MOV       *XAR5++,AL            ; [CPU_] |3879| 
	.dwpsn	file "../Source/prod.c",line 3880,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3880| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3880| 
        MOV       *XAR4++,AL            ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3881,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3881| 
        MOV       *XAR5++,AL            ; [CPU_] |3881| 
	.dwpsn	file "../Source/prod.c",line 3877,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3877| 
        ; branchcc occurs ; [] |3877| 
	.dwpsn	file "../Source/prod.c",line 3881,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3881| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3884,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3884| 
	.dwpsn	file "../Source/prod.c",line 3887,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |3887| 
        ; branch occurs ; [] |3887| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5796,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5796 | cmd_mode = SCI_MODE_ASCII;                                             
; 5797 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5798 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5799 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5796| 
	.dwpsn	file "../Source/prod.c",line 5802,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5802 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_update_units")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5802| 
        ; call occurs [#_update_units] ; [] |5802| 
	.dwpsn	file "../Source/prod.c",line 5795,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5795| 
	.dwpsn	file "../Source/prod.c",line 5803,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5803 | break;                                                                 
; 5805 | default:                                                               
; 5807 | // send back NACK?                                                     
; 5809 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L745,UNC           ; [CPU_] |5803| 
        ; branch occurs ; [] |5803| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5789,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5789| 
	.dwpsn	file "../Source/prod.c",line 5791,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |5791| 
        ; branch occurs ; [] |5791| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4427| 
        ; branch occurs ; [] |4427| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4422| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4422| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_ssr_set")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4422| 
        ; call occurs [#_ssr_set] ; [] |4422| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4423| 
        ; branch occurs ; [] |4423| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_conf_read")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5730| 
        ; call occurs [#_conf_read] ; [] |5730| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5733,column 5,is_stmt,isa 0
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5733| 
        ; call occurs [#_ad7738_setcal] ; [] |5733| 
	.dwpsn	file "../Source/prod.c",line 5734,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5734| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5734| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5734| 
	.dwpsn	file "../Source/prod.c",line 5735,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5735| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5735| 
        ; call occurs [#_ad7738_resetvall] ; [] |5735| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5739,column 5,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_update_units")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5739| 
        ; call occurs [#_update_units] ; [] |5739| 
	.dwpsn	file "../Source/prod.c",line 5738,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5738| 
	.dwpsn	file "../Source/prod.c",line 5741,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |5741| 
        ; branch occurs ; [] |5741| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5694,column 5,is_stmt,isa 0
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_conf_default")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5694| 
        ; call occurs [#_conf_default] ; [] |5694| 
	.dwpsn	file "../Source/prod.c",line 5697,column 5,is_stmt,isa 0
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5697| 
        ; call occurs [#_lcd_clear] ; [] |5697| 
	.dwpsn	file "../Source/prod.c",line 5698,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5698| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5698| 
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5698| 
        ; call occurs [#_lcd_puts] ; [] |5698| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5701,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5701| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_delay_us")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5701| 
        ; call occurs [#_delay_us] ; [] |5701| 
	.dwpsn	file "../Source/prod.c",line 5700,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5700| 
        ; branchcc occurs ; [] |5700| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5705,column 5,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_conf_write")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5705| 
        ; call occurs [#_conf_write] ; [] |5705| 
        MOVZ      AR1,AL                ; [CPU_] |5705| 
	.dwpsn	file "../Source/prod.c",line 5706,column 5,is_stmt,isa 0
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5706| 
        ; call occurs [#_ad7738_setcal] ; [] |5706| 
	.dwpsn	file "../Source/prod.c",line 5707,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5707| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5707| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5707| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5708| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5708| 
        ; call occurs [#_ad7738_resetvall] ; [] |5708| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5711,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5711| 
        ; branchcc occurs ; [] |5711| 
	.dwpsn	file "../Source/prod.c",line 5712,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5712| 
        MOVB      AL,#31                ; [CPU_] |5712| 
        SPM       #0                    ; [CPU_] 
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5712| 
        ; call occurs [#_lcd_puts] ; [] |5712| 
	.dwpsn	file "../Source/prod.c",line 5713,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5713| 
	.dwpsn	file "../Source/prod.c",line 5714,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5714| 
	.dwpsn	file "../Source/prod.c",line 5715,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5715| 
        ; branch occurs ; [] |5715| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5716,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5716| 
        MOVB      AL,#31                ; [CPU_] |5716| 
        SPM       #0                    ; [CPU_] 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5716| 
        ; call occurs [#_lcd_puts] ; [] |5716| 
	.dwpsn	file "../Source/prod.c",line 5717,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5717| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5720,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5720| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_delay_us")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5720| 
        ; call occurs [#_delay_us] ; [] |5720| 
	.dwpsn	file "../Source/prod.c",line 5719,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5719| 
        ; branchcc occurs ; [] |5719| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5722,column 5,is_stmt,isa 0
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5722| 
        ; call occurs [#_lcd_clear] ; [] |5722| 
	.dwpsn	file "../Source/prod.c",line 5723,column 5,is_stmt,isa 0
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_update_units")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5723| 
        ; call occurs [#_update_units] ; [] |5723| 
$C$L317:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5812,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5812 | switch (bincmdresult) {                                                
; 5813 | case OK_SendResult:                                                    
; 5814 |         scia_send_bin(buff, j);         // send back                   
; 5816 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5817 |                 delay_us(2000);                 // 2ms                 
; 5818 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5820 |         break;                                                         
; 5822 | case Error_UnImpl:                                                     
; 5824 |         buff[1] = CmdUnImpl;                                           
; 5825 |         buff[2] = cmdbuff[1];                                          
; 5826 |         scia_send_bin(buff, 3);         // send back                   
; 5827 |         break;                                                         
; 5829 | case Error_Invalid:                                                    
; 5831 |         buff[1] = CmdInvalid;                                          
; 5832 |         buff[2] = cmdbuff[1];                                          
; 5833 |         scia_send_bin(buff, 3);         // send back                   
; 5834 |         break;                                                         
; 5836 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L745,EQ            ; [CPU_] |5812| 
        ; branchcc occurs ; [] |5812| 
        CMPB      AL,#1                 ; [CPU_] |5812| 
        B         $C$L321,EQ            ; [CPU_] |5812| 
        ; branchcc occurs ; [] |5812| 
        CMPB      AL,#2                 ; [CPU_] |5812| 
        B         $C$L320,EQ            ; [CPU_] |5812| 
        ; branchcc occurs ; [] |5812| 
        CMPB      AL,#3                 ; [CPU_] |5812| 
        B         $C$L636,NEQ           ; [CPU_] |5812| 
        ; branchcc occurs ; [] |5812| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5838,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5838 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5838| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5838| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5839,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5839| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5839| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5839| 
	.dwpsn	file "../Source/prod.c",line 5840,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5840 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5840| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5840| 
        ; call occurs [#_scia_send_bin] ; [] |5840| 
	.dwpsn	file "../Source/prod.c",line 5841,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5841 | break;                                                                 
; 5843 | default:                                                               
; 5845 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L636,UNC           ; [CPU_] |5841| 
        ; branch occurs ; [] |5841| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5831,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5831| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5831| 
	.dwpsn	file "../Source/prod.c",line 5834,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5834| 
        ; branch occurs ; [] |5834| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5824,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5824| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5824| 
	.dwpsn	file "../Source/prod.c",line 5827,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5827| 
        ; branch occurs ; [] |5827| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 1049,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1049| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1049| 
        CMPB      AL,#76                ; [CPU_] |1049| 
        B         $C$L324,GT            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#76                ; [CPU_] |1049| 
        B         $C$L466,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#68                ; [CPU_] |1049| 
        B         $C$L323,GT            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#68                ; [CPU_] |1049| 
        B         $C$L514,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#65                ; [CPU_] |1049| 
        B         $C$L631,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#66                ; [CPU_] |1049| 
        B         $C$L591,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#67                ; [CPU_] |1049| 
        B         $C$L530,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        B         $C$L625,UNC           ; [CPU_] |1049| 
        ; branch occurs ; [] |1049| 
$C$L323:    
        CMPB      AL,#69                ; [CPU_] |1049| 
        B         $C$L507,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#70                ; [CPU_] |1049| 
        B         $C$L498,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#72                ; [CPU_] |1049| 
        B         $C$L630,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        B         $C$L625,UNC           ; [CPU_] |1049| 
        ; branch occurs ; [] |1049| 
$C$L324:    
        CMPB      AL,#83                ; [CPU_] |1049| 
        B         $C$L325,GT            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#83                ; [CPU_] |1049| 
        B         $C$L351,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#79                ; [CPU_] |1049| 
        B         $C$L443,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#80                ; [CPU_] |1049| 
        B         $C$L429,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#82                ; [CPU_] |1049| 
        B         $C$L414,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        B         $C$L625,UNC           ; [CPU_] |1049| 
        ; branch occurs ; [] |1049| 
$C$L325:    
        CMPB      AL,#85                ; [CPU_] |1049| 
        B         $C$L326,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#88                ; [CPU_] |1049| 
        B         $C$L628,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        CMPB      AL,#90                ; [CPU_] |1049| 
        B         $C$L626,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        B         $C$L625,UNC           ; [CPU_] |1049| 
        ; branch occurs ; [] |1049| 
$C$L326:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1222,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1222| 
        B         $C$L625,LO            ; [CPU_] |1222| 
        ; branchcc occurs ; [] |1222| 
	.dwpsn	file "../Source/prod.c",line 1225,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1225| 
        CMPB      AL,#73                ; [CPU_] |1225| 
        B         $C$L327,GT            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        CMPB      AL,#73                ; [CPU_] |1225| 
        B         $C$L338,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        CMPB      AL,#66                ; [CPU_] |1225| 
        B         $C$L330,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        CMPB      AL,#67                ; [CPU_] |1225| 
        B         $C$L347,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        CMPB      AL,#70                ; [CPU_] |1225| 
        B         $C$L344,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        B         $C$L625,UNC           ; [CPU_] |1225| 
        ; branch occurs ; [] |1225| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1225| 
        B         $C$L328,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        CMPB      AL,#83                ; [CPU_] |1225| 
        B         $C$L337,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        CMPB      AL,#87                ; [CPU_] |1225| 
        B         $C$L336,EQ            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
        B         $C$L625,UNC           ; [CPU_] |1225| 
        ; branch occurs ; [] |1225| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1242| 
        MOVL      XAR0,#44              ; [CPU_] |1242| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1242| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1242| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1242| 
        MOVL      XAR4,XAR1             ; [CPU_] |1242| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_sprintf")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1242| 
        ; call occurs [#_sprintf] ; [] |1242| 
	.dwpsn	file "../Source/prod.c",line 1243,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1243| 
        MOV       AL,#1024              ; [CPU_] |1243| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1243| 
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1242| 
	.dwpsn	file "../Source/prod.c",line 1243,column 6,is_stmt,isa 0
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1243| 
        ; call occurs [#_scia_getparam] ; [] |1243| 
        CMPB      AL,#31                ; [CPU_] |1243| 
        B         $C$L329,LOS           ; [CPU_] |1243| 
        ; branchcc occurs ; [] |1243| 
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1247| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1247| 
	.dwpsn	file "../Source/prod.c",line 1246,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1246| 
	.dwpsn	file "../Source/prod.c",line 1247,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1247| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1247| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1250,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1250| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1250| 
        MOVL      XAR0,#86              ; [CPU_] |1250| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1250| 
        MOVB      AH,#1                 ; [CPU_] |1250| 
        ADD       AH,AL                 ; [CPU_] |1250| 
        MOVU      ACC,AH                ; [CPU_] |1250| 
        MOVL      XAR5,XAR1             ; [CPU_] |1250| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_memcpy")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1250| 
        ; call occurs [#_memcpy] ; [] |1250| 
        MOVL      XAR4,XAR1             ; [CPU_] |1250| 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1254| 
        ; call occurs [#_scia_puts] ; [] |1254| 
	.dwpsn	file "../Source/prod.c",line 1255,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1255| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1257| 
        ; branch occurs ; [] |1257| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1347| 
        MOVB      XAR0,#34              ; [CPU_] |1347| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1347| 
        CMPB      AL,#3                 ; [CPU_] |1347| 
        B         $C$L335,EQ            ; [CPU_] |1347| 
        ; branchcc occurs ; [] |1347| 
        MOVB      XAR1,#34              ; [CPU_] |1347| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1347| 
        CMPB      AL,#2                 ; [CPU_] |1347| 
        B         $C$L335,EQ            ; [CPU_] |1347| 
        ; branchcc occurs ; [] |1347| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1354,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1354| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1354| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1355,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1355| 
        MOVL      XAR0,#44              ; [CPU_] |1355| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1355| 
        MOV       *-SP[3],AL            ; [CPU_] |1355| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1355| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1355| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1355| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_sprintf")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1355| 
        ; call occurs [#_sprintf] ; [] |1355| 
        MOVL      XAR0,#44              ; [CPU_] |1355| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1355| 
	.dwpsn	file "../Source/prod.c",line 1356,column 7,is_stmt,isa 0
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_scia_puts")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1356| 
        ; call occurs [#_scia_puts] ; [] |1356| 
        MOV       AL,*-SP[47]           ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1357,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1357| 
        B         $C$L332,GEQ           ; [CPU_] |1357| 
        ; branchcc occurs ; [] |1357| 
	.dwpsn	file "../Source/prod.c",line 1358,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1358| 
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_puts")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1358| 
        ; call occurs [#_scia_puts] ; [] |1358| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1354,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1354| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1354| 
        B         $C$L331,LT            ; [CPU_] |1354| 
        ; branchcc occurs ; [] |1354| 
	.dwpsn	file "../Source/prod.c",line 1361,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1361| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_scia_puts")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1361| 
        ; call occurs [#_scia_puts] ; [] |1361| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1362,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1362| 
        MOVB      XAR0,#35              ; [CPU_] |1362| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1362| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1362| 
        MOV       *-SP[3],AL            ; [CPU_] |1362| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1362| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1362| 
        MOVL      XAR0,#74              ; [CPU_] |1362| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1362| 
        ADDL      ACC,XAR6              ; [CPU_] |1362| 
        MOVL      XAR4,ACC              ; [CPU_] |1362| 
        MOVL      XAR0,#44              ; [CPU_] |1362| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1362| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1362| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1362| 
        MOVL      XAR4,XAR1             ; [CPU_] |1362| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_sprintf")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1362| 
        ; call occurs [#_sprintf] ; [] |1362| 
	.dwpsn	file "../Source/prod.c",line 1365,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1362,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1362| 
	.dwpsn	file "../Source/prod.c",line 1365,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1362,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1362| 
	.dwpsn	file "../Source/prod.c",line 1365,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1365| 
        MOVL      XAR5,XAR1             ; [CPU_] |1365| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1365| 
        ; call occurs [#_scia_getparam] ; [] |1365| 
        MOVL      XAR4,XAR1             ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1366,column 6,is_stmt,isa 0
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_puts")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1366| 
        ; call occurs [#_scia_puts] ; [] |1366| 
	.dwpsn	file "../Source/prod.c",line 1367,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1367| 
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_scia_puts")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1367| 
        ; call occurs [#_scia_puts] ; [] |1367| 
        MOV       AL,*-SP[47]           ; [CPU_] |1367| 
	.dwpsn	file "../Source/prod.c",line 1368,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1368| 
        ; branchcc occurs ; [] |1368| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1373,column 6,is_stmt,isa 0
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_atoi")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1373| 
        ; call occurs [#_atoi] ; [] |1373| 
        CMPB      AL,#7                 ; [CPU_] |1373| 
        B         $C$L333,HI            ; [CPU_] |1373| 
        ; branchcc occurs ; [] |1373| 
	.dwpsn	file "../Source/prod.c",line 1379,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1379| 
        MOVB      XAR1,#35              ; [CPU_] |1379| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1380| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1379,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1380| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1380| 
        MOVL      XAR0,#74              ; [CPU_] |1380| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1387,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1387| 
        ; branch occurs ; [] |1387| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1375,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1375| 
	.dwpsn	file "../Source/prod.c",line 1377,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1377| 
        ; branch occurs ; [] |1377| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1369,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1369| 
	.dwpsn	file "../Source/prod.c",line 1371,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1371| 
        ; branch occurs ; [] |1371| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1349,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1349| 
	.dwpsn	file "../Source/prod.c",line 1351,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1351| 
        ; branch occurs ; [] |1351| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1420,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1420| 
        MOVB      XAR0,#40              ; [CPU_] |1420| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1420| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1420| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1420| 
        MOVL      XAR0,#44              ; [CPU_] |1420| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1420| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1420| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_sprintf")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1420| 
        ; call occurs [#_sprintf] ; [] |1420| 
        MOVL      XAR0,#44              ; [CPU_] |1420| 
	.dwpsn	file "../Source/prod.c",line 1422,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1422| 
	.dwpsn	file "../Source/prod.c",line 1420,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1420| 
	.dwpsn	file "../Source/prod.c",line 1422,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1422| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1422| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1422| 
        ; call occurs [#_scia_getparam] ; [] |1422| 
        MOVL      XAR0,#86              ; [CPU_] |1422| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1422,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1422| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_strtod")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1423,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1423| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1423| 
        MOVB      XAR1,#40              ; [CPU_] |1423| 
        MOVL      XAR0,#86              ; [CPU_] |1423| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1423| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1423| 
	.dwpsn	file "../Source/prod.c",line 1424,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1424| 
        ; call occurs [#_scia_puts] ; [] |1424| 
	.dwpsn	file "../Source/prod.c",line 1425,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1425| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1425| 
        ; call occurs [#_scia_puts] ; [] |1425| 
	.dwpsn	file "../Source/prod.c",line 1427,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1427| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1427| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1427| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1427| 
        MOVB      XAR1,#40              ; [CPU_] |1427| 
        MOVL      XAR0,#44              ; [CPU_] |1427| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1427| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1427| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1427| 
        MOVL      XAR4,XAR1             ; [CPU_] |1427| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_sprintf")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1427| 
        ; call occurs [#_sprintf] ; [] |1427| 
        MOVL      XAR4,XAR1             ; [CPU_] |1427| 
	.dwpsn	file "../Source/prod.c",line 1429,column 6,is_stmt,isa 0
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_puts")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1429| 
        ; call occurs [#_scia_puts] ; [] |1429| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1433,column 6,is_stmt,isa 0
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1433| 
        ; call occurs [#_ad7738_setcal] ; [] |1433| 
	.dwpsn	file "../Source/prod.c",line 1436,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1436| 
        ; branch occurs ; [] |1436| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1230,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1230| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1230| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1230| 
        MOV       AL,#1024              ; [CPU_] |1230| 
        MOVL      XAR5,XAR1             ; [CPU_] |1230| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1230| 
        ; call occurs [#_scia_getparam] ; [] |1230| 
        MOVL      XAR4,XAR1             ; [CPU_] |1230| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_atol")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1232| 
        ; call occurs [#_atol] ; [] |1232| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1232| 
	.dwpsn	file "../Source/prod.c",line 1234,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1234| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1232| 
	.dwpsn	file "../Source/prod.c",line 1234,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1234| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1234| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1237,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1237| 
        ; branch occurs ; [] |1237| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1312,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1312| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1312| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1313,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1313| 
        MOVL      XAR0,#44              ; [CPU_] |1313| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1313| 
        MOV       *-SP[3],AL            ; [CPU_] |1313| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1313| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1313| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1313| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_sprintf")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1313| 
        ; call occurs [#_sprintf] ; [] |1313| 
        MOVL      XAR0,#44              ; [CPU_] |1313| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1313| 
	.dwpsn	file "../Source/prod.c",line 1314,column 7,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1314| 
        ; call occurs [#_scia_puts] ; [] |1314| 
        MOV       AL,*-SP[47]           ; [CPU_] |1314| 
	.dwpsn	file "../Source/prod.c",line 1315,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1315| 
        B         $C$L340,GEQ           ; [CPU_] |1315| 
        ; branchcc occurs ; [] |1315| 
	.dwpsn	file "../Source/prod.c",line 1316,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1316| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1316| 
        ; call occurs [#_scia_puts] ; [] |1316| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1312,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1312| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1312| 
        B         $C$L339,LT            ; [CPU_] |1312| 
        ; branchcc occurs ; [] |1312| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1319| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1319| 
        ; call occurs [#_scia_puts] ; [] |1319| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1320,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1320| 
        MOVB      XAR0,#34              ; [CPU_] |1320| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1320| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1320| 
        MOV       *-SP[3],AL            ; [CPU_] |1320| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1320| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1320| 
        MOVL      XAR0,#72              ; [CPU_] |1320| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1320| 
        ADDL      ACC,XAR6              ; [CPU_] |1320| 
        MOVL      XAR4,ACC              ; [CPU_] |1320| 
        MOVL      XAR0,#44              ; [CPU_] |1320| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1320| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1320| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1320| 
        MOVL      XAR4,XAR1             ; [CPU_] |1320| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_sprintf")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1320| 
        ; call occurs [#_sprintf] ; [] |1320| 
	.dwpsn	file "../Source/prod.c",line 1322,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1322| 
	.dwpsn	file "../Source/prod.c",line 1320,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1320| 
	.dwpsn	file "../Source/prod.c",line 1322,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1322| 
        MOV       AL,#1024              ; [CPU_] |1322| 
        MOVL      XAR5,XAR1             ; [CPU_] |1322| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1322| 
        ; call occurs [#_scia_getparam] ; [] |1322| 
        MOV       *-SP[47],AL           ; [CPU_] |1322| 
        MOVL      XAR4,XAR1             ; [CPU_] |1322| 
	.dwpsn	file "../Source/prod.c",line 1323,column 6,is_stmt,isa 0
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1323| 
        ; call occurs [#_scia_puts] ; [] |1323| 
	.dwpsn	file "../Source/prod.c",line 1324,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1324| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_scia_puts")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1324| 
        ; call occurs [#_scia_puts] ; [] |1324| 
        MOV       AL,*-SP[47]           ; [CPU_] |1324| 
	.dwpsn	file "../Source/prod.c",line 1325,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1325| 
        ; branchcc occurs ; [] |1325| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1329,column 6,is_stmt,isa 0
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_atoi")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1329| 
        ; call occurs [#_atoi] ; [] |1329| 
        CMPB      AL,#3                 ; [CPU_] |1329| 
        B         $C$L342,HI            ; [CPU_] |1329| 
        ; branchcc occurs ; [] |1329| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1335| 
        MOVB      XAR1,#34              ; [CPU_] |1335| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1336,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1336| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1336| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1336,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1336| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1336| 
        MOVL      XAR0,#72              ; [CPU_] |1336| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1336| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1336| 
        MOVL      XAR4,ACC              ; [CPU_] |1336| 
        MOVL      XAR0,#44              ; [CPU_] |1336| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1336| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1336| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1336| 
        MOVL      XAR4,XAR1             ; [CPU_] |1336| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_sprintf")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1336| 
        ; call occurs [#_sprintf] ; [] |1336| 
        MOVL      XAR4,XAR1             ; [CPU_] |1336| 
	.dwpsn	file "../Source/prod.c",line 1339,column 6,is_stmt,isa 0
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_puts")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1339| 
        ; call occurs [#_scia_puts] ; [] |1339| 
	.dwpsn	file "../Source/prod.c",line 1340,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1340| 
	.dwpsn	file "../Source/prod.c",line 1343,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1343| 
        ; branch occurs ; [] |1343| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1331,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1331| 
	.dwpsn	file "../Source/prod.c",line 1333,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1333| 
        ; branch occurs ; [] |1333| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1326,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1326| 
	.dwpsn	file "../Source/prod.c",line 1327,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1327| 
        ; branch occurs ; [] |1327| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1393,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1393| 
        MOVL      XAR0,#44              ; [CPU_] |1393| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1393| 
        MOV       *-SP[3],#4096         ; [CPU_] |1393| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1393| 
        MOVL      XAR4,XAR1             ; [CPU_] |1393| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_sprintf")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1393| 
        ; call occurs [#_sprintf] ; [] |1393| 
	.dwpsn	file "../Source/prod.c",line 1395,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1395| 
	.dwpsn	file "../Source/prod.c",line 1393,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1393| 
	.dwpsn	file "../Source/prod.c",line 1395,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1395| 
        MOV       AL,#1024              ; [CPU_] |1395| 
        MOVL      XAR5,XAR1             ; [CPU_] |1395| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1395| 
        ; call occurs [#_scia_getparam] ; [] |1395| 
	.dwpsn	file "../Source/prod.c",line 1396,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1396| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_atoi")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1396| 
        ; call occurs [#_atoi] ; [] |1396| 
        MOV       *-SP[47],AL           ; [CPU_] |1396| 
	.dwpsn	file "../Source/prod.c",line 1397,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1397| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_puts")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1397| 
        ; call occurs [#_scia_puts] ; [] |1397| 
        MOV       AL,*-SP[47]           ; [CPU_] |1397| 
	.dwpsn	file "../Source/prod.c",line 1399,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1399| 
        ; branchcc occurs ; [] |1399| 
        CMP       AL,#4096              ; [CPU_] |1399| 
        B         $C$L346,GT            ; [CPU_] |1399| 
        ; branchcc occurs ; [] |1399| 
	.dwpsn	file "../Source/prod.c",line 1404,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1404| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1404| 
        ; call occurs [#_scia_puts] ; [] |1404| 
	.dwpsn	file "../Source/prod.c",line 1406,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1406| 
        MOVL      XAR0,#44              ; [CPU_] |1406| 
        MOV       AL,*-SP[47]           ; [CPU_] |1406| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1406| 
        MOV       *-SP[3],AL            ; [CPU_] |1406| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1406| 
        MOVL      XAR4,XAR1             ; [CPU_] |1406| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_sprintf")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1406| 
        ; call occurs [#_sprintf] ; [] |1406| 
        MOVL      XAR4,XAR1             ; [CPU_] |1406| 
	.dwpsn	file "../Source/prod.c",line 1408,column 6,is_stmt,isa 0
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1408| 
        ; call occurs [#_scia_puts] ; [] |1408| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1413,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1413| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1413| 
        MOV       AL,*-SP[47]           ; [CPU_] |1413| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1413| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1414,column 6,is_stmt,isa 0
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_maf_rst")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1414| 
        ; call occurs [#_maf_rst] ; [] |1414| 
	.dwpsn	file "../Source/prod.c",line 1416,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1416| 
        ; branch occurs ; [] |1416| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1401,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1401| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_scia_puts")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1401| 
        ; call occurs [#_scia_puts] ; [] |1401| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1392| 
        ; branch occurs ; [] |1392| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1264,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1264| 
        MOVL      XAR0,#44              ; [CPU_] |1264| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1264| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1264| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1264| 
        MOVL      XAR4,XAR1             ; [CPU_] |1264| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_sprintf")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1264| 
        ; call occurs [#_sprintf] ; [] |1264| 
	.dwpsn	file "../Source/prod.c",line 1265,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1265| 
	.dwpsn	file "../Source/prod.c",line 1264,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1264| 
	.dwpsn	file "../Source/prod.c",line 1265,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1265| 
        MOV       AL,#1024              ; [CPU_] |1265| 
        MOVL      XAR5,XAR1             ; [CPU_] |1265| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1265| 
        ; call occurs [#_scia_getparam] ; [] |1265| 
	.dwpsn	file "../Source/prod.c",line 1266,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1266| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_atoi")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1266| 
        ; call occurs [#_atoi] ; [] |1266| 
        MOV       *-SP[58],AL           ; [CPU_] |1266| 
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1267| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1267| 
        ; call occurs [#_scia_puts] ; [] |1267| 
        MOV       AL,*-SP[58]           ; [CPU_] |1267| 
	.dwpsn	file "../Source/prod.c",line 1269,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1269| 
        CMPB      AL,#4                 ; [CPU_] |1269| 
        B         $C$L350,HIS           ; [CPU_] |1269| 
        ; branchcc occurs ; [] |1269| 
	.dwpsn	file "../Source/prod.c",line 1273,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1273| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_puts")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1273| 
        ; call occurs [#_scia_puts] ; [] |1273| 
	.dwpsn	file "../Source/prod.c",line 1274,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1274| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1279,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1279| 
        MOVL      XAR0,#44              ; [CPU_] |1279| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1279| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1279| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1279| 
        MOVL      XAR4,XAR1             ; [CPU_] |1279| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_sprintf")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1279| 
        ; call occurs [#_sprintf] ; [] |1279| 
	.dwpsn	file "../Source/prod.c",line 1280,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1280| 
	.dwpsn	file "../Source/prod.c",line 1279,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1279| 
	.dwpsn	file "../Source/prod.c",line 1280,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1280| 
        MOV       AL,#1024              ; [CPU_] |1280| 
        MOVL      XAR5,XAR1             ; [CPU_] |1280| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1280| 
        ; call occurs [#_scia_getparam] ; [] |1280| 
	.dwpsn	file "../Source/prod.c",line 1281,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1281| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_atoi")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1281| 
        ; call occurs [#_atoi] ; [] |1281| 
        MOV       *-SP[57],AL           ; [CPU_] |1281| 
	.dwpsn	file "../Source/prod.c",line 1282,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1282| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1282| 
        ; call occurs [#_scia_puts] ; [] |1282| 
        MOV       AL,*-SP[57]           ; [CPU_] |1282| 
	.dwpsn	file "../Source/prod.c",line 1286,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1286| 
        CMPB      AL,#20                ; [CPU_] |1286| 
        B         $C$L349,HIS           ; [CPU_] |1286| 
        ; branchcc occurs ; [] |1286| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1290| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1290| 
        ; call occurs [#_scia_puts] ; [] |1290| 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1293| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1293| 
        MOVL      XAR0,#44              ; [CPU_] |1293| 
        MOV       AH,*-SP[57]           ; [CPU_] |1293| 
        ADD       AL,*-SP[58]           ; [CPU_] |1293| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1293| 
        MOV       *-SP[3],AL            ; [CPU_] |1293| 
        MOV       *-SP[4],AH            ; [CPU_] |1293| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1293| 
        DEC       *-SP[57]              ; [CPU_] |1293| 
        MOVL      XAR4,XAR1             ; [CPU_] |1293| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_sprintf")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1293| 
        ; call occurs [#_sprintf] ; [] |1293| 
        MOVL      XAR4,XAR1             ; [CPU_] |1293| 
	.dwpsn	file "../Source/prod.c",line 1295,column 6,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_scia_puts")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1295| 
        ; call occurs [#_scia_puts] ; [] |1295| 
        MOV       AL,*-SP[57]           ; [CPU_] |1295| 
	.dwpsn	file "../Source/prod.c",line 1296,column 6,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_print_sensor")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1296| 
        ; call occurs [#_print_sensor] ; [] |1296| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1300,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1300| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1300| 
        MOVB      AL,#10                ; [CPU_] |1300| 
        MOV       T,*-SP[58]            ; [CPU_] |1300| 
        MPYU      ACC,T,AL              ; [CPU_] |1300| 
        ADDL      ACC,XAR6              ; [CPU_] |1300| 
        MOVL      XAR4,ACC              ; [CPU_] |1300| 
        MOVB      XAR0,#42              ; [CPU_] |1300| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1300| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1300| 
	.dwpsn	file "../Source/prod.c",line 1301,column 6,is_stmt,isa 0
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1301| 
        ; call occurs [#_ad7738_setcal] ; [] |1301| 
        MOVL      XAR0,#78              ; [CPU_] |1301| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1301| 
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1303| 
        MOVL      XAR1,ACC              ; [CPU_] |1303| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1303| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1303| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1303| 
	.dwpsn	file "../Source/prod.c",line 1304,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1304| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1304| 
        ; call occurs [#_ad7738_resetvall] ; [] |1304| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1308,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1308| 
        ; branch occurs ; [] |1308| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1288,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1288| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1288| 
        ; call occurs [#_scia_puts] ; [] |1288| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1278| 
        ; branch occurs ; [] |1278| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1271,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1271| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_puts")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1271| 
        ; call occurs [#_scia_puts] ; [] |1271| 
	.dwpsn	file "../Source/prod.c",line 1263,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1263| 
        ; branch occurs ; [] |1263| 
$C$L351:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2124,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2124| 
        B         $C$L625,LO            ; [CPU_] |2124| 
        ; branchcc occurs ; [] |2124| 
	.dwpsn	file "../Source/prod.c",line 2129,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2129| 
        CMPB      AL,#78                ; [CPU_] |2129| 
        B         $C$L352,EQ            ; [CPU_] |2129| 
        ; branchcc occurs ; [] |2129| 
        CMPB      AL,#85                ; [CPU_] |2129| 
        B         $C$L352,EQ            ; [CPU_] |2129| 
        ; branchcc occurs ; [] |2129| 
        CMPB      AL,#66                ; [CPU_] |2129| 
        B         $C$L352,EQ            ; [CPU_] |2129| 
        ; branchcc occurs ; [] |2129| 
        CMPB      AL,#68                ; [CPU_] |2129| 
        B         $C$L625,NEQ           ; [CPU_] |2129| 
        ; branchcc occurs ; [] |2129| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2132,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2153,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2153| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2155,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2155| 
        MOVL      XAR0,#44              ; [CPU_] |2155| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2155| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2155| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2155| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_sprintf")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2155| 
        ; call occurs [#_sprintf] ; [] |2155| 
        MOVL      XAR0,#44              ; [CPU_] |2155| 
	.dwpsn	file "../Source/prod.c",line 2156,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2156| 
	.dwpsn	file "../Source/prod.c",line 2155,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2155| 
	.dwpsn	file "../Source/prod.c",line 2156,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2156| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2156| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2156| 
        ; call occurs [#_scia_getparam] ; [] |2156| 
        MOVL      XAR0,#86              ; [CPU_] |2156| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2156| 
	.dwpsn	file "../Source/prod.c",line 2157,column 6,is_stmt,isa 0
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_atoi")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2157| 
        ; call occurs [#_atoi] ; [] |2157| 
        MOVL      XAR0,#86              ; [CPU_] |2157| 
        MOV       *-SP[57],AL           ; [CPU_] |2157| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2157| 
	.dwpsn	file "../Source/prod.c",line 2158,column 6,is_stmt,isa 0
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_puts")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2158| 
        ; call occurs [#_scia_puts] ; [] |2158| 
        MOV       AL,*-SP[57]           ; [CPU_] |2158| 
	.dwpsn	file "../Source/prod.c",line 2162,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2162| 
        CMPB      AL,#20                ; [CPU_] |2162| 
        B         $C$L413,HIS           ; [CPU_] |2162| 
        ; branchcc occurs ; [] |2162| 
	.dwpsn	file "../Source/prod.c",line 2166,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2166| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2166| 
        ; call occurs [#_scia_puts] ; [] |2166| 
	.dwpsn	file "../Source/prod.c",line 2167,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2167| 
	.dwpsn	file "../Source/prod.c",line 2169,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2169| 
        CMPB      AL,#66                ; [CPU_] |2169| 
        B         $C$L408,EQ            ; [CPU_] |2169| 
        ; branchcc occurs ; [] |2169| 
        CMPB      AL,#68                ; [CPU_] |2169| 
        B         $C$L407,EQ            ; [CPU_] |2169| 
        ; branchcc occurs ; [] |2169| 
        CMPB      AL,#78                ; [CPU_] |2169| 
        B         $C$L403,EQ            ; [CPU_] |2169| 
        ; branchcc occurs ; [] |2169| 
        CMPB      AL,#85                ; [CPU_] |2169| 
        B         $C$L625,NEQ           ; [CPU_] |2169| 
        ; branchcc occurs ; [] |2169| 
	.dwpsn	file "../Source/prod.c",line 2198,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2198| 
	.dwpsn	file "../Source/prod.c",line 2196,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2196| 
        MOV       AH,#0                 ; [CPU_] |2196| 
	.dwpsn	file "../Source/prod.c",line 2198,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2198| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2198| 
	.dwpsn	file "../Source/prod.c",line 2196,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2196| 
	.dwpsn	file "../Source/prod.c",line 2198,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2198| 
        MPYU      ACC,T,AL              ; [CPU_] |2198| 
        ADDL      ACC,XAR6              ; [CPU_] |2198| 
        ADDB      ACC,#124              ; [CPU_] |2198| 
        MOVL      XAR1,ACC              ; [CPU_] |2198| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2198| 
        CMPB      AL,#35                ; [CPU_] |2198| 
        B         $C$L354,GT            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#35                ; [CPU_] |2198| 
        B         $C$L370,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#16                ; [CPU_] |2198| 
        B         $C$L390,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#17                ; [CPU_] |2198| 
        B         $C$L386,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#34                ; [CPU_] |2198| 
        B         $C$L377,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        B         $C$L394,UNC           ; [CPU_] |2198| 
        ; branch occurs ; [] |2198| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2198| 
        B         $C$L363,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#53                ; [CPU_] |2198| 
        B         $C$L359,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#70                ; [CPU_] |2198| 
        B         $C$L394,NEQ           ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2387,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2387| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2387| 
        MOV       AL,#1024              ; [CPU_] |2387| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2387| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2387| 
        ; call occurs [#_scia_getparam] ; [] |2387| 
        MOVL      XAR0,#86              ; [CPU_] |2387| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2387| 
	.dwpsn	file "../Source/prod.c",line 2389,column 8,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_atoi")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2389| 
        ; call occurs [#_atoi] ; [] |2389| 
        MOVL      XAR0,#86              ; [CPU_] |2389| 
        MOV       *-SP[47],AL           ; [CPU_] |2389| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2389| 
	.dwpsn	file "../Source/prod.c",line 2390,column 8,is_stmt,isa 0
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_puts")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2390| 
        ; call occurs [#_scia_puts] ; [] |2390| 
        MOV       AL,*-SP[47]           ; [CPU_] |2390| 
	.dwpsn	file "../Source/prod.c",line 2391,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2391| 
        B         $C$L356,EQ            ; [CPU_] |2391| 
        ; branchcc occurs ; [] |2391| 
        CMPB      AL,#7                 ; [CPU_] |2391| 
        B         $C$L357,EQ            ; [CPU_] |2391| 
        ; branchcc occurs ; [] |2391| 
	.dwpsn	file "../Source/prod.c",line 2392,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2392| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2392| 
        ; call occurs [#_scia_puts] ; [] |2392| 
$C$L356:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2394,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2394| 
        B         $C$L357,EQ            ; [CPU_] |2394| 
        ; branchcc occurs ; [] |2394| 
        CMPB      AL,#7                 ; [CPU_] |2394| 
        B         $C$L355,NEQ           ; [CPU_] |2394| 
        ; branchcc occurs ; [] |2394| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2395,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2395| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2395| 
        ; call occurs [#_scia_puts] ; [] |2395| 
        MOV       AL,*-SP[47]           ; [CPU_] |2395| 
	.dwpsn	file "../Source/prod.c",line 2397,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2397| 
        B         $C$L358,EQ            ; [CPU_] |2397| 
        ; branchcc occurs ; [] |2397| 
        CMPB      AL,#7                 ; [CPU_] |2397| 
        B         $C$L393,EQ            ; [CPU_] |2397| 
        ; branchcc occurs ; [] |2397| 
        B         $C$L394,UNC           ; [CPU_] |2397| 
        ; branch occurs ; [] |2397| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2399,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2399| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2399| 
        MOV       AL,*-SP[47]           ; [CPU_] |2399| 
	.dwpsn	file "../Source/prod.c",line 2400,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2400| 
	.dwpsn	file "../Source/prod.c",line 2401,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2401| 
        ; branch occurs ; [] |2401| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2362,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2362| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2362| 
        MOV       AL,#1024              ; [CPU_] |2362| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2362| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2362| 
        ; call occurs [#_scia_getparam] ; [] |2362| 
        MOVL      XAR0,#86              ; [CPU_] |2362| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2362| 
	.dwpsn	file "../Source/prod.c",line 2364,column 8,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_atoi")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2364| 
        ; call occurs [#_atoi] ; [] |2364| 
        MOVL      XAR0,#86              ; [CPU_] |2364| 
        MOV       *-SP[47],AL           ; [CPU_] |2364| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2364| 
	.dwpsn	file "../Source/prod.c",line 2365,column 8,is_stmt,isa 0
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_puts")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2365| 
        ; call occurs [#_scia_puts] ; [] |2365| 
        MOV       AL,*-SP[47]           ; [CPU_] |2365| 
	.dwpsn	file "../Source/prod.c",line 2366,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2366| 
        B         $C$L360,EQ            ; [CPU_] |2366| 
        ; branchcc occurs ; [] |2366| 
        CMPB      AL,#7                 ; [CPU_] |2366| 
        B         $C$L361,EQ            ; [CPU_] |2366| 
        ; branchcc occurs ; [] |2366| 
	.dwpsn	file "../Source/prod.c",line 2367,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2367| 
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_puts")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2367| 
        ; call occurs [#_scia_puts] ; [] |2367| 
$C$L360:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2369,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2369| 
        B         $C$L361,EQ            ; [CPU_] |2369| 
        ; branchcc occurs ; [] |2369| 
        CMPB      AL,#7                 ; [CPU_] |2369| 
        B         $C$L359,NEQ           ; [CPU_] |2369| 
        ; branchcc occurs ; [] |2369| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2370,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2370| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2370| 
        ; call occurs [#_scia_puts] ; [] |2370| 
        MOV       AL,*-SP[47]           ; [CPU_] |2370| 
	.dwpsn	file "../Source/prod.c",line 2372,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2372| 
        B         $C$L362,EQ            ; [CPU_] |2372| 
        ; branchcc occurs ; [] |2372| 
        CMPB      AL,#7                 ; [CPU_] |2372| 
        B         $C$L393,EQ            ; [CPU_] |2372| 
        ; branchcc occurs ; [] |2372| 
        B         $C$L394,UNC           ; [CPU_] |2372| 
        ; branch occurs ; [] |2372| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2374,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2374| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2374| 
        MOV       AL,*-SP[47]           ; [CPU_] |2374| 
	.dwpsn	file "../Source/prod.c",line 2375,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2375| 
	.dwpsn	file "../Source/prod.c",line 2376,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2376| 
        ; branch occurs ; [] |2376| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2328,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2328| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2328| 
        MOV       AL,#1024              ; [CPU_] |2328| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2328| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2328| 
        ; call occurs [#_scia_getparam] ; [] |2328| 
        MOVL      XAR0,#86              ; [CPU_] |2328| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2328| 
	.dwpsn	file "../Source/prod.c",line 2331,column 8,is_stmt,isa 0
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_atoi")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2331| 
        ; call occurs [#_atoi] ; [] |2331| 
        MOVL      XAR0,#86              ; [CPU_] |2331| 
        MOV       *-SP[47],AL           ; [CPU_] |2331| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2331| 
	.dwpsn	file "../Source/prod.c",line 2332,column 8,is_stmt,isa 0
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_puts")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2332| 
        ; call occurs [#_scia_puts] ; [] |2332| 
        MOV       AL,*-SP[47]           ; [CPU_] |2332| 
	.dwpsn	file "../Source/prod.c",line 2333,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2333| 
        B         $C$L364,EQ            ; [CPU_] |2333| 
        ; branchcc occurs ; [] |2333| 
        CMPB      AL,#3                 ; [CPU_] |2333| 
        B         $C$L365,EQ            ; [CPU_] |2333| 
        ; branchcc occurs ; [] |2333| 
        CMPB      AL,#4                 ; [CPU_] |2333| 
        B         $C$L366,EQ            ; [CPU_] |2333| 
        ; branchcc occurs ; [] |2333| 
        CMPB      AL,#7                 ; [CPU_] |2333| 
        B         $C$L367,EQ            ; [CPU_] |2333| 
        ; branchcc occurs ; [] |2333| 
	.dwpsn	file "../Source/prod.c",line 2334,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2334| 
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2334| 
        ; call occurs [#_scia_puts] ; [] |2334| 
$C$L364:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2336,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2336| 
        B         $C$L367,EQ            ; [CPU_] |2336| 
        ; branchcc occurs ; [] |2336| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2336| 
        B         $C$L367,EQ            ; [CPU_] |2336| 
        ; branchcc occurs ; [] |2336| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2336| 
        B         $C$L367,EQ            ; [CPU_] |2336| 
        ; branchcc occurs ; [] |2336| 
        CMPB      AL,#7                 ; [CPU_] |2336| 
        B         $C$L363,NEQ           ; [CPU_] |2336| 
        ; branchcc occurs ; [] |2336| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2337,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2337| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_puts")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2337| 
        ; call occurs [#_scia_puts] ; [] |2337| 
        MOV       AL,*-SP[47]           ; [CPU_] |2337| 
	.dwpsn	file "../Source/prod.c",line 2339,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2339| 
        B         $C$L369,EQ            ; [CPU_] |2339| 
        ; branchcc occurs ; [] |2339| 
        CMPB      AL,#3                 ; [CPU_] |2339| 
        B         $C$L368,EQ            ; [CPU_] |2339| 
        ; branchcc occurs ; [] |2339| 
        CMPB      AL,#4                 ; [CPU_] |2339| 
        B         $C$L385,EQ            ; [CPU_] |2339| 
        ; branchcc occurs ; [] |2339| 
        CMPB      AL,#7                 ; [CPU_] |2339| 
        B         $C$L393,EQ            ; [CPU_] |2339| 
        ; branchcc occurs ; [] |2339| 
        B         $C$L394,UNC           ; [CPU_] |2339| 
        ; branch occurs ; [] |2339| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2345,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2345| 
        MOV       AH,#15820             ; [CPU_] |2345| 
	.dwpsn	file "../Source/prod.c",line 2347,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2347| 
        ; branch occurs ; [] |2347| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2341,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2341| 
        MOV       AH,#15649             ; [CPU_] |2341| 
	.dwpsn	file "../Source/prod.c",line 2343,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2343| 
        ; branch occurs ; [] |2343| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2294,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2294| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2294| 
        MOV       AL,#1024              ; [CPU_] |2294| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2294| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2294| 
        ; call occurs [#_scia_getparam] ; [] |2294| 
        MOVL      XAR0,#86              ; [CPU_] |2294| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2294| 
	.dwpsn	file "../Source/prod.c",line 2297,column 8,is_stmt,isa 0
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_atoi")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2297| 
        ; call occurs [#_atoi] ; [] |2297| 
        MOVL      XAR0,#86              ; [CPU_] |2297| 
        MOV       *-SP[47],AL           ; [CPU_] |2297| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2297| 
	.dwpsn	file "../Source/prod.c",line 2298,column 8,is_stmt,isa 0
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_puts")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2298| 
        ; call occurs [#_scia_puts] ; [] |2298| 
        MOV       AL,*-SP[47]           ; [CPU_] |2298| 
	.dwpsn	file "../Source/prod.c",line 2299,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2299| 
        B         $C$L371,EQ            ; [CPU_] |2299| 
        ; branchcc occurs ; [] |2299| 
        CMPB      AL,#3                 ; [CPU_] |2299| 
        B         $C$L372,EQ            ; [CPU_] |2299| 
        ; branchcc occurs ; [] |2299| 
        CMPB      AL,#4                 ; [CPU_] |2299| 
        B         $C$L373,EQ            ; [CPU_] |2299| 
        ; branchcc occurs ; [] |2299| 
        CMPB      AL,#7                 ; [CPU_] |2299| 
        B         $C$L374,EQ            ; [CPU_] |2299| 
        ; branchcc occurs ; [] |2299| 
	.dwpsn	file "../Source/prod.c",line 2300,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2300| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2300| 
        ; call occurs [#_scia_puts] ; [] |2300| 
$C$L371:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2302,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2302| 
        B         $C$L374,EQ            ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2302| 
        B         $C$L374,EQ            ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2302| 
        B         $C$L374,EQ            ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
        CMPB      AL,#7                 ; [CPU_] |2302| 
        B         $C$L370,NEQ           ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2303,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2303| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_puts")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2303| 
        ; call occurs [#_scia_puts] ; [] |2303| 
        MOV       AL,*-SP[47]           ; [CPU_] |2303| 
	.dwpsn	file "../Source/prod.c",line 2305,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2305| 
        B         $C$L376,EQ            ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
        CMPB      AL,#3                 ; [CPU_] |2305| 
        B         $C$L385,EQ            ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
        CMPB      AL,#4                 ; [CPU_] |2305| 
        B         $C$L375,EQ            ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
        CMPB      AL,#7                 ; [CPU_] |2305| 
        B         $C$L393,EQ            ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
        B         $C$L394,UNC           ; [CPU_] |2305| 
        ; branch occurs ; [] |2305| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2315,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2315| 
        MOV       AH,#16672             ; [CPU_] |2315| 
	.dwpsn	file "../Source/prod.c",line 2317,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2317| 
        ; branch occurs ; [] |2317| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2307,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2307| 
        MOV       AH,#16073             ; [CPU_] |2307| 
	.dwpsn	file "../Source/prod.c",line 2309,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2309| 
        ; branch occurs ; [] |2309| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2260,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2260| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2260| 
        MOV       AL,#1024              ; [CPU_] |2260| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2260| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2260| 
        ; call occurs [#_scia_getparam] ; [] |2260| 
        MOVL      XAR0,#86              ; [CPU_] |2260| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2260| 
	.dwpsn	file "../Source/prod.c",line 2263,column 8,is_stmt,isa 0
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_atoi")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2263| 
        ; call occurs [#_atoi] ; [] |2263| 
        MOVL      XAR0,#86              ; [CPU_] |2263| 
        MOV       *-SP[47],AL           ; [CPU_] |2263| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2263| 
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2264| 
        ; call occurs [#_scia_puts] ; [] |2264| 
        MOV       AL,*-SP[47]           ; [CPU_] |2264| 
	.dwpsn	file "../Source/prod.c",line 2265,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2265| 
        B         $C$L378,EQ            ; [CPU_] |2265| 
        ; branchcc occurs ; [] |2265| 
        CMPB      AL,#3                 ; [CPU_] |2265| 
        B         $C$L379,EQ            ; [CPU_] |2265| 
        ; branchcc occurs ; [] |2265| 
        CMPB      AL,#4                 ; [CPU_] |2265| 
        B         $C$L380,EQ            ; [CPU_] |2265| 
        ; branchcc occurs ; [] |2265| 
        CMPB      AL,#7                 ; [CPU_] |2265| 
        B         $C$L381,EQ            ; [CPU_] |2265| 
        ; branchcc occurs ; [] |2265| 
	.dwpsn	file "../Source/prod.c",line 2266,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2266| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_puts")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2266| 
        ; call occurs [#_scia_puts] ; [] |2266| 
$C$L378:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2268,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2268| 
        B         $C$L381,EQ            ; [CPU_] |2268| 
        ; branchcc occurs ; [] |2268| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2268| 
        B         $C$L381,EQ            ; [CPU_] |2268| 
        ; branchcc occurs ; [] |2268| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2268| 
        B         $C$L381,EQ            ; [CPU_] |2268| 
        ; branchcc occurs ; [] |2268| 
        CMPB      AL,#7                 ; [CPU_] |2268| 
        B         $C$L377,NEQ           ; [CPU_] |2268| 
        ; branchcc occurs ; [] |2268| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2269,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2269| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2269| 
        ; call occurs [#_scia_puts] ; [] |2269| 
        MOV       AL,*-SP[47]           ; [CPU_] |2269| 
	.dwpsn	file "../Source/prod.c",line 2271,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2271| 
        B         $C$L385,EQ            ; [CPU_] |2271| 
        ; branchcc occurs ; [] |2271| 
        CMPB      AL,#3                 ; [CPU_] |2271| 
        B         $C$L384,EQ            ; [CPU_] |2271| 
        ; branchcc occurs ; [] |2271| 
        CMPB      AL,#4                 ; [CPU_] |2271| 
        B         $C$L382,EQ            ; [CPU_] |2271| 
        ; branchcc occurs ; [] |2271| 
        CMPB      AL,#7                 ; [CPU_] |2271| 
        B         $C$L393,EQ            ; [CPU_] |2271| 
        ; branchcc occurs ; [] |2271| 
        B         $C$L394,UNC           ; [CPU_] |2271| 
        ; branch occurs ; [] |2271| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2281,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2281| 
        MOV       AH,#16843             ; [CPU_] |2281| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2281| 
        MOV       AL,*-SP[47]           ; [CPU_] |2281| 
	.dwpsn	file "../Source/prod.c",line 2282,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2282| 
	.dwpsn	file "../Source/prod.c",line 2283,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2283| 
        ; branch occurs ; [] |2283| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2277| 
        MOV       AH,#16418             ; [CPU_] |2277| 
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2279| 
        ; branch occurs ; [] |2279| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2273,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2273| 
	.dwpsn	file "../Source/prod.c",line 2275,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2275| 
        ; branch occurs ; [] |2275| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2231,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2231| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2231| 
        MOV       AL,#1024              ; [CPU_] |2231| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2231| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2231| 
        ; call occurs [#_scia_getparam] ; [] |2231| 
        MOVL      XAR0,#86              ; [CPU_] |2231| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_atoi")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2233| 
        ; call occurs [#_atoi] ; [] |2233| 
        MOVL      XAR0,#86              ; [CPU_] |2233| 
        MOV       *-SP[47],AL           ; [CPU_] |2233| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2233| 
	.dwpsn	file "../Source/prod.c",line 2234,column 8,is_stmt,isa 0
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_scia_puts")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2234| 
        ; call occurs [#_scia_puts] ; [] |2234| 
        MOV       AL,*-SP[47]           ; [CPU_] |2234| 
	.dwpsn	file "../Source/prod.c",line 2235,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2235| 
        B         $C$L388,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2235| 
        B         $C$L387,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
	.dwpsn	file "../Source/prod.c",line 2236,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2236| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_scia_puts")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2236| 
        ; call occurs [#_scia_puts] ; [] |2236| 
$C$L387:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2238,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2238| 
        B         $C$L388,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2238| 
        B         $C$L386,NEQ           ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2239,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2239| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2239| 
        ; call occurs [#_scia_puts] ; [] |2239| 
        MOV       AL,*-SP[47]           ; [CPU_] |2239| 
	.dwpsn	file "../Source/prod.c",line 2241,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#1                 ; [CPU_] |2241| 
        B         $C$L396,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#7                 ; [CPU_] |2241| 
        B         $C$L393,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        B         $C$L394,UNC           ; [CPU_] |2241| 
        ; branch occurs ; [] |2241| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2243,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2243| 
        MOV       AH,#16397             ; [CPU_] |2243| 
	.dwpsn	file "../Source/prod.c",line 2245,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2245| 
        ; branch occurs ; [] |2245| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2202,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2202| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2202| 
        MOV       AL,#1024              ; [CPU_] |2202| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2202| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2202| 
        ; call occurs [#_scia_getparam] ; [] |2202| 
        MOVL      XAR0,#86              ; [CPU_] |2202| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2202| 
	.dwpsn	file "../Source/prod.c",line 2204,column 8,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_atoi")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2204| 
        ; call occurs [#_atoi] ; [] |2204| 
        MOVL      XAR0,#86              ; [CPU_] |2204| 
        MOV       *-SP[47],AL           ; [CPU_] |2204| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2204| 
	.dwpsn	file "../Source/prod.c",line 2205,column 8,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_scia_puts")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2205| 
        ; call occurs [#_scia_puts] ; [] |2205| 
        MOV       AL,*-SP[47]           ; [CPU_] |2205| 
	.dwpsn	file "../Source/prod.c",line 2206,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2206| 
        B         $C$L392,EQ            ; [CPU_] |2206| 
        ; branchcc occurs ; [] |2206| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2206| 
        B         $C$L391,EQ            ; [CPU_] |2206| 
        ; branchcc occurs ; [] |2206| 
	.dwpsn	file "../Source/prod.c",line 2207,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2207| 
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2207| 
        ; call occurs [#_scia_puts] ; [] |2207| 
$C$L391:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2209,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2209| 
        B         $C$L392,EQ            ; [CPU_] |2209| 
        ; branchcc occurs ; [] |2209| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2209| 
        B         $C$L390,NEQ           ; [CPU_] |2209| 
        ; branchcc occurs ; [] |2209| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2210,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2210| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2210| 
        ; call occurs [#_scia_puts] ; [] |2210| 
        MOV       AL,*-SP[47]           ; [CPU_] |2210| 
	.dwpsn	file "../Source/prod.c",line 2212,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
        CMPB      AL,#1                 ; [CPU_] |2212| 
        B         $C$L395,EQ            ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
        CMPB      AL,#7                 ; [CPU_] |2212| 
        B         $C$L394,NEQ           ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2222,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2222| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2222| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2222| 
        MOV       AL,#0                 ; [CPU_] |2222| 
        MOV       AH,#17096             ; [CPU_] |2222| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2222| 
        ; call occurs [#FS$$DIV] ; [] |2222| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2222| 
        MOV       AL,*-SP[47]           ; [CPU_] |2222| 
	.dwpsn	file "../Source/prod.c",line 2223,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2223| 
        MOV       *-SP[47],AL           ; [CPU_] |2223| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2413| 
        MOV       AH,#0                 ; [CPU_] |2413| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2413| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2413| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2413| 
        ; call occurs [#FS$$CMP] ; [] |2413| 
        CMPB      AL,#0                 ; [CPU_] |2413| 
        B         $C$L399,NEQ           ; [CPU_] |2413| 
        ; branchcc occurs ; [] |2413| 
	.dwpsn	file "../Source/prod.c",line 2414,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2414| 
	.dwpsn	file "../Source/prod.c",line 2415,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2415| 
        ; branch occurs ; [] |2415| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2218,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2218| 
        MOV       AH,#16104             ; [CPU_] |2218| 
	.dwpsn	file "../Source/prod.c",line 2220,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2220| 
        ; branch occurs ; [] |2220| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2214,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2214| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2214| 
        MOV       AL,*-SP[47]           ; [CPU_] |2214| 
	.dwpsn	file "../Source/prod.c",line 2215,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2215| 
$C$L398:    
        MOV       *-SP[47],AL           ; [CPU_] |2215| 
$C$L399:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2418,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2418| 
        B         $C$L402,EQ            ; [CPU_] |2418| 
        ; branchcc occurs ; [] |2418| 
	.dwpsn	file "../Source/prod.c",line 2424,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2424| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2428| 
	.dwpsn	file "../Source/prod.c",line 2425,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2425| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2428| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2425,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2425| 
	.dwpsn	file "../Source/prod.c",line 2428,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2428| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2428| 
        ADD       AL,*-SP[57]           ; [CPU_] |2428| 
        MOV       *-SP[3],AL            ; [CPU_] |2428| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2428| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2428| 
        ANDB      AL,#0x0f              ; [CPU_] |2428| 
        MOV       ACC,AL << 1           ; [CPU_] |2428| 
        ADDL      ACC,XAR6              ; [CPU_] |2428| 
        MOVL      XAR4,ACC              ; [CPU_] |2428| 
        MOVL      XAR0,#44              ; [CPU_] |2428| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2428| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2428| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2428| 
        MOVL      XAR4,XAR1             ; [CPU_] |2428| 
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_sprintf")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2428| 
        ; call occurs [#_sprintf] ; [] |2428| 
        MOVL      XAR4,XAR1             ; [CPU_] |2428| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_puts")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2430| 
        ; call occurs [#_scia_puts] ; [] |2430| 
        MOVL      XAR0,#40              ; [CPU_] |2430| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2430| 
	.dwpsn	file "../Source/prod.c",line 2432,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2432| 
	.dwpsn	file "../Source/prod.c",line 2426,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2426| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2433,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2433| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2433| 
        CMPL      ACC,XAR6              ; [CPU_] |2433| 
        B         $C$L401,NEQ           ; [CPU_] |2433| 
        ; branchcc occurs ; [] |2433| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2434,column 8,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_update_units")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2434| 
        ; call occurs [#_update_units] ; [] |2434| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2436,column 8,is_stmt,isa 0
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2436| 
        ; call occurs [#_ad7738_setcal] ; [] |2436| 
        MOVL      XAR0,#78              ; [CPU_] |2436| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2436| 
	.dwpsn	file "../Source/prod.c",line 2437,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2437| 
        MOVL      XAR4,ACC              ; [CPU_] |2437| 
        MOVL      XAR0,#88              ; [CPU_] |2437| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2437| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2437| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2437| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2437| 
        MOVL      XAR0,#88              ; [CPU_] |2437| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2437| 
	.dwpsn	file "../Source/prod.c",line 2438,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2438| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2438| 
        ; call occurs [#_ad7738_resetvall] ; [] |2438| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2432,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2432| 
        ADDB      XAR1,#10              ; [CPU_] |2432| 
        MOV       AL,*-SP[58]           ; [CPU_] |2432| 
        CMPB      AL,#4                 ; [CPU_] |2432| 
        B         $C$L400,LO            ; [CPU_] |2432| 
        ; branchcc occurs ; [] |2432| 
        B         $C$L634,UNC           ; [CPU_] |2432| 
        ; branch occurs ; [] |2432| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2419,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2419| 
	.dwpsn	file "../Source/prod.c",line 2421,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2421| 
        ; branch occurs ; [] |2421| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2175,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2175| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2175| 
        MOVL      XAR0,#44              ; [CPU_] |2175| 
        ADD       AL,*-SP[57]           ; [CPU_] |2175| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2175| 
        MOV       *-SP[3],AL            ; [CPU_] |2175| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2175| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2175| 
        MOV       *-SP[47],AL           ; [CPU_] |2175| 
        MOVL      XAR4,XAR1             ; [CPU_] |2175| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_sprintf")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2175| 
        ; call occurs [#_sprintf] ; [] |2175| 
	.dwpsn	file "../Source/prod.c",line 2177,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2177| 
        MOV       AL,#1024              ; [CPU_] |2177| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2177| 
	.dwpsn	file "../Source/prod.c",line 2175,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2175| 
	.dwpsn	file "../Source/prod.c",line 2177,column 6,is_stmt,isa 0
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2177| 
        ; call occurs [#_scia_getparam] ; [] |2177| 
        MOVZ      AR6,AL                ; [CPU_] |2177| 
        CMPB      AL,#15                ; [CPU_] |2177| 
        B         $C$L404,LOS           ; [CPU_] |2177| 
        ; branchcc occurs ; [] |2177| 
	.dwpsn	file "../Source/prod.c",line 2181,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2181| 
        MOVB      XAR0,#15              ; [CPU_] |2181| 
	.dwpsn	file "../Source/prod.c",line 2180,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2180| 
	.dwpsn	file "../Source/prod.c",line 2181,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2181| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2183,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2183| 
        MOVB      AL,#152               ; [CPU_] |2183| 
        MOV       T,*-SP[57]            ; [CPU_] |2183| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2183| 
        MOVL      XAR0,#86              ; [CPU_] |2183| 
        MPYU      ACC,T,AL              ; [CPU_] |2183| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2183| 
        ADDL      ACC,XAR7              ; [CPU_] |2183| 
        ADDB      ACC,#98               ; [CPU_] |2183| 
        MOVL      XAR1,ACC              ; [CPU_] |2183| 
        MOVL      XAR4,ACC              ; [CPU_] |2183| 
        MOVB      AH,#1                 ; [CPU_] |2183| 
        ADD       AH,AR6                ; [CPU_] |2183| 
        MOVU      ACC,AH                ; [CPU_] |2183| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_memcpy")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2183| 
        ; call occurs [#_memcpy] ; [] |2183| 
        MOVL      XAR0,#86              ; [CPU_] |2183| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2183| 
	.dwpsn	file "../Source/prod.c",line 2185,column 6,is_stmt,isa 0
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_scia_puts")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2185| 
        ; call occurs [#_scia_puts] ; [] |2185| 
	.dwpsn	file "../Source/prod.c",line 2186,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2186| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_puts")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2186| 
        ; call occurs [#_scia_puts] ; [] |2186| 
	.dwpsn	file "../Source/prod.c",line 2189,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2189| 
        MOV       AL,*-SP[47]           ; [CPU_] |2189| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2189| 
        MOV       *-SP[3],AL            ; [CPU_] |2189| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2189| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2189| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2189| 
        MOVL      XAR4,XAR1             ; [CPU_] |2189| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_sprintf")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2189| 
        ; call occurs [#_sprintf] ; [] |2189| 
        MOVL      XAR4,XAR1             ; [CPU_] |2189| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2191,column 6,is_stmt,isa 0
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_scia_puts")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2191| 
        ; call occurs [#_scia_puts] ; [] |2191| 
	.dwpsn	file "../Source/prod.c",line 2192,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2192| 
        ; branch occurs ; [] |2192| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2486,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2486| 
        MOVB      AL,#152               ; [CPU_] |2486| 
        MOV       T,*-SP[57]            ; [CPU_] |2486| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2486| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2486| 
        MPYU      ACC,T,AL              ; [CPU_] |2486| 
        MOVB      XAR0,#124             ; [CPU_] |2486| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2486| 
        ADDL      ACC,XAR6              ; [CPU_] |2486| 
        MOVL      XAR1,ACC              ; [CPU_] |2486| 
        MOVB      AL,#1                 ; [CPU_] |2486| 
        ADD       AL,*-SP[57]           ; [CPU_] |2486| 
        MOV       *-SP[47],AL           ; [CPU_] |2486| 
        MOV       *-SP[3],AL            ; [CPU_] |2486| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2486| 
        MOVL      XAR0,#70              ; [CPU_] |2486| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2486| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2486| 
        MOV       ACC,AL << 1           ; [CPU_] |2486| 
        ADDL      ACC,XAR6              ; [CPU_] |2486| 
        MOVL      XAR4,ACC              ; [CPU_] |2486| 
        MOVL      XAR0,#44              ; [CPU_] |2486| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2486| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2486| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2486| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_sprintf")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2486| 
        ; call occurs [#_sprintf] ; [] |2486| 
        MOVL      XAR0,#44              ; [CPU_] |2486| 
	.dwpsn	file "../Source/prod.c",line 2488,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2488| 
	.dwpsn	file "../Source/prod.c",line 2486,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2486| 
	.dwpsn	file "../Source/prod.c",line 2488,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2488| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2488| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2488| 
        ; call occurs [#_scia_getparam] ; [] |2488| 
        MOVL      XAR0,#86              ; [CPU_] |2488| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2488,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2488| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_strtod")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2489,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2489| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2489| 
        MOVL      XAR0,#86              ; [CPU_] |2489| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2489| 
	.dwpsn	file "../Source/prod.c",line 2490,column 6,is_stmt,isa 0
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_scia_puts")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2490| 
        ; call occurs [#_scia_puts] ; [] |2490| 
	.dwpsn	file "../Source/prod.c",line 2491,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2491| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2491| 
        ; call occurs [#_scia_puts] ; [] |2491| 
	.dwpsn	file "../Source/prod.c",line 2493,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2493| 
        MOVL      XAR0,#44              ; [CPU_] |2493| 
        MOV       AL,*-SP[47]           ; [CPU_] |2493| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2493| 
        MOV       *-SP[3],AL            ; [CPU_] |2493| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2493| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_sprintf")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2493| 
        ; call occurs [#_sprintf] ; [] |2493| 
        MOVL      XAR0,#44              ; [CPU_] |2493| 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2494| 
	.dwpsn	file "../Source/prod.c",line 2493,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2493| 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2494| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2494| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2494| 
        ; call occurs [#_scia_getparam] ; [] |2494| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_strtod")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2495,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2495| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2495| 
        MOVL      XAR0,#86              ; [CPU_] |2495| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2495| 
	.dwpsn	file "../Source/prod.c",line 2496,column 6,is_stmt,isa 0
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_scia_puts")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2496| 
        ; call occurs [#_scia_puts] ; [] |2496| 
	.dwpsn	file "../Source/prod.c",line 2497,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2497| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2497| 
        ; call occurs [#_scia_puts] ; [] |2497| 
	.dwpsn	file "../Source/prod.c",line 2500,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2500| 
        MOVB      XAR0,#228             ; [CPU_] |2500| 
        MOV       AL,*-SP[47]           ; [CPU_] |2500| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2500| 
        MOV       *-SP[3],AL            ; [CPU_] |2500| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2500| 
        MOVB      XAR0,#230             ; [CPU_] |2500| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2500| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2500| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2500| 
	.dwpsn	file "../Source/prod.c",line 2509,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2509| 
        ; branch occurs ; [] |2509| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2449,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2449| 
        MOV       AL,*-SP[47]           ; [CPU_] |2449| 
        MOVL      XAR0,#44              ; [CPU_] |2449| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2449| 
        MOV       *-SP[3],AL            ; [CPU_] |2449| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2449| 
        MOVL      XAR4,XAR1             ; [CPU_] |2449| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_sprintf")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2449| 
        ; call occurs [#_sprintf] ; [] |2449| 
	.dwpsn	file "../Source/prod.c",line 2450,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2450| 
	.dwpsn	file "../Source/prod.c",line 2449,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2449| 
	.dwpsn	file "../Source/prod.c",line 2450,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2450| 
        MOV       AL,#1024              ; [CPU_] |2450| 
        MOVL      XAR5,XAR1             ; [CPU_] |2450| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2450| 
        ; call occurs [#_scia_getparam] ; [] |2450| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_strtod")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2452,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2452| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2452| 
        ; call occurs [#_scia_puts] ; [] |2452| 
	.dwpsn	file "../Source/prod.c",line 2454,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2454| 
        MOV       AH,#0                 ; [CPU_] |2454| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2454| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2454| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2454| 
        ; call occurs [#FS$$CMP] ; [] |2454| 
        CMPB      AL,#0                 ; [CPU_] |2454| 
        B         $C$L412,EQ            ; [CPU_] |2454| 
        ; branchcc occurs ; [] |2454| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2458| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_scia_puts")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2458| 
        ; call occurs [#_scia_puts] ; [] |2458| 
	.dwpsn	file "../Source/prod.c",line 2459,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2459| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2459| 
        MOVB      AL,#152               ; [CPU_] |2459| 
        MOV       T,*-SP[57]            ; [CPU_] |2459| 
        MPYU      ACC,T,AL              ; [CPU_] |2459| 
        ADDL      ACC,XAR6              ; [CPU_] |2459| 
        MOVL      XAR1,ACC              ; [CPU_] |2459| 
        MOVB      XAR0,#224             ; [CPU_] |2459| 
	.dwpsn	file "../Source/prod.c",line 2462,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2462| 
	.dwpsn	file "../Source/prod.c",line 2459,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2459| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2459| 
	.dwpsn	file "../Source/prod.c",line 2462,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2462| 
        MOV       AL,*-SP[47]           ; [CPU_] |2462| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2462| 
        MOV       *-SP[3],AL            ; [CPU_] |2462| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2462| 
        MOVL      XAR0,#44              ; [CPU_] |2462| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2462| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_sprintf")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2462| 
        ; call occurs [#_sprintf] ; [] |2462| 
        MOVL      XAR0,#44              ; [CPU_] |2462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2462| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_scia_puts")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2464| 
        ; call occurs [#_scia_puts] ; [] |2464| 
	.dwpsn	file "../Source/prod.c",line 2460,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2460| 
	.dwpsn	file "../Source/prod.c",line 2466,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2466| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2466| 
        CMPB      AL,#247               ; [CPU_] |2466| 
        B         $C$L634,NEQ           ; [CPU_] |2466| 
        ; branchcc occurs ; [] |2466| 
	.dwpsn	file "../Source/prod.c",line 2468,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2468| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2468| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2468| 
        MOV       AL,#0                 ; [CPU_] |2468| 
        MOV       AH,#17096             ; [CPU_] |2468| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2468| 
        ; call occurs [#FS$$DIV] ; [] |2468| 
        MOVB      XAR0,#126             ; [CPU_] |2468| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2468| 
        MOVL      XAR0,#40              ; [CPU_] |2468| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2468| 
	.dwpsn	file "../Source/prod.c",line 2471,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2471| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2472,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2472| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2472| 
        CMPL      ACC,XAR6              ; [CPU_] |2472| 
        B         $C$L411,NEQ           ; [CPU_] |2472| 
        ; branchcc occurs ; [] |2472| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2475,column 9,is_stmt,isa 0
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2475| 
        ; call occurs [#_ad7738_setcal] ; [] |2475| 
        MOVL      XAR0,#78              ; [CPU_] |2475| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2475| 
	.dwpsn	file "../Source/prod.c",line 2476,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2476| 
        MOVL      XAR4,ACC              ; [CPU_] |2476| 
        MOVL      XAR0,#88              ; [CPU_] |2476| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2476| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2476| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2476| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2476| 
        MOVL      XAR0,#88              ; [CPU_] |2476| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2476| 
	.dwpsn	file "../Source/prod.c",line 2477,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2477| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2477| 
        ; call occurs [#_ad7738_resetvall] ; [] |2477| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2471,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2471| 
        ADDB      XAR1,#10              ; [CPU_] |2471| 
        MOV       AL,*-SP[58]           ; [CPU_] |2471| 
        CMPB      AL,#4                 ; [CPU_] |2471| 
        B         $C$L410,LO            ; [CPU_] |2471| 
        ; branchcc occurs ; [] |2471| 
        B         $C$L634,UNC           ; [CPU_] |2471| 
        ; branch occurs ; [] |2471| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2456,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2456| 
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_scia_puts")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2456| 
        ; call occurs [#_scia_puts] ; [] |2456| 
	.dwpsn	file "../Source/prod.c",line 2448,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2448| 
        ; branch occurs ; [] |2448| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2164,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2164| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_scia_puts")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2164| 
        ; call occurs [#_scia_puts] ; [] |2164| 
	.dwpsn	file "../Source/prod.c",line 2154,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2154| 
        ; branch occurs ; [] |2154| 
$C$L414:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3126,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3126| 
        B         $C$L625,LO            ; [CPU_] |3126| 
        ; branchcc occurs ; [] |3126| 
	.dwpsn	file "../Source/prod.c",line 3129,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3129| 
        CMPB      AL,#83                ; [CPU_] |3129| 
        B         $C$L415,GT            ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        CMPB      AL,#83                ; [CPU_] |3129| 
        B         $C$L419,EQ            ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        CMPB      AL,#73                ; [CPU_] |3129| 
        B         $C$L424,EQ            ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        CMPB      AL,#76                ; [CPU_] |3129| 
        B         $C$L428,EQ            ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        CMPB      AL,#80                ; [CPU_] |3129| 
        B         $C$L421,EQ            ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        B         $C$L625,UNC           ; [CPU_] |3129| 
        ; branch occurs ; [] |3129| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3129| 
        B         $C$L417,EQ            ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        CMPB      AL,#86                ; [CPU_] |3129| 
        B         $C$L625,NEQ           ; [CPU_] |3129| 
        ; branchcc occurs ; [] |3129| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3157,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3157| 
        B         $C$L416,LOS           ; [CPU_] |3157| 
        ; branchcc occurs ; [] |3157| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3157,column 6,is_stmt,isa 0
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_atoi")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3157| 
        ; call occurs [#_atoi] ; [] |3157| 
        CMPB      AL,#4                 ; [CPU_] |3157| 
        B         $C$L416,GT            ; [CPU_] |3157| 
        ; branchcc occurs ; [] |3157| 
        CMPB      AL,#0                 ; [CPU_] |3157| 
        B         $C$L416,LEQ           ; [CPU_] |3157| 
        ; branchcc occurs ; [] |3157| 
	.dwpsn	file "../Source/prod.c",line 3159,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3159| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3159| 
        ADD       ACC,AR5               ; [CPU_] |3159| 
        MOVL      XAR4,ACC              ; [CPU_] |3159| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3159| 
	.dwpsn	file "../Source/prod.c",line 3160,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3160| 
        ; branch occurs ; [] |3160| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3161,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3161| 
        B         $C$L426,UNC           ; [CPU_] |3161| 
        ; branch occurs ; [] |3161| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3133,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3133| 
        B         $C$L418,LOS           ; [CPU_] |3133| 
        ; branchcc occurs ; [] |3133| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3133,column 6,is_stmt,isa 0
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_atoi")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3133| 
        ; call occurs [#_atoi] ; [] |3133| 
        CMPB      AL,#4                 ; [CPU_] |3133| 
        MOVZ      AR4,AL                ; [CPU_] |3133| 
        B         $C$L418,GT            ; [CPU_] |3133| 
        ; branchcc occurs ; [] |3133| 
        CMPB      AL,#0                 ; [CPU_] |3133| 
        B         $C$L418,LEQ           ; [CPU_] |3133| 
        ; branchcc occurs ; [] |3133| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3135,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3135| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3135| 
	.dwpsn	file "../Source/prod.c",line 3138,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3138| 
        ; branch occurs ; [] |3138| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3139,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3139| 
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3139| 
        ; call occurs [#_ad7738_resettare] ; [] |3139| 
	.dwpsn	file "../Source/prod.c",line 3140,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3140| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3140| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3140| 
	.dwpsn	file "../Source/prod.c",line 3141,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3141| 
        B         $C$L426,UNC           ; [CPU_] |3141| 
        ; branch occurs ; [] |3141| 
$C$L419:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3167,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3167| 
        B         $C$L420,LOS           ; [CPU_] |3167| 
        ; branchcc occurs ; [] |3167| 
        MOVL      ACC,XAR4              ; [CPU_] |3167| 
        MOVL      XAR0,#66              ; [CPU_] |3167| 
        ADDB      ACC,#2                ; [CPU_] |3167| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3167| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3167| 
        CMPB      AL,#67                ; [CPU_] |3167| 
        B         $C$L420,NEQ           ; [CPU_] |3167| 
        ; branchcc occurs ; [] |3167| 
	.dwpsn	file "../Source/prod.c",line 3168,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3168| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3168| 
        ; call occurs [#_shunt_switch] ; [] |3168| 
	.dwpsn	file "../Source/prod.c",line 3169,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3169| 
	.dwpsn	file "../Source/prod.c",line 3170,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3170| 
        ; branch occurs ; [] |3170| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3171,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3171| 
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3171| 
        ; call occurs [#_shunt_switch] ; [] |3171| 
	.dwpsn	file "../Source/prod.c",line 3172,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3172| 
        B         $C$L633,UNC           ; [CPU_] |3172| 
        ; branch occurs ; [] |3172| 
$C$L421:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3147,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3147| 
        B         $C$L423,LOS           ; [CPU_] |3147| 
        ; branchcc occurs ; [] |3147| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3147,column 6,is_stmt,isa 0
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_atoi")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3147| 
        ; call occurs [#_atoi] ; [] |3147| 
        CMPB      AL,#4                 ; [CPU_] |3147| 
        B         $C$L423,GT            ; [CPU_] |3147| 
        ; branchcc occurs ; [] |3147| 
        CMPB      AL,#0                 ; [CPU_] |3147| 
        B         $C$L423,LEQ           ; [CPU_] |3147| 
        ; branchcc occurs ; [] |3147| 
	.dwpsn	file "../Source/prod.c",line 3149,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3149| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3149| 
        ADD       ACC,AR5               ; [CPU_] |3149| 
        MOVL      XAR4,ACC              ; [CPU_] |3149| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3149| 
$C$L422:    
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3149| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3149| 
	.dwpsn	file "../Source/prod.c",line 3150,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3150| 
        ; branch occurs ; [] |3150| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3151,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3151| 
        B         $C$L422,UNC           ; [CPU_] |3151| 
        ; branch occurs ; [] |3151| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3186,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3186| 
        B         $C$L427,LOS           ; [CPU_] |3186| 
        ; branchcc occurs ; [] |3186| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3186,column 6,is_stmt,isa 0
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_atoi")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3186| 
        ; call occurs [#_atoi] ; [] |3186| 
        CMPB      AL,#2                 ; [CPU_] |3186| 
        B         $C$L427,GT            ; [CPU_] |3186| 
        ; branchcc occurs ; [] |3186| 
        CMPB      AL,#0                 ; [CPU_] |3186| 
        B         $C$L427,LEQ           ; [CPU_] |3186| 
        ; branchcc occurs ; [] |3186| 
	.dwpsn	file "../Source/prod.c",line 3188,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3188| 
        ADD       AR6,AL                ; [CPU_] |3188| 
        MOVL      XAR0,#78              ; [CPU_] |3188| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3188| 
        ADD       ACC,AR6               ; [CPU_] |3188| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3188| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3188| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3188| 
        ; call occurs [#_ad7738_resettare] ; [] |3188| 
	.dwpsn	file "../Source/prod.c",line 3189,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3189| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3189| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3189| 
	.dwpsn	file "../Source/prod.c",line 3190,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3190| 
$C$L426:    
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3190| 
        ; call occurs [#_ad7738_resetvall] ; [] |3190| 
	.dwpsn	file "../Source/prod.c",line 3191,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3191| 
        ; branch occurs ; [] |3191| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3192,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3192| 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3192| 
        ; call occurs [#_ad7738_resettare] ; [] |3192| 
	.dwpsn	file "../Source/prod.c",line 3193,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3193| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3193| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3193| 
	.dwpsn	file "../Source/prod.c",line 3194,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3194| 
        B         $C$L426,UNC           ; [CPU_] |3194| 
        ; branch occurs ; [] |3194| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3178,column 6,is_stmt,isa 0
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_atoi")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3178| 
        ; call occurs [#_atoi] ; [] |3178| 
	.dwpsn	file "../Source/prod.c",line 3181,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3181| 
        MOV       *-SP[58],AL           ; [CPU_] |3181| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3181| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3181| 
	.dwpsn	file "../Source/prod.c",line 3182,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3182| 
        ; branch occurs ; [] |3182| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1129,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1129| 
        CMPB      AL,#76                ; [CPU_] |1129| 
        B         $C$L430,GT            ; [CPU_] |1129| 
        ; branchcc occurs ; [] |1129| 
        CMPB      AL,#76                ; [CPU_] |1129| 
        B         $C$L438,EQ            ; [CPU_] |1129| 
        ; branchcc occurs ; [] |1129| 
        CMPB      AL,#65                ; [CPU_] |1129| 
        B         $C$L431,EQ            ; [CPU_] |1129| 
        ; branchcc occurs ; [] |1129| 
        CMPB      AL,#68                ; [CPU_] |1129| 
        B         $C$L442,EQ            ; [CPU_] |1129| 
        ; branchcc occurs ; [] |1129| 
        B         $C$L625,UNC           ; [CPU_] |1129| 
        ; branch occurs ; [] |1129| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1129| 
        B         $C$L441,EQ            ; [CPU_] |1129| 
        ; branchcc occurs ; [] |1129| 
        CMPB      AL,#83                ; [CPU_] |1129| 
        B         $C$L439,EQ            ; [CPU_] |1129| 
        ; branchcc occurs ; [] |1129| 
        B         $C$L625,UNC           ; [CPU_] |1129| 
        ; branch occurs ; [] |1129| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1134| 
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1135| 
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1134| 
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1135| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1135| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1135| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1135| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1135| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1135| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1135| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1135| 
        MOVL      XAR4,XAR1             ; [CPU_] |1135| 
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_sprintf")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1135| 
        ; call occurs [#_sprintf] ; [] |1135| 
	.dwpsn	file "../Source/prod.c",line 1137,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1137| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_scia_puts")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1137| 
        ; call occurs [#_scia_puts] ; [] |1137| 
	.dwpsn	file "../Source/prod.c",line 1138,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1138| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1138| 
        LSR       AL,8                  ; [CPU_] |1138| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1138| 
        MOV       *-SP[3],AL            ; [CPU_] |1138| 
        IN        AL,*(04004H)          ; [CPU_] |1138| 
        MOVL      XAR4,XAR1             ; [CPU_] |1138| 
        ANDB      AL,#0xff              ; [CPU_] |1138| 
        MOV       *-SP[4],AL            ; [CPU_] |1138| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_sprintf")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1138| 
        ; call occurs [#_sprintf] ; [] |1138| 
	.dwpsn	file "../Source/prod.c",line 1140,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1140| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_puts")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1140| 
        ; call occurs [#_scia_puts] ; [] |1140| 
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1141| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1141| 
        MOVL      XAR0,#44              ; [CPU_] |1141| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1141| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1141| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1141| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1141| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_sprintf")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1141| 
        ; call occurs [#_sprintf] ; [] |1141| 
        MOVL      XAR0,#44              ; [CPU_] |1141| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1141| 
	.dwpsn	file "../Source/prod.c",line 1142,column 6,is_stmt,isa 0
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_scia_puts")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1142| 
        ; call occurs [#_scia_puts] ; [] |1142| 
	.dwpsn	file "../Source/prod.c",line 1143,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1143| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1143| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1143| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1143| 
        MOVL      XAR0,#44              ; [CPU_] |1143| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1143| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1143| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_sprintf")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1143| 
        ; call occurs [#_sprintf] ; [] |1143| 
        MOVL      XAR0,#44              ; [CPU_] |1143| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1143| 
	.dwpsn	file "../Source/prod.c",line 1145,column 6,is_stmt,isa 0
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_scia_puts")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1145| 
        ; call occurs [#_scia_puts] ; [] |1145| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1147| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1147| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1147| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1147| 
        MOVL      XAR0,#72              ; [CPU_] |1147| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1147| 
        ADDL      ACC,XAR6              ; [CPU_] |1147| 
        MOVL      XAR4,ACC              ; [CPU_] |1147| 
        MOVL      XAR0,#44              ; [CPU_] |1147| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1147| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1147| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1147| 
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_sprintf")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1147| 
        ; call occurs [#_sprintf] ; [] |1147| 
        MOVL      XAR0,#44              ; [CPU_] |1147| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1147| 
	.dwpsn	file "../Source/prod.c",line 1149,column 6,is_stmt,isa 0
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_scia_puts")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1149| 
        ; call occurs [#_scia_puts] ; [] |1149| 
	.dwpsn	file "../Source/prod.c",line 1150,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1150| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1150| 
        B         $C$L432,EQ            ; [CPU_] |1150| 
        ; branchcc occurs ; [] |1150| 
        MOVB      XAR0,#34              ; [CPU_] |1150| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1150| 
        CMPB      AL,#1                 ; [CPU_] |1150| 
        B         $C$L433,NEQ           ; [CPU_] |1150| 
        ; branchcc occurs ; [] |1150| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1152,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1152| 
        MOVL      XAR0,#74              ; [CPU_] |1152| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1152| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1152| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1152| 
        ADDL      ACC,XAR6              ; [CPU_] |1152| 
        MOVL      XAR4,ACC              ; [CPU_] |1152| 
        MOVL      XAR0,#44              ; [CPU_] |1152| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1152| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1152| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1152| 
        MOVL      XAR4,XAR1             ; [CPU_] |1152| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_sprintf")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1152| 
        ; call occurs [#_sprintf] ; [] |1152| 
        MOVL      XAR4,XAR1             ; [CPU_] |1152| 
	.dwpsn	file "../Source/prod.c",line 1154,column 7,is_stmt,isa 0
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_scia_puts")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1154| 
        ; call occurs [#_scia_puts] ; [] |1154| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1156| 
        B         $C$L434,NEQ           ; [CPU_] |1156| 
        ; branchcc occurs ; [] |1156| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1156| 
        B         $C$L435,UNC           ; [CPU_] |1156| 
        ; branch occurs ; [] |1156| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1156| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1156| 
        MOVL      XAR0,#44              ; [CPU_] |1156| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1156| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1156| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1156| 
        MOVL      XAR4,XAR1             ; [CPU_] |1156| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_sprintf")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1156| 
        ; call occurs [#_sprintf] ; [] |1156| 
        MOVL      XAR4,XAR1             ; [CPU_] |1156| 
	.dwpsn	file "../Source/prod.c",line 1158,column 6,is_stmt,isa 0
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_scia_puts")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1158| 
        ; call occurs [#_scia_puts] ; [] |1158| 
	.dwpsn	file "../Source/prod.c",line 1160,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1160| 
        MOVB      XAR0,#38              ; [CPU_] |1160| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1160| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1160| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1160| 
        MOVL      XAR0,#44              ; [CPU_] |1160| 
        MOV       *-SP[3],AL            ; [CPU_] |1160| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1160| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_sprintf")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1160| 
        ; call occurs [#_sprintf] ; [] |1160| 
        MOVL      XAR0,#44              ; [CPU_] |1160| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1160| 
	.dwpsn	file "../Source/prod.c",line 1162,column 6,is_stmt,isa 0
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_scia_puts")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1162| 
        ; call occurs [#_scia_puts] ; [] |1162| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1164,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1164| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1165,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1165| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1165| 
        ; call occurs [#_scia_puts] ; [] |1165| 
        MOV       AL,*-SP[58]           ; [CPU_] |1165| 
	.dwpsn	file "../Source/prod.c",line 1166,column 7,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_print_channel")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1166| 
        ; call occurs [#_print_channel] ; [] |1166| 
	.dwpsn	file "../Source/prod.c",line 1167,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1167| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_print_sensor")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1167| 
        ; call occurs [#_print_sensor] ; [] |1167| 
	.dwpsn	file "../Source/prod.c",line 1164,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1164| 
        INC       *-SP[58]              ; [CPU_] |1164| 
        MOV       AL,*-SP[58]           ; [CPU_] |1164| 
        CMPB      AL,#4                 ; [CPU_] |1164| 
        B         $C$L436,LO            ; [CPU_] |1164| 
        ; branchcc occurs ; [] |1164| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1170| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_scia_puts")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1170| 
        ; call occurs [#_scia_puts] ; [] |1170| 
	.dwpsn	file "../Source/prod.c",line 1171,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1171| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1171| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1171| 
        MOVL      ACC,XAR4              ; [CPU_] |1171| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1171| 
        MOVL      XAR4,ACC              ; [CPU_] |1171| 
        MOVL      XAR0,#44              ; [CPU_] |1171| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1171| 
        MOV       *-SP[3],AL            ; [CPU_] |1171| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1171| 
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_sprintf")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1171| 
        ; call occurs [#_sprintf] ; [] |1171| 
        MOVL      XAR0,#44              ; [CPU_] |1171| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1171| 
	.dwpsn	file "../Source/prod.c",line 1173,column 6,is_stmt,isa 0
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_scia_puts")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1173| 
        ; call occurs [#_scia_puts] ; [] |1173| 
        MOVL      XAR0,#40              ; [CPU_] |1173| 
	.dwpsn	file "../Source/prod.c",line 1174,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1174| 
	.dwpsn	file "../Source/prod.c",line 1173,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1173| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1175,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1175| 
        MOVB      AL,#65                ; [CPU_] |1175| 
        MOVL      XAR0,#44              ; [CPU_] |1175| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1175| 
        ADD       AL,*-SP[47]           ; [CPU_] |1175| 
        MOV       *-SP[3],AL            ; [CPU_] |1175| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1175| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1175| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1175| 
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_sprintf")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1175| 
        ; call occurs [#_sprintf] ; [] |1175| 
        MOVL      XAR0,#44              ; [CPU_] |1175| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1175| 
	.dwpsn	file "../Source/prod.c",line 1177,column 7,is_stmt,isa 0
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1177| 
        ; call occurs [#_scia_puts] ; [] |1177| 
	.dwpsn	file "../Source/prod.c",line 1174,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1174| 
	.dwpsn	file "../Source/prod.c",line 1177,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1177| 
	.dwpsn	file "../Source/prod.c",line 1174,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1174| 
        B         $C$L437,LT            ; [CPU_] |1174| 
        ; branchcc occurs ; [] |1174| 
	.dwpsn	file "../Source/prod.c",line 1179,column 6,is_stmt,isa 0
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_print_vfd")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1179| 
        ; call occurs [#_print_vfd] ; [] |1179| 
	.dwpsn	file "../Source/prod.c",line 1180,column 6,is_stmt,isa 0
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_print_dac")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1180| 
        ; call occurs [#_print_dac] ; [] |1180| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1181,column 6,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_print_limits")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1181| 
        ; call occurs [#_print_limits] ; [] |1181| 
	.dwpsn	file "../Source/prod.c",line 1182,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1182| 
        ; branch occurs ; [] |1182| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1186,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1186| 
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_scia_puts")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1186| 
        ; call occurs [#_scia_puts] ; [] |1186| 
	.dwpsn	file "../Source/prod.c",line 1188,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1188| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1189,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1189| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1189| 
        MOVL      XAR0,#44              ; [CPU_] |1189| 
        ADD       AL,*-SP[57]           ; [CPU_] |1189| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1189| 
        MOVZ      AR1,AL                ; [CPU_] |1189| 
        MOV       *-SP[3],AL            ; [CPU_] |1189| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1189| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_sprintf")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1189| 
        ; call occurs [#_sprintf] ; [] |1189| 
        MOVL      XAR0,#44              ; [CPU_] |1189| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1189| 
	.dwpsn	file "../Source/prod.c",line 1190,column 7,is_stmt,isa 0
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_scia_puts")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1190| 
        ; call occurs [#_scia_puts] ; [] |1190| 
        MOV       AL,*-SP[57]           ; [CPU_] |1190| 
	.dwpsn	file "../Source/prod.c",line 1191,column 7,is_stmt,isa 0
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_print_sensor")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1191| 
        ; call occurs [#_print_sensor] ; [] |1191| 
	.dwpsn	file "../Source/prod.c",line 1188,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1188| 
        MOV       *-SP[57],AR1          ; [CPU_] |1188| 
        CMPB      AL,#20                ; [CPU_] |1188| 
        B         $C$L440,LO            ; [CPU_] |1188| 
        ; branchcc occurs ; [] |1188| 
        B         $C$L634,UNC           ; [CPU_] |1188| 
        ; branch occurs ; [] |1188| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1202,column 6,is_stmt,isa 0
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_print_dac")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1202| 
        ; call occurs [#_print_dac] ; [] |1202| 
	.dwpsn	file "../Source/prod.c",line 1203,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1203| 
        ; branch occurs ; [] |1203| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1197,column 6,is_stmt,isa 0
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_print_vfd")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1197| 
        ; call occurs [#_print_vfd] ; [] |1197| 
	.dwpsn	file "../Source/prod.c",line 1198,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1198| 
        ; branch occurs ; [] |1198| 
$C$L443:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2746,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2746| 
        B         $C$L625,LO            ; [CPU_] |2746| 
        ; branchcc occurs ; [] |2746| 
	.dwpsn	file "../Source/prod.c",line 2749,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2749| 
        CMPB      AL,#68                ; [CPU_] |2749| 
        B         $C$L444,EQ            ; [CPU_] |2749| 
        ; branchcc occurs ; [] |2749| 
        CMPB      AL,#83                ; [CPU_] |2749| 
        B         $C$L450,EQ            ; [CPU_] |2749| 
        ; branchcc occurs ; [] |2749| 
        B         $C$L625,UNC           ; [CPU_] |2749| 
        ; branch occurs ; [] |2749| 
$C$L444:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2867,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2867| 
        B         $C$L625,LO            ; [CPU_] |2867| 
        ; branchcc occurs ; [] |2867| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2871,column 6,is_stmt,isa 0
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_atoi")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2871| 
        ; call occurs [#_atoi] ; [] |2871| 
        MOV       *-SP[57],AL           ; [CPU_] |2871| 
	.dwpsn	file "../Source/prod.c",line 2873,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2873| 
        CMPB      AL,#4                 ; [CPU_] |2873| 
        B         $C$L625,HIS           ; [CPU_] |2873| 
        ; branchcc occurs ; [] |2873| 
	.dwpsn	file "../Source/prod.c",line 2879,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2879| 
        MOV       *-SP[57],AL           ; [CPU_] |2879| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2879| 
        MOV       T,AL                  ; [CPU_] |2879| 
        MOVB      AL,#12                ; [CPU_] |2879| 
        MPYU      ACC,T,AL              ; [CPU_] |2879| 
        ADDL      ACC,XAR6              ; [CPU_] |2879| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2879| 
        MOVL      XAR1,ACC              ; [CPU_] |2879| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2879| 
        CMPB      AL,#7                 ; [CPU_] |2879| 
        B         $C$L625,NEQ           ; [CPU_] |2879| 
        ; branchcc occurs ; [] |2879| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_strtod")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2883,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2883| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2885,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2885| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2885| 
        MOVL      ACC,XAR6              ; [CPU_] |2885| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2885| 
        ; call occurs [#FS$$CMP] ; [] |2885| 
        CMPB      AL,#0                 ; [CPU_] |2885| 
        B         $C$L625,LT            ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
        MOV       AL,#0                 ; [CPU_] |2885| 
        MOV       AH,#16672             ; [CPU_] |2885| 
        MOVL      XAR0,#88              ; [CPU_] |2885| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2885| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2885| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2885| 
        ; call occurs [#FS$$CMP] ; [] |2885| 
        CMPB      AL,#0                 ; [CPU_] |2885| 
        B         $C$L625,GT            ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2891| 
        MOV       AH,#0                 ; [CPU_] |2891| 
        MOVL      XAR0,#88              ; [CPU_] |2891| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2891| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2891| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2891| 
        ; call occurs [#FS$$CMP] ; [] |2891| 
        CMPB      AL,#0                 ; [CPU_] |2891| 
        B         $C$L445,GEQ           ; [CPU_] |2891| 
        ; branchcc occurs ; [] |2891| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2891| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2891| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2891| 
        B         $C$L446,UNC           ; [CPU_] |2891| 
        ; branch occurs ; [] |2891| 
$C$L445:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2891| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2891| 
$C$L446:    
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2891| 
        ; call occurs [#FS$$MPY] ; [] |2891| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2891| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2891| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2891| 
        ; call occurs [#FS$$ADD] ; [] |2891| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2891| 
        ; call occurs [#FS$$TOLL] ; [] |2891| 
	.dwpsn	file "../Source/prod.c",line 2898,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2898| 
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2891| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2891| 
	.dwpsn	file "../Source/prod.c",line 2898,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2898| 
        CMP64     ACC:P                 ; [CPU_] |2898| 
        B         $C$L448,LEQ           ; [CPU_] |2898| 
        ; branchcc occurs ; [] |2898| 
	.dwpsn	file "../Source/prod.c",line 2900,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2900| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2900| 
        MOV       *-SP[2],#0            ; [CPU_] |2900| 
        MOV       *-SP[1],#0            ; [CPU_] |2900| 
        MOVL      P,*-SP[32]            ; [CPU_] |2900| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2900| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$979, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2900| 
        ; call occurs [#LL$$CMP] ; [] |2900| 
        CMPB      AL,#0                 ; [CPU_] |2900| 
        B         $C$L447,GEQ           ; [CPU_] |2900| 
        ; branchcc occurs ; [] |2900| 
	.dwpsn	file "../Source/prod.c",line 2903,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2903| 
        MOV       *-SP[35],AL           ; [CPU_] |2903| 
        B         $C$L449,UNC           ; [CPU_] |2903| 
        ; branch occurs ; [] |2903| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2901,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2901| 
	.dwpsn	file "../Source/prod.c",line 2902,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2902| 
        ; branch occurs ; [] |2902| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2899,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2899| 
$C$L449:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2906,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2906| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2906| 
        ; call occurs [#_mcbsp_xmit] ; [] |2906| 
	.dwpsn	file "../Source/prod.c",line 2907,column 6,is_stmt,isa 0
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_latch_dac")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2907| 
        ; call occurs [#_latch_dac] ; [] |2907| 
	.dwpsn	file "../Source/prod.c",line 2909,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2909| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2909| 
        MOVL      XAR0,#44              ; [CPU_] |2909| 
        ADD       AL,*-SP[57]           ; [CPU_] |2909| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2909| 
        MOV       *-SP[3],AL            ; [CPU_] |2909| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2909| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2909| 
        MOV       AL,*-SP[35]           ; [CPU_] |2909| 
        MOV       *-SP[7],AL            ; [CPU_] |2909| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2909| 
	.dwpsn	file "../Source/prod.c",line 2913,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2913| 
        ; branch occurs ; [] |2913| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2756,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2756| 
        MOVL      XAR0,#44              ; [CPU_] |2756| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2756| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2756| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2756| 
        MOVL      XAR4,XAR1             ; [CPU_] |2756| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_sprintf")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2756| 
        ; call occurs [#_sprintf] ; [] |2756| 
	.dwpsn	file "../Source/prod.c",line 2757,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2757| 
	.dwpsn	file "../Source/prod.c",line 2756,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2756| 
	.dwpsn	file "../Source/prod.c",line 2757,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2757| 
        MOV       AL,#1024              ; [CPU_] |2757| 
        MOVL      XAR5,XAR1             ; [CPU_] |2757| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2757| 
        ; call occurs [#_scia_getparam] ; [] |2757| 
	.dwpsn	file "../Source/prod.c",line 2758,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2758| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_atoi")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2758| 
        ; call occurs [#_atoi] ; [] |2758| 
        MOV       *-SP[57],AL           ; [CPU_] |2758| 
	.dwpsn	file "../Source/prod.c",line 2759,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2759| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2759| 
        ; call occurs [#_scia_puts] ; [] |2759| 
        MOV       AL,*-SP[57]           ; [CPU_] |2759| 
	.dwpsn	file "../Source/prod.c",line 2761,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2761| 
        CMPB      AL,#4                 ; [CPU_] |2761| 
        B         $C$L465,HIS           ; [CPU_] |2761| 
        ; branchcc occurs ; [] |2761| 
	.dwpsn	file "../Source/prod.c",line 2765,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2765| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_puts")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2765| 
        ; call occurs [#_scia_puts] ; [] |2765| 
        MOVL      XAR0,#62              ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2769,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2769| 
	.dwpsn	file "../Source/prod.c",line 2765,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2769,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2769| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2770,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2770| 
        MOVL      XAR0,#44              ; [CPU_] |2770| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2770| 
        MOV       *-SP[3],AL            ; [CPU_] |2770| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2770| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2770| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2770| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_sprintf")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2770| 
        ; call occurs [#_sprintf] ; [] |2770| 
        MOVL      XAR0,#44              ; [CPU_] |2770| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2770| 
	.dwpsn	file "../Source/prod.c",line 2771,column 7,is_stmt,isa 0
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2771| 
        ; call occurs [#_scia_puts] ; [] |2771| 
	.dwpsn	file "../Source/prod.c",line 2772,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2772| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2772| 
        ; call occurs [#_scia_puts] ; [] |2772| 
	.dwpsn	file "../Source/prod.c",line 2769,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2769| 
	.dwpsn	file "../Source/prod.c",line 2772,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2772| 
	.dwpsn	file "../Source/prod.c",line 2769,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2769| 
        B         $C$L451,LT            ; [CPU_] |2769| 
        ; branchcc occurs ; [] |2769| 
	.dwpsn	file "../Source/prod.c",line 2775,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2775| 
        MOVB      XAR0,#14              ; [CPU_] |2775| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2775| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2775| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2775| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2775| 
        MOVL      XAR0,#44              ; [CPU_] |2775| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2775| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2775| 
        MOVL      XAR4,XAR1             ; [CPU_] |2775| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_sprintf")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2775| 
        ; call occurs [#_sprintf] ; [] |2775| 
	.dwpsn	file "../Source/prod.c",line 2776,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2776| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_scia_puts")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2776| 
        ; call occurs [#_scia_puts] ; [] |2776| 
	.dwpsn	file "../Source/prod.c",line 2777,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2777| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_scia_puts")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2777| 
        ; call occurs [#_scia_puts] ; [] |2777| 
	.dwpsn	file "../Source/prod.c",line 2778,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2778| 
	.dwpsn	file "../Source/prod.c",line 2777,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2777| 
	.dwpsn	file "../Source/prod.c",line 2778,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2778| 
        DEC       *-SP[57]              ; [CPU_] |2778| 
        MOV       *-SP[47],AH           ; [CPU_] |2778| 
        MOV       *-SP[3],AH            ; [CPU_] |2778| 
        MOVL      XAR4,XAR1             ; [CPU_] |2778| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_sprintf")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2778| 
        ; call occurs [#_sprintf] ; [] |2778| 
	.dwpsn	file "../Source/prod.c",line 2780,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2780| 
        MOVL      XAR4,XAR1             ; [CPU_] |2780| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2780| 
        MOV       AL,#1024              ; [CPU_] |2780| 
        MOVL      XAR5,XAR1             ; [CPU_] |2780| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2780| 
        ; call occurs [#_scia_getparam] ; [] |2780| 
        MOVL      XAR4,XAR1             ; [CPU_] |2780| 
	.dwpsn	file "../Source/prod.c",line 2781,column 6,is_stmt,isa 0
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_atoi")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2781| 
        ; call occurs [#_atoi] ; [] |2781| 
	.dwpsn	file "../Source/prod.c",line 2774,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2774| 
	.dwpsn	file "../Source/prod.c",line 2781,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2781| 
	.dwpsn	file "../Source/prod.c",line 2782,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2782| 
        B         $C$L452,LO            ; [CPU_] |2782| 
        ; branchcc occurs ; [] |2782| 
        CMPB      AL,#7                 ; [CPU_] |2782| 
        B         $C$L452,EQ            ; [CPU_] |2782| 
        ; branchcc occurs ; [] |2782| 
	.dwpsn	file "../Source/prod.c",line 2784,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2784| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_scia_puts")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2784| 
        ; call occurs [#_scia_puts] ; [] |2784| 
	.dwpsn	file "../Source/prod.c",line 2783,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2783| 
$C$L452:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2787,column 6,is_stmt,isa 0
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_puts")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2787| 
        ; call occurs [#_scia_puts] ; [] |2787| 
	.dwpsn	file "../Source/prod.c",line 2788,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2788| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2788| 
        ; call occurs [#_scia_puts] ; [] |2788| 
	.dwpsn	file "../Source/prod.c",line 2789,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2789| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2789| 
        MOVB      AL,#12                ; [CPU_] |2789| 
        MOV       T,*-SP[57]            ; [CPU_] |2789| 
        MPYU      ACC,T,AL              ; [CPU_] |2789| 
        ADDL      ACC,XAR6              ; [CPU_] |2789| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2789| 
        MOVL      XAR1,ACC              ; [CPU_] |2789| 
        MOV       AL,*-SP[59]           ; [CPU_] |2789| 
	.dwpsn	file "../Source/prod.c",line 2791,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2791| 
	.dwpsn	file "../Source/prod.c",line 2789,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2789| 
	.dwpsn	file "../Source/prod.c",line 2791,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2791| 
        ; branchcc occurs ; [] |2791| 
	.dwpsn	file "../Source/prod.c",line 2793,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2793| 
        B         $C$L454,EQ            ; [CPU_] |2793| 
        ; branchcc occurs ; [] |2793| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2793| 
        B         $C$L454,EQ            ; [CPU_] |2793| 
        ; branchcc occurs ; [] |2793| 
	.dwpsn	file "../Source/prod.c",line 2796,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2796| 
        B         $C$L453,EQ            ; [CPU_] |2796| 
        ; branchcc occurs ; [] |2796| 
        CMPB      AL,#4                 ; [CPU_] |2796| 
        B         $C$L455,NEQ           ; [CPU_] |2796| 
        ; branchcc occurs ; [] |2796| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2797,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2797| 
        B         $C$L455,UNC           ; [CPU_] |2797| 
        ; branch occurs ; [] |2797| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2795,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2795| 
$C$L455:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2802,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2802| 
        MOV       AL,*-SP[60]           ; [CPU_] |2802| 
        MOVL      XAR0,#44              ; [CPU_] |2802| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2802| 
        MOV       *-SP[3],AL            ; [CPU_] |2802| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2802| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_sprintf")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2802| 
        ; call occurs [#_sprintf] ; [] |2802| 
        MOVL      XAR0,#44              ; [CPU_] |2802| 
	.dwpsn	file "../Source/prod.c",line 2803,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2803| 
	.dwpsn	file "../Source/prod.c",line 2802,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2802| 
	.dwpsn	file "../Source/prod.c",line 2803,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2803| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2803| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2803| 
        ; call occurs [#_scia_getparam] ; [] |2803| 
        MOVL      XAR0,#86              ; [CPU_] |2803| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2803| 
	.dwpsn	file "../Source/prod.c",line 2804,column 8,is_stmt,isa 0
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_atoi")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2804| 
        ; call occurs [#_atoi] ; [] |2804| 
        MOVL      XAR0,#86              ; [CPU_] |2804| 
        MOV       *-SP[58],AL           ; [CPU_] |2804| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2804| 
	.dwpsn	file "../Source/prod.c",line 2805,column 8,is_stmt,isa 0
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2805| 
        ; call occurs [#_scia_puts] ; [] |2805| 
        MOV       AL,*-SP[58]           ; [CPU_] |2805| 
	.dwpsn	file "../Source/prod.c",line 2807,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2807| 
        ; branchcc occurs ; [] |2807| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2807| 
        B         $C$L464,LO            ; [CPU_] |2807| 
        ; branchcc occurs ; [] |2807| 
	.dwpsn	file "../Source/prod.c",line 2811,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2811| 
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2811| 
        ; call occurs [#_scia_puts] ; [] |2811| 
	.dwpsn	file "../Source/prod.c",line 2813,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2813| 
	.dwpsn	file "../Source/prod.c",line 2811,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2811| 
	.dwpsn	file "../Source/prod.c",line 2813,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2813| 
        MOV       AL,*-SP[59]           ; [CPU_] |2813| 
	.dwpsn	file "../Source/prod.c",line 2816,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2816| 
        B         $C$L457,EQ            ; [CPU_] |2816| 
        ; branchcc occurs ; [] |2816| 
        CMPB      AL,#4                 ; [CPU_] |2816| 
        B         $C$L459,NEQ           ; [CPU_] |2816| 
        ; branchcc occurs ; [] |2816| 
	.dwpsn	file "../Source/prod.c",line 2821,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2821| 
        B         $C$L458,UNC           ; [CPU_] |2821| 
        ; branch occurs ; [] |2821| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2819,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2819| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2819| 
        MOVL      XAR0,#44              ; [CPU_] |2819| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2819| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_sprintf")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2819| 
        ; call occurs [#_sprintf] ; [] |2819| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2823,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2823| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2823| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2823| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2823| 
        ; call occurs [#_scia_getparam] ; [] |2823| 
        MOVL      XAR0,#86              ; [CPU_] |2823| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2823,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2823| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_strtod")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2824,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2824| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2824| 
        MOVL      XAR0,#86              ; [CPU_] |2824| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2824| 
	.dwpsn	file "../Source/prod.c",line 2825,column 8,is_stmt,isa 0
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2825| 
        ; call occurs [#_scia_puts] ; [] |2825| 
	.dwpsn	file "../Source/prod.c",line 2826,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2826| 
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2826| 
        ; call occurs [#_scia_puts] ; [] |2826| 
	.dwpsn	file "../Source/prod.c",line 2829,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2829| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2829| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2829| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2829| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_sprintf")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2829| 
        ; call occurs [#_sprintf] ; [] |2829| 
        MOVL      XAR0,#44              ; [CPU_] |2829| 
	.dwpsn	file "../Source/prod.c",line 2830,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2830| 
	.dwpsn	file "../Source/prod.c",line 2829,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2829| 
	.dwpsn	file "../Source/prod.c",line 2830,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2830| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2830| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2830| 
        ; call occurs [#_scia_getparam] ; [] |2830| 
        MOVL      XAR0,#86              ; [CPU_] |2830| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2830,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2830| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_strtod")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2831,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2831| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2831| 
        MOVL      XAR0,#86              ; [CPU_] |2831| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2831| 
	.dwpsn	file "../Source/prod.c",line 2832,column 8,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2832| 
        ; call occurs [#_scia_puts] ; [] |2832| 
	.dwpsn	file "../Source/prod.c",line 2833,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2833| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2833| 
        ; call occurs [#_scia_puts] ; [] |2833| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2840,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2840| 
        MOV       AL,*-SP[47]           ; [CPU_] |2840| 
        MOVL      XAR0,#62              ; [CPU_] |2840| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2840| 
        MOV       *-SP[3],AL            ; [CPU_] |2840| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2840| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2840| 
        MOV       ACC,AL << 1           ; [CPU_] |2840| 
        ADDL      ACC,XAR6              ; [CPU_] |2840| 
        MOVL      XAR4,ACC              ; [CPU_] |2840| 
        MOVL      XAR0,#44              ; [CPU_] |2840| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2840| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2840| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2840| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_sprintf")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2840| 
        ; call occurs [#_sprintf] ; [] |2840| 
        MOVL      XAR0,#44              ; [CPU_] |2840| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2840| 
	.dwpsn	file "../Source/prod.c",line 2842,column 6,is_stmt,isa 0
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2842| 
        ; call occurs [#_scia_puts] ; [] |2842| 
	.dwpsn	file "../Source/prod.c",line 2837,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2837| 
        MOV       AL,*-SP[59]           ; [CPU_] |2837| 
	.dwpsn	file "../Source/prod.c",line 2844,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2844| 
        B         $C$L461,EQ            ; [CPU_] |2844| 
        ; branchcc occurs ; [] |2844| 
	.dwpsn	file "../Source/prod.c",line 2847,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2847| 
        MOVB      AL,#1                 ; [CPU_] |2847| 
        MOVL      XAR0,#44              ; [CPU_] |2847| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2847| 
        ADD       AL,*-SP[58]           ; [CPU_] |2847| 
        MOV       *-SP[3],AL            ; [CPU_] |2847| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2847| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_sprintf")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2847| 
        ; call occurs [#_sprintf] ; [] |2847| 
        MOVL      XAR0,#44              ; [CPU_] |2847| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2847| 
	.dwpsn	file "../Source/prod.c",line 2848,column 7,is_stmt,isa 0
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2848| 
        ; call occurs [#_scia_puts] ; [] |2848| 
        MOV       AL,*-SP[59]           ; [CPU_] |2848| 
	.dwpsn	file "../Source/prod.c",line 2850,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2850| 
        B         $C$L460,EQ            ; [CPU_] |2850| 
        ; branchcc occurs ; [] |2850| 
        CMPB      AL,#4                 ; [CPU_] |2850| 
        B         $C$L463,NEQ           ; [CPU_] |2850| 
        ; branchcc occurs ; [] |2850| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2851,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2851| 
        MOVB      XAR0,#8               ; [CPU_] |2851| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2851| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2851| 
        MOVB      XAR0,#10              ; [CPU_] |2851| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2851| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2851| 
        MOVL      XAR0,#44              ; [CPU_] |2851| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2851| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2851| 
        MOVL      XAR4,XAR1             ; [CPU_] |2851| 
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_sprintf")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2851| 
        ; call occurs [#_sprintf] ; [] |2851| 
        MOVL      XAR4,XAR1             ; [CPU_] |2851| 
	.dwpsn	file "../Source/prod.c",line 2854,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2854| 
        ; branch occurs ; [] |2854| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2845,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2845| 
$C$L462:    
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2845| 
        ; call occurs [#_scia_puts] ; [] |2845| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2859,column 6,is_stmt,isa 0
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2859| 
        ; call occurs [#_ad7738_setcal] ; [] |2859| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2861,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |2861| 
        ; branch occurs ; [] |2861| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2809,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2809| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2809| 
        ; call occurs [#_scia_puts] ; [] |2809| 
	.dwpsn	file "../Source/prod.c",line 2801,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2801| 
        ; branch occurs ; [] |2801| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2763,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2763| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2763| 
        ; call occurs [#_scia_puts] ; [] |2763| 
	.dwpsn	file "../Source/prod.c",line 2755,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2755| 
        ; branch occurs ; [] |2755| 
$C$L466:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2927,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2927| 
        B         $C$L625,LO            ; [CPU_] |2927| 
        ; branchcc occurs ; [] |2927| 
	.dwpsn	file "../Source/prod.c",line 2930,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2930| 
        CMPB      AL,#83                ; [CPU_] |2930| 
        B         $C$L625,NEQ           ; [CPU_] |2930| 
        ; branchcc occurs ; [] |2930| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2937,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2937| 
        MOVL      XAR0,#44              ; [CPU_] |2937| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2937| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2937| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2937| 
        MOVL      XAR4,XAR1             ; [CPU_] |2937| 
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_sprintf")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2937| 
        ; call occurs [#_sprintf] ; [] |2937| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2938| 
	.dwpsn	file "../Source/prod.c",line 2937,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2937| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2938| 
        MOV       AL,#1024              ; [CPU_] |2938| 
        MOVL      XAR5,XAR1             ; [CPU_] |2938| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2938| 
        ; call occurs [#_scia_getparam] ; [] |2938| 
	.dwpsn	file "../Source/prod.c",line 2939,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2939| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_atoi")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2939| 
        ; call occurs [#_atoi] ; [] |2939| 
        MOV       *-SP[57],AL           ; [CPU_] |2939| 
	.dwpsn	file "../Source/prod.c",line 2940,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2940| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2940| 
        ; call occurs [#_scia_puts] ; [] |2940| 
        MOV       AL,*-SP[57]           ; [CPU_] |2940| 
	.dwpsn	file "../Source/prod.c",line 2942,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2942| 
        CMPB      AL,#4                 ; [CPU_] |2942| 
        B         $C$L497,HIS           ; [CPU_] |2942| 
        ; branchcc occurs ; [] |2942| 
	.dwpsn	file "../Source/prod.c",line 2946,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2946| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2946| 
        ; call occurs [#_scia_puts] ; [] |2946| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2946| 
	.dwpsn	file "../Source/prod.c",line 2949,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2949| 
        MOVL      XAR0,#44              ; [CPU_] |2949| 
        DEC       *-SP[57]              ; [CPU_] |2949| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2949| 
        MOV       *-SP[47],AR1          ; [CPU_] |2949| 
        MOV       *-SP[3],AR1           ; [CPU_] |2949| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2949| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_sprintf")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2949| 
        ; call occurs [#_sprintf] ; [] |2949| 
        MOVL      XAR0,#44              ; [CPU_] |2949| 
	.dwpsn	file "../Source/prod.c",line 2950,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2950| 
	.dwpsn	file "../Source/prod.c",line 2949,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2949| 
	.dwpsn	file "../Source/prod.c",line 2950,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2950| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2950| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2950| 
        ; call occurs [#_scia_getparam] ; [] |2950| 
        MOVL      XAR0,#86              ; [CPU_] |2950| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2950| 
	.dwpsn	file "../Source/prod.c",line 2951,column 6,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2951| 
        ; call occurs [#_scia_puts] ; [] |2951| 
	.dwpsn	file "../Source/prod.c",line 2952,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2952| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2952| 
        ; call occurs [#_scia_puts] ; [] |2952| 
        MOVL      XAR0,#86              ; [CPU_] |2952| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2952| 
	.dwpsn	file "../Source/prod.c",line 2954,column 6,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_atoi")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2954| 
        ; call occurs [#_atoi] ; [] |2954| 
        CMPB      AL,#1                 ; [CPU_] |2954| 
        B         $C$L468,EQ            ; [CPU_] |2954| 
        ; branchcc occurs ; [] |2954| 
	.dwpsn	file "../Source/prod.c",line 3103,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3103| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3103| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3103| 
        ADDL      ACC,XAR6              ; [CPU_] |3103| 
        ADD       ACC,#199 << 4         ; [CPU_] |3103| 
        MOVL      XAR4,ACC              ; [CPU_] |3103| 
	.dwpsn	file "../Source/prod.c",line 3104,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3104| 
	.dwpsn	file "../Source/prod.c",line 3103,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3103| 
	.dwpsn	file "../Source/prod.c",line 3104,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3104| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3104| 
        MOV       *-SP[3],AR1           ; [CPU_] |3104| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3104| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_sprintf")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3104| 
        ; call occurs [#_sprintf] ; [] |3104| 
        B         $C$L493,UNC           ; [CPU_] |3104| 
        ; branch occurs ; [] |3104| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2957,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2957| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2957| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2957| 
        ADDL      ACC,XAR6              ; [CPU_] |2957| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2957| 
        MOVL      XAR1,ACC              ; [CPU_] |2957| 
        MOVL      XAR0,#62              ; [CPU_] |2957| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2957| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2957| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2960,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2960| 
        MOV       *-SP[60],AL           ; [CPU_] |2960| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2961,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2961| 
        MOVL      XAR0,#88              ; [CPU_] |2961| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2961| 
        MOV       *-SP[3],AL            ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
        MOVL      XAR0,#88              ; [CPU_] |2961| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2961| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_sprintf")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2961| 
        ; call occurs [#_sprintf] ; [] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2962| 
        ; call occurs [#_scia_puts] ; [] |2962| 
        MOV       AL,*-SP[60]           ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2963,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2963| 
        B         $C$L470,GEQ           ; [CPU_] |2963| 
        ; branchcc occurs ; [] |2963| 
	.dwpsn	file "../Source/prod.c",line 2964,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2964| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2964| 
        ; call occurs [#_scia_puts] ; [] |2964| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2960,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2960| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2960| 
        B         $C$L469,LT            ; [CPU_] |2960| 
        ; branchcc occurs ; [] |2960| 
	.dwpsn	file "../Source/prod.c",line 2967,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2967| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2967| 
        ; call occurs [#_scia_puts] ; [] |2967| 
	.dwpsn	file "../Source/prod.c",line 2968,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2968| 
        MOVL      XAR0,#44              ; [CPU_] |2968| 
        MOV       AL,*-SP[47]           ; [CPU_] |2968| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2968| 
        MOV       *-SP[3],AL            ; [CPU_] |2968| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2968| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_sprintf")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2968| 
        ; call occurs [#_sprintf] ; [] |2968| 
        MOVL      XAR0,#44              ; [CPU_] |2968| 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2971| 
	.dwpsn	file "../Source/prod.c",line 2968,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2968| 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2971| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2971| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2971| 
        ; call occurs [#_scia_getparam] ; [] |2971| 
        MOVL      XAR0,#86              ; [CPU_] |2971| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2971| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_atoi")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2972| 
        ; call occurs [#_atoi] ; [] |2972| 
        MOV       *-SP[59],AL           ; [CPU_] |2972| 
        CMPB      AL,#5                 ; [CPU_] |2972| 
        B         $C$L471,LO            ; [CPU_] |2972| 
        ; branchcc occurs ; [] |2972| 
	.dwpsn	file "../Source/prod.c",line 2975,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2975| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2975| 
        ; call occurs [#_scia_puts] ; [] |2975| 
	.dwpsn	file "../Source/prod.c",line 2974,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2974| 
$C$L471:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2978,column 7,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2978| 
        ; call occurs [#_scia_puts] ; [] |2978| 
	.dwpsn	file "../Source/prod.c",line 2979,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2979| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2979| 
        ; call occurs [#_scia_puts] ; [] |2979| 
        MOV       AL,*-SP[59]           ; [CPU_] |2979| 
	.dwpsn	file "../Source/prod.c",line 2980,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2980| 
	.dwpsn	file "../Source/prod.c",line 2982,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2982| 
        B         $C$L473,EQ            ; [CPU_] |2982| 
        ; branchcc occurs ; [] |2982| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2982| 
        B         $C$L473,EQ            ; [CPU_] |2982| 
        ; branchcc occurs ; [] |2982| 
	.dwpsn	file "../Source/prod.c",line 2985,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2985| 
        B         $C$L472,EQ            ; [CPU_] |2985| 
        ; branchcc occurs ; [] |2985| 
        CMPB      AL,#4                 ; [CPU_] |2985| 
        B         $C$L474,NEQ           ; [CPU_] |2985| 
        ; branchcc occurs ; [] |2985| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2986,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2986| 
        B         $C$L474,UNC           ; [CPU_] |2986| 
        ; branch occurs ; [] |2986| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2984,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2984| 
$C$L474:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2991,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2991| 
        MOV       AL,*-SP[60]           ; [CPU_] |2991| 
        MOVL      XAR0,#44              ; [CPU_] |2991| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2991| 
        MOV       *-SP[3],AL            ; [CPU_] |2991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2991| 
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_sprintf")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2991| 
        ; call occurs [#_sprintf] ; [] |2991| 
        MOVL      XAR0,#44              ; [CPU_] |2991| 
	.dwpsn	file "../Source/prod.c",line 2992,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2992| 
	.dwpsn	file "../Source/prod.c",line 2991,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2991| 
	.dwpsn	file "../Source/prod.c",line 2992,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2992| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2992| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2992| 
        ; call occurs [#_scia_getparam] ; [] |2992| 
        MOVL      XAR0,#86              ; [CPU_] |2992| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2992| 
	.dwpsn	file "../Source/prod.c",line 2993,column 8,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_atoi")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2993| 
        ; call occurs [#_atoi] ; [] |2993| 
        MOVL      XAR0,#86              ; [CPU_] |2993| 
        MOV       *-SP[58],AL           ; [CPU_] |2993| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2993| 
	.dwpsn	file "../Source/prod.c",line 2994,column 8,is_stmt,isa 0
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2994| 
        ; call occurs [#_scia_puts] ; [] |2994| 
        MOV       AL,*-SP[58]           ; [CPU_] |2994| 
	.dwpsn	file "../Source/prod.c",line 2996,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2996| 
        ; branchcc occurs ; [] |2996| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2996| 
        B         $C$L496,LO            ; [CPU_] |2996| 
        ; branchcc occurs ; [] |2996| 
	.dwpsn	file "../Source/prod.c",line 3000,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3000| 
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3000| 
        ; call occurs [#_scia_puts] ; [] |3000| 
	.dwpsn	file "../Source/prod.c",line 3002,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |3002| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3005| 
	.dwpsn	file "../Source/prod.c",line 3000,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |3000| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |3005| 
	.dwpsn	file "../Source/prod.c",line 3002,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |3002| 
	.dwpsn	file "../Source/prod.c",line 3005,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3005| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3005| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3005| 
        ; call occurs [#_scia_getparam] ; [] |3005| 
        MOVL      XAR0,#86              ; [CPU_] |3005| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3005| 
	.dwpsn	file "../Source/prod.c",line 3008,column 7,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3008| 
        ; call occurs [#_scia_puts] ; [] |3008| 
	.dwpsn	file "../Source/prod.c",line 3009,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3009| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3009| 
        ; call occurs [#_scia_puts] ; [] |3009| 
        MOVL      XAR0,#86              ; [CPU_] |3009| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3009| 
	.dwpsn	file "../Source/prod.c",line 3011,column 7,is_stmt,isa 0
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_atoi")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3011| 
        ; call occurs [#_atoi] ; [] |3011| 
        CMPB      AL,#1                 ; [CPU_] |3011| 
        B         $C$L476,EQ            ; [CPU_] |3011| 
        ; branchcc occurs ; [] |3011| 
	.dwpsn	file "../Source/prod.c",line 3015,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |3015| 
        B         $C$L477,UNC           ; [CPU_] |3015| 
        ; branch occurs ; [] |3015| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 3013,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |3013| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 3018,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3018| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |3018| 
        MOV       AL,#1024              ; [CPU_] |3018| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3018| 
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3018| 
        ; call occurs [#_scia_getparam] ; [] |3018| 
        MOVL      XAR0,#86              ; [CPU_] |3018| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3018| 
	.dwpsn	file "../Source/prod.c",line 3021,column 7,is_stmt,isa 0
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3021| 
        ; call occurs [#_scia_puts] ; [] |3021| 
	.dwpsn	file "../Source/prod.c",line 3022,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3022| 
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3022| 
        ; call occurs [#_scia_puts] ; [] |3022| 
        MOVL      XAR0,#86              ; [CPU_] |3022| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3022| 
	.dwpsn	file "../Source/prod.c",line 3024,column 7,is_stmt,isa 0
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_atoi")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3024| 
        ; call occurs [#_atoi] ; [] |3024| 
        CMPB      AL,#1                 ; [CPU_] |3024| 
        B         $C$L478,EQ            ; [CPU_] |3024| 
        ; branchcc occurs ; [] |3024| 
	.dwpsn	file "../Source/prod.c",line 3028,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |3028| 
        B         $C$L479,UNC           ; [CPU_] |3028| 
        ; branch occurs ; [] |3028| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 3026,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |3026| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 3031,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3031| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |3031| 
        MOV       AL,#1024              ; [CPU_] |3031| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3031| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3031| 
        ; call occurs [#_scia_getparam] ; [] |3031| 
        MOVL      XAR0,#86              ; [CPU_] |3031| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3031| 
	.dwpsn	file "../Source/prod.c",line 3034,column 7,is_stmt,isa 0
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3034| 
        ; call occurs [#_scia_puts] ; [] |3034| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3035| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3035| 
        ; call occurs [#_scia_puts] ; [] |3035| 
        MOVL      XAR0,#86              ; [CPU_] |3035| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3035| 
	.dwpsn	file "../Source/prod.c",line 3037,column 7,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_atoi")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3037| 
        ; call occurs [#_atoi] ; [] |3037| 
        CMPB      AL,#1                 ; [CPU_] |3037| 
        B         $C$L480,EQ            ; [CPU_] |3037| 
        ; branchcc occurs ; [] |3037| 
	.dwpsn	file "../Source/prod.c",line 3041,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |3041| 
        B         $C$L481,UNC           ; [CPU_] |3041| 
        ; branch occurs ; [] |3041| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 3039,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |3039| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 3045,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3045| 
        CMPB      AL,#2                 ; [CPU_] |3045| 
        B         $C$L483,LOS           ; [CPU_] |3045| 
        ; branchcc occurs ; [] |3045| 
        CMPB      AL,#3                 ; [CPU_] |3045| 
        B         $C$L482,EQ            ; [CPU_] |3045| 
        ; branchcc occurs ; [] |3045| 
        CMPB      AL,#4                 ; [CPU_] |3045| 
        B         $C$L485,NEQ           ; [CPU_] |3045| 
        ; branchcc occurs ; [] |3045| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3057,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |3057| 
	.dwpsn	file "../Source/prod.c",line 3058,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |3058| 
        ; branch occurs ; [] |3058| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3054,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |3054| 
	.dwpsn	file "../Source/prod.c",line 3055,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |3055| 
        ; branch occurs ; [] |3055| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 3049,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3049| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3049| 
        MOV       T,#10                 ; [CPU_] |3049| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |3049| 
        ADDL      ACC,XAR6              ; [CPU_] |3049| 
        MOVL      XAR4,ACC              ; [CPU_] |3049| 
        MOVB      XAR0,#42              ; [CPU_] |3049| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |3049| 
        MPYB      ACC,T,#152            ; [CPU_] |3049| 
        ADDL      ACC,XAR6              ; [CPU_] |3049| 
        MOVL      XAR4,ACC              ; [CPU_] |3049| 
        MOVB      XAR0,#125             ; [CPU_] |3049| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3049| 
        MOVL      XAR0,#70              ; [CPU_] |3049| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3049| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |3049| 
        MOV       ACC,AL << 1           ; [CPU_] |3049| 
        ADDL      ACC,XAR6              ; [CPU_] |3049| 
        MOVL      XAR4,ACC              ; [CPU_] |3049| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3049| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |3049| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3049| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 3062,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |3062| 
        MOVL      XAR0,#48              ; [CPU_] |3062| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3062| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3062| 
        MOVL      XAR0,#44              ; [CPU_] |3062| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3062| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3062| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_sprintf")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3062| 
        ; call occurs [#_sprintf] ; [] |3062| 
        MOVL      XAR0,#44              ; [CPU_] |3062| 
	.dwpsn	file "../Source/prod.c",line 3063,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3063| 
	.dwpsn	file "../Source/prod.c",line 3062,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3062| 
	.dwpsn	file "../Source/prod.c",line 3063,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3063| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3063| 
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3063| 
        ; call occurs [#_scia_getparam] ; [] |3063| 
        MOVL      XAR0,#86              ; [CPU_] |3063| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3063| 
	.dwpsn	file "../Source/prod.c",line 3064,column 7,is_stmt,isa 0
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3064| 
        ; call occurs [#_scia_puts] ; [] |3064| 
	.dwpsn	file "../Source/prod.c",line 3065,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3065| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3065| 
        ; call occurs [#_scia_puts] ; [] |3065| 
        MOVL      XAR0,#86              ; [CPU_] |3065| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3065,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3065| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_strtod")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3071,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3071| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3071| 
	.dwpsn	file "../Source/prod.c",line 3067,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3067| 
	.dwpsn	file "../Source/prod.c",line 3071,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3071| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3071| 
        MOVL      XAR0,#44              ; [CPU_] |3071| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3071| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3071| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_sprintf")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3071| 
        ; call occurs [#_sprintf] ; [] |3071| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3072,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3072| 
        MOVL      XAR0,#86              ; [CPU_] |3072| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3072| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3072| 
        ; call occurs [#_scia_getparam] ; [] |3072| 
        MOVL      XAR0,#86              ; [CPU_] |3072| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3072| 
	.dwpsn	file "../Source/prod.c",line 3073,column 7,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3073| 
        ; call occurs [#_scia_puts] ; [] |3073| 
	.dwpsn	file "../Source/prod.c",line 3074,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3074| 
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3074| 
        ; call occurs [#_scia_puts] ; [] |3074| 
        MOVL      XAR0,#86              ; [CPU_] |3074| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3074,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3074| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_strtod")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3082,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3082| 
        MOVL      XAR0,#62              ; [CPU_] |3082| 
	.dwpsn	file "../Source/prod.c",line 3076,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3076| 
	.dwpsn	file "../Source/prod.c",line 3082,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3082| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3082| 
        MOV       *-SP[3],AL            ; [CPU_] |3082| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3082| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |3082| 
        MOV       ACC,AL << 1           ; [CPU_] |3082| 
        ADDL      ACC,XAR6              ; [CPU_] |3082| 
        MOVL      XAR4,ACC              ; [CPU_] |3082| 
        MOVL      XAR0,#44              ; [CPU_] |3082| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3082| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3082| 
        MOVB      AL,#1                 ; [CPU_] |3082| 
        ADD       AL,*-SP[58]           ; [CPU_] |3082| 
        MOV       *-SP[7],AL            ; [CPU_] |3082| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3082| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_sprintf")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3082| 
        ; call occurs [#_sprintf] ; [] |3082| 
        MOVL      XAR0,#44              ; [CPU_] |3082| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3082| 
	.dwpsn	file "../Source/prod.c",line 3085,column 7,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3085| 
        ; call occurs [#_scia_puts] ; [] |3085| 
	.dwpsn	file "../Source/prod.c",line 3087,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3087| 
        B         $C$L486,TC            ; [CPU_] |3087| 
        ; branchcc occurs ; [] |3087| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3087| 
        B         $C$L487,UNC           ; [CPU_] |3087| 
        ; branch occurs ; [] |3087| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3087| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3087| 
        B         $C$L488,TC            ; [CPU_] |3087| 
        ; branchcc occurs ; [] |3087| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3087| 
        B         $C$L489,UNC           ; [CPU_] |3087| 
        ; branch occurs ; [] |3087| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3087| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3087| 
        B         $C$L490,TC            ; [CPU_] |3087| 
        ; branchcc occurs ; [] |3087| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3087| 
        B         $C$L491,UNC           ; [CPU_] |3087| 
        ; branch occurs ; [] |3087| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3087| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3087| 
        MOVL      XAR0,#44              ; [CPU_] |3087| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3087| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3087| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3087| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3087| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3087| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_sprintf")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3087| 
        ; call occurs [#_sprintf] ; [] |3087| 
        MOVL      XAR0,#44              ; [CPU_] |3087| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3087| 
	.dwpsn	file "../Source/prod.c",line 3094,column 7,is_stmt,isa 0
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3094| 
        ; call occurs [#_scia_puts] ; [] |3094| 
	.dwpsn	file "../Source/prod.c",line 3095,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3095| 
        MOVL      XAR0,#48              ; [CPU_] |3095| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3095| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3095| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3095| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3095| 
        MOVL      XAR0,#48              ; [CPU_] |3095| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3095| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3095| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3095| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3095| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3095| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |3095| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |3095| 
        MOVL      XAR4,XAR1             ; [CPU_] |3095| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_sprintf")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3095| 
        ; call occurs [#_sprintf] ; [] |3095| 
        MOVL      XAR4,XAR1             ; [CPU_] |3095| 
	.dwpsn	file "../Source/prod.c",line 3099,column 7,is_stmt,isa 0
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3099| 
        ; call occurs [#_scia_puts] ; [] |3099| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3110,column 6,is_stmt,isa 0
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3110| 
        ; call occurs [#_ad7738_setcal] ; [] |3110| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3107,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3107| 
	.dwpsn	file "../Source/prod.c",line 3112,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3112| 
        ; branch occurs ; [] |3112| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2998,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2998| 
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2998| 
        ; call occurs [#_scia_puts] ; [] |2998| 
	.dwpsn	file "../Source/prod.c",line 2990,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2990| 
        ; branch occurs ; [] |2990| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2944,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2944| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2944| 
        ; call occurs [#_scia_puts] ; [] |2944| 
	.dwpsn	file "../Source/prod.c",line 2936,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2936| 
        ; branch occurs ; [] |2936| 
$C$L498:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3416,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3416| 
        B         $C$L625,LO            ; [CPU_] |3416| 
        ; branchcc occurs ; [] |3416| 
	.dwpsn	file "../Source/prod.c",line 3419,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3419| 
        CMPB      AL,#68                ; [CPU_] |3419| 
        B         $C$L502,EQ            ; [CPU_] |3419| 
        ; branchcc occurs ; [] |3419| 
        CMPB      AL,#82                ; [CPU_] |3419| 
        B         $C$L501,EQ            ; [CPU_] |3419| 
        ; branchcc occurs ; [] |3419| 
        CMPB      AL,#87                ; [CPU_] |3419| 
        B         $C$L625,NEQ           ; [CPU_] |3419| 
        ; branchcc occurs ; [] |3419| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3423,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3423| 
        ; branchcc occurs ; [] |3423| 
	.dwpsn	file "../Source/prod.c",line 3447,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3447| 
	.dwpsn	file "../Source/prod.c",line 3449,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3449| 
        ; branch occurs ; [] |3449| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3425,column 7,is_stmt,isa 0
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3425| 
        ; call occurs [#_lcd_clear] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3426,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3426| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3426| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3426| 
        ; call occurs [#_lcd_puts] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3427,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3427| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3427| 
        ; call occurs [#_scia_puts] ; [] |3427| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3430,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3430| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_delay_us")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3430| 
        ; call occurs [#_delay_us] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3429,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3429| 
        ; branchcc occurs ; [] |3429| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3434,column 7,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_conf_write")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3434| 
        ; call occurs [#_conf_write] ; [] |3434| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3437,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3437| 
        B         $C$L505,NEQ           ; [CPU_] |3437| 
        ; branchcc occurs ; [] |3437| 
	.dwpsn	file "../Source/prod.c",line 3438,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3438| 
	.dwpsn	file "../Source/prod.c",line 3440,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3440| 
        ; branch occurs ; [] |3440| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3454,column 6,is_stmt,isa 0
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_conf_read")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3454| 
        ; call occurs [#_conf_read] ; [] |3454| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3457,column 6,is_stmt,isa 0
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3457| 
        ; call occurs [#_ad7738_setcal] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3458| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3458| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3459,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3459| 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3459| 
        ; call occurs [#_ad7738_resetvall] ; [] |3459| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3462,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3462| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
	.dwpsn	file "../Source/prod.c",line 3465,column 6,is_stmt,isa 0
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_update_units")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3465| 
        ; call occurs [#_update_units] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3463,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3463| 
	.dwpsn	file "../Source/prod.c",line 3467,column 6,is_stmt,isa 0
        B         $C$L636,UNC           ; [CPU_] |3467| 
        ; branch occurs ; [] |3467| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3471,column 6,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_conf_default")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3471| 
        ; call occurs [#_conf_default] ; [] |3471| 
	.dwpsn	file "../Source/prod.c",line 3474,column 6,is_stmt,isa 0
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3474| 
        ; call occurs [#_lcd_clear] ; [] |3474| 
	.dwpsn	file "../Source/prod.c",line 3475,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3475| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3475| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3475| 
        ; call occurs [#_lcd_puts] ; [] |3475| 
	.dwpsn	file "../Source/prod.c",line 3476,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3476| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3476| 
        ; call occurs [#_scia_puts] ; [] |3476| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3479,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3479| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_delay_us")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3479| 
        ; call occurs [#_delay_us] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3478,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3478| 
        ; branchcc occurs ; [] |3478| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3483,column 6,is_stmt,isa 0
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_conf_write")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3483| 
        ; call occurs [#_conf_write] ; [] |3483| 
        MOVZ      AR1,AL                ; [CPU_] |3483| 
	.dwpsn	file "../Source/prod.c",line 3484,column 6,is_stmt,isa 0
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3484| 
        ; call occurs [#_ad7738_setcal] ; [] |3484| 
	.dwpsn	file "../Source/prod.c",line 3485,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3485| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3485| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3485| 
	.dwpsn	file "../Source/prod.c",line 3486,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3486| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3486| 
        ; call occurs [#_ad7738_resetvall] ; [] |3486| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3489,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3489| 
        ; branchcc occurs ; [] |3489| 
	.dwpsn	file "../Source/prod.c",line 3490,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3490| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3490| 
        ; call occurs [#_scia_puts] ; [] |3490| 
	.dwpsn	file "../Source/prod.c",line 3492,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3492| 
	.dwpsn	file "../Source/prod.c",line 3493,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3493| 
        ; branch occurs ; [] |3493| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3494,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3494| 
        SPM       #0                    ; [CPU_] 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3496,column 6,is_stmt,isa 0
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3496| 
        ; call occurs [#_lcd_clear] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3497,column 6,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_update_units")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3497| 
        ; call occurs [#_update_units] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3498,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3498| 
        ; branch occurs ; [] |3498| 
$C$L507:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2523,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2523| 
        B         $C$L625,LO            ; [CPU_] |2523| 
        ; branchcc occurs ; [] |2523| 
	.dwpsn	file "../Source/prod.c",line 2526,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2526| 
        CMPB      AL,#70                ; [CPU_] |2526| 
        B         $C$L512,EQ            ; [CPU_] |2526| 
        ; branchcc occurs ; [] |2526| 
        CMPB      AL,#80                ; [CPU_] |2526| 
        B         $C$L634,NEQ           ; [CPU_] |2526| 
        ; branchcc occurs ; [] |2526| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2563,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2563| 
        MOVL      XAR0,#44              ; [CPU_] |2563| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2563| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2563| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2563| 
        MOVL      XAR4,XAR1             ; [CPU_] |2563| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_sprintf")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2563| 
        ; call occurs [#_sprintf] ; [] |2563| 
	.dwpsn	file "../Source/prod.c",line 2564,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2564| 
	.dwpsn	file "../Source/prod.c",line 2563,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2563| 
	.dwpsn	file "../Source/prod.c",line 2564,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2564| 
        MOV       AL,#1024              ; [CPU_] |2564| 
        MOVL      XAR5,XAR1             ; [CPU_] |2564| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2564| 
        ; call occurs [#_scia_getparam] ; [] |2564| 
	.dwpsn	file "../Source/prod.c",line 2565,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2565| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_atoi")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2565| 
        ; call occurs [#_atoi] ; [] |2565| 
        MOV       *-SP[57],AL           ; [CPU_] |2565| 
	.dwpsn	file "../Source/prod.c",line 2566,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2566| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2566| 
        ; call occurs [#_scia_puts] ; [] |2566| 
        MOV       AL,*-SP[57]           ; [CPU_] |2566| 
	.dwpsn	file "../Source/prod.c",line 2568,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2568| 
        CMPB      AL,#2                 ; [CPU_] |2568| 
        B         $C$L511,HIS           ; [CPU_] |2568| 
        ; branchcc occurs ; [] |2568| 
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2572| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2572| 
        ; call occurs [#_scia_puts] ; [] |2572| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2575,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2575| 
        MOVL      XAR0,#44              ; [CPU_] |2575| 
        DEC       *-SP[57]              ; [CPU_] |2575| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2575| 
        MOV       *-SP[3],AR1           ; [CPU_] |2575| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2575| 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_sprintf")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2575| 
        ; call occurs [#_sprintf] ; [] |2575| 
        MOVL      XAR0,#44              ; [CPU_] |2575| 
	.dwpsn	file "../Source/prod.c",line 2576,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2576| 
	.dwpsn	file "../Source/prod.c",line 2575,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2575| 
	.dwpsn	file "../Source/prod.c",line 2576,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2576| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2576| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2576| 
        ; call occurs [#_scia_getparam] ; [] |2576| 
        MOVL      XAR0,#86              ; [CPU_] |2576| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2576| 
	.dwpsn	file "../Source/prod.c",line 2577,column 6,is_stmt,isa 0
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_atol")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2577| 
        ; call occurs [#_atol] ; [] |2577| 
        MOVL      XAR0,#86              ; [CPU_] |2577| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2577| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2577| 
	.dwpsn	file "../Source/prod.c",line 2578,column 6,is_stmt,isa 0
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2578| 
        ; call occurs [#_scia_puts] ; [] |2578| 
	.dwpsn	file "../Source/prod.c",line 2579,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2579| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2579| 
        ; call occurs [#_scia_puts] ; [] |2579| 
	.dwpsn	file "../Source/prod.c",line 2580,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2580| 
        B         $C$L509,NEQ           ; [CPU_] |2580| 
        ; branchcc occurs ; [] |2580| 
	.dwpsn	file "../Source/prod.c",line 2581,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2581| 
	.dwpsn	file "../Source/prod.c",line 2582,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2582| 
        ; branch occurs ; [] |2582| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2584,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2584| 
        MOVL      XAR0,#44              ; [CPU_] |2584| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2584| 
        MOV       *-SP[3],AR1           ; [CPU_] |2584| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2584| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2584| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2584| 
        MOVL      XAR4,XAR1             ; [CPU_] |2584| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_sprintf")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2584| 
        ; call occurs [#_sprintf] ; [] |2584| 
        MOVL      XAR4,XAR1             ; [CPU_] |2584| 
	.dwpsn	file "../Source/prod.c",line 2586,column 6,is_stmt,isa 0
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2586| 
        ; call occurs [#_scia_puts] ; [] |2586| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2591,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2591| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2591| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2591| 
        ADDL      ACC,XAR6              ; [CPU_] |2591| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2591| 
        ADD       ACC,#201 << 4         ; [CPU_] |2591| 
        MOVL      XAR4,ACC              ; [CPU_] |2591| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2591| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2592,column 6,is_stmt,isa 0
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2592| 
        ; call occurs [#_ad7738_setcal] ; [] |2592| 
	.dwpsn	file "../Source/prod.c",line 2593,column 6,is_stmt,isa 0
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2593| 
        ; call occurs [#_velf_rst] ; [] |2593| 
	.dwpsn	file "../Source/prod.c",line 2595,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2595| 
        ; branch occurs ; [] |2595| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2570,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2570| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2570| 
        ; call occurs [#_scia_puts] ; [] |2570| 
	.dwpsn	file "../Source/prod.c",line 2562,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2562| 
        ; branch occurs ; [] |2562| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2533,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2533| 
        MOVL      XAR0,#44              ; [CPU_] |2533| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2533| 
        MOV       *-SP[3],#4096         ; [CPU_] |2533| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2533| 
        MOVL      XAR4,XAR1             ; [CPU_] |2533| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_sprintf")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2533| 
        ; call occurs [#_sprintf] ; [] |2533| 
	.dwpsn	file "../Source/prod.c",line 2535,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2535| 
	.dwpsn	file "../Source/prod.c",line 2533,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2533| 
	.dwpsn	file "../Source/prod.c",line 2535,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2535| 
        MOV       AL,#1024              ; [CPU_] |2535| 
        MOVL      XAR5,XAR1             ; [CPU_] |2535| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2535| 
        ; call occurs [#_scia_getparam] ; [] |2535| 
	.dwpsn	file "../Source/prod.c",line 2536,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2536| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_atoi")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2536| 
        ; call occurs [#_atoi] ; [] |2536| 
        MOV       *-SP[47],AL           ; [CPU_] |2536| 
	.dwpsn	file "../Source/prod.c",line 2537,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2537| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2537| 
        ; call occurs [#_scia_puts] ; [] |2537| 
        MOV       AL,*-SP[47]           ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2539,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
        CMP       AL,#4096              ; [CPU_] |2539| 
        B         $C$L513,GT            ; [CPU_] |2539| 
        ; branchcc occurs ; [] |2539| 
	.dwpsn	file "../Source/prod.c",line 2543,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2543| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2543| 
        ; call occurs [#_scia_puts] ; [] |2543| 
	.dwpsn	file "../Source/prod.c",line 2545,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2545| 
        MOVL      XAR0,#44              ; [CPU_] |2545| 
        MOV       AL,*-SP[47]           ; [CPU_] |2545| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2545| 
        MOV       *-SP[3],AL            ; [CPU_] |2545| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2545| 
        MOVL      XAR4,XAR1             ; [CPU_] |2545| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_sprintf")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2545| 
        ; call occurs [#_sprintf] ; [] |2545| 
        MOVL      XAR4,XAR1             ; [CPU_] |2545| 
	.dwpsn	file "../Source/prod.c",line 2547,column 6,is_stmt,isa 0
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2547| 
        ; call occurs [#_scia_puts] ; [] |2547| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2552,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2552| 
        MOVL      ACC,XAR4              ; [CPU_] |2552| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2552| 
        MOVL      XAR4,ACC              ; [CPU_] |2552| 
        MOV       AL,*-SP[47]           ; [CPU_] |2552| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2552| 
	.dwpsn	file "../Source/prod.c",line 2556,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2556| 
        ; branch occurs ; [] |2556| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2541,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2541| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2541| 
        ; call occurs [#_scia_puts] ; [] |2541| 
	.dwpsn	file "../Source/prod.c",line 2532,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2532| 
        ; branch occurs ; [] |2532| 
$C$L514:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2605,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2605| 
        B         $C$L625,LO            ; [CPU_] |2605| 
        ; branchcc occurs ; [] |2605| 
	.dwpsn	file "../Source/prod.c",line 2608,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2608| 
        CMPB      AL,#83                ; [CPU_] |2608| 
        B         $C$L625,NEQ           ; [CPU_] |2608| 
        ; branchcc occurs ; [] |2608| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2615| 
        MOVL      XAR0,#44              ; [CPU_] |2615| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2615| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2615| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2615| 
        MOVL      XAR4,XAR1             ; [CPU_] |2615| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_sprintf")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2615| 
        ; call occurs [#_sprintf] ; [] |2615| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2616| 
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2615| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2616| 
        MOV       AL,#1024              ; [CPU_] |2616| 
        MOVL      XAR5,XAR1             ; [CPU_] |2616| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2616| 
        ; call occurs [#_scia_getparam] ; [] |2616| 
	.dwpsn	file "../Source/prod.c",line 2617,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2617| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_atoi")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2617| 
        ; call occurs [#_atoi] ; [] |2617| 
        MOV       *-SP[57],AL           ; [CPU_] |2617| 
	.dwpsn	file "../Source/prod.c",line 2618,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2618| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2618| 
        ; call occurs [#_scia_puts] ; [] |2618| 
        MOV       AL,*-SP[57]           ; [CPU_] |2618| 
	.dwpsn	file "../Source/prod.c",line 2620,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2620| 
        CMPB      AL,#4                 ; [CPU_] |2620| 
        B         $C$L529,HIS           ; [CPU_] |2620| 
        ; branchcc occurs ; [] |2620| 
	.dwpsn	file "../Source/prod.c",line 2624,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2624| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2624| 
        ; call occurs [#_scia_puts] ; [] |2624| 
        MOVL      XAR0,#62              ; [CPU_] |2624| 
	.dwpsn	file "../Source/prod.c",line 2628,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2628| 
	.dwpsn	file "../Source/prod.c",line 2624,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2624| 
	.dwpsn	file "../Source/prod.c",line 2628,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2628| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2629,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2629| 
        MOVL      XAR0,#44              ; [CPU_] |2629| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2629| 
        MOV       *-SP[3],AL            ; [CPU_] |2629| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2629| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2629| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2629| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_sprintf")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2629| 
        ; call occurs [#_sprintf] ; [] |2629| 
        MOVL      XAR0,#44              ; [CPU_] |2629| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2629| 
	.dwpsn	file "../Source/prod.c",line 2630,column 7,is_stmt,isa 0
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2630| 
        ; call occurs [#_scia_puts] ; [] |2630| 
        MOV       AL,*-SP[47]           ; [CPU_] |2630| 
	.dwpsn	file "../Source/prod.c",line 2631,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2631| 
        B         $C$L517,GEQ           ; [CPU_] |2631| 
        ; branchcc occurs ; [] |2631| 
	.dwpsn	file "../Source/prod.c",line 2632,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2632| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2632| 
        ; call occurs [#_scia_puts] ; [] |2632| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2628,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2628| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2628| 
        B         $C$L516,LT            ; [CPU_] |2628| 
        ; branchcc occurs ; [] |2628| 
	.dwpsn	file "../Source/prod.c",line 2635,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2635| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2635| 
        ; call occurs [#_scia_puts] ; [] |2635| 
	.dwpsn	file "../Source/prod.c",line 2636,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2636| 
        MOVL      XAR0,#44              ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2635,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2635| 
	.dwpsn	file "../Source/prod.c",line 2636,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2636| 
        MOV       *-SP[3],AH            ; [CPU_] |2636| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2636| 
        DEC       *-SP[57]              ; [CPU_] |2636| 
        MOV       *-SP[47],AH           ; [CPU_] |2636| 
        MOVL      XAR4,XAR1             ; [CPU_] |2636| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2636| 
        ; call occurs [#_sprintf] ; [] |2636| 
	.dwpsn	file "../Source/prod.c",line 2638,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2638| 
	.dwpsn	file "../Source/prod.c",line 2636,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2638,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2638| 
        MOV       AL,#1024              ; [CPU_] |2638| 
        MOVL      XAR5,XAR1             ; [CPU_] |2638| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2638| 
        ; call occurs [#_scia_getparam] ; [] |2638| 
        MOVL      XAR4,XAR1             ; [CPU_] |2638| 
	.dwpsn	file "../Source/prod.c",line 2639,column 6,is_stmt,isa 0
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_atoi")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2639| 
        ; call occurs [#_atoi] ; [] |2639| 
        MOVZ      AR1,AL                ; [CPU_] |2639| 
        CMPB      AL,#7                 ; [CPU_] |2639| 
        B         $C$L518,LO            ; [CPU_] |2639| 
        ; branchcc occurs ; [] |2639| 
	.dwpsn	file "../Source/prod.c",line 2642,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2642| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2642| 
        ; call occurs [#_scia_puts] ; [] |2642| 
	.dwpsn	file "../Source/prod.c",line 2641,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2641| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2645,column 6,is_stmt,isa 0
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2645| 
        ; call occurs [#_scia_puts] ; [] |2645| 
	.dwpsn	file "../Source/prod.c",line 2646,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2646| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2646| 
        ; call occurs [#_scia_puts] ; [] |2646| 
	.dwpsn	file "../Source/prod.c",line 2647,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2647| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2647| 
        MOVB      AL,#3                 ; [CPU_] |2647| 
        MOV       T,*-SP[57]            ; [CPU_] |2647| 
        MPYU      ACC,T,AL              ; [CPU_] |2647| 
        ADDL      ACC,XAR6              ; [CPU_] |2647| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2647| 
        MOVL      XAR4,ACC              ; [CPU_] |2647| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2647| 
	.dwpsn	file "../Source/prod.c",line 2649,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2649| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2649| 
        CMPB      AL,#2                 ; [CPU_] |2649| 
        B         $C$L522,LOS           ; [CPU_] |2649| 
        ; branchcc occurs ; [] |2649| 
        MOV       AH,AL                 ; [CPU_] |2649| 
        ADDB      AH,#-3                ; [CPU_] |2649| 
        CMPB      AH,#1                 ; [CPU_] |2649| 
        B         $C$L521,LOS           ; [CPU_] |2649| 
        ; branchcc occurs ; [] |2649| 
        CMPB      AL,#5                 ; [CPU_] |2649| 
        B         $C$L519,EQ            ; [CPU_] |2649| 
        ; branchcc occurs ; [] |2649| 
        CMPB      AL,#6                 ; [CPU_] |2649| 
        B         $C$L584,NEQ           ; [CPU_] |2649| 
        ; branchcc occurs ; [] |2649| 
	.dwpsn	file "../Source/prod.c",line 2723,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2723| 
        MOV       AL,*-SP[47]           ; [CPU_] |2723| 
        MOVL      XAR0,#62              ; [CPU_] |2723| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2723| 
        MOV       *-SP[3],AL            ; [CPU_] |2723| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2723| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2723| 
        ADDL      ACC,XAR6              ; [CPU_] |2723| 
        MOVL      XAR4,ACC              ; [CPU_] |2723| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2723| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2726| 
        ; branch occurs ; [] |2726| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2704,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2704| 
        MOVL      XAR0,#44              ; [CPU_] |2704| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2704| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2704| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2704| 
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_sprintf")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2704| 
        ; call occurs [#_sprintf] ; [] |2704| 
        MOVL      XAR0,#44              ; [CPU_] |2704| 
	.dwpsn	file "../Source/prod.c",line 2705,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2705| 
	.dwpsn	file "../Source/prod.c",line 2704,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2704| 
	.dwpsn	file "../Source/prod.c",line 2705,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2705| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2705| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2705| 
        ; call occurs [#_scia_getparam] ; [] |2705| 
        MOVL      XAR0,#86              ; [CPU_] |2705| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2705| 
	.dwpsn	file "../Source/prod.c",line 2706,column 8,is_stmt,isa 0
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_atoi")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2706| 
        ; call occurs [#_atoi] ; [] |2706| 
        MOVL      XAR0,#86              ; [CPU_] |2706| 
        MOV       *-SP[58],AL           ; [CPU_] |2706| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2706| 
	.dwpsn	file "../Source/prod.c",line 2707,column 8,is_stmt,isa 0
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2707| 
        ; call occurs [#_scia_puts] ; [] |2707| 
        MOV       AL,*-SP[58]           ; [CPU_] |2707| 
	.dwpsn	file "../Source/prod.c",line 2709,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2709| 
        CMPB      AL,#4                 ; [CPU_] |2709| 
        B         $C$L520,HIS           ; [CPU_] |2709| 
        ; branchcc occurs ; [] |2709| 
	.dwpsn	file "../Source/prod.c",line 2713,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2713| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2713| 
        ; call occurs [#_scia_puts] ; [] |2713| 
	.dwpsn	file "../Source/prod.c",line 2715,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2715| 
	.dwpsn	file "../Source/prod.c",line 2717,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2717| 
        MOVL      XAR0,#62              ; [CPU_] |2717| 
	.dwpsn	file "../Source/prod.c",line 2713,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2713| 
	.dwpsn	file "../Source/prod.c",line 2715,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2715| 
	.dwpsn	file "../Source/prod.c",line 2717,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2717| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2717| 
        MOV       *-SP[3],AL            ; [CPU_] |2717| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2717| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2717| 
        ADDL      ACC,XAR6              ; [CPU_] |2717| 
        MOVL      XAR4,ACC              ; [CPU_] |2717| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2717| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2717| 
        MOVB      AL,#1                 ; [CPU_] |2717| 
        ADD       AL,*-SP[58]           ; [CPU_] |2717| 
        MOV       *-SP[7],AL            ; [CPU_] |2717| 
	.dwpsn	file "../Source/prod.c",line 2720,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2720| 
        ; branch occurs ; [] |2720| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2711,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2711| 
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2711| 
        ; call occurs [#_scia_puts] ; [] |2711| 
	.dwpsn	file "../Source/prod.c",line 2703,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2703| 
        ; branch occurs ; [] |2703| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2661,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2661| 
        B         $C$L523,UNC           ; [CPU_] |2661| 
        ; branch occurs ; [] |2661| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2655,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2655| 
$C$L523:    
        MOV       *-SP[59],AL           ; [CPU_] |2655| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2666,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2666| 
        MOV       AL,*-SP[59]           ; [CPU_] |2666| 
        MOVL      XAR0,#44              ; [CPU_] |2666| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2666| 
        MOV       *-SP[3],AL            ; [CPU_] |2666| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2666| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_sprintf")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2666| 
        ; call occurs [#_sprintf] ; [] |2666| 
        MOVL      XAR0,#44              ; [CPU_] |2666| 
	.dwpsn	file "../Source/prod.c",line 2667,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2667| 
	.dwpsn	file "../Source/prod.c",line 2666,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2666| 
	.dwpsn	file "../Source/prod.c",line 2667,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2667| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2667| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2667| 
        ; call occurs [#_scia_getparam] ; [] |2667| 
        MOVL      XAR0,#86              ; [CPU_] |2667| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2667| 
	.dwpsn	file "../Source/prod.c",line 2668,column 8,is_stmt,isa 0
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_atoi")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2668| 
        ; call occurs [#_atoi] ; [] |2668| 
        MOVL      XAR0,#86              ; [CPU_] |2668| 
        MOV       *-SP[58],AL           ; [CPU_] |2668| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2668| 
	.dwpsn	file "../Source/prod.c",line 2669,column 8,is_stmt,isa 0
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2669| 
        ; call occurs [#_scia_puts] ; [] |2669| 
        MOV       AL,*-SP[58]           ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2671,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2671| 
        ; branchcc occurs ; [] |2671| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2671| 
        B         $C$L528,LO            ; [CPU_] |2671| 
        ; branchcc occurs ; [] |2671| 
	.dwpsn	file "../Source/prod.c",line 2675,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2675| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2675| 
        ; call occurs [#_scia_puts] ; [] |2675| 
	.dwpsn	file "../Source/prod.c",line 2677,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2677| 
	.dwpsn	file "../Source/prod.c",line 2675,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2675| 
	.dwpsn	file "../Source/prod.c",line 2677,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2677| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2682,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2682| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2682| 
        MOV       AL,#1024              ; [CPU_] |2682| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2682| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2682| 
        ; call occurs [#_scia_getparam] ; [] |2682| 
        MOVL      XAR0,#86              ; [CPU_] |2682| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2682| 
	.dwpsn	file "../Source/prod.c",line 2684,column 8,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_atoi")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2684| 
        ; call occurs [#_atoi] ; [] |2684| 
        MOV       *-SP[48],AL           ; [CPU_] |2684| 
        CMPB      AL,#0                 ; [CPU_] |2684| 
        B         $C$L527,LT            ; [CPU_] |2684| 
        ; branchcc occurs ; [] |2684| 
        CMPB      AL,#6                 ; [CPU_] |2684| 
        B         $C$L527,GEQ           ; [CPU_] |2684| 
        ; branchcc occurs ; [] |2684| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2690,column 7,is_stmt,isa 0
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2690| 
        ; call occurs [#_scia_puts] ; [] |2690| 
	.dwpsn	file "../Source/prod.c",line 2691,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2691| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2691| 
        ; call occurs [#_scia_puts] ; [] |2691| 
        MOV       AL,*-SP[48]           ; [CPU_] |2691| 
	.dwpsn	file "../Source/prod.c",line 2694,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2694| 
        MOVL      XAR0,#62              ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2692,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2694,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2694| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2694| 
        MOV       *-SP[3],AL            ; [CPU_] |2694| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2694| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2694| 
        ADDL      ACC,XAR6              ; [CPU_] |2694| 
        MOVL      XAR4,ACC              ; [CPU_] |2694| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2694| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2694| 
        MOVB      AL,#1                 ; [CPU_] |2694| 
        ADD       AL,*-SP[58]           ; [CPU_] |2694| 
        MOV       *-SP[7],AL            ; [CPU_] |2694| 
        MOV       AL,*-SP[48]           ; [CPU_] |2694| 
        MOV       *-SP[8],AL            ; [CPU_] |2694| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2694| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2694| 
        MOVL      XAR4,XAR1             ; [CPU_] |2694| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_sprintf")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2694| 
        ; call occurs [#_sprintf] ; [] |2694| 
        MOVL      XAR4,XAR1             ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2697,column 7,is_stmt,isa 0
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2697| 
        ; call occurs [#_scia_puts] ; [] |2697| 
	.dwpsn	file "../Source/prod.c",line 2732,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2732| 
        ; branch occurs ; [] |2732| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2688,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2688| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2688| 
        ; call occurs [#_scia_puts] ; [] |2688| 
	.dwpsn	file "../Source/prod.c",line 2681,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2681| 
        ; branch occurs ; [] |2681| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2673,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2673| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2673| 
        ; call occurs [#_scia_puts] ; [] |2673| 
	.dwpsn	file "../Source/prod.c",line 2665,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2665| 
        ; branch occurs ; [] |2665| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2622,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2622| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2622| 
        ; call occurs [#_scia_puts] ; [] |2622| 
	.dwpsn	file "../Source/prod.c",line 2614,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2614| 
        ; branch occurs ; [] |2614| 
$C$L530:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1712,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1712| 
        B         $C$L625,LO            ; [CPU_] |1712| 
        ; branchcc occurs ; [] |1712| 
	.dwpsn	file "../Source/prod.c",line 1717,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1717| 
        CMPB      AL,#86                ; [CPU_] |1717| 
        B         $C$L531,EQ            ; [CPU_] |1717| 
        ; branchcc occurs ; [] |1717| 
        CMPB      AL,#77                ; [CPU_] |1717| 
        B         $C$L531,EQ            ; [CPU_] |1717| 
        ; branchcc occurs ; [] |1717| 
        CMPB      AL,#83                ; [CPU_] |1717| 
        B         $C$L625,NEQ           ; [CPU_] |1717| 
        ; branchcc occurs ; [] |1717| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1720,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1720| 
        MOV       *-SP[47],AL           ; [CPU_] |1720| 
	.dwpsn	file "../Source/prod.c",line 1722,column 5,is_stmt,isa 0
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1722| 
        ; call occurs [#_lcd_clear] ; [] |1722| 
	.dwpsn	file "../Source/prod.c",line 1723,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1723| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1723| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1723| 
        ; call occurs [#_lcd_puts] ; [] |1723| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1729| 
        MOVL      XAR0,#44              ; [CPU_] |1729| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1729| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1729| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1729| 
        MOVL      XAR4,XAR1             ; [CPU_] |1729| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_sprintf")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1729| 
        ; call occurs [#_sprintf] ; [] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1730| 
	.dwpsn	file "../Source/prod.c",line 1729,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1730| 
        MOV       AL,#1024              ; [CPU_] |1730| 
        MOVL      XAR5,XAR1             ; [CPU_] |1730| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1730| 
        ; call occurs [#_scia_getparam] ; [] |1730| 
	.dwpsn	file "../Source/prod.c",line 1731,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1731| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_atoi")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1731| 
        ; call occurs [#_atoi] ; [] |1731| 
        MOV       *-SP[58],AL           ; [CPU_] |1731| 
	.dwpsn	file "../Source/prod.c",line 1732,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1732| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1732| 
        ; call occurs [#_scia_puts] ; [] |1732| 
        MOV       AL,*-SP[58]           ; [CPU_] |1732| 
	.dwpsn	file "../Source/prod.c",line 1734,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1734| 
        CMPB      AL,#4                 ; [CPU_] |1734| 
        B         $C$L590,HIS           ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
	.dwpsn	file "../Source/prod.c",line 1738,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1738| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1738| 
        ; call occurs [#_scia_puts] ; [] |1738| 
	.dwpsn	file "../Source/prod.c",line 1739,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1739| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1744,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1744| 
        MOVL      XAR0,#44              ; [CPU_] |1744| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1744| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1744| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1744| 
        MOVL      XAR4,XAR1             ; [CPU_] |1744| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_sprintf")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1744| 
        ; call occurs [#_sprintf] ; [] |1744| 
	.dwpsn	file "../Source/prod.c",line 1745,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1745| 
	.dwpsn	file "../Source/prod.c",line 1744,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1744| 
	.dwpsn	file "../Source/prod.c",line 1745,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1745| 
        MOV       AL,#1024              ; [CPU_] |1745| 
        MOVL      XAR5,XAR1             ; [CPU_] |1745| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1745| 
        ; call occurs [#_scia_getparam] ; [] |1745| 
	.dwpsn	file "../Source/prod.c",line 1746,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1746| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_atoi")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1746| 
        ; call occurs [#_atoi] ; [] |1746| 
        MOV       *-SP[57],AL           ; [CPU_] |1746| 
	.dwpsn	file "../Source/prod.c",line 1747,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1747| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1747| 
        ; call occurs [#_scia_puts] ; [] |1747| 
        MOV       AL,*-SP[57]           ; [CPU_] |1747| 
	.dwpsn	file "../Source/prod.c",line 1751,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1751| 
        CMPB      AL,#20                ; [CPU_] |1751| 
        B         $C$L589,HIS           ; [CPU_] |1751| 
        ; branchcc occurs ; [] |1751| 
	.dwpsn	file "../Source/prod.c",line 1755,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1755| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1755| 
        ; call occurs [#_scia_puts] ; [] |1755| 
	.dwpsn	file "../Source/prod.c",line 1759,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1759| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1759| 
        MOVL      XAR0,#44              ; [CPU_] |1759| 
	.dwpsn	file "../Source/prod.c",line 1755,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1759,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1759| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1759| 
        MOV       *-SP[3],AL            ; [CPU_] |1759| 
        MOV       *-SP[4],AH            ; [CPU_] |1759| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1759| 
        DEC       *-SP[57]              ; [CPU_] |1759| 
        MOV       *-SP[59],AH           ; [CPU_] |1759| 
        MOV       *-SP[60],AL           ; [CPU_] |1759| 
        MOVL      XAR4,XAR1             ; [CPU_] |1759| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_sprintf")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1759| 
        ; call occurs [#_sprintf] ; [] |1759| 
	.dwpsn	file "../Source/prod.c",line 1760,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1760| 
        MOVL      XAR4,XAR1             ; [CPU_] |1760| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1760| 
        ; call occurs [#_lcd_puts] ; [] |1760| 
	.dwpsn	file "../Source/prod.c",line 1764,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1764| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1764| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1764| 
        MOVL      XAR4,XAR1             ; [CPU_] |1764| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_sprintf")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1764| 
        ; call occurs [#_sprintf] ; [] |1764| 
	.dwpsn	file "../Source/prod.c",line 1765,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1765| 
        MOV       AL,#1024              ; [CPU_] |1765| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1765| 
        MOVL      XAR4,XAR1             ; [CPU_] |1765| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1765| 
        ; call occurs [#_scia_getparam] ; [] |1765| 
        CMPB      AL,#15                ; [CPU_] |1765| 
        B         $C$L534,LOS           ; [CPU_] |1765| 
        ; branchcc occurs ; [] |1765| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1769| 
        MOVB      XAR0,#15              ; [CPU_] |1769| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1769| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1771,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1771| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1771| 
        MOVL      XAR0,#86              ; [CPU_] |1771| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1771| 
        MOVB      AH,#1                 ; [CPU_] |1771| 
        ADD       AH,AL                 ; [CPU_] |1771| 
        MOVU      ACC,AH                ; [CPU_] |1771| 
        MOVL      XAR5,XAR1             ; [CPU_] |1771| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_memcpy")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1771| 
        ; call occurs [#_memcpy] ; [] |1771| 
        MOVL      XAR4,XAR1             ; [CPU_] |1771| 
	.dwpsn	file "../Source/prod.c",line 1772,column 5,is_stmt,isa 0
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1772| 
        ; call occurs [#_scia_puts] ; [] |1772| 
	.dwpsn	file "../Source/prod.c",line 1773,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1773| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1773| 
        ; call occurs [#_scia_puts] ; [] |1773| 
	.dwpsn	file "../Source/prod.c",line 1777,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1777| 
        MOVL      XAR0,#44              ; [CPU_] |1777| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1777| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1777| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1777| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_sprintf")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1777| 
        ; call occurs [#_sprintf] ; [] |1777| 
        MOVL      XAR0,#44              ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1777,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1778| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1778| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1778| 
        ; call occurs [#_scia_getparam] ; [] |1778| 
        CMPB      AL,#15                ; [CPU_] |1778| 
        B         $C$L535,LOS           ; [CPU_] |1778| 
        ; branchcc occurs ; [] |1778| 
	.dwpsn	file "../Source/prod.c",line 1782,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1782| 
        MOVB      XAR0,#15              ; [CPU_] |1782| 
	.dwpsn	file "../Source/prod.c",line 1781,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1781| 
	.dwpsn	file "../Source/prod.c",line 1782,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1782| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1784,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1784| 
        MOVL      XAR0,#60              ; [CPU_] |1784| 
        MOVL      XAR5,XAR1             ; [CPU_] |1784| 
        ADD       AH,AL                 ; [CPU_] |1784| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1784| 
        MOVU      ACC,AH                ; [CPU_] |1784| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_memcpy")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1784| 
        ; call occurs [#_memcpy] ; [] |1784| 
        MOVL      XAR4,XAR1             ; [CPU_] |1784| 
	.dwpsn	file "../Source/prod.c",line 1785,column 5,is_stmt,isa 0
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1785| 
        ; call occurs [#_scia_puts] ; [] |1785| 
	.dwpsn	file "../Source/prod.c",line 1786,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1786| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1786| 
        ; call occurs [#_scia_puts] ; [] |1786| 
        MOVL      XAR0,#70              ; [CPU_] |1786| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1786| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1789,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1789| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1789| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1790,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1790| 
        MOVL      XAR0,#88              ; [CPU_] |1790| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1790| 
        MOV       *-SP[3],AL            ; [CPU_] |1790| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1790| 
        MOVL      XAR0,#88              ; [CPU_] |1790| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1790| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1790| 
        MOVL      XAR4,XAR1             ; [CPU_] |1790| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1790| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_sprintf")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1790| 
        ; call occurs [#_sprintf] ; [] |1790| 
	.dwpsn	file "../Source/prod.c",line 1789,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1789| 
        INC       *-SP[61]              ; [CPU_] |1789| 
        MOV       AL,*-SP[61]           ; [CPU_] |1789| 
        CMPB      AL,#7                 ; [CPU_] |1789| 
        B         $C$L536,LT            ; [CPU_] |1789| 
        ; branchcc occurs ; [] |1789| 
	.dwpsn	file "../Source/prod.c",line 1792,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1792| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1792| 
        MOVB      XAR1,#54              ; [CPU_] |1792| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1792| 
	.dwpsn	file "../Source/prod.c",line 1793,column 5,is_stmt,isa 0
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1793| 
        ; call occurs [#_scia_puts] ; [] |1793| 
	.dwpsn	file "../Source/prod.c",line 1794,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1794| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1794| 
        MOV       AL,#1024              ; [CPU_] |1794| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1794| 
        MOVL      XAR5,XAR1             ; [CPU_] |1794| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1794| 
        ; call occurs [#_scia_getparam] ; [] |1794| 
        MOVL      XAR4,XAR1             ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1796,column 5,is_stmt,isa 0
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_atoi")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1796| 
        ; call occurs [#_atoi] ; [] |1796| 
        MOVB      XAR0,#42              ; [CPU_] |1796| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1796| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1796| 
	.dwpsn	file "../Source/prod.c",line 1798,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1798| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1798| 
        CMPB      AL,#6                 ; [CPU_] |1798| 
        B         $C$L537,GT            ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        CMPB      AL,#6                 ; [CPU_] |1798| 
        B         $C$L540,EQ            ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        CMPB      AL,#1                 ; [CPU_] |1798| 
        B         $C$L543,LOS           ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        MOV       AH,AL                 ; [CPU_] |1798| 
        ADDB      AH,#-2                ; [CPU_] |1798| 
        CMPB      AH,#2                 ; [CPU_] |1798| 
        B         $C$L542,LOS           ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        CMPB      AL,#5                 ; [CPU_] |1798| 
        B         $C$L541,EQ            ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        B         $C$L538,UNC           ; [CPU_] |1798| 
        ; branch occurs ; [] |1798| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1798| 
        ADDB      AH,#-7                ; [CPU_] |1798| 
        CMPB      AH,#1                 ; [CPU_] |1798| 
        B         $C$L539,LOS           ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
        CMPB      AL,#15                ; [CPU_] |1798| 
        B         $C$L539,EQ            ; [CPU_] |1798| 
        ; branchcc occurs ; [] |1798| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1820,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1820| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1820| 
	.dwpsn	file "../Source/prod.c",line 1821,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1821| 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1821| 
        ; call occurs [#_scia_puts] ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1822,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1822| 
        ; branch occurs ; [] |1822| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1818,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1818| 
        ; branch occurs ; [] |1818| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1813| 
        ; branch occurs ; [] |1813| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1809,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1809| 
	.dwpsn	file "../Source/prod.c",line 1810,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1810| 
        ; branch occurs ; [] |1810| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1806,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1806| 
	.dwpsn	file "../Source/prod.c",line 1807,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1807| 
        ; branch occurs ; [] |1807| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1801| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1824,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1824| 
        MOVL      XAR4,XAR7             ; [CPU_] |1824| 
        MOVB      XAR0,#43              ; [CPU_] |1824| 
        ADDB      XAR7,#42              ; [CPU_] |1824| 
        MOV       AL,*XAR7              ; [CPU_] |1824| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1824| 
	.dwpsn	file "../Source/prod.c",line 1825,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1825| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1825| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1825| 
        MOVL      XAR0,#86              ; [CPU_] |1825| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1825| 
	.dwpsn	file "../Source/prod.c",line 1827,column 5,is_stmt,isa 0
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1827| 
        ; call occurs [#_scia_puts] ; [] |1827| 
	.dwpsn	file "../Source/prod.c",line 1828,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1828| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1828| 
        ; call occurs [#_scia_puts] ; [] |1828| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1833| 
        MOVL      XAR5,XAR1             ; [CPU_] |1833| 
        MOV       AL,#1024              ; [CPU_] |1833| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1833| 
        ; call occurs [#_scia_getparam] ; [] |1833| 
        MOVL      XAR4,XAR1             ; [CPU_] |1833| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_strtod")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1834| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1834| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1834| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1836| 
        MOV       AH,#0                 ; [CPU_] |1836| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1836| 
        MOVL      ACC,XAR3              ; [CPU_] |1836| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1836| 
        ; call occurs [#FS$$CMP] ; [] |1836| 
        CMPB      AL,#0                 ; [CPU_] |1836| 
        B         $C$L588,EQ            ; [CPU_] |1836| 
        ; branchcc occurs ; [] |1836| 
	.dwpsn	file "../Source/prod.c",line 1840,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1840| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1840| 
        MOVB      XAR1,#142             ; [CPU_] |1840| 
        MOVL      XAR0,#86              ; [CPU_] |1840| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1840| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1840| 
	.dwpsn	file "../Source/prod.c",line 1841,column 5,is_stmt,isa 0
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1841| 
        ; call occurs [#_scia_puts] ; [] |1841| 
	.dwpsn	file "../Source/prod.c",line 1842,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1842| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1842| 
        ; call occurs [#_scia_puts] ; [] |1842| 
        MOV       AL,*-SP[58]           ; [CPU_] |1842| 
	.dwpsn	file "../Source/prod.c",line 1844,column 5,is_stmt,isa 0
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_tagid")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1844| 
        ; call occurs [#_tagid] ; [] |1844| 
        MOVL      XAR0,#36              ; [CPU_] |1844| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1844| 
        MOVL      XAR4,XAR5             ; [CPU_] |1844| 
        ADDB      XAR4,#32              ; [CPU_] |1844| 
	.dwpsn	file "../Source/prod.c",line 1846,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1844,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1844| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1844| 
	.dwpsn	file "../Source/prod.c",line 1846,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1846| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1846| 
        MOV       *-SP[2],#0            ; [CPU_] |1846| 
        MOV       *-SP[1],#0            ; [CPU_] |1846| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1846| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1846| 
        MOVL      P,XAR4                ; [CPU_] |1846| 
        MOVL      ACC,XAR5              ; [CPU_] |1846| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1199, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1846| 
        ; call occurs [#ULL$$CMP] ; [] |1846| 
        CMPB      AL,#0                 ; [CPU_] |1846| 
        B         $C$L546,NEQ           ; [CPU_] |1846| 
        ; branchcc occurs ; [] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1847| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1848,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1848| 
        ; branch occurs ; [] |1848| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1849,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1849| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1849| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1849| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1849| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1849| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1849| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_sprintf")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1849| 
        ; call occurs [#_sprintf] ; [] |1849| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1851,column 5,is_stmt,isa 0
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1851| 
        ; call occurs [#_scia_puts] ; [] |1851| 
        MOV       AL,*-SP[47]           ; [CPU_] |1851| 
	.dwpsn	file "../Source/prod.c",line 1853,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1853| 
        B         $C$L561,EQ            ; [CPU_] |1853| 
        ; branchcc occurs ; [] |1853| 
        CMPB      AL,#83                ; [CPU_] |1853| 
        B         $C$L552,EQ            ; [CPU_] |1853| 
        ; branchcc occurs ; [] |1853| 
        CMPB      AL,#86                ; [CPU_] |1853| 
        B         $C$L618,NEQ           ; [CPU_] |1853| 
        ; branchcc occurs ; [] |1853| 
	.dwpsn	file "../Source/prod.c",line 1858,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1858| 
        MOVB      AL,#40                ; [CPU_] |1858| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1858| 
        ; call occurs [#_lcd_puts] ; [] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1860| 
        MOVB      XAR0,#36              ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1863| 
	.dwpsn	file "../Source/prod.c",line 1860,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1861,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1861| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1861| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1863| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1863| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1863| 
        MOVL      XAR0,#70              ; [CPU_] |1863| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1863| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1863| 
        MOV       ACC,AL << 1           ; [CPU_] |1863| 
        ADDL      ACC,XAR6              ; [CPU_] |1863| 
        MOVL      XAR4,ACC              ; [CPU_] |1863| 
        MOVL      XAR0,#44              ; [CPU_] |1863| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1863| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1863| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1863| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_sprintf")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1863| 
        ; call occurs [#_sprintf] ; [] |1863| 
        MOVL      XAR0,#44              ; [CPU_] |1863| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1865| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1863| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1865| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1865| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1865| 
        ; call occurs [#_scia_getparam] ; [] |1865| 
        MOVL      XAR0,#86              ; [CPU_] |1865| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1865| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_strtod")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1866,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1866| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1866,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1866| 
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1867| 
        MOV       AH,#0                 ; [CPU_] |1867| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1867| 
        MOVL      ACC,XAR6              ; [CPU_] |1867| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1867| 
        ; call occurs [#FS$$CMP] ; [] |1867| 
        CMPB      AL,#0                 ; [CPU_] |1867| 
        B         $C$L548,NEQ           ; [CPU_] |1867| 
        ; branchcc occurs ; [] |1867| 
	.dwpsn	file "../Source/prod.c",line 1868,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1868| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1868| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1868| 
$C$L548:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1870,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1870| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1870| 
        ; call occurs [#_scia_puts] ; [] |1870| 
	.dwpsn	file "../Source/prod.c",line 1871,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1871| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1871| 
        ; call occurs [#_scia_puts] ; [] |1871| 
	.dwpsn	file "../Source/prod.c",line 1873,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1873| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1873| 
        MOVL      XAR5,XAR1             ; [CPU_] |1873| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1873| 
        ; call occurs [#_scia_getparam] ; [] |1873| 
	.dwpsn	file "../Source/prod.c",line 1876,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1876| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1876| 
        ; call occurs [#_scia_puts] ; [] |1876| 
	.dwpsn	file "../Source/prod.c",line 1878,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1879| 
	.dwpsn	file "../Source/prod.c",line 1878,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1879| 
	.dwpsn	file "../Source/prod.c",line 1878,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1880,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1880| 
	.dwpsn	file "../Source/prod.c",line 1878,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1880,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1880| 
        MOVB      ACC,#0                ; [CPU_] |1880| 
        SUBB      ACC,#1                ; [CPU_] |1880| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1880| 
        B         $C$L551,EQ            ; [CPU_] |1880| 
        ; branchcc occurs ; [] |1880| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1881,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1881| 
        ; branch occurs ; [] |1881| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1882,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1882| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_delay_us")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1882| 
        ; call occurs [#_delay_us] ; [] |1882| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1881,column 14,is_stmt,isa 0
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1881| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1881| 
        CMPB      AL,#0                 ; [CPU_] |1881| 
        B         $C$L549,EQ            ; [CPU_] |1881| 
        ; branchcc occurs ; [] |1881| 
	.dwpsn	file "../Source/prod.c",line 1885,column 7,is_stmt,isa 0
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1885| 
        ; call occurs [#_ad7738_getraw] ; [] |1885| 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1886| 
        ADDL      XAR4,ACC              ; [CPU_] |1886| 
        MOVL      XAR0,#20              ; [CPU_] |1886| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1886| 
        MOVL      XAR0,#20              ; [CPU_] |1886| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1886| 
        ASR64     ACC:P,16              ; [CPU_] |1886| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1886| 
        MOVL      XAR0,#20              ; [CPU_] |1886| 
        ASR64     ACC:P,16              ; [CPU_] |1886| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1886| 
        MOVL      XAR0,#20              ; [CPU_] |1886| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1886| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1886| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1886| 
        MOVL      *-SP[32],P            ; [CPU_] |1886| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1880,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1880| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1880| 
        MOVB      ACC,#0                ; [CPU_] |1880| 
        SUBB      ACC,#1                ; [CPU_] |1880| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1880| 
        B         $C$L550,NEQ           ; [CPU_] |1880| 
        ; branchcc occurs ; [] |1880| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1888,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1888| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1888| 
        ; call occurs [#_scia_puts] ; [] |1888| 
	.dwpsn	file "../Source/prod.c",line 1890,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1890| 
        MOVL      XAR0,#52              ; [CPU_] |1890| 
        MOVL      ACC,XAR1              ; [CPU_] |1890| 
        ADDB      ACC,#96               ; [CPU_] |1890| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1890| 
        MOVL      XAR0,#40              ; [CPU_] |1890| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1890| 
        MOV       T,*-SP[58]            ; [CPU_] |1890| 
        MOVB      AL,#10                ; [CPU_] |1890| 
        MPYU      ACC,T,AL              ; [CPU_] |1890| 
        ADDL      ACC,XAR6              ; [CPU_] |1890| 
        ADDB      ACC,#42               ; [CPU_] |1890| 
        MOVL      XAR4,ACC              ; [CPU_] |1890| 
        MOVL      XAR0,#42              ; [CPU_] |1890| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1890| 
	.dwpsn	file "../Source/prod.c",line 1892,column 6,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1892| 
        ; branch occurs ; [] |1892| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1975,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1975| 
        MOVB      AL,#40                ; [CPU_] |1975| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1975| 
        ; call occurs [#_lcd_puts] ; [] |1975| 
	.dwpsn	file "../Source/prod.c",line 1977,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1977| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1977| 
	.dwpsn	file "../Source/prod.c",line 1980,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1980| 
	.dwpsn	file "../Source/prod.c",line 1977,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1977| 
	.dwpsn	file "../Source/prod.c",line 1978,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1978| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1978| 
	.dwpsn	file "../Source/prod.c",line 1980,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1980| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1980| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1980| 
        MOVL      XAR0,#70              ; [CPU_] |1980| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1980| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1980| 
        MOV       ACC,AL << 1           ; [CPU_] |1980| 
        ADDL      ACC,XAR6              ; [CPU_] |1980| 
        MOVL      XAR4,ACC              ; [CPU_] |1980| 
        MOVL      XAR0,#44              ; [CPU_] |1980| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1980| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1980| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1980| 
        MOVL      XAR4,XAR1             ; [CPU_] |1980| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_sprintf")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1980| 
        ; call occurs [#_sprintf] ; [] |1980| 
	.dwpsn	file "../Source/prod.c",line 1983,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1980,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1980| 
	.dwpsn	file "../Source/prod.c",line 1983,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1983| 
        MOV       AL,#1024              ; [CPU_] |1983| 
        MOVL      XAR5,XAR1             ; [CPU_] |1983| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1983| 
        ; call occurs [#_scia_getparam] ; [] |1983| 
	.dwpsn	file "../Source/prod.c",line 1984,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1984| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1984| 
        ; call occurs [#_scia_puts] ; [] |1984| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_strtod")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1986,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1986| 
        MOV       AH,#0                 ; [CPU_] |1986| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1986| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1986| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1986| 
        ; call occurs [#FS$$CMP] ; [] |1986| 
        CMPB      AL,#0                 ; [CPU_] |1986| 
        B         $C$L553,NEQ           ; [CPU_] |1986| 
        ; branchcc occurs ; [] |1986| 
	.dwpsn	file "../Source/prod.c",line 1987,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1987| 
        MOV       AH,#16314             ; [CPU_] |1987| 
	.dwpsn	file "../Source/prod.c",line 1988,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1988| 
	.dwpsn	file "../Source/prod.c",line 1987,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1987| 
	.dwpsn	file "../Source/prod.c",line 1988,column 7,is_stmt,isa 0
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1988| 
        ; call occurs [#_scia_puts] ; [] |1988| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1990,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1990| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1990| 
        ; call occurs [#_scia_puts] ; [] |1990| 
	.dwpsn	file "../Source/prod.c",line 1992,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1992| 
        MOV       AL,#1024              ; [CPU_] |1992| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1992| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1992| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1992| 
        ; call occurs [#_scia_getparam] ; [] |1992| 
	.dwpsn	file "../Source/prod.c",line 1995,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1995| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1995| 
        ; call occurs [#_scia_puts] ; [] |1995| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1997,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1997| 
        MOV       *-SP[48],AL           ; [CPU_] |1997| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1998,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1998| 
        B         $C$L556,LEQ           ; [CPU_] |1998| 
        ; branchcc occurs ; [] |1998| 
	.dwpsn	file "../Source/prod.c",line 2000,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2000| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2000| 
        ; call occurs [#_shunt_switch] ; [] |2000| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 2002,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2002| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("_delay_us")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2002| 
        ; call occurs [#_delay_us] ; [] |2002| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2002| 
	.dwpsn	file "../Source/prod.c",line 2001,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2001| 
        MOVZ      AR0,AR6               ; [CPU_] |2001| 
        MOV       *-SP[47],AR6          ; [CPU_] |2001| 
        CMP       AR0,#-1               ; [CPU_] |2001| 
        B         $C$L555,NEQ           ; [CPU_] |2001| 
        ; branchcc occurs ; [] |2001| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2005,column 8,is_stmt,isa 0
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2005| 
        ; call occurs [#_maf_rst] ; [] |2005| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2007,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2007| 
        SPM       #0                    ; [CPU_] 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("_delay_us")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2007| 
        ; call occurs [#_delay_us] ; [] |2007| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 2010,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |2010| 
	.dwpsn	file "../Source/prod.c",line 2011,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2011| 
	.dwpsn	file "../Source/prod.c",line 2010,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |2010| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2010| 
	.dwpsn	file "../Source/prod.c",line 2012,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2012| 
	.dwpsn	file "../Source/prod.c",line 2011,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2011| 
	.dwpsn	file "../Source/prod.c",line 2012,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2012| 
        MOVB      ACC,#0                ; [CPU_] |2012| 
        SUBB      ACC,#1                ; [CPU_] |2012| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2012| 
        B         $C$L558,EQ            ; [CPU_] |2012| 
        ; branchcc occurs ; [] |2012| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 2013,column 15,is_stmt,isa 0
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2013| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2013| 
        CMPB      AL,#0                 ; [CPU_] |2013| 
        B         $C$L560,EQ            ; [CPU_] |2013| 
        ; branchcc occurs ; [] |2013| 
	.dwpsn	file "../Source/prod.c",line 2017,column 8,is_stmt,isa 0
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2017| 
        ; call occurs [#_ad7738_getraw] ; [] |2017| 
	.dwpsn	file "../Source/prod.c",line 2018,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2018| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2018| 
        ADDL      XAR4,ACC              ; [CPU_] |2018| 
        MOVL      XAR0,#18              ; [CPU_] |2018| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2018| 
        MOVL      XAR0,#18              ; [CPU_] |2018| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2018| 
        ASR64     ACC:P,16              ; [CPU_] |2018| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2018| 
        MOVL      XAR0,#18              ; [CPU_] |2018| 
        ASR64     ACC:P,16              ; [CPU_] |2018| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2018| 
        MOVL      XAR0,#18              ; [CPU_] |2018| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |2018| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2018| 
        MOVL      XAR0,#18              ; [CPU_] |2018| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2018| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |2018| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |2018| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2018| 
	.dwpsn	file "../Source/prod.c",line 2012,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2012| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2012| 
        MOVB      ACC,#0                ; [CPU_] |2012| 
        SUBB      ACC,#1                ; [CPU_] |2012| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2012| 
        B         $C$L557,NEQ           ; [CPU_] |2012| 
        ; branchcc occurs ; [] |2012| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1997,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1997| 
        ADDB      XAR1,#4               ; [CPU_] |1997| 
        MOV       AL,*-SP[48]           ; [CPU_] |1997| 
        CMPB      AL,#2                 ; [CPU_] |1997| 
        B         $C$L554,LT            ; [CPU_] |1997| 
        ; branchcc occurs ; [] |1997| 
	.dwpsn	file "../Source/prod.c",line 2022,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2022| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2022| 
        ; call occurs [#_shunt_switch] ; [] |2022| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2024,column 6,is_stmt,isa 0
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2024| 
        ; call occurs [#_maf_rst] ; [] |2024| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2027,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2027| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2027| 
        ; call occurs [#_scia_puts] ; [] |2027| 
	.dwpsn	file "../Source/prod.c",line 2029,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2029| 
        MOVB      AL,#10                ; [CPU_] |2029| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2029| 
        MOV       T,*-SP[58]            ; [CPU_] |2029| 
        MPYU      ACC,T,AL              ; [CPU_] |2029| 
        MOVL      XAR0,#88              ; [CPU_] |2029| 
        ADDL      ACC,XAR6              ; [CPU_] |2029| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2029| 
        MOV       AL,#16384             ; [CPU_] |2029| 
        MOV       AH,#17948             ; [CPU_] |2029| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2029| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2029| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2029| 
        ; call occurs [#FS$$MPY] ; [] |2029| 
        MOVL      XAR3,ACC              ; [CPU_] |2029| 
        MOVL      P,*-SP[28]            ; [CPU_] |2029| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |2029| 
        SUBUL     P,*-SP[32]            ; [CPU_] |2029| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |2029| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2029| 
        ; call occurs [#LL$$TOFS] ; [] |2029| 
        MOVL      XAR0,#88              ; [CPU_] |2029| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2029| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2029| 
        MOVB      XAR1,#44              ; [CPU_] |2029| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |2029| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2029| 
        ; call occurs [#FS$$MPY] ; [] |2029| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2029| 
        MOVL      ACC,XAR3              ; [CPU_] |2029| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2029| 
        ; call occurs [#FS$$DIV] ; [] |2029| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2029| 
        MOVB      XAR0,#96              ; [CPU_] |2029| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2029| 
	.dwpsn	file "../Source/prod.c",line 2031,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |2031| 
        MOVL      ACC,XAR1              ; [CPU_] |2031| 
        ADDB      ACC,#96               ; [CPU_] |2031| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2031| 
        MOVL      XAR0,#88              ; [CPU_] |2031| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2031| 
        MOVL      XAR0,#42              ; [CPU_] |2031| 
        ADDB      XAR4,#42              ; [CPU_] |2031| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2031| 
$C$L559:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2031| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |2031| 
        ; call occurs [#FS$$NEG] ; [] |2031| 
        MOVB      XAR0,#96              ; [CPU_] |2031| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |2031| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2031| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2031| 
        ; call occurs [#FS$$MPY] ; [] |2031| 
        MOVL      XAR0,#88              ; [CPU_] |2031| 
        MOVL      P,*-SP[32]            ; [CPU_] |2031| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2031| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2031| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2031| 
        ; call occurs [#LL$$TOFS] ; [] |2031| 
        MOVL      XAR0,#88              ; [CPU_] |2031| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2031| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2031| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2031| 
        ; call occurs [#FS$$MPY] ; [] |2031| 
        MOVL      XAR6,ACC              ; [CPU_] |2031| 
        MOV       AL,#16384             ; [CPU_] |2031| 
        MOV       AH,#17948             ; [CPU_] |2031| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2031| 
        MOVL      ACC,XAR6              ; [CPU_] |2031| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2031| 
        ; call occurs [#FS$$DIV] ; [] |2031| 
        MOVB      XAR0,#118             ; [CPU_] |2031| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2031| 
	.dwpsn	file "../Source/prod.c",line 2033,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |2033| 
        ; branch occurs ; [] |2033| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 2014,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2014| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_delay_us")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2014| 
        ; call occurs [#_delay_us] ; [] |2014| 
	.dwpsn	file "../Source/prod.c",line 2013,column 15,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |2013| 
        ; branch occurs ; [] |2013| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1896,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1896| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1901| 
        MOVL      XAR0,#44              ; [CPU_] |1901| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1901| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1901| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1901| 
        MOVL      XAR4,XAR1             ; [CPU_] |1901| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_sprintf")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1901| 
        ; call occurs [#_sprintf] ; [] |1901| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1902| 
        MOV       AL,#1024              ; [CPU_] |1902| 
        MOVL      XAR5,XAR1             ; [CPU_] |1902| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1902| 
        ; call occurs [#_scia_getparam] ; [] |1902| 
        MOVL      XAR4,XAR1             ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("_atoi")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1903| 
        ; call occurs [#_atoi] ; [] |1903| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1903| 
        MOVB      XAR0,#46              ; [CPU_] |1903| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1903| 
        MOVL      XAR0,#86              ; [CPU_] |1903| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1903| 
	.dwpsn	file "../Source/prod.c",line 1904,column 7,is_stmt,isa 0
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1904| 
        ; call occurs [#_scia_puts] ; [] |1904| 
	.dwpsn	file "../Source/prod.c",line 1906,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1906| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1906| 
        CMPB      AL,#2                 ; [CPU_] |1906| 
        B         $C$L587,LT            ; [CPU_] |1906| 
        ; branchcc occurs ; [] |1906| 
        CMPB      AL,#12                ; [CPU_] |1906| 
        B         $C$L587,GT            ; [CPU_] |1906| 
        ; branchcc occurs ; [] |1906| 
	.dwpsn	file "../Source/prod.c",line 1911,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1911| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1911| 
        ; call occurs [#_scia_puts] ; [] |1911| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1913| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1913| 
        MOVL      XAR0,#44              ; [CPU_] |1913| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1913| 
        ADDB      XAR7,#46              ; [CPU_] |1913| 
        MOV       AL,*XAR7              ; [CPU_] |1913| 
        MOV       *-SP[3],AL            ; [CPU_] |1913| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1913| 
        MOVL      XAR4,XAR1             ; [CPU_] |1913| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_sprintf")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1913| 
        ; call occurs [#_sprintf] ; [] |1913| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1914| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1913| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1914| 
        ; call occurs [#_lcd_puts] ; [] |1914| 
	.dwpsn	file "../Source/prod.c",line 1917,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1917,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1917| 
	.dwpsn	file "../Source/prod.c",line 1917,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1917| 
        ; branch occurs ; [] |1917| 
$C$L563:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1918,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1918| 
        SUB       AL,*-SP[47]           ; [CPU_] |1918| 
        ADDB      AL,#1                 ; [CPU_] |1918| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1918| 
        ; call occurs [#I$$TOFS] ; [] |1918| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1918| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1918| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1918| 
        ; call occurs [#FS$$MPY] ; [] |1918| 
        MOVL      XAR0,#88              ; [CPU_] |1918| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1918| 
        MOV       AL,*-SP[47]           ; [CPU_] |1918| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1918| 
        ; call occurs [#I$$TOFS] ; [] |1918| 
        MOVL      XAR0,#88              ; [CPU_] |1918| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1918| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1918| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1918| 
        ; call occurs [#FS$$DIV] ; [] |1918| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1918| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1918| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1918| 
        ADDL      ACC,XAR1              ; [CPU_] |1918| 
        MOVL      XAR4,ACC              ; [CPU_] |1918| 
        MOVB      XAR0,#48              ; [CPU_] |1918| 
	.dwpsn	file "../Source/prod.c",line 1917,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1918,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1918| 
	.dwpsn	file "../Source/prod.c",line 1917,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1917| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1917,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1917| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1917| 
        MOV       *-SP[47],AL           ; [CPU_] |1917| 
        CMP       AL,*-SP[48]           ; [CPU_] |1917| 
        B         $C$L563,GT            ; [CPU_] |1917| 
        ; branchcc occurs ; [] |1917| 
	.dwpsn	file "../Source/prod.c",line 1923,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1923| 
        B         $C$L567,UNC           ; [CPU_] |1923| 
        ; branch occurs ; [] |1923| 
$C$L565:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1924,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1924| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1924| 
        MOVL      XAR0,#44              ; [CPU_] |1924| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1924| 
        ADDL      ACC,XAR1              ; [CPU_] |1924| 
        ADDB      ACC,#48               ; [CPU_] |1924| 
        MOVL      XAR1,ACC              ; [CPU_] |1924| 
        MOVB      AL,#1                 ; [CPU_] |1924| 
        ADD       AL,AR6                ; [CPU_] |1924| 
        MOV       *-SP[3],AL            ; [CPU_] |1924| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1924| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1924| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1924| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_sprintf")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1924| 
        ; call occurs [#_sprintf] ; [] |1924| 
        MOVL      XAR0,#44              ; [CPU_] |1924| 
	.dwpsn	file "../Source/prod.c",line 1926,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1926| 
	.dwpsn	file "../Source/prod.c",line 1924,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1924| 
	.dwpsn	file "../Source/prod.c",line 1926,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1926| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1926| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1926| 
        ; call occurs [#_scia_getparam] ; [] |1926| 
        CMPB      AL,#0                 ; [CPU_] |1926| 
        B         $C$L566,EQ            ; [CPU_] |1926| 
        ; branchcc occurs ; [] |1926| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_strtod")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1930,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1930| 
$C$L566:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1932,column 7,is_stmt,isa 0
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1932| 
        ; call occurs [#_scia_puts] ; [] |1932| 
	.dwpsn	file "../Source/prod.c",line 1933,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1933| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1933| 
        ; call occurs [#_scia_puts] ; [] |1933| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1923,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1923| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1923,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1923| 
        B         $C$L565,GT            ; [CPU_] |1923| 
        ; branchcc occurs ; [] |1923| 
	.dwpsn	file "../Source/prod.c",line 1939,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1939| 
        B         $C$L572,UNC           ; [CPU_] |1939| 
        ; branch occurs ; [] |1939| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1940,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1940| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1940| 
        ADDL      ACC,XAR1              ; [CPU_] |1940| 
        ADDB      ACC,#48               ; [CPU_] |1940| 
        MOVL      XAR1,ACC              ; [CPU_] |1940| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1940| 
        MOVL      XAR0,#70              ; [CPU_] |1940| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1940| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1940| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1940| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1940| 
        ANDB      AL,#0x0f              ; [CPU_] |1940| 
        MOV       ACC,AL << 1           ; [CPU_] |1940| 
        ADDL      ACC,XAR7              ; [CPU_] |1940| 
        MOVL      XAR4,ACC              ; [CPU_] |1940| 
        MOVL      XAR0,#44              ; [CPU_] |1940| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1940| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1940| 
        MOVB      AL,#1                 ; [CPU_] |1940| 
        ADD       AL,AR6                ; [CPU_] |1940| 
        MOV       *-SP[7],AL            ; [CPU_] |1940| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1940| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_sprintf")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1940| 
        ; call occurs [#_sprintf] ; [] |1940| 
        MOVL      XAR0,#44              ; [CPU_] |1940| 
	.dwpsn	file "../Source/prod.c",line 1944,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1944| 
	.dwpsn	file "../Source/prod.c",line 1940,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1940| 
	.dwpsn	file "../Source/prod.c",line 1944,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1944| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1944| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1944| 
        ; call occurs [#_scia_getparam] ; [] |1944| 
	.dwpsn	file "../Source/prod.c",line 1945,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1945| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1945| 
        ; call occurs [#_scia_puts] ; [] |1945| 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1947| 
	.dwpsn	file "../Source/prod.c",line 1948,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1948| 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1947| 
	.dwpsn	file "../Source/prod.c",line 1948,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1948| 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1947| 
	.dwpsn	file "../Source/prod.c",line 1949,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1949| 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1947| 
	.dwpsn	file "../Source/prod.c",line 1949,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1949| 
        MOVB      ACC,#0                ; [CPU_] |1949| 
        SUBB      ACC,#1                ; [CPU_] |1949| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1949| 
        B         $C$L571,EQ            ; [CPU_] |1949| 
        ; branchcc occurs ; [] |1949| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1950,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1950| 
        ; branch occurs ; [] |1950| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1951,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1951| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("_delay_us")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1951| 
        ; call occurs [#_delay_us] ; [] |1951| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1950,column 15,is_stmt,isa 0
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1950| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1950| 
        CMPB      AL,#0                 ; [CPU_] |1950| 
        B         $C$L569,EQ            ; [CPU_] |1950| 
        ; branchcc occurs ; [] |1950| 
	.dwpsn	file "../Source/prod.c",line 1954,column 8,is_stmt,isa 0
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1954| 
        ; call occurs [#_ad7738_getraw] ; [] |1954| 
	.dwpsn	file "../Source/prod.c",line 1955,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1955| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1955| 
        ADDL      XAR4,ACC              ; [CPU_] |1955| 
        MOVL      XAR0,#16              ; [CPU_] |1955| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1955| 
        MOVL      XAR0,#16              ; [CPU_] |1955| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1955| 
        ASR64     ACC:P,16              ; [CPU_] |1955| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1955| 
        MOVL      XAR0,#16              ; [CPU_] |1955| 
        ASR64     ACC:P,16              ; [CPU_] |1955| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1955| 
        MOVL      XAR0,#16              ; [CPU_] |1955| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1955| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1955| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1955| 
        MOVL      *-SP[32],P            ; [CPU_] |1955| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1955| 
	.dwpsn	file "../Source/prod.c",line 1949,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1949| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1949| 
        MOVB      ACC,#0                ; [CPU_] |1949| 
        SUBB      ACC,#1                ; [CPU_] |1949| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1949| 
        B         $C$L570,NEQ           ; [CPU_] |1949| 
        ; branchcc occurs ; [] |1949| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1957,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1957| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1957| 
        ; call occurs [#_scia_puts] ; [] |1957| 
	.dwpsn	file "../Source/prod.c",line 1958,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1958| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1958| 
        MOV       *-SP[2],#0            ; [CPU_] |1958| 
        MOV       *-SP[1],#0            ; [CPU_] |1958| 
        MOVL      P,*-SP[32]            ; [CPU_] |1958| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1958| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1958| 
        ; call occurs [#LL$$DIV] ; [] |1958| 
        ADDB      XAR1,#24              ; [CPU_] |1958| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1958| 
	.dwpsn	file "../Source/prod.c",line 1939,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1939| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1939,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1939| 
        B         $C$L568,GT            ; [CPU_] |1939| 
        ; branchcc occurs ; [] |1939| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1962,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1962| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1962| 
        ; branch occurs ; [] |1962| 
$C$L573:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1963,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1963| 
        ADDL      XAR1,ACC              ; [CPU_] |1963| 
        MOVB      XAR0,#48              ; [CPU_] |1963| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1963| 
        MOVB      XAR0,#50              ; [CPU_] |1963| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1963| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1963| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1963| 
        ; call occurs [#FS$$SUB] ; [] |1963| 
        MOVL      XAR0,#88              ; [CPU_] |1963| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1963| 
        MOVB      XAR0,#74              ; [CPU_] |1963| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1963| 
        MOVB      XAR0,#72              ; [CPU_] |1963| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1963| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1963| 
        ; call occurs [#L$$TOFS] ; [] |1963| 
        MOVL      XAR0,#88              ; [CPU_] |1963| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1963| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1963| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1963| 
        ; call occurs [#FS$$DIV] ; [] |1963| 
        MOVL      XAR0,#42              ; [CPU_] |1963| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1963| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1963| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1963| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1963| 
        ; call occurs [#FS$$DIV] ; [] |1963| 
        MOVB      XAR0,#96              ; [CPU_] |1963| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1963| 
	.dwpsn	file "../Source/prod.c",line 1967,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1967| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1967| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1967| 
        ; call occurs [#FS$$MPY] ; [] |1967| 
        MOVL      XAR0,#88              ; [CPU_] |1967| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1967| 
        MOVB      XAR0,#72              ; [CPU_] |1967| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1967| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1967| 
        ; call occurs [#L$$TOFS] ; [] |1967| 
        MOVL      XAR0,#88              ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1967| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1967| 
        ; call occurs [#FS$$MPY] ; [] |1967| 
        MOVB      XAR0,#48              ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1967| 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1967| 
        ; call occurs [#FS$$SUB] ; [] |1967| 
        MOVB      XAR0,#118             ; [CPU_] |1967| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1967| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1962,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1962| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1971,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1971| 
        CMP       AL,*-SP[48]           ; [CPU_] |1971| 
        B         $C$L573,GT            ; [CPU_] |1971| 
        ; branchcc occurs ; [] |1971| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 2042,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2042| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |2042| 
        MOV       AL,#1024              ; [CPU_] |2042| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2042| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2042| 
        ; call occurs [#_scia_getparam] ; [] |2042| 
	.dwpsn	file "../Source/prod.c",line 2045,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |2045| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2045| 
        ; call occurs [#_scia_puts] ; [] |2045| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2047,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2047| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |2047| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 2048,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2048| 
        B         $C$L578,LEQ           ; [CPU_] |2048| 
        ; branchcc occurs ; [] |2048| 
	.dwpsn	file "../Source/prod.c",line 2050,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2050| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2050| 
        ; call occurs [#_shunt_switch] ; [] |2050| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 2052,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2052| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("_delay_us")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2052| 
        ; call occurs [#_delay_us] ; [] |2052| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2052| 
	.dwpsn	file "../Source/prod.c",line 2051,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2051| 
        MOVZ      AR0,AR6               ; [CPU_] |2051| 
        MOV       *-SP[47],AR6          ; [CPU_] |2051| 
        CMP       AR0,#-1               ; [CPU_] |2051| 
        B         $C$L577,NEQ           ; [CPU_] |2051| 
        ; branchcc occurs ; [] |2051| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2055,column 7,is_stmt,isa 0
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2055| 
        ; call occurs [#_maf_rst] ; [] |2055| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2057,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2057| 
        SPM       #0                    ; [CPU_] 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("_delay_us")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2057| 
        ; call occurs [#_delay_us] ; [] |2057| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 2060,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |2060| 
	.dwpsn	file "../Source/prod.c",line 2061,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2061| 
	.dwpsn	file "../Source/prod.c",line 2060,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2060| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2060| 
	.dwpsn	file "../Source/prod.c",line 2062,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2062| 
	.dwpsn	file "../Source/prod.c",line 2061,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2061| 
	.dwpsn	file "../Source/prod.c",line 2062,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2062| 
        MOVB      ACC,#0                ; [CPU_] |2062| 
        SUBB      ACC,#1                ; [CPU_] |2062| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2062| 
        B         $C$L580,EQ            ; [CPU_] |2062| 
        ; branchcc occurs ; [] |2062| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 2063,column 14,is_stmt,isa 0
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2063| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2063| 
        CMPB      AL,#0                 ; [CPU_] |2063| 
        B         $C$L586,EQ            ; [CPU_] |2063| 
        ; branchcc occurs ; [] |2063| 
	.dwpsn	file "../Source/prod.c",line 2067,column 7,is_stmt,isa 0
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2067| 
        ; call occurs [#_ad7738_getraw] ; [] |2067| 
	.dwpsn	file "../Source/prod.c",line 2068,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2068| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2068| 
        ADDL      XAR4,ACC              ; [CPU_] |2068| 
        MOVL      XAR0,#14              ; [CPU_] |2068| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2068| 
        MOVL      XAR0,#14              ; [CPU_] |2068| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2068| 
        ASR64     ACC:P,16              ; [CPU_] |2068| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2068| 
        MOVL      XAR0,#14              ; [CPU_] |2068| 
        ASR64     ACC:P,16              ; [CPU_] |2068| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2068| 
        MOVL      XAR0,#14              ; [CPU_] |2068| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2068| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2068| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2068| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2068| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2068| 
	.dwpsn	file "../Source/prod.c",line 2062,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2062| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2062| 
        MOVB      ACC,#0                ; [CPU_] |2062| 
        SUBB      ACC,#1                ; [CPU_] |2062| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2062| 
        B         $C$L579,NEQ           ; [CPU_] |2062| 
        ; branchcc occurs ; [] |2062| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2070,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2070| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2070| 
        MOV       *-SP[2],#0            ; [CPU_] |2070| 
        MOV       *-SP[1],#0            ; [CPU_] |2070| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2070| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2070| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2070| 
        ; call occurs [#LL$$DIV] ; [] |2070| 
	.dwpsn	file "../Source/prod.c",line 2073,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2073| 
        MOVB      XAR0,#46              ; [CPU_] |2073| 
	.dwpsn	file "../Source/prod.c",line 2070,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2070| 
	.dwpsn	file "../Source/prod.c",line 2072,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2072| 
	.dwpsn	file "../Source/prod.c",line 2070,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2070| 
	.dwpsn	file "../Source/prod.c",line 2073,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2073| 
        CMPB      AL,#2                 ; [CPU_] |2073| 
        B         $C$L583,LEQ           ; [CPU_] |2073| 
        ; branchcc occurs ; [] |2073| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2074,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2074| 
        ; branch occurs ; [] |2074| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2075,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2075| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2074,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2074| 
        B         $C$L583,HIS           ; [CPU_] |2074| 
        ; branchcc occurs ; [] |2074| 
        MOVB      AL,#1                 ; [CPU_] |2074| 
        ADD       AL,AR4                ; [CPU_] |2074| 
        MOVZ      AR5,AL                ; [CPU_] |2074| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2074| 
        ADDL      ACC,XAR1              ; [CPU_] |2074| 
        MOVL      XAR6,ACC              ; [CPU_] |2074| 
        MOVB      XAR0,#72              ; [CPU_] |2074| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2074| 
        MOVL      XAR0,#12              ; [CPU_] |2074| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2074| 
        MOVL      XAR0,#12              ; [CPU_] |2074| 
        ASR64     ACC:P,16              ; [CPU_] |2074| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2074| 
        MOVL      XAR0,#12              ; [CPU_] |2074| 
        ASR64     ACC:P,16              ; [CPU_] |2074| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2074| 
        MOVL      *-SP[4],P             ; [CPU_] |2074| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2074| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2074| 
        MOVL      P,*-SP[32]            ; [CPU_] |2074| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1285, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2074| 
        ; call occurs [#LL$$CMP] ; [] |2074| 
        CMPB      AL,#0                 ; [CPU_] |2074| 
        B         $C$L581,GT            ; [CPU_] |2074| 
        ; branchcc occurs ; [] |2074| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2078,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2078| 
        ADDL      ACC,XAR1              ; [CPU_] |2078| 
        MOVL      XAR4,ACC              ; [CPU_] |2078| 
        MOVL      XAR0,#88              ; [CPU_] |2078| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2078| 
        MOVB      XAR0,#96              ; [CPU_] |2078| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2078| 
        MOVL      XAR0,#42              ; [CPU_] |2078| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2078| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2078| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2078| 
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2078| 
        ; call occurs [#FS$$MPY] ; [] |2078| 
        MOVL      XAR0,#36              ; [CPU_] |2078| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2078| 
        MOVL      P,*XAR3++             ; [CPU_] |2078| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2078| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2078| 
        ; call occurs [#LL$$TOFS] ; [] |2078| 
        MOVL      XAR0,#36              ; [CPU_] |2078| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2078| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2078| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2078| 
        ; call occurs [#FS$$MPY] ; [] |2078| 
        MOVL      XAR0,#88              ; [CPU_] |2078| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2078| 
        MOVB      XAR1,#118             ; [CPU_] |2078| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2078| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2078| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2078| 
        ; call occurs [#FS$$ADD] ; [] |2078| 
        MOVL      XAR0,#38              ; [CPU_] |2078| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2078| 
        MOVL      XAR0,#38              ; [CPU_] |2078| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2078| 
	.dwpsn	file "../Source/prod.c",line 2047,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2078,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2078| 
        MOV       AL,*-SP[48]           ; [CPU_] |2078| 
	.dwpsn	file "../Source/prod.c",line 2047,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2047| 
        B         $C$L576,LT            ; [CPU_] |2047| 
        ; branchcc occurs ; [] |2047| 
	.dwpsn	file "../Source/prod.c",line 2082,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2082| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2082| 
        ; call occurs [#_shunt_switch] ; [] |2082| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2084,column 5,is_stmt,isa 0
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2084| 
        ; call occurs [#_maf_rst] ; [] |2084| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2087,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2087| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2087| 
        ; call occurs [#_scia_puts] ; [] |2087| 
	.dwpsn	file "../Source/prod.c",line 2089,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2089| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2089| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2089| 
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2089| 
        ; call occurs [#FS$$SUB] ; [] |2089| 
        MOVL      XAR0,#36              ; [CPU_] |2089| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2089| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2089| 
        MOVB      XAR0,#140             ; [CPU_] |2089| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2089| 
	.dwpsn	file "../Source/prod.c",line 2092,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2092| 
        MOV       AL,#0                 ; [CPU_] |2092| 
        MOV       AH,#0                 ; [CPU_] |2092| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2092| 
	.dwpsn	file "../Source/prod.c",line 2093,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2093| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2093| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2093| 
	.dwpsn	file "../Source/prod.c",line 2094,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2094| 
        MOV       AL,#0                 ; [CPU_] |2094| 
        MOV       AH,#0                 ; [CPU_] |2094| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2094| 
	.dwpsn	file "../Source/prod.c",line 2095,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2095| 
        MOV       AL,*-SP[58]           ; [CPU_] |2095| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2095| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2098,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2098| 
        MOVB      AL,#152               ; [CPU_] |2098| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2098| 
        MOV       T,*-SP[57]            ; [CPU_] |2098| 
        MOVL      XAR7,XAR4             ; [CPU_] |2098| 
        MPYU      ACC,T,AL              ; [CPU_] |2098| 
        ADDL      ACC,XAR6              ; [CPU_] |2098| 
        ADDB      ACC,#82               ; [CPU_] |2098| 
        MOVL      XAR5,ACC              ; [CPU_] |2098| 
        MOVL      XAR0,#42              ; [CPU_] |2098| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2098| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2098| 
        MOV       AL,*-SP[57]           ; [CPU_] |2098| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2101,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2101| 
	.dwpsn	file "../Source/prod.c",line 2103,column 5,is_stmt,isa 0
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2103| 
        ; call occurs [#_ad7738_setcal] ; [] |2103| 
        MOVL      XAR0,#78              ; [CPU_] |2103| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2103| 
	.dwpsn	file "../Source/prod.c",line 2104,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2104| 
        MOVL      XAR1,ACC              ; [CPU_] |2104| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2104| 
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2104| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2104| 
	.dwpsn	file "../Source/prod.c",line 2105,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2105| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2105| 
        ; call occurs [#_ad7738_resetvall] ; [] |2105| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2108,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2108| 
        MOV       AL,*-SP[60]           ; [CPU_] |2108| 
        MOVL      XAR0,#44              ; [CPU_] |2108| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2108| 
        MOV       *-SP[3],AL            ; [CPU_] |2108| 
        MOV       AL,*-SP[59]           ; [CPU_] |2108| 
        MOV       *-SP[4],AL            ; [CPU_] |2108| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2108| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2108| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_sprintf")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2108| 
        ; call occurs [#_sprintf] ; [] |2108| 
        MOVL      XAR4,XAR1             ; [CPU_] |2108| 
	.dwpsn	file "../Source/prod.c",line 2110,column 5,is_stmt,isa 0
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2110| 
        ; call occurs [#_scia_puts] ; [] |2110| 
        MOV       AL,*-SP[57]           ; [CPU_] |2110| 
	.dwpsn	file "../Source/prod.c",line 2111,column 5,is_stmt,isa 0
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2111| 
        ; call occurs [#_print_sensor] ; [] |2111| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2114,column 5,is_stmt,isa 0
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2114| 
        ; call occurs [#_lcd_clear] ; [] |2114| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2115,column 5,is_stmt,isa 0
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_update_units")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2115| 
        ; call occurs [#_update_units] ; [] |2115| 
	.dwpsn	file "../Source/prod.c",line 2116,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2116| 
        ; branch occurs ; [] |2116| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 2064,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2064| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_delay_us")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2064| 
        ; call occurs [#_delay_us] ; [] |2064| 
	.dwpsn	file "../Source/prod.c",line 2063,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |2063| 
        ; branch occurs ; [] |2063| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1908,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1908| 
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1908| 
        ; call occurs [#_scia_puts] ; [] |1908| 
	.dwpsn	file "../Source/prod.c",line 1900,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1900| 
        ; branch occurs ; [] |1900| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1838,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1838| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1838| 
        ; call occurs [#_scia_puts] ; [] |1838| 
	.dwpsn	file "../Source/prod.c",line 1832,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1832| 
        ; branch occurs ; [] |1832| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1753| 
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1753| 
        ; call occurs [#_scia_puts] ; [] |1753| 
	.dwpsn	file "../Source/prod.c",line 1743,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1743| 
        ; branch occurs ; [] |1743| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1736,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1736| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1736| 
        ; call occurs [#_scia_puts] ; [] |1736| 
	.dwpsn	file "../Source/prod.c",line 1728,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1728| 
        ; branch occurs ; [] |1728| 
$C$L591:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1450,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1450| 
        B         $C$L625,LO            ; [CPU_] |1450| 
        ; branchcc occurs ; [] |1450| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1454,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1454| 
        CMPB      AL,#67                ; [CPU_] |1454| 
        B         $C$L592,EQ            ; [CPU_] |1454| 
        ; branchcc occurs ; [] |1454| 
        CMPB      AL,#68                ; [CPU_] |1454| 
        B         $C$L625,NEQ           ; [CPU_] |1454| 
        ; branchcc occurs ; [] |1454| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1459,column 5,is_stmt,isa 0
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_atoi")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1459| 
        ; call occurs [#_atoi] ; [] |1459| 
        MOV       *-SP[58],AL           ; [CPU_] |1459| 
	.dwpsn	file "../Source/prod.c",line 1461,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1461| 
        CMPB      AL,#4                 ; [CPU_] |1461| 
        B         $C$L625,HIS           ; [CPU_] |1461| 
        ; branchcc occurs ; [] |1461| 
	.dwpsn	file "../Source/prod.c",line 1466,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1466| 
        MOV       AH,#0                 ; [CPU_] |1466| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1466| 
	.dwpsn	file "../Source/prod.c",line 1467,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1467| 
        MOV       AH,#0                 ; [CPU_] |1467| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1467| 
        MOV       AL,*-SP[59]           ; [CPU_] |1467| 
	.dwpsn	file "../Source/prod.c",line 1468,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1468| 
        B         $C$L596,LOS           ; [CPU_] |1468| 
        ; branchcc occurs ; [] |1468| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1468,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1468| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1469,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1469| 
        CMPB      AL,#88                ; [CPU_] |1469| 
        B         $C$L594,NEQ           ; [CPU_] |1469| 
        ; branchcc occurs ; [] |1469| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_strtod")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1471,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1471| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1474,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1474| 
        B         $C$L595,NEQ           ; [CPU_] |1474| 
        ; branchcc occurs ; [] |1474| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_strtod")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1476,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1476| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1468,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1468| 
        MOV       AL,*-SP[59]           ; [CPU_] |1468| 
        ADDB      XAR1,#1               ; [CPU_] |1468| 
        CMP       AL,*-SP[47]           ; [CPU_] |1468| 
        B         $C$L593,HI            ; [CPU_] |1468| 
        ; branchcc occurs ; [] |1468| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1481,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1481| 
	.dwpsn	file "../Source/prod.c",line 1464,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1464| 
	.dwpsn	file "../Source/prod.c",line 1481,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1481| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1481| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1481| 
        ; call occurs [#FS$$CMP] ; [] |1481| 
        CMPB      AL,#0                 ; [CPU_] |1481| 
        B         $C$L625,EQ            ; [CPU_] |1481| 
        ; branchcc occurs ; [] |1481| 
	.dwpsn	file "../Source/prod.c",line 1485,column 5,is_stmt,isa 0
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1485| 
        ; call occurs [#_lcd_clear] ; [] |1485| 
	.dwpsn	file "../Source/prod.c",line 1486,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1486| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1486| 
        MOVL      XAR0,#44              ; [CPU_] |1486| 
        ADD       AL,*-SP[58]           ; [CPU_] |1486| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1486| 
        MOVZ      AR1,AL                ; [CPU_] |1486| 
        MOV       *-SP[59],AL           ; [CPU_] |1486| 
        MOV       *-SP[3],AL            ; [CPU_] |1486| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1486| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("_sprintf")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1486| 
        ; call occurs [#_sprintf] ; [] |1486| 
        MOVL      XAR0,#44              ; [CPU_] |1486| 
	.dwpsn	file "../Source/prod.c",line 1487,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1487| 
	.dwpsn	file "../Source/prod.c",line 1486,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1486| 
	.dwpsn	file "../Source/prod.c",line 1487,column 5,is_stmt,isa 0
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1487| 
        ; call occurs [#_lcd_puts] ; [] |1487| 
	.dwpsn	file "../Source/prod.c",line 1488,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1488| 
        MOVL      XAR0,#44              ; [CPU_] |1488| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1488| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1488| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1488| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_sprintf")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1488| 
        ; call occurs [#_sprintf] ; [] |1488| 
        MOVL      XAR0,#44              ; [CPU_] |1488| 
	.dwpsn	file "../Source/prod.c",line 1489,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1489| 
	.dwpsn	file "../Source/prod.c",line 1488,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1488| 
	.dwpsn	file "../Source/prod.c",line 1489,column 5,is_stmt,isa 0
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1489| 
        ; call occurs [#_lcd_puts] ; [] |1489| 
	.dwpsn	file "../Source/prod.c",line 1490,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1490| 
        MOVL      XAR0,#44              ; [CPU_] |1490| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1490| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1490| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1490| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1490| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("_sprintf")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1490| 
        ; call occurs [#_sprintf] ; [] |1490| 
        MOVL      XAR0,#44              ; [CPU_] |1490| 
	.dwpsn	file "../Source/prod.c",line 1491,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1491| 
	.dwpsn	file "../Source/prod.c",line 1490,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1490| 
	.dwpsn	file "../Source/prod.c",line 1491,column 5,is_stmt,isa 0
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1491| 
        ; call occurs [#_lcd_puts] ; [] |1491| 
	.dwpsn	file "../Source/prod.c",line 1493,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1493| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1493| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1493| 
        MOVL      XAR0,#38              ; [CPU_] |1493| 
        ADDB      ACC,#1                ; [CPU_] |1493| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1493| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1493| 
        CMPB      AL,#67                ; [CPU_] |1493| 
        B         $C$L619,EQ            ; [CPU_] |1493| 
        ; branchcc occurs ; [] |1493| 
        CMPB      AL,#68                ; [CPU_] |1493| 
        B         $C$L625,NEQ           ; [CPU_] |1493| 
        ; branchcc occurs ; [] |1493| 
	.dwpsn	file "../Source/prod.c",line 1546,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1546| 
        MOV       AH,#16672             ; [CPU_] |1546| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1546| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1546| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1546| 
        ; call occurs [#FS$$CMP] ; [] |1546| 
        CMPB      AL,#0                 ; [CPU_] |1546| 
        B         $C$L618,GT            ; [CPU_] |1546| 
        ; branchcc occurs ; [] |1546| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1546| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1546| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1546| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1546| 
        ; call occurs [#FS$$CMP] ; [] |1546| 
        CMPB      AL,#0                 ; [CPU_] |1546| 
        B         $C$L618,LT            ; [CPU_] |1546| 
        ; branchcc occurs ; [] |1546| 
        MOV       AL,#0                 ; [CPU_] |1546| 
        MOV       AH,#16672             ; [CPU_] |1546| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1546| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1546| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1546| 
        ; call occurs [#FS$$CMP] ; [] |1546| 
        CMPB      AL,#0                 ; [CPU_] |1546| 
        B         $C$L618,GT            ; [CPU_] |1546| 
        ; branchcc occurs ; [] |1546| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1546| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1546| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1546| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1546| 
        ; call occurs [#FS$$CMP] ; [] |1546| 
        CMPB      AL,#0                 ; [CPU_] |1546| 
        B         $C$L618,LT            ; [CPU_] |1546| 
        ; branchcc occurs ; [] |1546| 
	.dwpsn	file "../Source/prod.c",line 1554,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1554| 
        MOVB      AL,#0                 ; [CPU_] |1554| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1554| 
        ; call occurs [#_lcd_puts] ; [] |1554| 
	.dwpsn	file "../Source/prod.c",line 1556,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1556| 
        MOVL      XAR0,#44              ; [CPU_] |1556| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1556| 
        MOV       *-SP[3],AR1           ; [CPU_] |1556| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1556| 
        MOVL      XAR4,XAR1             ; [CPU_] |1556| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_sprintf")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1556| 
        ; call occurs [#_sprintf] ; [] |1556| 
        MOVL      XAR4,XAR1             ; [CPU_] |1556| 
	.dwpsn	file "../Source/prod.c",line 1559,column 6,is_stmt,isa 0
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1559| 
        ; call occurs [#_scia_puts] ; [] |1559| 
	.dwpsn	file "../Source/prod.c",line 1560,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1560| 
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1560| 
        ; call occurs [#_scia_puts] ; [] |1560| 
	.dwpsn	file "../Source/prod.c",line 1561,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1561| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1561| 
        ; call occurs [#_dac_setmode] ; [] |1561| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1564,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1564| 
	.dwpsn	file "../Source/prod.c",line 1565,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1565| 
        MOV       AH,#0                 ; [CPU_] |1565| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1565| 
        MOVL      ACC,XAR1              ; [CPU_] |1565| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1565| 
        ; call occurs [#FS$$CMP] ; [] |1565| 
        CMPB      AL,#0                 ; [CPU_] |1565| 
        B         $C$L598,GEQ           ; [CPU_] |1565| 
        ; branchcc occurs ; [] |1565| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1565| 
        MOVL      XAR0,#88              ; [CPU_] |1565| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1565| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1565| 
        B         $C$L599,UNC           ; [CPU_] |1565| 
        ; branch occurs ; [] |1565| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1565| 
        MOVL      XAR0,#88              ; [CPU_] |1565| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1565| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1565| 
$C$L599:    
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1565| 
        ; call occurs [#FS$$MPY] ; [] |1565| 
        MOVL      XAR0,#88              ; [CPU_] |1565| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1565| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1565| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1565| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1565| 
        ; call occurs [#FS$$ADD] ; [] |1565| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1565| 
        ; call occurs [#FS$$TOLL] ; [] |1565| 
	.dwpsn	file "../Source/prod.c",line 1571,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1571| 
	.dwpsn	file "../Source/prod.c",line 1565,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1565| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1565| 
	.dwpsn	file "../Source/prod.c",line 1571,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1571| 
        CMP64     ACC:P                 ; [CPU_] |1571| 
        B         $C$L601,LEQ           ; [CPU_] |1571| 
        ; branchcc occurs ; [] |1571| 
	.dwpsn	file "../Source/prod.c",line 1573,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1573| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1573| 
        MOV       *-SP[2],#0            ; [CPU_] |1573| 
        MOV       *-SP[1],#0            ; [CPU_] |1573| 
        MOVL      P,*-SP[32]            ; [CPU_] |1573| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1573| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1331, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1573| 
        ; call occurs [#LL$$CMP] ; [] |1573| 
        CMPB      AL,#0                 ; [CPU_] |1573| 
        B         $C$L600,GEQ           ; [CPU_] |1573| 
        ; branchcc occurs ; [] |1573| 
	.dwpsn	file "../Source/prod.c",line 1576,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1576| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1576| 
        MOV       AL,*-SP[32]           ; [CPU_] |1576| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1576| 
        B         $C$L602,UNC           ; [CPU_] |1576| 
        ; branch occurs ; [] |1576| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1574,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1574| 
	.dwpsn	file "../Source/prod.c",line 1575,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1575| 
        ; branch occurs ; [] |1575| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1572,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1572| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1579,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1579| 
        MOVL      XAR0,#44              ; [CPU_] |1579| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1579| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1579| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1579| 
        MOVL      XAR4,XAR1             ; [CPU_] |1579| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_sprintf")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1579| 
        ; call occurs [#_sprintf] ; [] |1579| 
        MOVL      XAR4,XAR1             ; [CPU_] |1579| 
	.dwpsn	file "../Source/prod.c",line 1580,column 7,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1580| 
        ; call occurs [#_scia_puts] ; [] |1580| 
	.dwpsn	file "../Source/prod.c",line 1581,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1581| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1581| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1584,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1584| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1584| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1584| 
        ; call occurs [#_mcbsp_xmit] ; [] |1584| 
	.dwpsn	file "../Source/prod.c",line 1585,column 8,is_stmt,isa 0
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1585| 
        ; call occurs [#_latch_dac] ; [] |1585| 
	.dwpsn	file "../Source/prod.c",line 1588,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1588| 
        MOVL      XAR4,XAR1             ; [CPU_] |1588| 
        MOVL      XAR5,XAR1             ; [CPU_] |1588| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1588| 
        ; call occurs [#_scia_getparam] ; [] |1588| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1590,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1590| 
        CMPB      AL,#45                ; [CPU_] |1590| 
        B         $C$L604,EQ            ; [CPU_] |1590| 
        ; branchcc occurs ; [] |1590| 
        CMPB      AL,#83                ; [CPU_] |1590| 
        B         $C$L609,EQ            ; [CPU_] |1590| 
        ; branchcc occurs ; [] |1590| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1597,column 8,is_stmt,isa 0
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("_atoi")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1597| 
        ; call occurs [#_atoi] ; [] |1597| 
        CMPB      AL,#0                 ; [CPU_] |1597| 
	.dwpsn	file "../Source/prod.c",line 1599,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1599| 
	.dwpsn	file "../Source/prod.c",line 1602,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1602| 
        CMPB      AH,#43                ; [CPU_] |1602| 
        B         $C$L605,EQ            ; [CPU_] |1602| 
        ; branchcc occurs ; [] |1602| 
	.dwpsn	file "../Source/prod.c",line 1609,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1609| 
        B         $C$L608,NEQ           ; [CPU_] |1609| 
        ; branchcc occurs ; [] |1609| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1611,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1611| 
        B         $C$L606,HI            ; [CPU_] |1611| 
        ; branchcc occurs ; [] |1611| 
	.dwpsn	file "../Source/prod.c",line 1612,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1612| 
	.dwpsn	file "../Source/prod.c",line 1613,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1613| 
        ; branch occurs ; [] |1613| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1604,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1604| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1604| 
        MOV       AH,#65535             ; [CPU_] |1604| 
        SUB       AH,AL                 ; [CPU_] |1604| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1604| 
        B         $C$L607,HIS           ; [CPU_] |1604| 
        ; branchcc occurs ; [] |1604| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1607,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1607| 
        B         $C$L608,UNC           ; [CPU_] |1607| 
        ; branch occurs ; [] |1607| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1605,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1605| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1583,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1583| 
        B         $C$L603,NEQ           ; [CPU_] |1583| 
        ; branchcc occurs ; [] |1583| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1619,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1619| 
        MOVL      XAR0,#86              ; [CPU_] |1619| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1619| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1619| 
        MOVL      XAR0,#86              ; [CPU_] |1619| 
        MOV       AL,*XAR7              ; [CPU_] |1619| 
        MOV       *-SP[3],AL            ; [CPU_] |1619| 
        ADDB      XAR7,#1               ; [CPU_] |1619| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1619| 
        MOVL      XAR0,#44              ; [CPU_] |1619| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1619| 
        MOVL      XAR4,XAR1             ; [CPU_] |1619| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("_sprintf")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1619| 
        ; call occurs [#_sprintf] ; [] |1619| 
        MOVL      XAR4,XAR1             ; [CPU_] |1619| 
	.dwpsn	file "../Source/prod.c",line 1620,column 7,is_stmt,isa 0
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1620| 
        ; call occurs [#_scia_puts] ; [] |1620| 
	.dwpsn	file "../Source/prod.c",line 1563,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1563| 
	.dwpsn	file "../Source/prod.c",line 1620,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1620| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1620| 
	.dwpsn	file "../Source/prod.c",line 1563,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1563| 
        SUBB      XAR6,#1               ; [CPU_U] |1563| 
        ADDB      ACC,#2                ; [CPU_] |1563| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1563| 
        MOVZ      AR0,AR6               ; [CPU_] |1563| 
        MOV       *-SP[47],AR6          ; [CPU_] |1563| 
        CMP       AR0,#-1               ; [CPU_] |1563| 
        B         $C$L597,NEQ           ; [CPU_] |1563| 
        ; branchcc occurs ; [] |1563| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1623,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1623| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1623| 
        ; call occurs [#FS$$TOU] ; [] |1623| 
        MOV       *-SP[33],AL           ; [CPU_] |1623| 
	.dwpsn	file "../Source/prod.c",line 1625,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1625| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1625| 
        ; call occurs [#_scia_puts] ; [] |1625| 
	.dwpsn	file "../Source/prod.c",line 1626,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1626| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1626| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1626| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1626| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1629,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1629| 
        MOV       AH,*-SP[48]           ; [CPU_] |1629| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1629| 
        ; call occurs [#_mcbsp_xmit] ; [] |1629| 
	.dwpsn	file "../Source/prod.c",line 1630,column 7,is_stmt,isa 0
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1630| 
        ; call occurs [#_latch_dac] ; [] |1630| 
        MOVL      XAR0,#86              ; [CPU_] |1630| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1630| 
	.dwpsn	file "../Source/prod.c",line 1633,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1633| 
        MOVL      XAR4,XAR5             ; [CPU_] |1633| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1633| 
        ; call occurs [#_scia_getparam] ; [] |1633| 
	.dwpsn	file "../Source/prod.c",line 1638,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1638| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1638| 
        CMPB      AL,#83                ; [CPU_] |1638| 
        B         $C$L615,EQ            ; [CPU_] |1638| 
        ; branchcc occurs ; [] |1638| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1641,column 7,is_stmt,isa 0
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_atoi")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1641| 
        ; call occurs [#_atoi] ; [] |1641| 
        CMPB      AL,#0                 ; [CPU_] |1641| 
	.dwpsn	file "../Source/prod.c",line 1646,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1646| 
	.dwpsn	file "../Source/prod.c",line 1643,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1643| 
	.dwpsn	file "../Source/prod.c",line 1646,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1646| 
        CMPB      AH,#43                ; [CPU_] |1646| 
        B         $C$L611,EQ            ; [CPU_] |1646| 
        ; branchcc occurs ; [] |1646| 
	.dwpsn	file "../Source/prod.c",line 1653,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1653| 
        B         $C$L614,NEQ           ; [CPU_] |1653| 
        ; branchcc occurs ; [] |1653| 
	.dwpsn	file "../Source/prod.c",line 1655,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1655| 
        B         $C$L612,HI            ; [CPU_] |1655| 
        ; branchcc occurs ; [] |1655| 
	.dwpsn	file "../Source/prod.c",line 1656,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1656| 
	.dwpsn	file "../Source/prod.c",line 1657,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1657| 
        ; branch occurs ; [] |1657| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1648,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1648| 
        SUB       AH,AL                 ; [CPU_] |1648| 
        CMP       AH,*-SP[33]           ; [CPU_] |1648| 
        B         $C$L613,HIS           ; [CPU_] |1648| 
        ; branchcc occurs ; [] |1648| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1651,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1651| 
        B         $C$L614,UNC           ; [CPU_] |1651| 
        ; branch occurs ; [] |1651| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1649,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1649| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1628,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1628| 
        B         $C$L610,NEQ           ; [CPU_] |1628| 
        ; branchcc occurs ; [] |1628| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1663,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1663| 
        MOV       AL,*-SP[33]           ; [CPU_] |1663| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1663| 
        MOV       *-SP[3],AL            ; [CPU_] |1663| 
        MOVL      XAR4,XAR1             ; [CPU_] |1663| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_sprintf")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1663| 
        ; call occurs [#_sprintf] ; [] |1663| 
        MOVL      XAR4,XAR1             ; [CPU_] |1663| 
	.dwpsn	file "../Source/prod.c",line 1664,column 6,is_stmt,isa 0
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1664| 
        ; call occurs [#_scia_puts] ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1667,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1667| 
        MOV       AH,#0                 ; [CPU_] |1667| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1667| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1667| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1667| 
        ; call occurs [#FS$$CMP] ; [] |1667| 
        CMPB      AL,#0                 ; [CPU_] |1667| 
        B         $C$L616,LT            ; [CPU_] |1667| 
        ; branchcc occurs ; [] |1667| 
	.dwpsn	file "../Source/prod.c",line 1673,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1673| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1673| 
        ; call occurs [#U$$TOFS] ; [] |1673| 
        MOVL      XAR1,ACC              ; [CPU_] |1673| 
        MOV       AL,*-SP[35]           ; [CPU_] |1673| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1673| 
        ; call occurs [#U$$TOFS] ; [] |1673| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1673| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1673| 
        ; call occurs [#FS$$SUB] ; [] |1673| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1673| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1673| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1673| 
        ; call occurs [#FS$$DIV] ; [] |1673| 
        MOVL      XAR0,#88              ; [CPU_] |1673| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1673| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1673| 
	.dwpsn	file "../Source/prod.c",line 1675,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1675| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1675| 
        ; call occurs [#U$$TOFS] ; [] |1675| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1675| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1675| 
        ; call occurs [#FS$$SUB] ; [] |1675| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1675| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1675| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1675| 
        ; call occurs [#FS$$DIV] ; [] |1675| 
        MOVL      XAR0,#88              ; [CPU_] |1675| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1675| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1675| 
        B         $C$L617,UNC           ; [CPU_] |1675| 
        ; branch occurs ; [] |1675| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1668,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1668| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1668| 
        ; call occurs [#U$$TOFS] ; [] |1668| 
        MOVL      XAR1,ACC              ; [CPU_] |1668| 
        MOV       AL,*-SP[35]           ; [CPU_] |1668| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1668| 
        ; call occurs [#U$$TOFS] ; [] |1668| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1668| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1668| 
        ; call occurs [#FS$$SUB] ; [] |1668| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1668| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1668| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1668| 
        ; call occurs [#FS$$DIV] ; [] |1668| 
        MOVL      XAR0,#88              ; [CPU_] |1668| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1668| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1668| 
	.dwpsn	file "../Source/prod.c",line 1670,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1670| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1670| 
        ; call occurs [#U$$TOFS] ; [] |1670| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1670| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1670| 
        ; call occurs [#FS$$SUB] ; [] |1670| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1670| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1670| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1670| 
        ; call occurs [#FS$$DIV] ; [] |1670| 
        MOVL      XAR0,#88              ; [CPU_] |1670| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1670| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1670| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1678,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1678| 
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1680| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1680| 
        ; call occurs [#_dac_setmode] ; [] |1680| 
	.dwpsn	file "../Source/prod.c",line 1682,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1682| 
        MOVL      XAR0,#88              ; [CPU_] |1682| 
        MOV       AL,*-SP[59]           ; [CPU_] |1682| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1682| 
        MOV       *-SP[3],AL            ; [CPU_] |1682| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1682| 
        MOVL      XAR0,#44              ; [CPU_] |1682| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1682| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1682| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1682| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1682| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1682| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1682| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1682| 
        MOVL      XAR4,XAR1             ; [CPU_] |1682| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_sprintf")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1682| 
        ; call occurs [#_sprintf] ; [] |1682| 
        MOVL      XAR4,XAR1             ; [CPU_] |1682| 
	.dwpsn	file "../Source/prod.c",line 1686,column 6,is_stmt,isa 0
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1686| 
        ; call occurs [#_scia_puts] ; [] |1686| 
	.dwpsn	file "../Source/prod.c",line 1688,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1688| 
	.dwpsn	file "../Source/prod.c",line 1689,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1689| 
        ; branch occurs ; [] |1689| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1548,column 7,is_stmt,isa 0
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1548| 
        ; call occurs [#_lcd_clear] ; [] |1548| 
	.dwpsn	file "../Source/prod.c",line 1549,column 7,is_stmt,isa 0
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_update_units")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1549| 
        ; call occurs [#_update_units] ; [] |1549| 
	.dwpsn	file "../Source/prod.c",line 1550,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1550| 
        ; branch occurs ; [] |1550| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1498,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1498| 
        MOVB      AL,#0                 ; [CPU_] |1498| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1498| 
        ; call occurs [#_lcd_puts] ; [] |1498| 
	.dwpsn	file "../Source/prod.c",line 1500,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1500| 
        MOVL      XAR0,#44              ; [CPU_] |1500| 
        MOV       AL,*-SP[59]           ; [CPU_] |1500| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1500| 
        MOV       *-SP[3],AL            ; [CPU_] |1500| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1500| 
        MOVL      XAR4,XAR1             ; [CPU_] |1500| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_sprintf")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1500| 
        ; call occurs [#_sprintf] ; [] |1500| 
        MOVL      XAR4,XAR1             ; [CPU_] |1500| 
	.dwpsn	file "../Source/prod.c",line 1503,column 6,is_stmt,isa 0
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1503| 
        ; call occurs [#_scia_puts] ; [] |1503| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1516,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1516| 
        MOVL      XAR0,#42              ; [CPU_] |1516| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1516| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1516| 
        MOVL      XAR0,#44              ; [CPU_] |1516| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1516| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1516| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1516| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_sprintf")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1516| 
        ; call occurs [#_sprintf] ; [] |1516| 
        MOVL      XAR0,#44              ; [CPU_] |1516| 
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1519| 
	.dwpsn	file "../Source/prod.c",line 1516,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1516| 
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1519| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1519| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1519| 
        ; call occurs [#_scia_getparam] ; [] |1519| 
	.dwpsn	file "../Source/prod.c",line 1520,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1520| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1520| 
        ; call occurs [#_scia_puts] ; [] |1520| 
	.dwpsn	file "../Source/prod.c",line 1523,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1523| 
	.dwpsn	file "../Source/prod.c",line 1522,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1522| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1522| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1522| 
	.dwpsn	file "../Source/prod.c",line 1524,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1524| 
	.dwpsn	file "../Source/prod.c",line 1523,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1523| 
	.dwpsn	file "../Source/prod.c",line 1524,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1524| 
        MOVB      ACC,#0                ; [CPU_] |1524| 
        SUBB      ACC,#1                ; [CPU_] |1524| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1524| 
        B         $C$L622,EQ            ; [CPU_] |1524| 
        ; branchcc occurs ; [] |1524| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1525,column 15,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1525| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1525| 
        CMPB      AL,#0                 ; [CPU_] |1525| 
        B         $C$L624,EQ            ; [CPU_] |1525| 
        ; branchcc occurs ; [] |1525| 
	.dwpsn	file "../Source/prod.c",line 1528,column 8,is_stmt,isa 0
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1528| 
        ; call occurs [#_ad7738_getraw] ; [] |1528| 
	.dwpsn	file "../Source/prod.c",line 1529,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1529| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1529| 
        ADDL      XAR4,ACC              ; [CPU_] |1529| 
        MOVL      XAR0,#10              ; [CPU_] |1529| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1529| 
        MOVL      XAR0,#10              ; [CPU_] |1529| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1529| 
        ASR64     ACC:P,16              ; [CPU_] |1529| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1529| 
        MOVL      XAR0,#10              ; [CPU_] |1529| 
        ASR64     ACC:P,16              ; [CPU_] |1529| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1529| 
        MOVL      XAR0,#10              ; [CPU_] |1529| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1529| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1529| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1529| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1529| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1529| 
	.dwpsn	file "../Source/prod.c",line 1524,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1524| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1524| 
        MOVB      ACC,#0                ; [CPU_] |1524| 
        SUBB      ACC,#1                ; [CPU_] |1524| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1524| 
        B         $C$L621,NEQ           ; [CPU_] |1524| 
        ; branchcc occurs ; [] |1524| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1532,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1532| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1532| 
        ; call occurs [#_scia_puts] ; [] |1532| 
	.dwpsn	file "../Source/prod.c",line 1515,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1515| 
        MOVL      XAR0,#42              ; [CPU_] |1515| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1515| 
        MOVL      XAR0,#42              ; [CPU_] |1515| 
        SUBB      XAR6,#1               ; [CPU_U] |1515| 
        ADDB      ACC,#2                ; [CPU_] |1515| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1515| 
        MOVZ      AR0,AR6               ; [CPU_] |1515| 
        MOV       *-SP[47],AR6          ; [CPU_] |1515| 
        ADDB      XAR1,#4               ; [CPU_] |1515| 
        CMP       AR0,#-1               ; [CPU_] |1515| 
        B         $C$L620,NEQ           ; [CPU_] |1515| 
        ; branchcc occurs ; [] |1515| 
	.dwpsn	file "../Source/prod.c",line 1535,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1535| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1535| 
        MOVB      AL,#10                ; [CPU_] |1535| 
        MOV       T,*-SP[58]            ; [CPU_] |1535| 
        MPYU      ACC,T,AL              ; [CPU_] |1535| 
        ADDL      ACC,XAR6              ; [CPU_] |1535| 
        MOVL      XAR1,ACC              ; [CPU_] |1535| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1535| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1535| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1535| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1535| 
        ; call occurs [#FS$$SUB] ; [] |1535| 
        MOVL      XAR6,ACC              ; [CPU_] |1535| 
        MOV       AL,#16384             ; [CPU_] |1535| 
        MOV       AH,#17948             ; [CPU_] |1535| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1535| 
        MOVL      ACC,XAR6              ; [CPU_] |1535| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1535| 
        ; call occurs [#FS$$MPY] ; [] |1535| 
        MOVL      XAR0,#88              ; [CPU_] |1535| 
        MOVL      P,*-SP[28]            ; [CPU_] |1535| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1535| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1535| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1535| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1535| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1535| 
        ; call occurs [#LL$$TOFS] ; [] |1535| 
        MOVL      XAR0,#88              ; [CPU_] |1535| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1535| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1535| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1535| 
        ; call occurs [#FS$$DIV] ; [] |1535| 
        MOVB      XAR0,#44              ; [CPU_] |1535| 
	.dwpsn	file "../Source/prod.c",line 1538,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1538| 
	.dwpsn	file "../Source/prod.c",line 1535,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1535| 
	.dwpsn	file "../Source/prod.c",line 1538,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1538| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1538| 
        MOV       AL,*-SP[59]           ; [CPU_] |1538| 
        MOV       *-SP[3],AL            ; [CPU_] |1538| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1538| 
        MOVL      XAR0,#44              ; [CPU_] |1538| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1538| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1538| 
        MOVL      XAR4,XAR1             ; [CPU_] |1538| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_sprintf")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1538| 
        ; call occurs [#_sprintf] ; [] |1538| 
        MOVL      XAR4,XAR1             ; [CPU_] |1538| 
	.dwpsn	file "../Source/prod.c",line 1540,column 6,is_stmt,isa 0
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1540| 
        ; call occurs [#_scia_puts] ; [] |1540| 
	.dwpsn	file "../Source/prod.c",line 1541,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1541| 
$C$L623:    
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1541| 
        ; call occurs [#_scia_puts] ; [] |1541| 
	.dwpsn	file "../Source/prod.c",line 1696,column 5,is_stmt,isa 0
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1696| 
        ; call occurs [#_lcd_clear] ; [] |1696| 
	.dwpsn	file "../Source/prod.c",line 1697,column 5,is_stmt,isa 0
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_update_units")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1697| 
        ; call occurs [#_update_units] ; [] |1697| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1700,column 5,is_stmt,isa 0
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1700| 
        ; call occurs [#_ad7738_setcal] ; [] |1700| 
        MOVL      XAR0,#78              ; [CPU_] |1700| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1700| 
	.dwpsn	file "../Source/prod.c",line 1701,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1701| 
        MOVL      XAR1,ACC              ; [CPU_] |1701| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1701| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1701| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1701| 
	.dwpsn	file "../Source/prod.c",line 1702,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1702| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1702| 
        ; call occurs [#_ad7738_resetvall] ; [] |1702| 
	.dwpsn	file "../Source/prod.c",line 1704,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1704| 
        ; branch occurs ; [] |1704| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1526,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1526| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_delay_us")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1526| 
        ; call occurs [#_delay_us] ; [] |1526| 
	.dwpsn	file "../Source/prod.c",line 1525,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1525| 
        ; branch occurs ; [] |1525| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3655,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3655| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3655| 
        ; call occurs [#_scia_puts] ; [] |3655| 
        MOVL      XAR0,#86              ; [CPU_] |3655| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3655| 
	.dwpsn	file "../Source/prod.c",line 3656,column 5,is_stmt,isa 0
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3656| 
        ; call occurs [#_scia_puts] ; [] |3656| 
	.dwpsn	file "../Source/prod.c",line 3657,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3657| 
	.dwpsn	file "../Source/prod.c",line 3658,column 5,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3658| 
        ; branch occurs ; [] |3658| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3616,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3616| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3616| 
        ; call occurs [#_scia_puts] ; [] |3616| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3620,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3620| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_delay_us")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3620| 
        ; call occurs [#_delay_us] ; [] |3620| 
	.dwpsn	file "../Source/prod.c",line 3618,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3618| 
        ; branchcc occurs ; [] |3618| 
	.dwpsn	file "../Source/prod.c",line 3623,column 5,is_stmt,isa 0
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_reboot")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3623| 
        ; call occurs [#_reboot] ; [] |3623| 
	.dwpsn	file "../Source/prod.c",line 3624,column 5,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3624| 
        ; branch occurs ; [] |3624| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3600,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3600| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3600| 
        ; call occurs [#_scia_puts] ; [] |3600| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3604,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3604| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_delay_us")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3604| 
        ; call occurs [#_delay_us] ; [] |3604| 
	.dwpsn	file "../Source/prod.c",line 3602,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3602| 
        ; branchcc occurs ; [] |3602| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3608,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3608| 
	.dwpsn	file "../Source/prod.c",line 3607,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3607| 
	.dwpsn	file "../Source/prod.c",line 3608,column 5,is_stmt,isa 0
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3608| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3608| 
	.dwpsn	file "../Source/prod.c",line 3612,column 5,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3612| 
        ; branch occurs ; [] |3612| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3511,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3511| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3511| 
        ; call occurs [#_scia_puts] ; [] |3511| 
	.dwpsn	file "../Source/prod.c",line 3513,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3513| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3513| 
        ; call occurs [#_scia_puts] ; [] |3513| 
	.dwpsn	file "../Source/prod.c",line 3514,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3514| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3514| 
        ; call occurs [#_scia_puts] ; [] |3514| 
	.dwpsn	file "../Source/prod.c",line 3516,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3516| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3516| 
        ; call occurs [#_scia_puts] ; [] |3516| 
	.dwpsn	file "../Source/prod.c",line 3517,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3517| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3517| 
        ; call occurs [#_scia_puts] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3518,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3518| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3518| 
        ; call occurs [#_scia_puts] ; [] |3518| 
	.dwpsn	file "../Source/prod.c",line 3519,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3519| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3519| 
        ; call occurs [#_scia_puts] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3521| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3521| 
        ; call occurs [#_scia_puts] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3522,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3522| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3522| 
        ; call occurs [#_scia_puts] ; [] |3522| 
	.dwpsn	file "../Source/prod.c",line 3523,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3523| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3523| 
        ; call occurs [#_scia_puts] ; [] |3523| 
	.dwpsn	file "../Source/prod.c",line 3524,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3524| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3524| 
        ; call occurs [#_scia_puts] ; [] |3524| 
	.dwpsn	file "../Source/prod.c",line 3525,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3525| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3525| 
        ; call occurs [#_scia_puts] ; [] |3525| 
	.dwpsn	file "../Source/prod.c",line 3526,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3526| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3526| 
        ; call occurs [#_scia_puts] ; [] |3526| 
	.dwpsn	file "../Source/prod.c",line 3527,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3527| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3527| 
        ; call occurs [#_scia_puts] ; [] |3527| 
	.dwpsn	file "../Source/prod.c",line 3529,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3529| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3529| 
        ; call occurs [#_scia_puts] ; [] |3529| 
	.dwpsn	file "../Source/prod.c",line 3531,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3531| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3531| 
        ; call occurs [#_scia_puts] ; [] |3531| 
	.dwpsn	file "../Source/prod.c",line 3533,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3533| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3533| 
        ; call occurs [#_scia_puts] ; [] |3533| 
	.dwpsn	file "../Source/prod.c",line 3535,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3535| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3535| 
        ; call occurs [#_scia_puts] ; [] |3535| 
	.dwpsn	file "../Source/prod.c",line 3536,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3536| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3536| 
        ; call occurs [#_scia_puts] ; [] |3536| 
	.dwpsn	file "../Source/prod.c",line 3537,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3537| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3537| 
        ; call occurs [#_scia_puts] ; [] |3537| 
	.dwpsn	file "../Source/prod.c",line 3538,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3538| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3538| 
        ; call occurs [#_scia_puts] ; [] |3538| 
	.dwpsn	file "../Source/prod.c",line 3540,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3540| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3540| 
        ; call occurs [#_scia_puts] ; [] |3540| 
	.dwpsn	file "../Source/prod.c",line 3541,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3541| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3541| 
        ; call occurs [#_scia_puts] ; [] |3541| 
	.dwpsn	file "../Source/prod.c",line 3542,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3542| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3542| 
        ; call occurs [#_scia_puts] ; [] |3542| 
	.dwpsn	file "../Source/prod.c",line 3543,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3543| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3543| 
        ; call occurs [#_scia_puts] ; [] |3543| 
	.dwpsn	file "../Source/prod.c",line 3544,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3544| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3544| 
        ; call occurs [#_scia_puts] ; [] |3544| 
	.dwpsn	file "../Source/prod.c",line 3546,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3546| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3546| 
        ; call occurs [#_scia_puts] ; [] |3546| 
	.dwpsn	file "../Source/prod.c",line 3547,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3547| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3547| 
        ; call occurs [#_scia_puts] ; [] |3547| 
	.dwpsn	file "../Source/prod.c",line 3549,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3549| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3549| 
        ; call occurs [#_scia_puts] ; [] |3549| 
	.dwpsn	file "../Source/prod.c",line 3551,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3551| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3551| 
        ; call occurs [#_scia_puts] ; [] |3551| 
	.dwpsn	file "../Source/prod.c",line 3552,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3552| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3552| 
        ; call occurs [#_scia_puts] ; [] |3552| 
	.dwpsn	file "../Source/prod.c",line 3554,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3554| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3554| 
        ; call occurs [#_scia_puts] ; [] |3554| 
	.dwpsn	file "../Source/prod.c",line 3556,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3556| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3556| 
        ; call occurs [#_scia_puts] ; [] |3556| 
	.dwpsn	file "../Source/prod.c",line 3558,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3558| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3558| 
        ; call occurs [#_scia_puts] ; [] |3558| 
	.dwpsn	file "../Source/prod.c",line 3560,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3560| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3560| 
        ; call occurs [#_scia_puts] ; [] |3560| 
	.dwpsn	file "../Source/prod.c",line 3561,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3561| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3561| 
        ; call occurs [#_scia_puts] ; [] |3561| 
	.dwpsn	file "../Source/prod.c",line 3563,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3563| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3563| 
        ; call occurs [#_scia_puts] ; [] |3563| 
	.dwpsn	file "../Source/prod.c",line 3564,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3564| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3564| 
        ; call occurs [#_scia_puts] ; [] |3564| 
	.dwpsn	file "../Source/prod.c",line 3565,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3565| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3565| 
        ; call occurs [#_scia_puts] ; [] |3565| 
	.dwpsn	file "../Source/prod.c",line 3566,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3566| 
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3566| 
        ; call occurs [#_scia_puts] ; [] |3566| 
	.dwpsn	file "../Source/prod.c",line 3567,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3567| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3567| 
        ; call occurs [#_scia_puts] ; [] |3567| 
	.dwpsn	file "../Source/prod.c",line 3568,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3568| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3568| 
        ; call occurs [#_scia_puts] ; [] |3568| 
	.dwpsn	file "../Source/prod.c",line 3569,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3569| 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3569| 
        ; call occurs [#_scia_puts] ; [] |3569| 
	.dwpsn	file "../Source/prod.c",line 3570,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3570| 
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3570| 
        ; call occurs [#_scia_puts] ; [] |3570| 
	.dwpsn	file "../Source/prod.c",line 3581,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3581| 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3581| 
        ; call occurs [#_scia_puts] ; [] |3581| 
	.dwpsn	file "../Source/prod.c",line 3583,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3583| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3583| 
        ; call occurs [#_scia_puts] ; [] |3583| 
	.dwpsn	file "../Source/prod.c",line 3585,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3585| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3585| 
        ; call occurs [#_scia_puts] ; [] |3585| 
	.dwpsn	file "../Source/prod.c",line 3587,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3587| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3587| 
        ; call occurs [#_scia_puts] ; [] |3587| 
	.dwpsn	file "../Source/prod.c",line 3589,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3589| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3589| 
        ; call occurs [#_scia_puts] ; [] |3589| 
	.dwpsn	file "../Source/prod.c",line 3594,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3594| 
	.dwpsn	file "../Source/prod.c",line 3596,column 5,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3596| 
        ; branch occurs ; [] |3596| 
$C$L631:    
	.dwpsn	file "../Source/prod.c",line 1060,column 5,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_getSystemCapVoltageF")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_getSystemCapVoltageF ; [CPU_] |1060| 
        ; call occurs [#_getSystemCapVoltageF] ; [] |1060| 
        MOVZ      AR1,AL                ; [CPU_] |1060| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_getSystemCapVoltage")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_getSystemCapVoltage ; [CPU_] |1060| 
        ; call occurs [#_getSystemCapVoltage] ; [] |1060| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1060| 
        ; call occurs [#I$$TOFS] ; [] |1060| 
        MOVL      XAR6,ACC              ; [CPU_] |1060| 
        MOV       AL,#0                 ; [CPU_] |1060| 
        MOV       AH,#16672             ; [CPU_] |1060| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1060| 
        MOVL      ACC,XAR6              ; [CPU_] |1060| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1060| 
        ; call occurs [#FS$$DIV] ; [] |1060| 
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |1060| 
        MOVL      XAR0,#44              ; [CPU_] |1060| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1060| 
        MOV       *-SP[3],AR1           ; [CPU_] |1060| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1060| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1060| 
        MOVL      XAR4,XAR1             ; [CPU_] |1060| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_sprintf")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1060| 
        ; call occurs [#_sprintf] ; [] |1060| 
        MOVL      XAR4,XAR1             ; [CPU_] |1060| 
	.dwpsn	file "../Source/prod.c",line 1061,column 5,is_stmt,isa 0
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1061| 
        ; call occurs [#_scia_puts] ; [] |1061| 
	.dwpsn	file "../Source/prod.c",line 1062,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1062| 
        MOVB      AH,#1                 ; [CPU_] |1062| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_getModVoltage")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_getModVoltage       ; [CPU_] |1062| 
        ; call occurs [#_getModVoltage] ; [] |1062| 
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1062| 
        ; call occurs [#I$$TOFS] ; [] |1062| 
        MOVL      XAR6,ACC              ; [CPU_] |1062| 
        MOV       AL,#0                 ; [CPU_] |1062| 
        MOV       AH,#16672             ; [CPU_] |1062| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1062| 
        MOVL      ACC,XAR6              ; [CPU_] |1062| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1062| 
        ; call occurs [#FS$$DIV] ; [] |1062| 
        MOVL      XAR1,ACC              ; [CPU_] |1062| 
        MOVB      AL,#1                 ; [CPU_] |1062| 
        MOVB      AH,#2                 ; [CPU_] |1062| 
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_getModVoltage")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_getModVoltage       ; [CPU_] |1062| 
        ; call occurs [#_getModVoltage] ; [] |1062| 
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1062| 
        ; call occurs [#I$$TOFS] ; [] |1062| 
        MOVL      XAR6,ACC              ; [CPU_] |1062| 
        MOV       AL,#0                 ; [CPU_] |1062| 
        MOV       AH,#16672             ; [CPU_] |1062| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1062| 
        MOVL      ACC,XAR6              ; [CPU_] |1062| 
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1062| 
        ; call occurs [#FS$$DIV] ; [] |1062| 
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |1062| 
        MOVL      XAR0,#44              ; [CPU_] |1062| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1062| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1062| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1062| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1062| 
        MOVL      XAR4,XAR1             ; [CPU_] |1062| 
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_sprintf")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1062| 
        ; call occurs [#_sprintf] ; [] |1062| 
        MOVL      XAR4,XAR1             ; [CPU_] |1062| 
	.dwpsn	file "../Source/prod.c",line 1063,column 5,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1063| 
        ; call occurs [#_scia_puts] ; [] |1063| 
	.dwpsn	file "../Source/prod.c",line 1064,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1064| 
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_getShelfMaxTemp")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_getShelfMaxTemp     ; [CPU_] |1064| 
        ; call occurs [#_getShelfMaxTemp] ; [] |1064| 
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1064| 
        ; call occurs [#I$$TOFS] ; [] |1064| 
        MOVL      XAR6,ACC              ; [CPU_] |1064| 
        MOV       AL,#0                 ; [CPU_] |1064| 
        MOV       AH,#16672             ; [CPU_] |1064| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1064| 
        MOVL      ACC,XAR6              ; [CPU_] |1064| 
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1064| 
        ; call occurs [#FS$$DIV] ; [] |1064| 
        MOVL      XAR0,#88              ; [CPU_] |1064| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1064| 
        MOVB      AL,#1                 ; [CPU_] |1064| 
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_getShelfMaxTempID")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_getShelfMaxTempID   ; [CPU_] |1064| 
        ; call occurs [#_getShelfMaxTempID] ; [] |1064| 
        MOV       *-SP[47],AL           ; [CPU_] |1064| 
        MOVB      AL,#1                 ; [CPU_] |1064| 
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_getShelfMinTemp")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_getShelfMinTemp     ; [CPU_] |1064| 
        ; call occurs [#_getShelfMinTemp] ; [] |1064| 
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1064| 
        ; call occurs [#I$$TOFS] ; [] |1064| 
        MOVL      XAR6,ACC              ; [CPU_] |1064| 
        MOV       AL,#0                 ; [CPU_] |1064| 
        MOV       AH,#16672             ; [CPU_] |1064| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1064| 
        MOVL      ACC,XAR6              ; [CPU_] |1064| 
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1064| 
        ; call occurs [#FS$$DIV] ; [] |1064| 
        MOVL      XAR1,ACC              ; [CPU_] |1064| 
        MOVB      AL,#1                 ; [CPU_] |1064| 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_getShelfMinTempID")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_getShelfMinTempID   ; [CPU_] |1064| 
        ; call occurs [#_getShelfMinTempID] ; [] |1064| 
        MOVL      XAR0,#88              ; [CPU_] |1064| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |1064| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1064| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1064| 
        MOV       AH,*-SP[47]           ; [CPU_] |1064| 
        MOVL      XAR0,#44              ; [CPU_] |1064| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |1064| 
        MOV       *-SP[5],AH            ; [CPU_] |1064| 
        MOVL      *-SP[8],XAR1          ; [CPU_] |1064| 
        MOV       *-SP[9],AL            ; [CPU_] |1064| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1064| 
        MOVL      XAR4,XAR1             ; [CPU_] |1064| 
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_sprintf")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1064| 
        ; call occurs [#_sprintf] ; [] |1064| 
	.dwpsn	file "../Source/prod.c",line 1065,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1065| 
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1065| 
        ; call occurs [#_scia_puts] ; [] |1065| 
	.dwpsn	file "../Source/prod.c",line 1068,column 5,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_getSystemOutCurrentF")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_getSystemOutCurrentF ; [CPU_] |1068| 
        ; call occurs [#_getSystemOutCurrentF] ; [] |1068| 
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |1068| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1068| 
        MOV       *-SP[3],AL            ; [CPU_] |1068| 
$C$L632:    
        MOVL      XAR4,XAR1             ; [CPU_] |1068| 
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_sprintf")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1068| 
        ; call occurs [#_sprintf] ; [] |1068| 
	.dwpsn	file "../Source/prod.c",line 1069,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1069| 
$C$L633:    
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1069| 
        ; call occurs [#_scia_puts] ; [] |1069| 
$C$L634:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3662,column 4,is_stmt,isa 0
        B         $C$L636,EQ            ; [CPU_] |3662| 
        ; branchcc occurs ; [] |3662| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 3663,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |3663| 
        SPM       #0                    ; [CPU_] 
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3663| 
        ; call occurs [#_scia_puts] ; [] |3663| 
$C$L636:    
	.dwpsn	file "../Source/prod.c",line 703,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |703| 
        TBIT      AL,#4                 ; [CPU_] |703| 
        B         $C$L637,TC            ; [CPU_] |703| 
        ; branchcc occurs ; [] |703| 
	.dwpsn	file "../Source/prod.c",line 705,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |705| 
        SPM       #0                    ; [CPU_] 
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |705| 
        ; call occurs [#_ad7738_resettare] ; [] |705| 
	.dwpsn	file "../Source/prod.c",line 706,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |706| 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |706| 
        ; call occurs [#_ad7738_resetpeak] ; [] |706| 
	.dwpsn	file "../Source/prod.c",line 707,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |707| 
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |707| 
        ; call occurs [#_ad7738_resetvall] ; [] |707| 
$C$L637:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 785,column 3,is_stmt,isa 0
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |785| 
        ; call occurs [#_ad7738_monrdy] ; [] |785| 
        CMPB      AL,#0                 ; [CPU_] |785| 
        B         $C$L663,EQ            ; [CPU_] |785| 
        ; branchcc occurs ; [] |785| 
	.dwpsn	file "../Source/prod.c",line 787,column 4,is_stmt,isa 0
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |787| 
        ; call occurs [#_ad7738_monclr] ; [] |787| 
        MOVL      XAR0,#84              ; [CPU_] |787| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |787| 
	.dwpsn	file "../Source/prod.c",line 790,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |790| 
        CMPB      AL,#3                 ; [CPU_] |790| 
        B         $C$L638,GT            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#3                 ; [CPU_] |790| 
        B         $C$L644,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#0                 ; [CPU_] |790| 
        B         $C$L648,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#1                 ; [CPU_] |790| 
        B         $C$L647,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#2                 ; [CPU_] |790| 
        B         $C$L646,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        B         $C$L660,UNC           ; [CPU_] |790| 
        ; branch occurs ; [] |790| 
$C$L638:    
        CMPB      AL,#4                 ; [CPU_] |790| 
        B         $C$L643,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#5                 ; [CPU_] |790| 
        B         $C$L639,EQ            ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
        CMPB      AL,#6                 ; [CPU_] |790| 
        B         $C$L660,NEQ           ; [CPU_] |790| 
        ; branchcc occurs ; [] |790| 
	.dwpsn	file "../Source/prod.c",line 845,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |845| 
        MOVL      XAR0,#46              ; [CPU_] |845| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |845| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |845| 
	.dwpsn	file "../Source/prod.c",line 846,column 5,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |846| 
        ; branch occurs ; [] |846| 
$C$L639:    
	.dwpsn	file "../Source/prod.c",line 840,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |840| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |840| 
        ; call occurs [#_ad7738_getlimitst] ; [] |840| 
	.dwpsn	file "../Source/prod.c",line 841,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |841| 
        B         $C$L641,NTC           ; [CPU_] |841| 
        ; branchcc occurs ; [] |841| 
        TBIT      AL,#0                 ; [CPU_] |841| 
        B         $C$L640,NTC           ; [CPU_] |841| 
        ; branchcc occurs ; [] |841| 
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |841| 
        B         $C$L642,UNC           ; [CPU_] |841| 
        ; branch occurs ; [] |841| 
$C$L640:    
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |841| 
        B         $C$L642,UNC           ; [CPU_] |841| 
        ; branch occurs ; [] |841| 
$C$L641:    
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |841| 
$C$L642:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |841| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |841| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |841| 
	.dwpsn	file "../Source/prod.c",line 843,column 5,is_stmt,isa 0
        B         $C$L659,UNC           ; [CPU_] |843| 
        ; branch occurs ; [] |843| 
$C$L643:    
	.dwpsn	file "../Source/prod.c",line 812,column 5,is_stmt,isa 0
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |812| 
        ; call occurs [#_ad7738_getmon] ; [] |812| 
        MOVL      XAR0,#84              ; [CPU_] |812| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |812| 
	.dwpsn	file "../Source/prod.c",line 814,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |814| 
        B         $C$L645,UNC           ; [CPU_] |814| 
        ; branch occurs ; [] |814| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 807,column 5,is_stmt,isa 0
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |807| 
        ; call occurs [#_ad7738_getmon] ; [] |807| 
        MOVL      XAR0,#84              ; [CPU_] |807| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |807| 
	.dwpsn	file "../Source/prod.c",line 808,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |808| 
$C$L645:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |808| 
        ADDL      XAR4,ACC              ; [CPU_] |808| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |808| 
	.dwpsn	file "../Source/prod.c",line 809,column 5,is_stmt,isa 0
        B         $C$L650,UNC           ; [CPU_] |809| 
        ; branch occurs ; [] |809| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 802,column 5,is_stmt,isa 0
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |802| 
        ; call occurs [#_ad7738_getvall] ; [] |802| 
	.dwpsn	file "../Source/prod.c",line 804,column 5,is_stmt,isa 0
        B         $C$L649,UNC           ; [CPU_] |804| 
        ; branch occurs ; [] |804| 
$C$L647:    
	.dwpsn	file "../Source/prod.c",line 797,column 5,is_stmt,isa 0
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |797| 
        ; call occurs [#_ad7738_getpeak] ; [] |797| 
	.dwpsn	file "../Source/prod.c",line 799,column 5,is_stmt,isa 0
        B         $C$L649,UNC           ; [CPU_] |799| 
        ; branch occurs ; [] |799| 
$C$L648:    
	.dwpsn	file "../Source/prod.c",line 792,column 5,is_stmt,isa 0
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |792| 
        ; call occurs [#_ad7738_getmon] ; [] |792| 
$C$L649:    
        MOVL      XAR0,#84              ; [CPU_] |792| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |792| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 793,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |793| 
        ADDL      XAR4,ACC              ; [CPU_] |793| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |793| 
$C$L650:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |793| 
	.dwpsn	file "../Source/prod.c",line 817,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |817| 
        CMPB      AL,#3                 ; [CPU_] |817| 
        B         $C$L651,GT            ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        CMPB      AL,#3                 ; [CPU_] |817| 
        B         $C$L653,EQ            ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        CMPB      AL,#0                 ; [CPU_] |817| 
        B         $C$L656,EQ            ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        CMPB      AL,#1                 ; [CPU_] |817| 
        B         $C$L655,EQ            ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        CMPB      AL,#2                 ; [CPU_] |817| 
        B         $C$L654,EQ            ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        B         $C$L660,UNC           ; [CPU_] |817| 
        ; branch occurs ; [] |817| 
$C$L651:    
        CMPB      AL,#4                 ; [CPU_] |817| 
        B         $C$L652,EQ            ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
        CMPB      AL,#5                 ; [CPU_] |817| 
        B         $C$L660,NEQ           ; [CPU_] |817| 
        ; branchcc occurs ; [] |817| 
	.dwpsn	file "../Source/prod.c",line 834,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |834| 
	.dwpsn	file "../Source/prod.c",line 835,column 6,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |835| 
        ; branch occurs ; [] |835| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 831,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL272       ; [CPU_U] |831| 
	.dwpsn	file "../Source/prod.c",line 832,column 6,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |832| 
        ; branch occurs ; [] |832| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 828,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL273       ; [CPU_U] |828| 
	.dwpsn	file "../Source/prod.c",line 829,column 6,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |829| 
        ; branch occurs ; [] |829| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 825,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL274       ; [CPU_U] |825| 
	.dwpsn	file "../Source/prod.c",line 826,column 6,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |826| 
        ; branch occurs ; [] |826| 
$C$L655:    
	.dwpsn	file "../Source/prod.c",line 822,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |822| 
	.dwpsn	file "../Source/prod.c",line 823,column 6,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |823| 
        ; branch occurs ; [] |823| 
$C$L656:    
	.dwpsn	file "../Source/prod.c",line 819,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL275       ; [CPU_U] |819| 
$C$L657:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |819| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |819| 
$C$L658:    
        MOVL      *-SP[4],ACC           ; [CPU_] |819| 
$C$L659:    
        MOVL      XAR0,#44              ; [CPU_] |819| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |819| 
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("_sprintf")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |819| 
        ; call occurs [#_sprintf] ; [] |819| 
$C$L660:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 850,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |850| 
        MPYB      ACC,T,#20             ; [CPU_] |850| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |850| 
        ADDB      AL,#7                 ; [CPU_] |850| 
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |850| 
        ; call occurs [#_lcd_puts] ; [] |850| 
	.dwpsn	file "../Source/prod.c",line 853,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |853| 
	.dwpsn	file "../Source/prod.c",line 850,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |850| 
	.dwpsn	file "../Source/prod.c",line 853,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |853| 
        B         $C$L661,HIS           ; [CPU_] |853| 
        ; branchcc occurs ; [] |853| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |853| 
        B         $C$L662,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L661:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 854,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |854| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L662:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 863,column 3,is_stmt,isa 0
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |863| 
        ; call occurs [#_ad7738_tempstart] ; [] |863| 
        CMPB      AL,#0                 ; [CPU_] |863| 
        B         $C$L664,NEQ           ; [CPU_] |863| 
        ; branchcc occurs ; [] |863| 
	.dwpsn	file "../Source/prod.c",line 868,column 8,is_stmt,isa 0
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |868| 
        ; call occurs [#_ad7738_tempread] ; [] |868| 
        CMPB      AL,#0                 ; [CPU_] |868| 
        B         $C$L665,EQ            ; [CPU_] |868| 
        ; branchcc occurs ; [] |868| 
	.dwpsn	file "../Source/prod.c",line 869,column 4,is_stmt,isa 0
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |869| 
        ; call occurs [#_ds1820read] ; [] |869| 
        MOVL      XAR0,#46              ; [CPU_] |869| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |869| 
	.dwpsn	file "../Source/prod.c",line 870,column 4,is_stmt,isa 0
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |870| 
        ; call occurs [#_ad7738_settemp] ; [] |870| 
        B         $C$L665,UNC           ; [CPU_] |870| 
        ; branch occurs ; [] |870| 
$C$L664:    
	.dwpsn	file "../Source/prod.c",line 864,column 4,is_stmt,isa 0
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1492, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |864| 
        ; call occurs [#_ds1820start] ; [] |864| 
$C$L665:    
	.dwpsn	file "../Source/prod.c",line 877,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |877| 
        MOVB      XAR0,#36              ; [CPU_] |877| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |877| 
        B         $C$L670,EQ            ; [CPU_] |877| 
        ; branchcc occurs ; [] |877| 
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1493, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |877| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |877| 
        CMPB      AL,#0                 ; [CPU_] |877| 
        B         $C$L670,EQ            ; [CPU_] |877| 
        ; branchcc occurs ; [] |877| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 878,column 4,is_stmt,isa 0
$C$DW$1494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1494, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1494, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |878| 
        ; call occurs [#_tagdetect] ; [] |878| 
        CMPB      AL,#0                 ; [CPU_] |878| 
        B         $C$L666,NEQ           ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |901| 
        MOV       *+XAR4[0],#0          ; [CPU_] |901| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |901| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |903| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |903| 
        MOVL      XAR4,ACC              ; [CPU_] |903| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |903| 
        B         $C$L668,EQ            ; [CPU_] |903| 
        ; branchcc occurs ; [] |903| 
	.dwpsn	file "../Source/prod.c",line 904,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 905,column 6,is_stmt,isa 0
$C$DW$1495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1495, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1495, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |905| 
        ; call occurs [#_lcd_clear] ; [] |905| 
	.dwpsn	file "../Source/prod.c",line 906,column 6,is_stmt,isa 0
$C$DW$1496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1496, DW_AT_name("_update_units")
	.dwattr $C$DW$1496, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |906| 
        ; call occurs [#_update_units] ; [] |906| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 907,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |907| 
        B         $C$L668,UNC           ; [CPU_] |907| 
        ; branch occurs ; [] |907| 
$C$L666:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 880,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |880| 
        B         $C$L667,NEQ           ; [CPU_] |880| 
        ; branchcc occurs ; [] |880| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 883,column 6,is_stmt,isa 0
$C$DW$1497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1497, DW_AT_name("_matchTag")
	.dwattr $C$DW$1497, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |883| 
        ; call occurs [#_matchTag] ; [] |883| 
        MOVL      XAR0,#80              ; [CPU_] |883| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |883| 
        MOVL      XAR0,#9               ; [CPU_] |883| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |883| 
	.dwpsn	file "../Source/prod.c",line 884,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |884| 
        B         $C$L667,EQ            ; [CPU_] |884| 
        ; branchcc occurs ; [] |884| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 887,column 7,is_stmt,isa 0
$C$DW$1498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1498, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1498, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |887| 
        ; call occurs [#_maf_rst] ; [] |887| 
	.dwpsn	file "../Source/prod.c",line 888,column 7,is_stmt,isa 0
$C$DW$1499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1499, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1499, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |888| 
        ; call occurs [#_ad7738_setcal] ; [] |888| 
        MOVL      XAR0,#78              ; [CPU_] |888| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |888| 
	.dwpsn	file "../Source/prod.c",line 889,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |889| 
        MOVL      XAR1,ACC              ; [CPU_] |889| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |889| 
$C$DW$1500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1500, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1500, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |889| 
        ; call occurs [#_ad7738_resetpeak] ; [] |889| 
	.dwpsn	file "../Source/prod.c",line 890,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |890| 
$C$DW$1501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1501, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1501, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |890| 
        ; call occurs [#_ad7738_resetvall] ; [] |890| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 893,column 7,is_stmt,isa 0
$C$DW$1502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1502, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1502, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |893| 
        ; call occurs [#_lcd_clear] ; [] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 7,is_stmt,isa 0
$C$DW$1503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1503, DW_AT_name("_update_units")
	.dwattr $C$DW$1503, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |894| 
        ; call occurs [#_update_units] ; [] |894| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 895,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |895| 
$C$L667:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 898,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |898| 
$C$L668:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 912,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |912| 
        ADDB      AL,#1                 ; [CPU_] |912| 
        MOV       *+FP[AR0],AL          ; [CPU_] |912| 
        CMPB      AL,#4                 ; [CPU_] |912| 
        B         $C$L669,HIS           ; [CPU_] |912| 
        ; branchcc occurs ; [] |912| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |912| 
        ADDB      ACC,#1                ; [CPU_] |912| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |912| 
        B         $C$L670,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L669:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 913,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |913| 
        MOV       *+FP[AR0],#0          ; [CPU_] |913| 
$C$L670:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 921,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |921| 
        CMPB      AL,#1                 ; [CPU_] |921| 
        B         $C$L688,NEQ           ; [CPU_] |921| 
        ; branchcc occurs ; [] |921| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L688,EQ            ; [CPU_] |921| 
        ; branchcc occurs ; [] |921| 
	.dwpsn	file "../Source/prod.c",line 924,column 4,is_stmt,isa 0
$C$DW$1504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1504, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1504, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |924| 
        ; call occurs [#_prod_getavail] ; [] |924| 
        MOVL      XAR6,ACC              ; [CPU_] |924| 
        MOV       T,*-SP[51]            ; [CPU_] |924| 
        MPY       P,T,*-SP[52]          ; [CPU_] |924| 
        MOVU      ACC,PL                ; [CPU_] |924| 
        CMPL      ACC,XAR6              ; [CPU_] |924| 
        B         $C$L673,LOS           ; [CPU_] |924| 
        ; branchcc occurs ; [] |924| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L673,NEQ           ; [CPU_] |924| 
        ; branchcc occurs ; [] |924| 
	.dwpsn	file "../Source/prod.c",line 994,column 11,is_stmt,isa 0
$C$DW$1505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1505, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1505, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |994| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |994| 
        CMPB      AL,#0                 ; [CPU_] |994| 
        B         $C$L671,NEQ           ; [CPU_] |994| 
        ; branchcc occurs ; [] |994| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1002,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |1002| 
        B         $C$L688,EQ            ; [CPU_] |1002| 
        ; branchcc occurs ; [] |1002| 
	.dwpsn	file "../Source/prod.c",line 1003,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |1003| 
	.dwpsn	file "../Source/prod.c",line 1006,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |1006| 
	.dwpsn	file "../Source/prod.c",line 1008,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |1008| 
        MOVB      XAR0,#36              ; [CPU_] |1008| 
	.dwpsn	file "../Source/prod.c",line 1006,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1006| 
	.dwpsn	file "../Source/prod.c",line 1007,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |1007| 
	.dwpsn	file "../Source/prod.c",line 1008,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |1008| 
        MOVL      XAR0,#80              ; [CPU_] |1008| 
        MOV       *+XAR4[2],AL          ; [CPU_] |1008| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1008| 
	.dwpsn	file "../Source/prod.c",line 1012,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |1012| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1010,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1010| 
	.dwpsn	file "../Source/prod.c",line 1012,column 5,is_stmt,isa 0
        B         $C$L687,UNC           ; [CPU_] |1012| 
        ; branch occurs ; [] |1012| 
$C$L671:    
	.dwpsn	file "../Source/prod.c",line 996,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |996| 
        MOV       *+XAR4[0],#0          ; [CPU_] |996| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 998,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |998| 
	.dwpsn	file "../Source/prod.c",line 997,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |997| 
	.dwpsn	file "../Source/prod.c",line 998,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |998| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 999,column 6,is_stmt,isa 0
$C$DW$1506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1506, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1506, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |999| 
        ; call occurs [#_ad7738_getlimitst] ; [] |999| 
        MOV       *XAR1++,AL            ; [CPU_] |999| 
	.dwpsn	file "../Source/prod.c",line 998,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |998| 
	.dwpsn	file "../Source/prod.c",line 999,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |999| 
	.dwpsn	file "../Source/prod.c",line 998,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |998| 
        B         $C$L672,LT            ; [CPU_] |998| 
        ; branchcc occurs ; [] |998| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1001,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |1001| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1002,column 4,is_stmt,isa 0
        B         $C$L687,UNC           ; [CPU_] |1002| 
        ; branch occurs ; [] |1002| 
$C$L673:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 931,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |931| 
        MOVL      XAR0,#88              ; [CPU_] |931| 
	.dwpsn	file "../Source/prod.c",line 929,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |929| 
	.dwpsn	file "../Source/prod.c",line 931,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |931| 
        MOV       *+XAR4[0],#0          ; [CPU_] |931| 
	.dwpsn	file "../Source/prod.c",line 937,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |937| 
	.dwpsn	file "../Source/prod.c",line 932,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |932| 
        MOV       AL,*-SP[52]           ; [CPU_] |932| 
	.dwpsn	file "../Source/prod.c",line 933,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |933| 
        MOV       AL,*-SP[59]           ; [CPU_] |933| 
	.dwpsn	file "../Source/prod.c",line 934,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |934| 
        MOV       *+XAR4[3],AL          ; [CPU_] |934| 
        MOV       AL,*-SP[59]           ; [CPU_] |934| 
	.dwpsn	file "../Source/prod.c",line 935,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |935| 
        MOV       *+XAR4[4],AL          ; [CPU_] |935| 
        MOV       AL,*-SP[50]           ; [CPU_] |935| 
	.dwpsn	file "../Source/prod.c",line 936,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |936| 
        MOV       AH,*-SP[49]           ; [CPU_] |936| 
	.dwpsn	file "../Source/prod.c",line 937,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |937| 
        MOV       *+XAR4[6],AL          ; [CPU_] |937| 
        MOV       AL,AH                 ; [CPU_] |937| 
        ADDB      AL,#1                 ; [CPU_] |937| 
	.dwpsn	file "../Source/prod.c",line 928,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |928| 
	.dwpsn	file "../Source/prod.c",line 937,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |937| 
	.dwpsn	file "../Source/prod.c",line 939,column 5,is_stmt,isa 0
        B         $C$L684,UNC           ; [CPU_] |939| 
        ; branch occurs ; [] |939| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 940,column 6,is_stmt,isa 0
$C$DW$1507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1507, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1507, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |940| 
        ; call occurs [#_prod_getnext] ; [] |940| 
	.dwpsn	file "../Source/prod.c",line 942,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |942| 
        B         $C$L684,NEQ           ; [CPU_] |942| 
        ; branchcc occurs ; [] |942| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 944,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |944| 
	.dwpsn	file "../Source/prod.c",line 948,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |948| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 947,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |947| 
        MOV       *-SP[58],AL           ; [CPU_] |947| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 949,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |949| 
        B         $C$L677,EQ            ; [CPU_] |949| 
        ; branchcc occurs ; [] |949| 
	.dwpsn	file "../Source/prod.c",line 950,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |950| 
        MOVL      XAR0,#88              ; [CPU_] |950| 
        ADDL      ACC,XAR4              ; [CPU_] |950| 
        MOVL      XAR3,ACC              ; [CPU_] |950| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |950| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 953,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |953| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 951,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |951| 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 952,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |952| 
        ANDB      AL,#0xff              ; [CPU_] |952| 
        MOV       *XAR5++,AL            ; [CPU_] |952| 
	.dwpsn	file "../Source/prod.c",line 953,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |953| 
        LSR       AL,8                  ; [CPU_] |953| 
        MOV       *XAR5++,AL            ; [CPU_] |953| 
	.dwpsn	file "../Source/prod.c",line 951,column 21,is_stmt,isa 0
        BANZ      $C$L676,AR0--         ; [CPU_] |951| 
        ; branchcc occurs ; [] |951| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 948,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |948| 
        ADDB      XAR7,#1               ; [CPU_] |948| 
	.dwpsn	file "../Source/prod.c",line 957,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |957| 
        MOV       *-SP[58],AL           ; [CPU_] |957| 
	.dwpsn	file "../Source/prod.c",line 948,column 18,is_stmt,isa 0
        BANZ      $C$L675,AR6--         ; [CPU_] |948| 
        ; branchcc occurs ; [] |948| 
	.dwpsn	file "../Source/prod.c",line 960,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |960| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 961,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |961| 
        B         $C$L680,EQ            ; [CPU_] |961| 
        ; branchcc occurs ; [] |961| 
	.dwpsn	file "../Source/prod.c",line 962,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |962| 
        MOVL      XAR0,#88              ; [CPU_] |962| 
        ADDL      ACC,XAR4              ; [CPU_] |962| 
        ADDB      ACC,#8                ; [CPU_] |962| 
        MOVL      XAR3,ACC              ; [CPU_] |962| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |962| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 965,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |965| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 963,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |963| 
$C$L679:    
	.dwpsn	file "../Source/prod.c",line 964,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |964| 
        ANDB      AL,#0xff              ; [CPU_] |964| 
        MOV       *XAR5++,AL            ; [CPU_] |964| 
	.dwpsn	file "../Source/prod.c",line 965,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |965| 
        LSR       AL,8                  ; [CPU_] |965| 
        MOV       *XAR5++,AL            ; [CPU_] |965| 
	.dwpsn	file "../Source/prod.c",line 963,column 21,is_stmt,isa 0
        BANZ      $C$L679,AR0--         ; [CPU_] |963| 
        ; branchcc occurs ; [] |963| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 960,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |960| 
        ADDB      XAR7,#1               ; [CPU_] |960| 
	.dwpsn	file "../Source/prod.c",line 969,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |969| 
        MOV       *-SP[58],AL           ; [CPU_] |969| 
	.dwpsn	file "../Source/prod.c",line 960,column 18,is_stmt,isa 0
        BANZ      $C$L678,AR6--         ; [CPU_] |960| 
        ; branchcc occurs ; [] |960| 
	.dwpsn	file "../Source/prod.c",line 945,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |945| 
	.dwpsn	file "../Source/prod.c",line 972,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |972| 
        SETC      SXM                   ; [CPU_] 
$C$L681:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 973,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |973| 
        B         $C$L683,EQ            ; [CPU_] |973| 
        ; branchcc occurs ; [] |973| 
	.dwpsn	file "../Source/prod.c",line 974,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |974| 
        MOVL      XAR0,#88              ; [CPU_] |974| 
        ADDL      ACC,XAR4              ; [CPU_] |974| 
        ADDB      ACC,#12               ; [CPU_] |974| 
        MOVL      XAR6,ACC              ; [CPU_] |974| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |974| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 977,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |977| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 975,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |975| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 976,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |976| 
        ANDB      AL,#0xff              ; [CPU_] |976| 
        MOV       *XAR5++,AL            ; [CPU_] |976| 
	.dwpsn	file "../Source/prod.c",line 977,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |977| 
        LSR       AL,8                  ; [CPU_] |977| 
        MOV       *XAR5++,AL            ; [CPU_] |977| 
	.dwpsn	file "../Source/prod.c",line 975,column 21,is_stmt,isa 0
        BANZ      $C$L682,AR0--         ; [CPU_] |975| 
        ; branchcc occurs ; [] |975| 
$C$L683:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 972,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |972| 
	.dwpsn	file "../Source/prod.c",line 981,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |981| 
        MOV       *-SP[58],AL           ; [CPU_] |981| 
	.dwpsn	file "../Source/prod.c",line 972,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |972| 
        CMPB      AL,#2                 ; [CPU_] |972| 
        B         $C$L681,LT            ; [CPU_] |972| 
        ; branchcc occurs ; [] |972| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 939,column 12,is_stmt,isa 0
$C$DW$1508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1508, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1508, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |939| 
        ; call occurs [#_prod_getavail] ; [] |939| 
        TEST      ACC                   ; [CPU_] |939| 
        B         $C$L685,EQ            ; [CPU_] |939| 
        ; branchcc occurs ; [] |939| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |939| 
        B         $C$L674,HI            ; [CPU_] |939| 
        ; branchcc occurs ; [] |939| 
$C$L685:    
	.dwpsn	file "../Source/prod.c",line 985,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |985| 
        MOV       AL,*-SP[47]           ; [CPU_] |985| 
        MOV       *+XAR4[2],AL          ; [CPU_] |985| 
        MOV       AL,*-SP[53]           ; [CPU_] |985| 
	.dwpsn	file "../Source/prod.c",line 987,column 5,is_stmt,isa 0
        B         $C$L686,EQ            ; [CPU_] |987| 
        ; branchcc occurs ; [] |987| 
	.dwpsn	file "../Source/prod.c",line 988,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |988| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 991,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |991| 
$C$L687:    
$C$DW$1509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1509, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1509, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |991| 
        ; call occurs [#_scia_send_bin] ; [] |991| 
$C$L688:    
	.dwpsn	file "../Source/prod.c",line 1026,column 4,is_stmt,isa 0
$C$DW$1510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1510, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1510, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |1026| 
        ; call occurs [#_scia_rx_getcmds] ; [] |1026| 
        CMPB      AL,#0                 ; [CPU_] |1026| 
        B         $C$L636,EQ            ; [CPU_] |1026| 
        ; branchcc occurs ; [] |1026| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1032,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1511, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1511, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |1032| 
        ; call occurs [#_scia_rx_getcmd] ; [] |1032| 
        MOV       *-SP[59],AL           ; [CPU_] |1032| 
        CMPB      AL,#0                 ; [CPU_] |1032| 
        B         $C$L636,EQ            ; [CPU_] |1032| 
        ; branchcc occurs ; [] |1032| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1049,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |1049| 
        B         $C$L322,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
	.dwpsn	file "../Source/prod.c",line 3667,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3667| 
        B         $C$L636,NEQ           ; [CPU_] |3667| 
        ; branchcc occurs ; [] |3667| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3667| 
        B         $C$L636,LO            ; [CPU_] |3667| 
        ; branchcc occurs ; [] |3667| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3701,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3701| 
	.dwpsn	file "../Source/prod.c",line 3694,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3694| 
	.dwpsn	file "../Source/prod.c",line 3690,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3690| 
	.dwpsn	file "../Source/prod.c",line 3694,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3694| 
	.dwpsn	file "../Source/prod.c",line 3693,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3693| 
	.dwpsn	file "../Source/prod.c",line 3701,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3701| 
	.dwpsn	file "../Source/prod.c",line 3694,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3694| 
	.dwpsn	file "../Source/prod.c",line 3701,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3701| 
        CMPB      AL,#146               ; [CPU_] |3701| 
        B         $C$L696,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#146               ; [CPU_] |3701| 
        B         $C$L231,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#54                ; [CPU_] |3701| 
        B         $C$L692,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#54                ; [CPU_] |3701| 
        B         $C$L727,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#36                ; [CPU_] |3701| 
        B         $C$L690,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#36                ; [CPU_] |3701| 
        B         $C$L287,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#33                ; [CPU_] |3701| 
        B         $C$L689,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#33                ; [CPU_] |3701| 
        B         $C$L302,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#16                ; [CPU_] |3701| 
        B         $C$L743,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        MOV       AH,AL                 ; [CPU_] |3701| 
        ADDB      AH,#-17               ; [CPU_] |3701| 
        CMPB      AH,#1                 ; [CPU_] |3701| 
        B         $C$L742,LOS           ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#32                ; [CPU_] |3701| 
        B         $C$L738,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L689:    
        CMPB      AL,#34                ; [CPU_] |3701| 
        B         $C$L298,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#35                ; [CPU_] |3701| 
        B         $C$L295,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L690:    
        CMPB      AL,#51                ; [CPU_] |3701| 
        B         $C$L691,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#51                ; [CPU_] |3701| 
        B         $C$L732,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#48                ; [CPU_] |3701| 
        B         $C$L281,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#49                ; [CPU_] |3701| 
        B         $C$L256,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#50                ; [CPU_] |3701| 
        B         $C$L734,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L691:    
        CMPB      AL,#52                ; [CPU_] |3701| 
        B         $C$L730,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#53                ; [CPU_] |3701| 
        B         $C$L729,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L692:    
        CMPB      AL,#71                ; [CPU_] |3701| 
        B         $C$L694,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#71                ; [CPU_] |3701| 
        B         $C$L252,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#68                ; [CPU_] |3701| 
        B         $C$L693,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#65                ; [CPU_] |3701| 
        B         $C$L712,GEQ           ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#55                ; [CPU_] |3701| 
        B         $C$L720,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#56                ; [CPU_] |3701| 
        B         $C$L716,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#57                ; [CPU_] |3701| 
        B         $C$L714,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L693:    
        CMPB      AL,#69                ; [CPU_] |3701| 
        B         $C$L711,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#70                ; [CPU_] |3701| 
        B         $C$L704,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L694:    
        CMPB      AL,#132               ; [CPU_] |3701| 
        B         $C$L695,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#132               ; [CPU_] |3701| 
        B         $C$L310,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#72                ; [CPU_] |3701| 
        B         $C$L245,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#130               ; [CPU_] |3701| 
        B         $C$L240,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#131               ; [CPU_] |3701| 
        B         $C$L311,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L695:    
        CMPB      AL,#144               ; [CPU_] |3701| 
        B         $C$L236,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#145               ; [CPU_] |3701| 
        B         $C$L235,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L696:    
        CMPB      AL,#169               ; [CPU_] |3701| 
        B         $C$L700,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#169               ; [CPU_] |3701| 
        B         $C$L168,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#161               ; [CPU_] |3701| 
        B         $C$L698,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#161               ; [CPU_] |3701| 
        B         $C$L194,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#150               ; [CPU_] |3701| 
        B         $C$L697,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#150               ; [CPU_] |3701| 
        B         $C$L224,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#147               ; [CPU_] |3701| 
        B         $C$L230,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#148               ; [CPU_] |3701| 
        B         $C$L229,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#149               ; [CPU_] |3701| 
        B         $C$L228,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L697:    
        CMPB      AL,#153               ; [CPU_] |3701| 
        B         $C$L215,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#160               ; [CPU_] |3701| 
        B         $C$L210,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L698:    
        CMPB      AL,#166               ; [CPU_] |3701| 
        B         $C$L699,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#166               ; [CPU_] |3701| 
        B         $C$L182,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#162               ; [CPU_] |3701| 
        B         $C$L189,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#163               ; [CPU_] |3701| 
        B         $C$L185,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#165               ; [CPU_] |3701| 
        B         $C$L184,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L699:    
        CMPB      AL,#167               ; [CPU_] |3701| 
        B         $C$L179,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#168               ; [CPU_] |3701| 
        B         $C$L177,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L700:    
        CMPB      AL,#195               ; [CPU_] |3701| 
        B         $C$L702,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#195               ; [CPU_] |3701| 
        B         $C$L143,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#192               ; [CPU_] |3701| 
        B         $C$L701,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#192               ; [CPU_] |3701| 
        B         $C$L160,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#170               ; [CPU_] |3701| 
        B         $C$L164,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#186               ; [CPU_] |3701| 
        B         $C$L308,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#187               ; [CPU_] |3701| 
        B         $C$L307,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L701:    
        CMPB      AL,#193               ; [CPU_] |3701| 
        B         $C$L153,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#194               ; [CPU_] |3701| 
        B         $C$L150,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L702:    
        CMPB      AL,#210               ; [CPU_] |3701| 
        B         $C$L703,GT            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#210               ; [CPU_] |3701| 
        B         $C$L79,EQ             ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#196               ; [CPU_] |3701| 
        B         $C$L115,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#197               ; [CPU_] |3701| 
        B         $C$L91,EQ             ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#198               ; [CPU_] |3701| 
        B         $C$L80,EQ             ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L703:    
        CMPB      AL,#211               ; [CPU_] |3701| 
        B         $C$L306,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        CMPB      AL,#240               ; [CPU_] |3701| 
        B         $C$L305,EQ            ; [CPU_] |3701| 
        ; branchcc occurs ; [] |3701| 
        B         $C$L317,UNC           ; [CPU_] |3701| 
        ; branch occurs ; [] |3701| 
$C$L704:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4365,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4365| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4365| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4367,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4367| 
        ANDB      AL,#0xff              ; [CPU_] |4367| 
        MOV       *XAR1++,AL            ; [CPU_] |4367| 
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4368| 
        LSR       AL,8                  ; [CPU_] |4368| 
        MOV       *XAR1++,AL            ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4366,column 17,is_stmt,isa 0
        BANZ      $C$L705,AR6--         ; [CPU_] |4366| 
        ; branchcc occurs ; [] |4366| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4368| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4374,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4374| 
        MOV       AH,#0                 ; [CPU_] |4374| 
        MOVL      XAR0,#88              ; [CPU_] |4374| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4374| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4374| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4374| 
$C$DW$1512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1512, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1512, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4374| 
        ; call occurs [#FS$$CMP] ; [] |4374| 
        CMPB      AL,#0                 ; [CPU_] |4374| 
        B         $C$L707,NEQ           ; [CPU_] |4374| 
        ; branchcc occurs ; [] |4374| 
	.dwpsn	file "../Source/prod.c",line 4373,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4373| 
        B         $C$L708,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4375,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4375| 
$C$L708:    
	.dwpsn	file "../Source/prod.c",line 4377,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4377| 
        MOV       AH,#0                 ; [CPU_] |4377| 
        MOVL      XAR0,#88              ; [CPU_] |4377| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4377| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4377| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4377| 
$C$DW$1513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1513, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1513, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4377| 
        ; call occurs [#FS$$CMP] ; [] |4377| 
        CMPB      AL,#0                 ; [CPU_] |4377| 
        B         $C$L709,EQ            ; [CPU_] |4377| 
        ; branchcc occurs ; [] |4377| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4378,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4378| 
        MOV       *-SP[59],AL           ; [CPU_] |4378| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4380,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4380| 
        MOVL      XAR0,#88              ; [CPU_] |4380| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4380| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4380| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4380| 
$C$DW$1514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1514, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1514, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4380| 
        ; call occurs [#FS$$CMP] ; [] |4380| 
        CMPB      AL,#0                 ; [CPU_] |4380| 
        B         $C$L710,EQ            ; [CPU_] |4380| 
        ; branchcc occurs ; [] |4380| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4381,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4381| 
        MOV       *-SP[59],AL           ; [CPU_] |4381| 
$C$L710:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4383,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4383| 
        MOV       *XAR1++,AL            ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4372,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4372| 
	.dwpsn	file "../Source/prod.c",line 4383,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4383| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4372,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4372| 
        SUBB      XAR6,#1               ; [CPU_U] |4372| 
        ADDB      ACC,#10               ; [CPU_] |4372| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4372| 
        MOVZ      AR0,AR6               ; [CPU_] |4372| 
        MOV       *-SP[47],AR6          ; [CPU_] |4372| 
        CMP       AR0,#-1               ; [CPU_] |4372| 
        B         $C$L706,NEQ           ; [CPU_] |4372| 
        ; branchcc occurs ; [] |4372| 
        B         $C$L745,UNC           ; [CPU_] |4372| 
        ; branch occurs ; [] |4372| 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4358,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4358| 
        MOV       AH,#16672             ; [CPU_] |4358| 
        MOVL      XAR0,#46              ; [CPU_] |4358| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4358| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4358| 
$C$DW$1515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1515, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1515, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4358| 
        ; call occurs [#FS$$MPY] ; [] |4358| 
$C$DW$1516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1516, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1516, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4358| 
        ; call occurs [#FS$$TOU] ; [] |4358| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4358| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4358| 
	.dwpsn	file "../Source/prod.c",line 4359,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4359| 
	.dwpsn	file "../Source/prod.c",line 4358,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4358| 
	.dwpsn	file "../Source/prod.c",line 4359,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4359| 
        MOV       *-SP[61],#4           ; [CPU_] |4359| 
	.dwpsn	file "../Source/prod.c",line 4361,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4361| 
        ; branch occurs ; [] |4361| 
$C$L712:    
	.dwpsn	file "../Source/prod.c",line 4340,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4340| 
        MOV       AH,#16672             ; [CPU_] |4340| 
        MOVL      XAR0,#46              ; [CPU_] |4340| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4340| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4340| 
$C$DW$1517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1517, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1517, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4340| 
        ; call occurs [#FS$$MPY] ; [] |4340| 
$C$DW$1518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1518, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1518, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4340| 
        ; call occurs [#FS$$TOU] ; [] |4340| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4340| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4340| 
	.dwpsn	file "../Source/prod.c",line 4341,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4341| 
	.dwpsn	file "../Source/prod.c",line 4340,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4341,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4341| 
	.dwpsn	file "../Source/prod.c",line 4343,column 5,is_stmt,isa 0
$C$DW$1519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1519, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1519, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4343| 
        ; call occurs [#_ad7738_getmon] ; [] |4343| 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4344| 
        MOV       AH,#18371             ; [CPU_] |4344| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4344| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4344| 
        ADDL      ACC,XAR4              ; [CPU_] |4344| 
        SUBB      ACC,#130              ; [CPU_] |4344| 
        MOVL      XAR4,ACC              ; [CPU_] |4344| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4344| 
$C$DW$1520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1520, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1520, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4344| 
        ; call occurs [#FS$$MPY] ; [] |4344| 
$C$DW$1521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1521, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1521, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4344| 
        ; call occurs [#FS$$TOL] ; [] |4344| 
	.dwpsn	file "../Source/prod.c",line 4345,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4345| 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4344| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4344| 
	.dwpsn	file "../Source/prod.c",line 4345,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4345| 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4344| 
	.dwpsn	file "../Source/prod.c",line 4345,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4345| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4348,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4348| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4347,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4347| 
        ANDB      AL,#0xff              ; [CPU_] |4347| 
        MOV       *XAR4++,AL            ; [CPU_] |4347| 
	.dwpsn	file "../Source/prod.c",line 4348,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4348| 
        LSR       AL,8                  ; [CPU_] |4348| 
        MOV       *XAR4++,AL            ; [CPU_] |4348| 
	.dwpsn	file "../Source/prod.c",line 4346,column 17,is_stmt,isa 0
        BANZ      $C$L713,AR6--         ; [CPU_] |4346| 
        ; branchcc occurs ; [] |4346| 
        B         $C$L745,UNC           ; [CPU_] |4346| 
        ; branch occurs ; [] |4346| 
$C$L714:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4327,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4327| 
        MOV       *-SP[61],AL           ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4326,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4326| 
        MOV       *-SP[47],AL           ; [CPU_] |4326| 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4327,column 6,is_stmt,isa 0
$C$DW$1522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1522, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1522, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4327| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4327| 
        MOV       *XAR1++,AL            ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4326,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4327,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4326,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4326| 
        B         $C$L715,LT            ; [CPU_] |4326| 
        ; branchcc occurs ; [] |4326| 
        B         $C$L745,UNC           ; [CPU_] |4326| 
        ; branch occurs ; [] |4326| 
$C$L716:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4304,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4304| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4304| 
        MOVL      XAR6,ACC              ; [CPU_] |4304| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4304| 
        MOV       *XAR4++,AL            ; [CPU_] |4304| 
	.dwpsn	file "../Source/prod.c",line 4305,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4305| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4305| 
        MOVL      XAR6,ACC              ; [CPU_] |4305| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4305| 
        MOV       *XAR4++,AL            ; [CPU_] |4305| 
	.dwpsn	file "../Source/prod.c",line 4306,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4306| 
        ADD       ACC,#199 << 4         ; [CPU_] |4306| 
        MOVL      XAR6,ACC              ; [CPU_] |4306| 
	.dwpsn	file "../Source/prod.c",line 4308,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4308| 
	.dwpsn	file "../Source/prod.c",line 4306,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4306| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4306| 
$C$L718:    
	.dwpsn	file "../Source/prod.c",line 4310,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4310| 
        ANDB      AL,#0xff              ; [CPU_] |4310| 
        MOV       *XAR4++,AL            ; [CPU_] |4310| 
	.dwpsn	file "../Source/prod.c",line 4311,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4311| 
        LSR       AL,8                  ; [CPU_] |4311| 
        MOV       *XAR4++,AL            ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4309,column 18,is_stmt,isa 0
        BANZ      $C$L718,AR6--         ; [CPU_] |4309| 
        ; branchcc occurs ; [] |4309| 
	.dwpsn	file "../Source/prod.c",line 4314,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4314| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4316,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4316| 
        ANDB      AL,#0xff              ; [CPU_] |4316| 
        MOV       *XAR4++,AL            ; [CPU_] |4316| 
	.dwpsn	file "../Source/prod.c",line 4317,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4317| 
        LSR       AL,8                  ; [CPU_] |4317| 
        MOV       *XAR4++,AL            ; [CPU_] |4317| 
	.dwpsn	file "../Source/prod.c",line 4315,column 18,is_stmt,isa 0
        BANZ      $C$L719,AR6--         ; [CPU_] |4315| 
        ; branchcc occurs ; [] |4315| 
	.dwpsn	file "../Source/prod.c",line 4305,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4305| 
        ADD       *-SP[61],#11          ; [CPU_] |4305| 
	.dwpsn	file "../Source/prod.c",line 4303,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4303| 
        ADDB      XAR0,#8               ; [CPU_] |4303| 
        ADDB      XAR7,#8               ; [CPU_] |4303| 
        SUBB      XAR6,#1               ; [CPU_U] |4303| 
        MOVZ      AR3,AR6               ; [CPU_] |4303| 
        CMP       AR6,#-1               ; [CPU_] |4303| 
        B         $C$L717,NEQ           ; [CPU_] |4303| 
        ; branchcc occurs ; [] |4303| 
        B         $C$L745,UNC           ; [CPU_] |4303| 
        ; branch occurs ; [] |4303| 
$C$L720:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4250,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4250| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4250| 
        MOVL      XAR6,ACC              ; [CPU_] |4250| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4250| 
        MOV       *XAR4++,AL            ; [CPU_] |4250| 
	.dwpsn	file "../Source/prod.c",line 4251,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4251| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4251| 
        MOVL      XAR6,ACC              ; [CPU_] |4251| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4255,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4255| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4251,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4251| 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4262,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4262| 
        ANDB      AL,#0xff              ; [CPU_] |4262| 
        MOV       *XAR4++,AL            ; [CPU_] |4262| 
	.dwpsn	file "../Source/prod.c",line 4263,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4263| 
        LSR       AL,8                  ; [CPU_] |4263| 
        MOV       *XAR4++,AL            ; [CPU_] |4263| 
	.dwpsn	file "../Source/prod.c",line 4261,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4261| 
        ; branchcc occurs ; [] |4261| 
	.dwpsn	file "../Source/prod.c",line 4268,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4268| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4275,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4275| 
        ANDB      AL,#0xff              ; [CPU_] |4275| 
        MOV       *XAR4++,AL            ; [CPU_] |4275| 
	.dwpsn	file "../Source/prod.c",line 4276,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4276| 
        LSR       AL,8                  ; [CPU_] |4276| 
        MOV       *XAR4++,AL            ; [CPU_] |4276| 
	.dwpsn	file "../Source/prod.c",line 4274,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4274| 
        ; branchcc occurs ; [] |4274| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4281,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4281| 
        ANDB      AL,#0xff              ; [CPU_] |4281| 
        MOV       *XAR4++,AL            ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4282,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4282| 
        LSR       AL,8                  ; [CPU_] |4282| 
        MOV       *XAR4++,AL            ; [CPU_] |4282| 
	.dwpsn	file "../Source/prod.c",line 4280,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4280| 
        ; branchcc occurs ; [] |4280| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L725:    
	.dwpsn	file "../Source/prod.c",line 4287,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4287| 
        ANDB      AL,#0xff              ; [CPU_] |4287| 
        MOV       *XAR4++,AL            ; [CPU_] |4287| 
	.dwpsn	file "../Source/prod.c",line 4288,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4288| 
        LSR       AL,8                  ; [CPU_] |4288| 
        MOV       *XAR4++,AL            ; [CPU_] |4288| 
	.dwpsn	file "../Source/prod.c",line 4286,column 18,is_stmt,isa 0
        BANZ      $C$L725,AR0--         ; [CPU_] |4286| 
        ; branchcc occurs ; [] |4286| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4293,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4293| 
        ANDB      AL,#0xff              ; [CPU_] |4293| 
        MOV       *XAR4++,AL            ; [CPU_] |4293| 
	.dwpsn	file "../Source/prod.c",line 4294,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4294| 
        LSR       AL,8                  ; [CPU_] |4294| 
        MOV       *XAR4++,AL            ; [CPU_] |4294| 
	.dwpsn	file "../Source/prod.c",line 4292,column 18,is_stmt,isa 0
        BANZ      $C$L726,AR0--         ; [CPU_] |4292| 
        ; branchcc occurs ; [] |4292| 
	.dwpsn	file "../Source/prod.c",line 4249,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4249| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4249| 
        MOVL      XAR0,#88              ; [CPU_] |4249| 
        ADDB      ACC,#12               ; [CPU_] |4249| 
        ADDB      XAR1,#12              ; [CPU_] |4249| 
        ADDB      XAR7,#12              ; [CPU_] |4249| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4249| 
	.dwpsn	file "../Source/prod.c",line 4251,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4249,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4249| 
	.dwpsn	file "../Source/prod.c",line 4251,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4251| 
	.dwpsn	file "../Source/prod.c",line 4249,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4249| 
        SUBB      XAR0,#1               ; [CPU_U] |4249| 
        ADDB      ACC,#12               ; [CPU_] |4249| 
        MOVL      XT,ACC                ; [CPU_] |4249| 
        MOV       *-SP[47],AR0          ; [CPU_] |4249| 
        MOVL      ACC,P                 ; [CPU_] |4249| 
        ADDB      ACC,#12               ; [CPU_] |4249| 
        MOVL      P,ACC                 ; [CPU_] |4249| 
        CMP       AR0,#-1               ; [CPU_] |4249| 
        B         $C$L721,NEQ           ; [CPU_] |4249| 
        ; branchcc occurs ; [] |4249| 
        B         $C$L745,UNC           ; [CPU_] |4249| 
        ; branch occurs ; [] |4249| 
$C$L727:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4242,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4242| 
        MOV       *-SP[61],AL           ; [CPU_] |4242| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4240| 
        MOV       *XAR4++,AL            ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4241,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4241| 
        MOV       *XAR4++,AL            ; [CPU_] |4241| 
	.dwpsn	file "../Source/prod.c",line 4242,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4242| 
	.dwpsn	file "../Source/prod.c",line 4239,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4239| 
	.dwpsn	file "../Source/prod.c",line 4242,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4242| 
	.dwpsn	file "../Source/prod.c",line 4239,column 17,is_stmt,isa 0
        BANZ      $C$L728,AR6--         ; [CPU_] |4239| 
        ; branchcc occurs ; [] |4239| 
        B         $C$L745,UNC           ; [CPU_] |4239| 
        ; branch occurs ; [] |4239| 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4230,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4230| 
        MOVB      XAR0,#36              ; [CPU_] |4230| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4230| 
        MOVL      XAR0,#80              ; [CPU_] |4230| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4230| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4232,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4232| 
	.dwpsn	file "../Source/prod.c",line 4230,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4230| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4232,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4232| 
	.dwpsn	file "../Source/prod.c",line 4231,column 17,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4231| 
        ; branch occurs ; [] |4231| 
$C$L730:    
	.dwpsn	file "../Source/prod.c",line 4216,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4216| 
        MOVB      XAR0,#38              ; [CPU_] |4216| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4216| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4217,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4216,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4216| 
	.dwpsn	file "../Source/prod.c",line 4217,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4216,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4217,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4217| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4222,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4222| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L731:    
	.dwpsn	file "../Source/prod.c",line 4221,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4221| 
        ANDB      AL,#0xff              ; [CPU_] |4221| 
        MOV       *XAR4++,AL            ; [CPU_] |4221| 
	.dwpsn	file "../Source/prod.c",line 4222,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4222| 
        LSR       AL,8                  ; [CPU_] |4222| 
        MOV       *XAR4++,AL            ; [CPU_] |4222| 
	.dwpsn	file "../Source/prod.c",line 4220,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4220| 
        ; branchcc occurs ; [] |4220| 
        B         $C$L745,UNC           ; [CPU_] |4220| 
        ; branch occurs ; [] |4220| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4206,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4206| 
        MOV       *-SP[61],AL           ; [CPU_] |4206| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L733:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4206| 
	.dwpsn	file "../Source/prod.c",line 4205,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4205| 
	.dwpsn	file "../Source/prod.c",line 4206,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4206| 
	.dwpsn	file "../Source/prod.c",line 4205,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4205| 
        ; branchcc occurs ; [] |4205| 
        B         $C$L745,UNC           ; [CPU_] |4205| 
        ; branch occurs ; [] |4205| 
$C$L734:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L735:    
	.dwpsn	file "../Source/prod.c",line 4189,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4189| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 4191,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4191| 
        ANDB      AL,#0xff              ; [CPU_] |4191| 
        MOV       *XAR4++,AL            ; [CPU_] |4191| 
	.dwpsn	file "../Source/prod.c",line 4192,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4192| 
        LSR       AL,8                  ; [CPU_] |4192| 
        MOV       *XAR4++,AL            ; [CPU_] |4192| 
	.dwpsn	file "../Source/prod.c",line 4190,column 18,is_stmt,isa 0
        BANZ      $C$L736,AR0--         ; [CPU_] |4190| 
        ; branchcc occurs ; [] |4190| 
	.dwpsn	file "../Source/prod.c",line 4188,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4188| 
	.dwpsn	file "../Source/prod.c",line 4192,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4192| 
	.dwpsn	file "../Source/prod.c",line 4188,column 17,is_stmt,isa 0
        BANZ      $C$L735,AR6--         ; [CPU_] |4188| 
        ; branchcc occurs ; [] |4188| 
	.dwpsn	file "../Source/prod.c",line 4197,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4197| 
        MOVL      ACC,XAR5              ; [CPU_] |4197| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4197| 
        MOVL      XAR6,ACC              ; [CPU_] |4197| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4197| 
        ANDB      AL,#0xff              ; [CPU_] |4197| 
        MOV       *XAR4++,AL            ; [CPU_] |4197| 
	.dwpsn	file "../Source/prod.c",line 4198,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4198| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4198| 
        MOVL      XAR5,ACC              ; [CPU_] |4198| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4198| 
        LSR       AL,8                  ; [CPU_] |4198| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4198| 
$C$L737:    
        ADD       *-SP[61],#2           ; [CPU_] |4198| 
	.dwpsn	file "../Source/prod.c",line 4201,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4201| 
        ; branch occurs ; [] |4201| 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3843,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3843| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3843| 
        MOVZ      AR4,AR4               ; [CPU_] |3843| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3845,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3845| 
        ANDB      AL,#0xff              ; [CPU_] |3845| 
        MOV       *XAR1++,AL            ; [CPU_] |3845| 
	.dwpsn	file "../Source/prod.c",line 3846,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3846| 
        LSR       AL,8                  ; [CPU_] |3846| 
        MOV       *XAR1++,AL            ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3844,column 17,is_stmt,isa 0
        BANZ      $C$L739,AR6--         ; [CPU_] |3844| 
        ; branchcc occurs ; [] |3844| 
	.dwpsn	file "../Source/prod.c",line 3850,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3850| 
        ANDB      AL,#0xff              ; [CPU_] |3850| 
	.dwpsn	file "../Source/prod.c",line 3851,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3851| 
	.dwpsn	file "../Source/prod.c",line 3850,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3850| 
	.dwpsn	file "../Source/prod.c",line 3851,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3851| 
        LSR       AL,8                  ; [CPU_] |3851| 
        MOV       *XAR1++,AL            ; [CPU_] |3851| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3851| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L740:    
	.dwpsn	file "../Source/prod.c",line 3855,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3855| 
        ANDB      AL,#0xff              ; [CPU_] |3855| 
        MOV       *XAR1++,AL            ; [CPU_] |3855| 
	.dwpsn	file "../Source/prod.c",line 3856,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3856| 
        LSR       AL,8                  ; [CPU_] |3856| 
        MOV       *XAR1++,AL            ; [CPU_] |3856| 
	.dwpsn	file "../Source/prod.c",line 3854,column 17,is_stmt,isa 0
        BANZ      $C$L740,AR6--         ; [CPU_] |3854| 
        ; branchcc occurs ; [] |3854| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3860,column 5,is_stmt,isa 0
$C$DW$1523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1523, DW_AT_name("_strlen")
	.dwattr $C$DW$1523, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3860| 
        ; call occurs [#_strlen] ; [] |3860| 
	.dwpsn	file "../Source/prod.c",line 3861,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3861| 
	.dwpsn	file "../Source/prod.c",line 3846,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3862,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3862| 
        B         $C$L745,EQ            ; [CPU_] |3862| 
        ; branchcc occurs ; [] |3862| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3861,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3861| 
	.dwpsn	file "../Source/prod.c",line 3862,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3862| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3863,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3863| 
	.dwpsn	file "../Source/prod.c",line 3862,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3862| 
	.dwpsn	file "../Source/prod.c",line 3863,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3863| 
        INC       *-SP[61]              ; [CPU_] |3863| 
	.dwpsn	file "../Source/prod.c",line 3862,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3862| 
        B         $C$L741,HI            ; [CPU_] |3862| 
        ; branchcc occurs ; [] |3862| 
        B         $C$L745,UNC           ; [CPU_] |3862| 
        ; branch occurs ; [] |3862| 
$C$L742:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3829,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3829| 
        MOVL      XAR0,#66              ; [CPU_] |3829| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3829| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3829| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3829| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3829| 
	.dwpsn	file "../Source/prod.c",line 3832,column 5,is_stmt,isa 0
        B         $C$L744,UNC           ; [CPU_] |3832| 
        ; branch occurs ; [] |3832| 
$C$L743:    
	.dwpsn	file "../Source/prod.c",line 3823,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3823| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3823| 
$C$L744:    
        MOV       *-SP[61],#3           ; [CPU_] |3823| 
$C$L745:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5814,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5814| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1524, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1524, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5814| 
        ; call occurs [#_scia_send_bin] ; [] |5814| 
	.dwpsn	file "../Source/prod.c",line 5816,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5816| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5816| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5816| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5816| 
        CMPB      AL,#240               ; [CPU_] |5816| 
        B         $C$L636,NEQ           ; [CPU_] |5816| 
        ; branchcc occurs ; [] |5816| 
	.dwpsn	file "../Source/prod.c",line 5817,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5817| 
$C$DW$1525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1525, DW_AT_name("_delay_us")
	.dwattr $C$DW$1525, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5817| 
        ; call occurs [#_delay_us] ; [] |5817| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5818,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5818| 
$C$DW$1526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1526, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1526, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5818| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5818| 
        B         $C$L636,UNC           ; [CPU_] |5818| 
        ; branch occurs ; [] |5818| 
	.dwattr $C$DW$289, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$289, DW_AT_TI_end_line(0x16d9)
	.dwattr $C$DW$289, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$289

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1527	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1527, DW_AT_name("get_fattime")
	.dwattr $C$DW$1527, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1527, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1527, DW_AT_external
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1527, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1527, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1527, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1527, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1528, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1527, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1527, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1527, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1527

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Jan 27 2020",0
	.align	2
$C$FSL62:	.string	"14:08:55",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"Voltage:            %.2f %.2f",13,10,0
	.align	2
$C$FSL264:	.string	"ShelfV :            %.2f %.2f",13,10,0
	.align	2
$C$FSL265:	.string	"ShelfT :            %.2f (%d) %.2f (%d)",13,10,0
	.align	2
$C$FSL266:	.string	"Current:            %.2f",13,10,0
	.align	2
$C$FSL267:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL268:	.string	"%10.1f",0
	.align	2
$C$FSL269:	.string	"1",0
	.align	2
$C$FSL270:	.string	"0",0
	.align	2
$C$FSL271:	.string	"-",0
	.align	2
$C$FSL272:	.string	"%10.4f",0
	.align	2
$C$FSL273:	.string	"%10.3f",0
	.align	2
$C$FSL274:	.string	"%10.2f",0
	.align	2
$C$FSL275:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_velf_rst
	.global	_dac_setmode
	.global	_ad7738_init
	.global	_maf_rst
	.global	_SPICANWaitForTXBuf
	.global	_SPICANCheckInts
	.global	_SPICANInit
	.global	_SPICANReadSetT0Message
	.global	_conf_default
	.global	_mcbsp_xmit
	.global	_latch_dac
	.global	_ad7738_setcal
	.global	_configCAN
	.global	_ad7738_settemp
	.global	_ds1820start
	.global	_ad7738_resetpeak
	.global	_ad7738_monclr
	.global	_ad7738_resettare
	.global	_ad7738_resetlimit
	.global	_ad7738_resetvall
	.global	_scia_set_cmd_mode
	.global	_sys_init
	.global	_flash_init
	.global	_delay_us
	.global	_reboot
	.global	_uart_set_dir
	.global	_extio_init
	.global	_shunt_switch
	.global	_ssr_set
	.global	_LPV
	.global	_METHOD
	.global	_BAUD
	.global	_INTERFACE
	.global	_InitPieCtrl
	.global	_InitPieVectTable
	.global	_UNITS
	.global	_InitECan
	.global	_BITMAP
	.global	_lcd_clear
	.global	_lcd_init
	.global	_scia_init
	.global	_lcd_puts
	.global	_lcd_dputs
	.global	_led_init
	.global	_gpio_init
	.global	_led_set
	.global	_secureRamFuncs_runstart
	.global	_getModVoltage
	.global	_getShelfMaxTemp
	.global	_secureRamFuncs_loadend
	.global	_canVarInit
	.global	_getSystemCapVoltageF
	.global	_port4004
	.global	_secureRamFuncs_loadstart
	.global	_getShelfMinTempID
	.global	_getShelfMinTemp
	.global	_getSystemOutCurrentF
	.global	_port400e
	.global	_getShelfMaxTempID
	.global	_getSystemCapVoltage
	.global	_Flash28_API_RunStart
	.global	_Flash28_API_LoadStart
	.global	_Flash28_API_LoadEnd
	.global	_SPICANReadStat
	.global	_SPICANRead
	.global	_scia_send_bin
	.global	_conf_write
	.global	_ad7738_rawrdy
	.global	_scia_getparam
	.global	_scia_rx_getcmds
	.global	_atoi
	.global	_scia_puts
	.global	_conf_read
	.global	_sprintf
	.global	_scia_rx_getcmd
	.global	_ad7738_getlimitchgd
	.global	_ad7738_tempstart
	.global	_tagdetect
	.global	_ad7738_monrdy
	.global	_ad7738_tagsdetect
	.global	_ad7738_getlimitst
	.global	_ad7738_tempread
	.global	_strlen
	.global	_strtod
	.global	_atol
	.global	_ds1820read
	.global	_prod_getnext
	.global	_prod_getavail
	.global	_ad7738_getmon
	.global	_ad7738_getpeak
	.global	_ad7738_getraw
	.global	_Flash_CallbackPtr
	.global	_Flash_CPUScaleFactor
	.global	_ad7738_getvall
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1529, DW_AT_name("fs_type")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1530, DW_AT_name("drv")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1531, DW_AT_name("csize")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1532, DW_AT_name("n_fats")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1533, DW_AT_name("wflag")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1534, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1535, DW_AT_name("id")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1536, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1537, DW_AT_name("last_clust")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1538, DW_AT_name("free_clust")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1539, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1540, DW_AT_name("cdir")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1541, DW_AT_name("n_fatent")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1542, DW_AT_name("fsize")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1543, DW_AT_name("fatbase")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1544, DW_AT_name("dirbase")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1545, DW_AT_name("database")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1546, DW_AT_name("winsect")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1547, DW_AT_name("win")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1548, DW_AT_name("fs")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1549, DW_AT_name("id")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1550, DW_AT_name("flag")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1551, DW_AT_name("pad1")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1552, DW_AT_name("fptr")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1553, DW_AT_name("fsize")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1554, DW_AT_name("org_clust")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1555, DW_AT_name("curr_clust")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1556, DW_AT_name("dsect")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1557, DW_AT_name("dir_sect")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1558, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1559, DW_AT_name("cltbl")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1560, DW_AT_name("buf")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1561, DW_AT_name("year")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1562, DW_AT_name("month")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1563, DW_AT_name("mday")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1564, DW_AT_name("wday")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1565, DW_AT_name("hour")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1566, DW_AT_name("min")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1567, DW_AT_name("sec")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1568, DW_AT_name("adc")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1569, DW_AT_name("adw")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1570, DW_AT_name("pos")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1571, DW_AT_name("vel")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1572, DW_AT_name("ci")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1573, DW_AT_name("bslope")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1574, DW_AT_name("tcx")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1575, DW_AT_name("tcy")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1576, DW_AT_name("tcz")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1577	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1577, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("what")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("ch")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1580, DW_AT_name("dslopep")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1581, DW_AT_name("dslopen")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1582, DW_AT_name("dint")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1583, DW_AT_name("gain")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1584, DW_AT_name("offset")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1585	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1585, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("what")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("ch")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("adec")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1589	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1589, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("all")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1607, DW_AT_name("bit")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("all")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1625, DW_AT_name("bit")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("all")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1643, DW_AT_name("bit")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("all")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1661, DW_AT_name("bit")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("all")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1679, DW_AT_name("bit")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("all")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1697, DW_AT_name("bit")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1708, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1708, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("all")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1715, DW_AT_name("bit")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("all")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1733, DW_AT_name("bit")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("rsvd1")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("rsvd2")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("all")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1741, DW_AT_name("bit")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("rsvd1")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("rsvd2")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("all")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1749, DW_AT_name("bit")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("rsvd1")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("rsvd2")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("all")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1757, DW_AT_name("bit")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("rsvd1")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("rsvd2")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("all")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1765, DW_AT_name("bit")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("rsvd1")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("all")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1771, DW_AT_name("bit")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("rsvd1")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("all")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1777, DW_AT_name("bit")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("rsvd1")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("all")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1783, DW_AT_name("bit")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("rsvd1")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("all")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1789, DW_AT_name("bit")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("all")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1807, DW_AT_name("bit")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("all")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1825, DW_AT_name("bit")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1831, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1831, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1837, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1837, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1840, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1840, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1841, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1841, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("all")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1843, DW_AT_name("bit")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1844, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1844, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1846, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1846, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1847, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1847, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1848, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1848, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1849, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1849, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1850, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1850, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1851, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1851, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1851, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1852, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1852, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1852, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1853, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1853, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1853, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1854, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1854, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1854, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1855, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1855, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1855, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1856, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1856, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1856, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1857, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1857, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1858, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1858, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1858, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1859, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1859, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1859, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1860, DW_AT_name("all")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1861, DW_AT_name("bit")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1862, DW_AT_name("rsvd1")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1862, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1862, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1863, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1863, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1863, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1864, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1864, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1864, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1865, DW_AT_name("rsvd2")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1865, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1865, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1866, DW_AT_name("all")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1867, DW_AT_name("bit")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1868, DW_AT_name("rsvd1")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1868, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1868, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1869, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1869, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1869, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1870, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1870, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1870, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1871, DW_AT_name("rsvd2")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1871, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1871, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1872, DW_AT_name("all")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1873, DW_AT_name("bit")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1874, DW_AT_name("rsvd1")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1874, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1874, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1875, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1875, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1875, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1876, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1876, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1876, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1877, DW_AT_name("rsvd2")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1877, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1877, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1878, DW_AT_name("all")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1879, DW_AT_name("bit")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1880, DW_AT_name("rsvd1")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1880, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1880, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1881, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1881, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1881, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1882, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1882, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1882, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1883, DW_AT_name("rsvd2")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1883, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1883, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1884, DW_AT_name("all")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1885, DW_AT_name("bit")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1886, DW_AT_name("GPADAT")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1887, DW_AT_name("GPASET")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1888, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1889, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1890, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1891, DW_AT_name("GPBSET")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1892, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1893, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1894, DW_AT_name("rsvd1")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1895, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1896, DW_AT_name("GPDSET")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1897, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1898, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1899, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1900, DW_AT_name("GPESET")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1901, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1902, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1903, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1904, DW_AT_name("GPFSET")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1905, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1906, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1907, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1908, DW_AT_name("GPGSET")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1909, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1910, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1911, DW_AT_name("rsvd2")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1912	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1912)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1913, DW_AT_name("what")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1914, DW_AT_name("ch")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1915, DW_AT_name("limit")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1916, DW_AT_name("limits")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1917, DW_AT_name("limitr")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1918	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1918, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1919, DW_AT_name("usn")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1920	.dwtag  DW_TAG_member
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1920, DW_AT_name("uname")
	.dwattr $C$DW$1920, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1920, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1920, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1921	.dwtag  DW_TAG_member
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1921, DW_AT_name("rxdir")
	.dwattr $C$DW$1921, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1921, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1921, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1922	.dwtag  DW_TAG_member
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1922, DW_AT_name("baud")
	.dwattr $C$DW$1922, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1922, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1922, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1923	.dwtag  DW_TAG_member
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1923, DW_AT_name("tagiden")
	.dwattr $C$DW$1923, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1923, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1923, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1924	.dwtag  DW_TAG_member
	.dwattr $C$DW$1924, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1924, DW_AT_name("tarepersist")
	.dwattr $C$DW$1924, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1924, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1924, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1925	.dwtag  DW_TAG_member
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1925, DW_AT_name("filter")
	.dwattr $C$DW$1925, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1925, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1925, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1926	.dwtag  DW_TAG_member
	.dwattr $C$DW$1926, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1926, DW_AT_name("diffwin")
	.dwattr $C$DW$1926, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1926, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1926, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1927	.dwtag  DW_TAG_member
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1927, DW_AT_name("ch")
	.dwattr $C$DW$1927, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1927, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1927, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1928	.dwtag  DW_TAG_member
	.dwattr $C$DW$1928, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1928, DW_AT_name("sensor")
	.dwattr $C$DW$1928, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1928, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1928, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1929	.dwtag  DW_TAG_member
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1929, DW_AT_name("vfd")
	.dwattr $C$DW$1929, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1929, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1929, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1930	.dwtag  DW_TAG_member
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1930, DW_AT_name("dac")
	.dwattr $C$DW$1930, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1930, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1930, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1931	.dwtag  DW_TAG_member
	.dwattr $C$DW$1931, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1931, DW_AT_name("lim")
	.dwattr $C$DW$1931, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1931, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1931, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1932	.dwtag  DW_TAG_member
	.dwattr $C$DW$1932, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1932, DW_AT_name("velfilter")
	.dwattr $C$DW$1932, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1932, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1932, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1933	.dwtag  DW_TAG_member
	.dwattr $C$DW$1933, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1933, DW_AT_name("cntperin")
	.dwattr $C$DW$1933, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1933, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1933, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1934	.dwtag  DW_TAG_member
	.dwattr $C$DW$1934, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1934, DW_AT_name("magic")
	.dwattr $C$DW$1934, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1934, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1934, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1935	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1935, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1935)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1936	.dwtag  DW_TAG_member
	.dwattr $C$DW$1936, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1936, DW_AT_name("ssn")
	.dwattr $C$DW$1936, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1936, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1936, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1937	.dwtag  DW_TAG_member
	.dwattr $C$DW$1937, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1937, DW_AT_name("slbl")
	.dwattr $C$DW$1937, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1937, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1937, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1938	.dwtag  DW_TAG_member
	.dwattr $C$DW$1938, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1938, DW_AT_name("tagid")
	.dwattr $C$DW$1938, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1938, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1938, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1939	.dwtag  DW_TAG_member
	.dwattr $C$DW$1939, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1939, DW_AT_name("method")
	.dwattr $C$DW$1939, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1939, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1939, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1940	.dwtag  DW_TAG_member
	.dwattr $C$DW$1940, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1940, DW_AT_name("date")
	.dwattr $C$DW$1940, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1940, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1940, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1941	.dwtag  DW_TAG_member
	.dwattr $C$DW$1941, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1941, DW_AT_name("range")
	.dwattr $C$DW$1941, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1941, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1941, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1942	.dwtag  DW_TAG_member
	.dwattr $C$DW$1942, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1942, DW_AT_name("unit")
	.dwattr $C$DW$1942, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1942, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1942, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1943	.dwtag  DW_TAG_member
	.dwattr $C$DW$1943, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1943, DW_AT_name("ounit")
	.dwattr $C$DW$1943, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1943, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1943, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1944	.dwtag  DW_TAG_member
	.dwattr $C$DW$1944, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1944, DW_AT_name("ufactor")
	.dwattr $C$DW$1944, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1944, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1944, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1945	.dwtag  DW_TAG_member
	.dwattr $C$DW$1945, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1945, DW_AT_name("points")
	.dwattr $C$DW$1945, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1945, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1945, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1946	.dwtag  DW_TAG_member
	.dwattr $C$DW$1946, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1946, DW_AT_name("mass")
	.dwattr $C$DW$1946, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1946, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1946, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1947	.dwtag  DW_TAG_member
	.dwattr $C$DW$1947, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1947, DW_AT_name("adc")
	.dwattr $C$DW$1947, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1947, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1947, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1948	.dwtag  DW_TAG_member
	.dwattr $C$DW$1948, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1948, DW_AT_name("slope")
	.dwattr $C$DW$1948, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1948, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1948, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1949	.dwtag  DW_TAG_member
	.dwattr $C$DW$1949, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1949, DW_AT_name("intercept")
	.dwattr $C$DW$1949, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1949, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1949, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1950	.dwtag  DW_TAG_member
	.dwattr $C$DW$1950, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1950, DW_AT_name("shunt")
	.dwattr $C$DW$1950, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1950, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1950, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1951	.dwtag  DW_TAG_member
	.dwattr $C$DW$1951, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1951, DW_AT_name("base")
	.dwattr $C$DW$1951, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1951, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1951, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1952	.dwtag  DW_TAG_member
	.dwattr $C$DW$1952, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1952, DW_AT_name("tare")
	.dwattr $C$DW$1952, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1952, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1952, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1953	.dwtag  DW_TAG_member
	.dwattr $C$DW$1953, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1953, DW_AT_name("dacgain")
	.dwattr $C$DW$1953, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1953, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1953, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1954	.dwtag  DW_TAG_member
	.dwattr $C$DW$1954, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1954, DW_AT_name("dacoff")
	.dwattr $C$DW$1954, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1954, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1954, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1955	.dwtag  DW_TAG_member
	.dwattr $C$DW$1955, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1955, DW_AT_name("ch")
	.dwattr $C$DW$1955, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1955, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1955, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1956	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1956, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1957	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1957, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1957)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1958	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1958, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1959	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1959, DW_AT_type(*$C$DW$T$6)

$C$DW$T$175	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$1959)


$C$DW$T$176	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_byte_size(0x101)
$C$DW$1960	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1960, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$176

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1961	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1961, DW_AT_type(*$C$DW$T$10)

$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$1961)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1962	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1962, DW_AT_type(*$C$DW$T$36)

$C$DW$1963	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1963, DW_AT_type(*$C$DW$1962)

$C$DW$T$298	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1963)

$C$DW$1964	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1964, DW_AT_type(*$C$DW$T$36)

$C$DW$T$299	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$1964)


$C$DW$T$300	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$300, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$T$300, DW_AT_language(DW_LANG_C)
$C$DW$1965	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$300


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1966	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1966, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87

$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)


$C$DW$T$307	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$307, DW_AT_byte_size(0x03)
$C$DW$1967	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1967, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$307


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x08)
$C$DW$1968	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1968, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$308

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1969	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1969, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1970	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1970, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1971	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1971, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1972	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1972, DW_AT_type(*$C$DW$T$12)

$C$DW$T$335	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$335, DW_AT_type(*$C$DW$1972)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1973	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1973, DW_AT_type(*$C$DW$T$90)

$C$DW$T$338	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$338, DW_AT_type(*$C$DW$1973)


$C$DW$T$339	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$339, DW_AT_type(*$C$DW$T$338)
	.dwattr $C$DW$T$339, DW_AT_language(DW_LANG_C)
$C$DW$1974	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$339

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$354	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$354, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$354, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$354, DW_AT_byte_size(0x08)
$C$DW$1975	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1975, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$354

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1976	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1976, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1977	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1977, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1978	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1978, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1979	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1979, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x06)
$C$DW$1980	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1980, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$373

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1981	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1981, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1982	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1982, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$359	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$359, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$359, DW_AT_address_class(0x20)

$C$DW$1983	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1983, DW_AT_type(*$C$DW$T$5)

$C$DW$T$179	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$1983)

$C$DW$T$180	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_address_class(0x20)


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
$C$DW$1984	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$374


$C$DW$T$375	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$375, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$375, DW_AT_byte_size(0x400)
$C$DW$1985	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1985, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$375


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x08)
$C$DW$1986	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1986, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$380


$C$DW$T$381	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$381, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$381, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$381, DW_AT_byte_size(0x64)
$C$DW$1987	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1987, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$381


$C$DW$T$382	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$382, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$382, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$382, DW_AT_byte_size(0x40)
$C$DW$1988	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1988, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$382

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1989	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1989, DW_AT_name("AL")
	.dwattr $C$DW$1989, DW_AT_location[DW_OP_reg0]

$C$DW$1990	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1990, DW_AT_name("AH")
	.dwattr $C$DW$1990, DW_AT_location[DW_OP_reg1]

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("PL")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg2]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("PH")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg3]

$C$DW$1993	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1993, DW_AT_name("SP")
	.dwattr $C$DW$1993, DW_AT_location[DW_OP_reg20]

$C$DW$1994	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1994, DW_AT_name("XT")
	.dwattr $C$DW$1994, DW_AT_location[DW_OP_reg21]

$C$DW$1995	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1995, DW_AT_name("T")
	.dwattr $C$DW$1995, DW_AT_location[DW_OP_reg22]

$C$DW$1996	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1996, DW_AT_name("ST0")
	.dwattr $C$DW$1996, DW_AT_location[DW_OP_reg23]

$C$DW$1997	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1997, DW_AT_name("ST1")
	.dwattr $C$DW$1997, DW_AT_location[DW_OP_reg24]

$C$DW$1998	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1998, DW_AT_name("PC")
	.dwattr $C$DW$1998, DW_AT_location[DW_OP_reg25]

$C$DW$1999	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1999, DW_AT_name("RPC")
	.dwattr $C$DW$1999, DW_AT_location[DW_OP_reg26]

$C$DW$2000	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2000, DW_AT_name("FP")
	.dwattr $C$DW$2000, DW_AT_location[DW_OP_reg28]

$C$DW$2001	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2001, DW_AT_name("DP")
	.dwattr $C$DW$2001, DW_AT_location[DW_OP_reg29]

$C$DW$2002	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2002, DW_AT_name("SXM")
	.dwattr $C$DW$2002, DW_AT_location[DW_OP_reg30]

$C$DW$2003	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2003, DW_AT_name("PM")
	.dwattr $C$DW$2003, DW_AT_location[DW_OP_reg31]

$C$DW$2004	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2004, DW_AT_name("OVM")
	.dwattr $C$DW$2004, DW_AT_location[DW_OP_regx 0x20]

$C$DW$2005	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2005, DW_AT_name("PAGE0")
	.dwattr $C$DW$2005, DW_AT_location[DW_OP_regx 0x21]

$C$DW$2006	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2006, DW_AT_name("AMODE")
	.dwattr $C$DW$2006, DW_AT_location[DW_OP_regx 0x22]

$C$DW$2007	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2007, DW_AT_name("INTM")
	.dwattr $C$DW$2007, DW_AT_location[DW_OP_regx 0x23]

$C$DW$2008	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2008, DW_AT_name("IFR")
	.dwattr $C$DW$2008, DW_AT_location[DW_OP_regx 0x24]

$C$DW$2009	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2009, DW_AT_name("IER")
	.dwattr $C$DW$2009, DW_AT_location[DW_OP_regx 0x25]

$C$DW$2010	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2010, DW_AT_name("V")
	.dwattr $C$DW$2010, DW_AT_location[DW_OP_regx 0x26]

$C$DW$2011	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2011, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$2011, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$2012	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2012, DW_AT_name("VOL")
	.dwattr $C$DW$2012, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$2013	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2013, DW_AT_name("AR0")
	.dwattr $C$DW$2013, DW_AT_location[DW_OP_reg4]

$C$DW$2014	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2014, DW_AT_name("XAR0")
	.dwattr $C$DW$2014, DW_AT_location[DW_OP_reg5]

$C$DW$2015	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2015, DW_AT_name("AR1")
	.dwattr $C$DW$2015, DW_AT_location[DW_OP_reg6]

$C$DW$2016	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2016, DW_AT_name("XAR1")
	.dwattr $C$DW$2016, DW_AT_location[DW_OP_reg7]

$C$DW$2017	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2017, DW_AT_name("AR2")
	.dwattr $C$DW$2017, DW_AT_location[DW_OP_reg8]

$C$DW$2018	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2018, DW_AT_name("XAR2")
	.dwattr $C$DW$2018, DW_AT_location[DW_OP_reg9]

$C$DW$2019	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2019, DW_AT_name("AR3")
	.dwattr $C$DW$2019, DW_AT_location[DW_OP_reg10]

$C$DW$2020	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2020, DW_AT_name("XAR3")
	.dwattr $C$DW$2020, DW_AT_location[DW_OP_reg11]

$C$DW$2021	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2021, DW_AT_name("AR4")
	.dwattr $C$DW$2021, DW_AT_location[DW_OP_reg12]

$C$DW$2022	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2022, DW_AT_name("XAR4")
	.dwattr $C$DW$2022, DW_AT_location[DW_OP_reg13]

$C$DW$2023	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2023, DW_AT_name("AR5")
	.dwattr $C$DW$2023, DW_AT_location[DW_OP_reg14]

$C$DW$2024	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2024, DW_AT_name("XAR5")
	.dwattr $C$DW$2024, DW_AT_location[DW_OP_reg15]

$C$DW$2025	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2025, DW_AT_name("AR6")
	.dwattr $C$DW$2025, DW_AT_location[DW_OP_reg16]

$C$DW$2026	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2026, DW_AT_name("XAR6")
	.dwattr $C$DW$2026, DW_AT_location[DW_OP_reg17]

$C$DW$2027	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2027, DW_AT_name("AR7")
	.dwattr $C$DW$2027, DW_AT_location[DW_OP_reg18]

$C$DW$2028	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2028, DW_AT_name("XAR7")
	.dwattr $C$DW$2028, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

