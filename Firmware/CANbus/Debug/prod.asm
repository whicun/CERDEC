;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Wed Dec 04 09:57:25 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("conf_default")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
	.dwendtag $C$DW$3


$C$DW$4	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$4, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$4, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$4, DW_AT_declaration
	.dwattr $C$DW$4, DW_AT_external
$C$DW$5	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$5, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$4


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("configCAN")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
	.dwendtag $C$DW$6


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("scia_init")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$9


$C$DW$11	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$11, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("lcd_puts")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$163)

$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
$C$DW$18	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$18, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$17


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$163)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$19


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("ad7738_init")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwendtag $C$DW$23


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("maf_rst")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ds1820start")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("dac_setmode")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
$C$DW$27	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$27, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$26


$C$DW$28	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$28, DW_AT_name("velf_rst")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwendtag $C$DW$28


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("InitECan")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29


$C$DW$30	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$30, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
	.dwendtag $C$DW$30

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("METHOD")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external


$C$DW$32	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$32, DW_AT_name("latch_dac")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwendtag $C$DW$32


$C$DW$33	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$33, DW_AT_name("delay_us")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external
$C$DW$34	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$33

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("UNITS")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external

$C$DW$36	.dwtag  DW_TAG_variable
	.dwattr $C$DW$36, DW_AT_name("BITMAP")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external

$C$DW$37	.dwtag  DW_TAG_variable
	.dwattr $C$DW$37, DW_AT_name("BAUD")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$37, DW_AT_type(*$C$DW$T$329)
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$11)

$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$38

$C$DW$41	.dwtag  DW_TAG_variable
	.dwattr $C$DW$41, DW_AT_name("LPV")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwendtag $C$DW$42


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$43

$C$DW$45	.dwtag  DW_TAG_variable
	.dwattr $C$DW$45, DW_AT_name("INTERFACE")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$364)
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("gpio_init")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("extio_init")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwendtag $C$DW$47


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("led_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("lcd_init")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwendtag $C$DW$49


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("led_set")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
$C$DW$51	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$36)

$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$50


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("lcd_clear")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwendtag $C$DW$53


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("flash_init")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("shunt_switch")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("reboot")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwendtag $C$DW$57


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("ssr_set")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$36)

$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$58


$C$DW$61	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$61, DW_AT_name("sys_init")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwendtag $C$DW$61


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$62


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("tagdetect")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64

$C$DW$66	.dwtag  DW_TAG_variable
	.dwattr $C$DW$66, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external

$C$DW$67	.dwtag  DW_TAG_variable
	.dwattr $C$DW$67, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external

$C$DW$68	.dwtag  DW_TAG_variable
	.dwattr $C$DW$68, DW_AT_name("port4004")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$295)
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$69	.dwtag  DW_TAG_variable
	.dwattr $C$DW$69, DW_AT_name("autoidchanged")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$69, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$69, DW_AT_external

$C$DW$70	.dwtag  DW_TAG_variable
	.dwattr $C$DW$70, DW_AT_name("port400e")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$295)
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$71	.dwtag  DW_TAG_variable
	.dwattr $C$DW$71, DW_AT_name("cmd_mode")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$71, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$71, DW_AT_external

$C$DW$72	.dwtag  DW_TAG_variable
	.dwattr $C$DW$72, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external

$C$DW$73	.dwtag  DW_TAG_variable
	.dwattr $C$DW$73, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external

$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external

$C$DW$75	.dwtag  DW_TAG_variable
	.dwattr $C$DW$75, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external


$C$DW$76	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$76, DW_AT_name("scia_getparam")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external
$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$163)

$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$163)

$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$76


$C$DW$80	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$80, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$163)

$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$80


$C$DW$83	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$83, DW_AT_name("spi_recv")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_spi_recv")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
	.dwendtag $C$DW$83


$C$DW$84	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$84, DW_AT_name("conf_write")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
	.dwendtag $C$DW$84


$C$DW$85	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$85, DW_AT_name("conf_read")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$85, DW_AT_declaration
	.dwattr $C$DW$85, DW_AT_external
	.dwendtag $C$DW$85


$C$DW$86	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$86, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
	.dwendtag $C$DW$86


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("sprintf")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$163)

$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$177)

$C$DW$90	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$87


$C$DW$91	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$91, DW_AT_name("atoi")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$91


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$163)

$C$DW$95	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$93


$C$DW$96	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$96, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
	.dwendtag $C$DW$96


$C$DW$97	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$97, DW_AT_name("scia_puts")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
$C$DW$98	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$97


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$101


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("strlen")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
$C$DW$107	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$106

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$108	.dwtag  DW_TAG_variable
	.dwattr $C$DW$108, DW_AT_name("VEL_U")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$108, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$108, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$109	.dwtag  DW_TAG_variable
	.dwattr $C$DW$109, DW_AT_name("POS_U")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$109, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$109, DW_AT_external


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("memcpy")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$3)

$C$DW$112	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$148)

$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$110


$C$DW$114	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$114, DW_AT_name("strtod")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$177)

$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$349)

	.dwendtag $C$DW$114


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("ds1820read")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
	.dwendtag $C$DW$117


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
$C$DW$119	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$118


$C$DW$120	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$120, DW_AT_name("atol")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$120, DW_AT_declaration
	.dwattr $C$DW$120, DW_AT_external
$C$DW$121	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$177)

	.dwendtag $C$DW$120

$C$DW$122	.dwtag  DW_TAG_variable
	.dwattr $C$DW$122, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("prod_getavail")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
	.dwendtag $C$DW$123


$C$DW$124	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$124, DW_AT_name("prod_getnext")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$124, DW_AT_declaration
	.dwattr $C$DW$124, DW_AT_external
	.dwendtag $C$DW$124

$C$DW$125	.dwtag  DW_TAG_variable
	.dwattr $C$DW$125, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
	.dwendtag $C$DW$126


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
	.dwendtag $C$DW$127


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
	.dwendtag $C$DW$128


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
	.dwendtag $C$DW$129

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$130	.dwtag  DW_TAG_variable
	.dwattr $C$DW$130, DW_AT_name("tagwasthere")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$130, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$130, DW_AT_external

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$131	.dwtag  DW_TAG_variable
	.dwattr $C$DW$131, DW_AT_name("autoid")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$131, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$131, DW_AT_external


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("tagid")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
$C$DW$133	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$132

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$134	.dwtag  DW_TAG_variable
	.dwattr $C$DW$134, DW_AT_name("rtc")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$134, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$134, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$135	.dwtag  DW_TAG_variable
	.dwattr $C$DW$135, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$4:	.usect	".ebss",100,1,0
_buff$3:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$136	.dwtag  DW_TAG_variable
	.dwattr $C$DW$136, DW_AT_name("tsensor")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$136, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$136, DW_AT_external

$C$DW$137	.dwtag  DW_TAG_variable
	.dwattr $C$DW$137, DW_AT_name("_ctypes_")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$173)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$138	.dwtag  DW_TAG_variable
	.dwattr $C$DW$138, DW_AT_name("fileOb")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$138, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$138, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("Fatfs")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$139, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$139, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$140	.dwtag  DW_TAG_variable
	.dwattr $C$DW$140, DW_AT_name("conf_data")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$140, DW_AT_declaration
	.dwattr $C$DW$140, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\112922 C:\\Users\\ebenton\\AppData\\Local\\Temp\\112924 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\1129212 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("update_units")
	.dwattr $C$DW$141, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$141, DW_AT_high_pc(0x00)
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$141, DW_AT_external
	.dwattr $C$DW$141, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$141, DW_AT_TI_begin_line(0x1784)
	.dwattr $C$DW$141, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$141, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6020,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("buff")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$370)
	.dwattr $C$DW$142, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6020 | void update_units(void) {                                              
; 6022 | int l;                                                                 
; 6023 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6025,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | lcd_clear();                                                           
; 6026 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$143, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$143, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6025| 
        ; call occurs [#_lcd_clear] ; [] |6025| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6027,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6027| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6027| 
        ADDL      XAR4,ACC              ; [CPU_] |6027| 
        MOV       AL,AR1                ; [CPU_] |6027| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6027| 
$C$DW$144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$144, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$144, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6027| 
        ; call occurs [#_lcd_puts] ; [] |6027| 
	.dwpsn	file "../Source/prod.c",line 6028,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | switch (conf_data.vfd[l].what) {                                       
; 6029 | case VFD_LOAD:                                                         
; 6030 | case VFD_PEAK:                                                         
; 6031 | case VFD_VALL:                                                         
; 6032 | case VFD_POSI:                                                         
; 6033 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6028| 
        CMPB      AL,#4                 ; [CPU_] |6028| 
        B         $C$L2,LOS             ; [CPU_] |6028| 
        ; branchcc occurs ; [] |6028| 
        CMPB      AL,#5                 ; [CPU_] |6028| 
        B         $C$L8,EQ              ; [CPU_] |6028| 
        ; branchcc occurs ; [] |6028| 
        CMPB      AL,#6                 ; [CPU_] |6028| 
        B         $C$L7,EQ              ; [CPU_] |6028| 
        ; branchcc occurs ; [] |6028| 
        B         $C$L10,UNC            ; [CPU_] |6028| 
        ; branch occurs ; [] |6028| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6034,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6034 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6034| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6034| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6034| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6034| 
        ADDB      AL,#1                 ; [CPU_] |6034| 
        MOVL      XAR4,XAR3             ; [CPU_] |6034| 
        MOV       *-SP[3],AL            ; [CPU_] |6034| 
$C$DW$145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$145, DW_AT_name("_sprintf")
	.dwattr $C$DW$145, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6034| 
        ; call occurs [#_sprintf] ; [] |6034| 
	.dwpsn	file "../Source/prod.c",line 6035,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6035 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6035| 
        ADD       AL,AR1                ; [CPU_] |6035| 
        MOVL      XAR4,XAR3             ; [CPU_] |6035| 
$C$DW$146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$146, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$146, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6035| 
        ; call occurs [#_lcd_puts] ; [] |6035| 
	.dwpsn	file "../Source/prod.c",line 6036,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6036 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6036| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6036| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6036| 
        B         $C$L3,EQ              ; [CPU_] |6036| 
        ; branchcc occurs ; [] |6036| 
	.dwpsn	file "../Source/prod.c",line 6037,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6037 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6037| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6037| 
        ADD       AL,AR1                ; [CPU_] |6037| 
$C$DW$147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$147, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$147, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6037| 
        ; call occurs [#_lcd_puts] ; [] |6037| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6040,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6040 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6041 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6040| 
        CMPB      AL,#3                 ; [CPU_] |6040| 
        B         $C$L6,EQ              ; [CPU_] |6040| 
        ; branchcc occurs ; [] |6040| 
	.dwpsn	file "../Source/prod.c",line 6042,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6042 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6043 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6044 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6042| 
        CMPB      AL,#4                 ; [CPU_] |6042| 
        B         $C$L5,EQ              ; [CPU_] |6042| 
        ; branchcc occurs ; [] |6042| 
	.dwpsn	file "../Source/prod.c",line 6045,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6045 | lcd_puts(                                                              
; 6046 |                 (char*) UNITS[0x0f                                     
; 6047 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6048 |                 18 + 20 * l);                                          
; 6050 | break;                                                                 
; 6051 | case VFD_LIMIT:                                                        
; 6052 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6053 | lcd_puts(buff, 5 + 20 * l);                                            
; 6054 | break;                                                                 
; 6055 | case VFD_TEMP:                                                         
; 6056 | #if(VFD==1)                                                            
; 6057 | buff[0] = 0xb0;                                                        
; 6058 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6045| 
        MOV       T,#10                 ; [CPU_] |6045| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6045| 
        ADDL      ACC,XAR6              ; [CPU_] |6045| 
        MOVL      XAR4,ACC              ; [CPU_] |6045| 
        MOVB      XAR0,#42              ; [CPU_] |6045| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6045| 
        MPYB      ACC,T,#152            ; [CPU_] |6045| 
        ADDL      ACC,XAR6              ; [CPU_] |6045| 
        MOVL      XAR4,ACC              ; [CPU_] |6045| 
        MOVB      XAR0,#125             ; [CPU_] |6045| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6045| 
        ANDB      AL,#0x0f              ; [CPU_] |6045| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6045| 
        MOV       ACC,AL << 1           ; [CPU_] |6045| 
        ADDL      XAR4,ACC              ; [CPU_] |6045| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6045| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6045| 
        B         $C$L9,UNC             ; [CPU_] |6045| 
        ; branch occurs ; [] |6045| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6043,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6043| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6043| 
	.dwpsn	file "../Source/prod.c",line 6044,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6044| 
        ; branch occurs ; [] |6044| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6041,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6041| 
	.dwpsn	file "../Source/prod.c",line 6042,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6042| 
        ; branch occurs ; [] |6042| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6059,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6059 | buff[0] = 0xdf;                                                        
; 6060 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6059| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6059| 
	.dwpsn	file "../Source/prod.c",line 6061,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6061 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6061| 
	.dwpsn	file "../Source/prod.c",line 6062,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6062 | buff[2] = '\0';                                                        
; 6063 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6062| 
	.dwpsn	file "../Source/prod.c",line 6064,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6064 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6064| 
        ; branch occurs ; [] |6064| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6052,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6052| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6052| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6052| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6052| 
        ADDB      AL,#1                 ; [CPU_] |6052| 
        MOVL      XAR4,XAR3             ; [CPU_] |6052| 
        MOV       *-SP[3],AL            ; [CPU_] |6052| 
$C$DW$148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$148, DW_AT_name("_sprintf")
	.dwattr $C$DW$148, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6052| 
        ; call occurs [#_sprintf] ; [] |6052| 
	.dwpsn	file "../Source/prod.c",line 6053,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6053| 
        MOVL      XAR4,XAR3             ; [CPU_] |6053| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6053| 
$C$DW$149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$149, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$149, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6053| 
        ; call occurs [#_lcd_puts] ; [] |6053| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6026,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6026| 
        SUBB      XAR6,#1               ; [CPU_U] |6026| 
        MOVZ      AR0,AR6               ; [CPU_] |6026| 
        ADDB      XAR2,#3               ; [CPU_] |6026| 
        ADDB      XAR1,#20              ; [CPU_] |6026| 
        MOV       *-SP[4],AR6           ; [CPU_] |6026| 
        CMP       AR0,#-1               ; [CPU_] |6026| 
        B         $C$L1,NEQ             ; [CPU_] |6026| 
        ; branchcc occurs ; [] |6026| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$150, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$141, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$141, DW_AT_TI_end_line(0x17b3)
	.dwattr $C$DW$141, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$141

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$151	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$151, DW_AT_name("print_vfd")
	.dwattr $C$DW$151, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$151, DW_AT_high_pc(0x00)
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$151, DW_AT_external
	.dwattr $C$DW$151, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$151, DW_AT_TI_begin_line(0x170f)
	.dwattr $C$DW$151, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$151, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5903,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("buff")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$152, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5903 | void print_vfd(void) {                                                 
; 5904 | int l;                                                                 
; 5905 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$153	.dwtag  DW_TAG_variable
	.dwattr $C$DW$153, DW_AT_name("l")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$153, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5907,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5907| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_scia_puts")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5907| 
        ; call occurs [#_scia_puts] ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5908,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5908 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5908| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5909,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5909 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5909| 
        MOVB      AL,#1                 ; [CPU_] |5909| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5909| 
        ADD       AL,AR1                ; [CPU_] |5909| 
        MOV       *-SP[3],AL            ; [CPU_] |5909| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5909| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5909| 
        ADDL      XAR4,ACC              ; [CPU_] |5909| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5909| 
        MOVL      XAR4,XAR3             ; [CPU_] |5909| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5909| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_sprintf")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5909| 
        ; call occurs [#_sprintf] ; [] |5909| 
	.dwpsn	file "../Source/prod.c",line 5910,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5910 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5910| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5910| 
        ; call occurs [#_scia_puts] ; [] |5910| 
	.dwpsn	file "../Source/prod.c",line 5912,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5912 | switch (conf_data.vfd[l].what) {                                       
; 5913 | case VFD_LOAD:                                                         
; 5914 | case VFD_PEAK:                                                         
; 5915 | case VFD_VALL:                                                         
; 5916 | case VFD_POSI:                                                         
; 5917 | case VFD_VELO:                                                         
; 5918 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5919 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5920 |         scia_puts(buff);                                               
; 5921 |         break;                                                         
; 5922 | case VFD_LIMIT:                                                        
; 5923 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5924 |         scia_puts(buff);                                               
; 5925 |         break;                                                         
; 5926 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5912| 
        CMPB      AL,#4                 ; [CPU_] |5912| 
        B         $C$L13,LOS            ; [CPU_] |5912| 
        ; branchcc occurs ; [] |5912| 
        CMPB      AL,#5                 ; [CPU_] |5912| 
        B         $C$L12,EQ             ; [CPU_] |5912| 
        ; branchcc occurs ; [] |5912| 
        CMPB      AL,#6                 ; [CPU_] |5912| 
        B         $C$L16,NEQ            ; [CPU_] |5912| 
        ; branchcc occurs ; [] |5912| 
	.dwpsn	file "../Source/prod.c",line 5927,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5927 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5927| 
	.dwpsn	file "../Source/prod.c",line 5928,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5928| 
        ; branch occurs ; [] |5928| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5923,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5923| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5923| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5923| 
        ADDB      AL,#1                 ; [CPU_] |5923| 
        MOV       *-SP[3],AL            ; [CPU_] |5923| 
	.dwpsn	file "../Source/prod.c",line 5925,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5925| 
        ; branch occurs ; [] |5925| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5918,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5918| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5918| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5918| 
        ADDB      AL,#1                 ; [CPU_] |5918| 
        MOV       *-SP[3],AL            ; [CPU_] |5918| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5918| 
        MOV       *-SP[4],AL            ; [CPU_] |5918| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5918| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_sprintf")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5918| 
        ; call occurs [#_sprintf] ; [] |5918| 
	.dwpsn	file "../Source/prod.c",line 5920,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5920| 
$C$L15:    
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_scia_puts")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5920| 
        ; call occurs [#_scia_puts] ; [] |5920| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5930,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5930 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5930| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5930| 
        ; call occurs [#_scia_puts] ; [] |5930| 
	.dwpsn	file "../Source/prod.c",line 5908,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5908| 
        ADDB      XAR2,#3               ; [CPU_] |5908| 
        MOV       AL,AR1                ; [CPU_] |5908| 
        CMPB      AL,#4                 ; [CPU_] |5908| 
        B         $C$L11,LT             ; [CPU_] |5908| 
        ; branchcc occurs ; [] |5908| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$151, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$151, DW_AT_TI_end_line(0x172c)
	.dwattr $C$DW$151, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$151

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$161	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$161, DW_AT_name("print_sensor")
	.dwattr $C$DW$161, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$161, DW_AT_high_pc(0x00)
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$161, DW_AT_external
	.dwattr $C$DW$161, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$161, DW_AT_TI_begin_line(0x16b8)
	.dwattr $C$DW$161, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$161, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5816,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$162	.dwtag  DW_TAG_variable
	.dwattr $C$DW$162, DW_AT_name("buff")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$163	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$163, DW_AT_name("ss")
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$163, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$163, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("ss")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$197)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$165	.dwtag  DW_TAG_variable
	.dwattr $C$DW$165, DW_AT_name("j")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg0]

$C$DW$166	.dwtag  DW_TAG_variable
	.dwattr $C$DW$166, DW_AT_name("j")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_breg20 -7]

$C$DW$167	.dwtag  DW_TAG_variable
	.dwattr $C$DW$167, DW_AT_name("j")
	.dwattr $C$DW$167, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$167, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$167, DW_AT_location[DW_OP_breg20 -7]

$C$DW$168	.dwtag  DW_TAG_variable
	.dwattr $C$DW$168, DW_AT_name("j")
	.dwattr $C$DW$168, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$168, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$168, DW_AT_location[DW_OP_breg20 -7]

$C$DW$169	.dwtag  DW_TAG_variable
	.dwattr $C$DW$169, DW_AT_name("j")
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$169, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$169, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5816 | void print_sensor(int ss) {                                            
; 5817 | int j;                                                                 
; 5818 | static char buff[100];                                                 
; 5820 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5816| 
	.dwpsn	file "../Source/prod.c",line 5821,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5821 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5822 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5823 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5821| 
        MPYB      P,T,#152              ; [CPU_] |5821| 
        MOVL      ACC,XAR3              ; [CPU_] |5821| 
        ADDL      ACC,P                 ; [CPU_] |5821| 
        MOVL      XAR2,ACC              ; [CPU_] |5821| 
        MOVB      XAR0,#118             ; [CPU_] |5821| 
        MOVL      *-SP[12],P            ; [CPU_] |5821| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5821| 
        B         $C$L28,EQ             ; [CPU_] |5821| 
        ; branchcc occurs ; [] |5821| 
	.dwpsn	file "../Source/prod.c",line 5824,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5824 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5824| 
        MOVL      ACC,XAR2              ; [CPU_] |5824| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5824| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5824| 
        ADDB      ACC,#82               ; [CPU_] |5824| 
        MOVL      XAR4,XAR1             ; [CPU_] |5824| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5824| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_sprintf")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5824| 
        ; call occurs [#_sprintf] ; [] |5824| 
	.dwpsn	file "../Source/prod.c",line 5825,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5825 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5825| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5825| 
        ; call occurs [#_scia_puts] ; [] |5825| 
	.dwpsn	file "../Source/prod.c",line 5826,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5826 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5826| 
        MOVL      ACC,XAR2              ; [CPU_] |5826| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5826| 
        ADDB      ACC,#98               ; [CPU_] |5826| 
        MOVL      XAR4,XAR1             ; [CPU_] |5826| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5826| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("_sprintf")
	.dwattr $C$DW$172, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5826| 
        ; call occurs [#_sprintf] ; [] |5826| 
	.dwpsn	file "../Source/prod.c",line 5827,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5827 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5827| 
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_name("_scia_puts")
	.dwattr $C$DW$173, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5827| 
        ; call occurs [#_scia_puts] ; [] |5827| 
	.dwpsn	file "../Source/prod.c",line 5828,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5828 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5829 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5828| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5828| 
        MOVL      XAR4,XAR2             ; [CPU_] |5828| 
        ADDB      XAR4,#114             ; [CPU_] |5828| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5828| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5828| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5828| 
        MOVL      XAR4,XAR1             ; [CPU_] |5828| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5828| 
$C$DW$174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$174, DW_AT_name("_sprintf")
	.dwattr $C$DW$174, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5828| 
        ; call occurs [#_sprintf] ; [] |5828| 
	.dwpsn	file "../Source/prod.c",line 5830,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5830| 
$C$DW$175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$175, DW_AT_name("_scia_puts")
	.dwattr $C$DW$175, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5830| 
        ; call occurs [#_scia_puts] ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5831,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5831 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5832 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5831| 
        MOVB      XAR0,#118             ; [CPU_] |5831| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5831| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5831| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5831| 
        ADDL      XAR4,ACC              ; [CPU_] |5831| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5831| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5831| 
        MOVL      XAR4,XAR1             ; [CPU_] |5831| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("_sprintf")
	.dwattr $C$DW$176, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5831| 
        ; call occurs [#_sprintf] ; [] |5831| 
	.dwpsn	file "../Source/prod.c",line 5833,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5833 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5833| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("_scia_puts")
	.dwattr $C$DW$177, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5833| 
        ; call occurs [#_scia_puts] ; [] |5833| 
	.dwpsn	file "../Source/prod.c",line 5834,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5834 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5835 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5834| 
        MOVB      XAR0,#124             ; [CPU_] |5834| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5834| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5834| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5834| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5834| 
        ANDB      AL,#0x0f              ; [CPU_] |5834| 
        MOV       ACC,AL << 1           ; [CPU_] |5834| 
        ADDL      XAR4,ACC              ; [CPU_] |5834| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5834| 
        MOVL      XAR4,XAR1             ; [CPU_] |5834| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5834| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_sprintf")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5834| 
        ; call occurs [#_sprintf] ; [] |5834| 
	.dwpsn	file "../Source/prod.c",line 5836,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5836 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5836| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5836| 
        ; call occurs [#_scia_puts] ; [] |5836| 
	.dwpsn	file "../Source/prod.c",line 5837,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5837 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5838 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5837| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5837| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5837| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5837| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5837| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5837| 
        MOV       ACC,AL << 1           ; [CPU_] |5837| 
        ADDL      ACC,XAR6              ; [CPU_] |5837| 
        MOVL      XAR4,ACC              ; [CPU_] |5837| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5837| 
        MOVL      XAR4,XAR1             ; [CPU_] |5837| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5837| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_sprintf")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5837| 
        ; call occurs [#_sprintf] ; [] |5837| 
	.dwpsn	file "../Source/prod.c",line 5839,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5839| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5839| 
        ; call occurs [#_scia_puts] ; [] |5839| 
	.dwpsn	file "../Source/prod.c",line 5840,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5840 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5841 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5840| 
        MOVB      XAR0,#126             ; [CPU_] |5840| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5840| 
        MOVL      XAR4,XAR1             ; [CPU_] |5840| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5840| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5840| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_sprintf")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5840| 
        ; call occurs [#_sprintf] ; [] |5840| 
	.dwpsn	file "../Source/prod.c",line 5842,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5842| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5842| 
        ; call occurs [#_scia_puts] ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5843,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5843 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5844 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5843| 
        MOVB      XAR0,#122             ; [CPU_] |5843| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5843| 
        MOVL      XAR4,XAR1             ; [CPU_] |5843| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5843| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5843| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_sprintf")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5843| 
        ; call occurs [#_sprintf] ; [] |5843| 
	.dwpsn	file "../Source/prod.c",line 5845,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5845| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5845| 
        ; call occurs [#_scia_puts] ; [] |5845| 
	.dwpsn	file "../Source/prod.c",line 5846,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5846 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5847 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5846| 
        MOVB      XAR0,#222             ; [CPU_] |5846| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5846| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5846| 
        MOVL      XAR4,XAR1             ; [CPU_] |5846| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5846| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_sprintf")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5846| 
        ; call occurs [#_sprintf] ; [] |5846| 
	.dwpsn	file "../Source/prod.c",line 5848,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5848 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5848| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5848| 
        ; call occurs [#_scia_puts] ; [] |5848| 
	.dwpsn	file "../Source/prod.c",line 5849,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5849 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5850 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5849| 
        MOVB      XAR0,#224             ; [CPU_] |5849| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5849| 
        MOVL      XAR4,XAR1             ; [CPU_] |5849| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5849| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5849| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5849| 
        ; call occurs [#_sprintf] ; [] |5849| 
	.dwpsn	file "../Source/prod.c",line 5851,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5851 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5851| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5851| 
        ; call occurs [#_scia_puts] ; [] |5851| 
	.dwpsn	file "../Source/prod.c",line 5852,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5852 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5853 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5852| 
        MOVB      XAR0,#228             ; [CPU_] |5852| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5852| 
        MOVL      XAR4,XAR1             ; [CPU_] |5852| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5852| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5852| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5852| 
        ; call occurs [#_sprintf] ; [] |5852| 
	.dwpsn	file "../Source/prod.c",line 5854,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5854 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5854| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5854| 
        ; call occurs [#_scia_puts] ; [] |5854| 
	.dwpsn	file "../Source/prod.c",line 5855,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5855 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5856 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5855| 
        MOVB      XAR0,#230             ; [CPU_] |5855| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5855| 
        MOVL      XAR4,XAR1             ; [CPU_] |5855| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5855| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5855| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5855| 
        ; call occurs [#_sprintf] ; [] |5855| 
	.dwpsn	file "../Source/prod.c",line 5857,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5857 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5857| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5857| 
        ; call occurs [#_scia_puts] ; [] |5857| 
	.dwpsn	file "../Source/prod.c",line 5859,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5859 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5860 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5861 |                         conf_data.sensor[ss].points);                  
; 5862 |         scia_puts(buff);                                               
; 5864 |         scia_puts("  Point:");                                         
; 5865 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5866 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5867 |                 scia_puts(buff);                                       
; 5869 |         scia_puts("\r\n  Mass: ");                                     
; 5870 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5871 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5872 |                 scia_puts(buff);                                       
; 5874 |         scia_puts("\r\n  Count:");                                     
; 5875 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5876 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5877 |                 scia_puts(buff);                                       
; 5879 |         scia_puts("\r\n  Slope:    ");                                 
; 5880 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5881 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5882 |                 scia_puts(buff);                                       
; 5884 |         scia_puts("\r\n  Intercept:");                                 
; 5885 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5886 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5887 |                 scia_puts(buff);                                       
; 5889 |         scia_puts("\r\n");                                             
; 5890 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5859| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5859| 
        CMPB      AL,#2                 ; [CPU_] |5859| 
        B         $C$L17,EQ             ; [CPU_] |5859| 
        ; branchcc occurs ; [] |5859| 
	.dwpsn	file "../Source/prod.c",line 5891,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5891 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5892 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5891| 
        MOVB      XAR0,#178             ; [CPU_] |5891| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5891| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5891| 
        MOVL      XAR4,XAR1             ; [CPU_] |5891| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5891| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5891| 
        ; call occurs [#_sprintf] ; [] |5891| 
	.dwpsn	file "../Source/prod.c",line 5893,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5893 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5893| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5893| 
        ; call occurs [#_scia_puts] ; [] |5893| 
	.dwpsn	file "../Source/prod.c",line 5894,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5894 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5895 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5894| 
        MOVB      XAR0,#200             ; [CPU_] |5894| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5894| 
        MOVL      XAR4,XAR1             ; [CPU_] |5894| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5894| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5894| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5894| 
        ; call occurs [#_sprintf] ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5896,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | scia_puts(buff);                                                       
; 5899 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5896| 
        B         $C$L29,UNC            ; [CPU_] |5896| 
        ; branch occurs ; [] |5896| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5860,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5860| 
        MOVB      XAR0,#128             ; [CPU_] |5860| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5860| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5860| 
        MOVL      XAR4,XAR1             ; [CPU_] |5860| 
        MOV       *-SP[3],AL            ; [CPU_] |5860| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_sprintf")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5860| 
        ; call occurs [#_sprintf] ; [] |5860| 
	.dwpsn	file "../Source/prod.c",line 5862,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5862| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5864,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5864| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5864| 
        ; call occurs [#_scia_puts] ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5865,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5865| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5865,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5865| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5865| 
        B         $C$L27,LT             ; [CPU_] |5865| 
        ; branchcc occurs ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5869,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5869| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5869| 
        ; call occurs [#_scia_puts] ; [] |5869| 
	.dwpsn	file "../Source/prod.c",line 5870,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5870| 
        MOV       *-SP[7],AL            ; [CPU_] |5870| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5870,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5870| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5870| 
        B         $C$L26,LT             ; [CPU_] |5870| 
        ; branchcc occurs ; [] |5870| 
	.dwpsn	file "../Source/prod.c",line 5874,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5874| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5874| 
        ; call occurs [#_scia_puts] ; [] |5874| 
	.dwpsn	file "../Source/prod.c",line 5875,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5875| 
        MOV       *-SP[7],AL            ; [CPU_] |5875| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5875,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5875| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5875| 
        B         $C$L25,LT             ; [CPU_] |5875| 
        ; branchcc occurs ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5879,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5879| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5879| 
        ; call occurs [#_scia_puts] ; [] |5879| 
	.dwpsn	file "../Source/prod.c",line 5880,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5880| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5880,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5880| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5880| 
        ADDB      AL,#-1                ; [CPU_] |5880| 
        CMP       AL,*-SP[7]            ; [CPU_] |5880| 
        B         $C$L24,GT             ; [CPU_] |5880| 
        ; branchcc occurs ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5884,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5884| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5884| 
        ; call occurs [#_scia_puts] ; [] |5884| 
	.dwpsn	file "../Source/prod.c",line 5885,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5885| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5885,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5885| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5885| 
        ADDB      AL,#-1                ; [CPU_] |5885| 
        CMP       AL,*-SP[7]            ; [CPU_] |5885| 
        B         $C$L23,GT             ; [CPU_] |5885| 
        ; branchcc occurs ; [] |5885| 
	.dwpsn	file "../Source/prod.c",line 5889,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5889| 
	.dwpsn	file "../Source/prod.c",line 5890,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5890| 
        ; branch occurs ; [] |5890| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5886,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5886| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5886| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5886| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5886| 
        MOV       ACC,AL << 1           ; [CPU_] |5886| 
        ADDL      ACC,XAR6              ; [CPU_] |5886| 
        ADDL      ACC,XAR3              ; [CPU_] |5886| 
        MOVL      XAR4,ACC              ; [CPU_] |5886| 
        MOVB      XAR0,#200             ; [CPU_] |5886| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5886| 
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5886| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5886| 
        ; call occurs [#_sprintf] ; [] |5886| 
	.dwpsn	file "../Source/prod.c",line 5887,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5887| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5887| 
        ; call occurs [#_scia_puts] ; [] |5887| 
	.dwpsn	file "../Source/prod.c",line 5885,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5885| 
        B         $C$L22,UNC            ; [CPU_] |5885| 
        ; branch occurs ; [] |5885| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5881,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5881| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5881| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5881| 
        MOV       ACC,AL << 1           ; [CPU_] |5881| 
        ADDL      ACC,XAR6              ; [CPU_] |5881| 
        ADDL      ACC,XAR3              ; [CPU_] |5881| 
        MOVL      XAR4,ACC              ; [CPU_] |5881| 
        MOVB      XAR0,#178             ; [CPU_] |5881| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5881| 
        MOVL      XAR4,XAR1             ; [CPU_] |5881| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5881| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5881| 
        ; call occurs [#_sprintf] ; [] |5881| 
	.dwpsn	file "../Source/prod.c",line 5882,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5882| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5882| 
        ; call occurs [#_scia_puts] ; [] |5882| 
	.dwpsn	file "../Source/prod.c",line 5880,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5880| 
        B         $C$L21,UNC            ; [CPU_] |5880| 
        ; branch occurs ; [] |5880| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5876,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5876| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5876| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5876| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5876| 
        ADDL      ACC,XAR6              ; [CPU_] |5876| 
        ADDL      ACC,XAR3              ; [CPU_] |5876| 
        MOVL      XAR4,ACC              ; [CPU_] |5876| 
        MOVB      XAR0,#154             ; [CPU_] |5876| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5876| 
        MOVL      XAR4,XAR1             ; [CPU_] |5876| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5876| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_sprintf")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5876| 
        ; call occurs [#_sprintf] ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5877,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5877| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5877| 
        ; call occurs [#_scia_puts] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5875,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5875| 
	.dwpsn	file "../Source/prod.c",line 5877,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5877| 
	.dwpsn	file "../Source/prod.c",line 5875,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5875| 
        ; branch occurs ; [] |5875| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5871,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5871| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5871| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5871| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5871| 
        ADDL      ACC,XAR6              ; [CPU_] |5871| 
        ADDL      ACC,XAR3              ; [CPU_] |5871| 
        MOVL      XAR4,ACC              ; [CPU_] |5871| 
        MOVB      XAR0,#130             ; [CPU_] |5871| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5871| 
        MOVL      XAR4,XAR1             ; [CPU_] |5871| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5871| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_sprintf")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5871| 
        ; call occurs [#_sprintf] ; [] |5871| 
	.dwpsn	file "../Source/prod.c",line 5872,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5872| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5872| 
        ; call occurs [#_scia_puts] ; [] |5872| 
	.dwpsn	file "../Source/prod.c",line 5870,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5870| 
	.dwpsn	file "../Source/prod.c",line 5872,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5872| 
	.dwpsn	file "../Source/prod.c",line 5870,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5870| 
        ; branch occurs ; [] |5870| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5866,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5866| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5866| 
        ADD       AH,AL                 ; [CPU_] |5866| 
        MOV       *-SP[7],AH            ; [CPU_] |5866| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5866| 
        MOVL      XAR4,XAR1             ; [CPU_] |5866| 
        MOV       *-SP[3],AH            ; [CPU_] |5866| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_sprintf")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5866| 
        ; call occurs [#_sprintf] ; [] |5866| 
	.dwpsn	file "../Source/prod.c",line 5867,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5867| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5867| 
        ; call occurs [#_scia_puts] ; [] |5867| 
        MOV       AL,*-SP[7]            ; [CPU_] |5867| 
	.dwpsn	file "../Source/prod.c",line 5865,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5865| 
        ; branch occurs ; [] |5865| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5822,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5822| 
$C$L29:    
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5822| 
        ; call occurs [#_scia_puts] ; [] |5822| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$161, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$161, DW_AT_TI_end_line(0x170c)
	.dwattr $C$DW$161, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$161

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$216	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$216, DW_AT_name("print_limits")
	.dwattr $C$DW$216, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$216, DW_AT_high_pc(0x00)
	.dwattr $C$DW$216, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$216, DW_AT_external
	.dwattr $C$DW$216, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$216, DW_AT_TI_begin_line(0x1753)
	.dwattr $C$DW$216, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$216, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5971,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$217	.dwtag  DW_TAG_variable
	.dwattr $C$DW$217, DW_AT_name("buff")
	.dwattr $C$DW$217, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$217, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$217, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 5971 | void print_limits(void) {                                              
; 5972 | int ii;                                                                
; 5973 | static char buff[64];                                                  
; 5974 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$218	.dwtag  DW_TAG_variable
	.dwattr $C$DW$218, DW_AT_name("ii")
	.dwattr $C$DW$218, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$218, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$218, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$219	.dwtag  DW_TAG_variable
	.dwattr $C$DW$219, DW_AT_name("up")
	.dwattr $C$DW$219, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$219, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$219, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 5976,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5976 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |5976| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5976| 
        ; call occurs [#_scia_puts] ; [] |5976| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5978,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5978 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |5978| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 5979,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |5979| 
        MOVB      AL,#1                 ; [CPU_] |5979| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5979| 
        ADD       AL,*-SP[9]            ; [CPU_] |5979| 
        MOVL      XAR4,XAR2             ; [CPU_] |5979| 
        MOV       *-SP[3],AL            ; [CPU_] |5979| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_sprintf")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5979| 
        ; call occurs [#_sprintf] ; [] |5979| 
	.dwpsn	file "../Source/prod.c",line 5980,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5980 | scia_puts(buff);                                                       
; 5982 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5980| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5980| 
        ; call occurs [#_scia_puts] ; [] |5980| 
	.dwpsn	file "../Source/prod.c",line 5984,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5984 | switch (conf_data.lim[ii].what) {                                      
; 5985 | case VFD_LOAD:                                                         
; 5986 | case VFD_PEAK:                                                         
; 5987 | case VFD_VALL:                                                         
; 5988 |         up =                                                           
; 5989 |                         UNITS[0x0f                                     
; 5990 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 5991 |         break;                                                         
; 5992 | case VFD_POSI:                                                         
; 5993 |         up = POS_U;                                                    
; 5994 |         break;                                                         
; 5995 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |5984| 
        B         $C$L40,NTC            ; [CPU_] |5984| 
        ; branchcc occurs ; [] |5984| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5984| 
        CMPB      AL,#2                 ; [CPU_] |5984| 
        B         $C$L32,LOS            ; [CPU_] |5984| 
        ; branchcc occurs ; [] |5984| 
        CMPB      AL,#3                 ; [CPU_] |5984| 
        B         $C$L31,EQ             ; [CPU_] |5984| 
        ; branchcc occurs ; [] |5984| 
        CMPB      AL,#4                 ; [CPU_] |5984| 
        B         $C$L33,NEQ            ; [CPU_] |5984| 
        ; branchcc occurs ; [] |5984| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5996,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5996 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |5996| 
	.dwpsn	file "../Source/prod.c",line 5997,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5997 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |5997| 
        ; branch occurs ; [] |5997| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5993,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |5993| 
	.dwpsn	file "../Source/prod.c",line 5994,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |5994| 
        ; branch occurs ; [] |5994| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 5988,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5988| 
        MOV       T,#10                 ; [CPU_] |5988| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |5988| 
        ADDL      ACC,XAR6              ; [CPU_] |5988| 
        MOVL      XAR4,ACC              ; [CPU_] |5988| 
        MOVB      XAR0,#42              ; [CPU_] |5988| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |5988| 
        MPYB      ACC,T,#152            ; [CPU_] |5988| 
        ADDL      ACC,XAR6              ; [CPU_] |5988| 
        MOVL      XAR4,ACC              ; [CPU_] |5988| 
        MOVB      XAR0,#125             ; [CPU_] |5988| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5988| 
        ANDB      AL,#0x0f              ; [CPU_] |5988| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5988| 
        MOV       ACC,AL << 1           ; [CPU_] |5988| 
        ADDL      XAR4,ACC              ; [CPU_] |5988| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |5988| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6000,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6000 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6001 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6000| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6000| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6000| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6000| 
        ADDL      XAR4,ACC              ; [CPU_] |6000| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6000| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6000| 
        MOVL      XAR4,XAR2             ; [CPU_] |6000| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6000| 
        ADDB      AL,#1                 ; [CPU_] |6000| 
        MOV       *-SP[5],AL            ; [CPU_] |6000| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_sprintf")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6000| 
        ; call occurs [#_sprintf] ; [] |6000| 
	.dwpsn	file "../Source/prod.c",line 6002,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6002 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6002| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6002| 
        ; call occurs [#_scia_puts] ; [] |6002| 
	.dwpsn	file "../Source/prod.c",line 6003,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6003 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6004 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6005 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6006 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6003| 
        B         $C$L34,TC             ; [CPU_] |6003| 
        ; branchcc occurs ; [] |6003| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6003| 
        B         $C$L35,UNC            ; [CPU_] |6003| 
        ; branch occurs ; [] |6003| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6003| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6003| 
        B         $C$L36,TC             ; [CPU_] |6003| 
        ; branchcc occurs ; [] |6003| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6003| 
        B         $C$L37,UNC            ; [CPU_] |6003| 
        ; branch occurs ; [] |6003| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6003| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6003| 
        B         $C$L38,TC             ; [CPU_] |6003| 
        ; branchcc occurs ; [] |6003| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6003| 
        B         $C$L39,UNC            ; [CPU_] |6003| 
        ; branch occurs ; [] |6003| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6003| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6003| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6003| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6003| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6003| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6003| 
        MOVL      XAR4,XAR2             ; [CPU_] |6003| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_sprintf")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6003| 
        ; call occurs [#_sprintf] ; [] |6003| 
	.dwpsn	file "../Source/prod.c",line 6007,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6007 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6007| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_scia_puts")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6007| 
        ; call occurs [#_scia_puts] ; [] |6007| 
	.dwpsn	file "../Source/prod.c",line 6008,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6008 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6009 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6008| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6008| 
        MOVL      XAR4,XAR2             ; [CPU_] |6008| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6008| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6008| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6008| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_sprintf")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6008| 
        ; call occurs [#_sprintf] ; [] |6008| 
	.dwpsn	file "../Source/prod.c",line 6010,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6010 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6010| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_scia_puts")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6010| 
        ; call occurs [#_scia_puts] ; [] |6010| 
	.dwpsn	file "../Source/prod.c",line 6011,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6011 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6012 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6011| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6011| 
        MOVL      XAR4,XAR2             ; [CPU_] |6011| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6011| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6011| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6011| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_sprintf")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6011| 
        ; call occurs [#_sprintf] ; [] |6011| 
	.dwpsn	file "../Source/prod.c",line 6013,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6013 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6013| 
	.dwpsn	file "../Source/prod.c",line 6014,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6014| 
        ; branch occurs ; [] |6014| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6015,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6015 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6015| 
$C$L41:    
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_scia_puts")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6015| 
        ; call occurs [#_scia_puts] ; [] |6015| 
	.dwpsn	file "../Source/prod.c",line 5978,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |5978| 
        INC       *-SP[9]               ; [CPU_] |5978| 
        MOV       AL,*-SP[9]            ; [CPU_] |5978| 
        CMPB      AL,#4                 ; [CPU_] |5978| 
        B         $C$L30,LT             ; [CPU_] |5978| 
        ; branchcc occurs ; [] |5978| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$216, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$216, DW_AT_TI_end_line(0x1782)
	.dwattr $C$DW$216, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$216

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$232	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$232, DW_AT_name("print_dac")
	.dwattr $C$DW$232, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$232, DW_AT_high_pc(0x00)
	.dwattr $C$DW$232, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$232, DW_AT_external
	.dwattr $C$DW$232, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$232, DW_AT_TI_begin_line(0x172f)
	.dwattr $C$DW$232, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$232, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5935,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$233	.dwtag  DW_TAG_variable
	.dwattr $C$DW$233, DW_AT_name("buff")
	.dwattr $C$DW$233, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$233, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$233, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5935 | void print_dac(void) {                                                 
; 5936 | int l;                                                                 
; 5937 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$234	.dwtag  DW_TAG_variable
	.dwattr $C$DW$234, DW_AT_name("l")
	.dwattr $C$DW$234, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$234, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$234, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5939,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5939 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5939| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5939| 
        ; call occurs [#_scia_puts] ; [] |5939| 
	.dwpsn	file "../Source/prod.c",line 5941,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5941 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5941| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5942,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5942| 
        MOVB      AL,#1                 ; [CPU_] |5942| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5942| 
        ADD       AL,AR1                ; [CPU_] |5942| 
        MOV       *-SP[3],AL            ; [CPU_] |5942| 
        MOVL      XAR4,XAR3             ; [CPU_] |5942| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_sprintf")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5942| 
        ; call occurs [#_sprintf] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5943,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5943 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5943| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_scia_puts")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5945,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | sprintf(buff,                                                          
; 5946 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5947 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5948 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5945| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5945| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5945| 
        MOVL      XAR4,XAR3             ; [CPU_] |5945| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5945| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5945| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5945| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5945| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5945| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_sprintf")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5945| 
        ; call occurs [#_sprintf] ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5949,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5949 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5949| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_scia_puts")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5949| 
        ; call occurs [#_scia_puts] ; [] |5949| 
	.dwpsn	file "../Source/prod.c",line 5951,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5951 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5951| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5951| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5951| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5951| 
        ADDL      XAR4,ACC              ; [CPU_] |5951| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5951| 
        MOVL      XAR4,XAR3             ; [CPU_] |5951| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5951| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_sprintf")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5951| 
        ; call occurs [#_sprintf] ; [] |5951| 
	.dwpsn	file "../Source/prod.c",line 5952,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5952 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5952| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_scia_puts")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5952| 
        ; call occurs [#_scia_puts] ; [] |5952| 
	.dwpsn	file "../Source/prod.c",line 5954,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5954 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5954| 
        CMPB      AL,#7                 ; [CPU_] |5954| 
        B         $C$L43,EQ             ; [CPU_] |5954| 
        ; branchcc occurs ; [] |5954| 
	.dwpsn	file "../Source/prod.c",line 5955,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5955 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5955| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5955| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5955| 
        ADDB      AL,#1                 ; [CPU_] |5955| 
        MOVL      XAR4,XAR3             ; [CPU_] |5955| 
        MOV       *-SP[3],AL            ; [CPU_] |5955| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_sprintf")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5955| 
        ; call occurs [#_sprintf] ; [] |5955| 
	.dwpsn	file "../Source/prod.c",line 5956,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5956 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5956| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_scia_puts")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5956| 
        ; call occurs [#_scia_puts] ; [] |5956| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5959,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5959 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5960 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5961 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5962 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 5963 |         scia_puts(buff);                                               
; 5964 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5959| 
        CMPB      AL,#3                 ; [CPU_] |5959| 
        B         $C$L44,EQ             ; [CPU_] |5959| 
        ; branchcc occurs ; [] |5959| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5959| 
        CMPB      AL,#4                 ; [CPU_] |5959| 
        B         $C$L44,EQ             ; [CPU_] |5959| 
        ; branchcc occurs ; [] |5959| 
	.dwpsn	file "../Source/prod.c",line 5965,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5965| 
        B         $C$L45,UNC            ; [CPU_] |5965| 
        ; branch occurs ; [] |5965| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5961,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5961| 
        MOVB      XAR0,#8               ; [CPU_] |5961| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5961| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5961| 
        MOVB      XAR0,#10              ; [CPU_] |5961| 
        MOVL      XAR4,XAR3             ; [CPU_] |5961| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5961| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5961| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5961| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_sprintf")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5961| 
        ; call occurs [#_sprintf] ; [] |5961| 
	.dwpsn	file "../Source/prod.c",line 5963,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5963| 
$C$L45:    
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_scia_puts")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5963| 
        ; call occurs [#_scia_puts] ; [] |5963| 
	.dwpsn	file "../Source/prod.c",line 5941,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5941| 
        ADDB      XAR2,#12              ; [CPU_] |5941| 
        MOV       AL,AR1                ; [CPU_] |5941| 
        CMPB      AL,#4                 ; [CPU_] |5941| 
        B         $C$L42,LT             ; [CPU_] |5941| 
        ; branchcc occurs ; [] |5941| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$232, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$232, DW_AT_TI_end_line(0x1750)
	.dwattr $C$DW$232, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$232

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$247	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$247, DW_AT_name("print_channel")
	.dwattr $C$DW$247, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$247, DW_AT_high_pc(0x00)
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$247, DW_AT_external
	.dwattr $C$DW$247, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$247, DW_AT_TI_begin_line(0x169d)
	.dwattr $C$DW$247, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$247, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5789,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$248	.dwtag  DW_TAG_variable
	.dwattr $C$DW$248, DW_AT_name("buff")
	.dwattr $C$DW$248, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$248, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$248, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$249	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$249, DW_AT_name("ch")
	.dwattr $C$DW$249, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$249, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$249, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$250	.dwtag  DW_TAG_variable
	.dwattr $C$DW$250, DW_AT_name("ch")
	.dwattr $C$DW$250, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$250, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$250, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5789 | void print_channel(Uint16 ch) {                                        
; 5790 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5789| 
	.dwpsn	file "../Source/prod.c",line 5792,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5792 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5792| 
        MOVZ      AR1,AR2               ; [CPU_] |5792| 
        MOVB      AH,#1                 ; [CPU_] |5792| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5792| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5792| 
        ADD       AH,AR1                ; [CPU_] |5792| 
        MOVL      XAR4,XAR3             ; [CPU_] |5792| 
        MOV       *-SP[3],AH            ; [CPU_] |5792| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_sprintf")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5792| 
        ; call occurs [#_sprintf] ; [] |5792| 
	.dwpsn	file "../Source/prod.c",line 5793,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5793 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5793| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_scia_puts")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5793| 
        ; call occurs [#_scia_puts] ; [] |5793| 
	.dwpsn	file "../Source/prod.c",line 5795,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5795 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5795| 
        MOV       T,AR1                 ; [CPU_] |5795| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5795| 
        MPYU      ACC,T,AL              ; [CPU_] |5795| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5795| 
        ADDL      XAR1,ACC              ; [CPU_] |5795| 
        MOVB      XAR0,#44              ; [CPU_] |5795| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5795| 
        MOVL      XAR4,XAR3             ; [CPU_] |5795| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5795| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5795| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_sprintf")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5795| 
        ; call occurs [#_sprintf] ; [] |5795| 
	.dwpsn	file "../Source/prod.c",line 5796,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5796 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5796| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5796| 
        ; call occurs [#_scia_puts] ; [] |5796| 
	.dwpsn	file "../Source/prod.c",line 5806,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5806 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5806| 
        MOVB      XAR0,#42              ; [CPU_] |5806| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5806| 
        MOVL      XAR4,XAR3             ; [CPU_] |5806| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5806| 
        ADDB      AL,#1                 ; [CPU_] |5806| 
        MOV       *-SP[3],AL            ; [CPU_] |5806| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_sprintf")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5806| 
        ; call occurs [#_sprintf] ; [] |5806| 
	.dwpsn	file "../Source/prod.c",line 5807,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5807 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5807| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5807| 
        ; call occurs [#_scia_puts] ; [] |5807| 
	.dwpsn	file "../Source/prod.c",line 5809,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5809 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5809| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5809| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5809| 
        B         $C$L46,EQ             ; [CPU_] |5809| 
        ; branchcc occurs ; [] |5809| 
	.dwpsn	file "../Source/prod.c",line 5810,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5810 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5810| 
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_scia_puts")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5810| 
        ; call occurs [#_scia_puts] ; [] |5810| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$247, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$247, DW_AT_TI_end_line(0x16b4)
	.dwattr $C$DW$247, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$247

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$259	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$259, DW_AT_name("matchTag")
	.dwattr $C$DW$259, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$259, DW_AT_high_pc(0x00)
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$259, DW_AT_external
	.dwattr $C$DW$259, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$259, DW_AT_TI_begin_line(0x1679)
	.dwattr $C$DW$259, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$259, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5753,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$260	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$260, DW_AT_name("ch")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5753 | void matchTag(Uint16 ch) {                                             
; 5754 | Uint16 sns;                                                            
; 5755 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$261	.dwtag  DW_TAG_variable
	.dwattr $C$DW$261, DW_AT_name("ch")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$262	.dwtag  DW_TAG_variable
	.dwattr $C$DW$262, DW_AT_name("sns")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$263	.dwtag  DW_TAG_variable
	.dwattr $C$DW$263, DW_AT_name("tag")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$263, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5757,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5757 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5757| 
	.dwpsn	file "../Source/prod.c",line 5753,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5753| 
	.dwpsn	file "../Source/prod.c",line 5757,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5757| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5757| 
        MOVL      XAR1,ACC              ; [CPU_] |5757| 
	.dwpsn	file "../Source/prod.c",line 5759,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5759 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5759| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5759| 
	.dwpsn	file "../Source/prod.c",line 5757,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5757| 
	.dwpsn	file "../Source/prod.c",line 5759,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5760 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5759| 
        B         $C$L50,EQ             ; [CPU_] |5759| 
        ; branchcc occurs ; [] |5759| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5759| 
        B         $C$L50,HIS            ; [CPU_] |5759| 
        ; branchcc occurs ; [] |5759| 
	.dwpsn	file "../Source/prod.c",line 5763,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5763 | tag = tagid(ch);                                                       
; 5764 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5765 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_tagid")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5763| 
        ; call occurs [#_tagid] ; [] |5763| 
        MOVB      XAR6,#0               ; [CPU_] |5763| 
        MOVL      XAR3,ACC              ; [CPU_] |5763| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5763| 
        MOV       *-SP[2],#0            ; [CPU_] |5763| 
        MOV       *-SP[1],#0            ; [CPU_] |5763| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$265, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5763| 
        ; call occurs [#ULL$$CMP] ; [] |5763| 
        CMPB      AL,#0                 ; [CPU_] |5763| 
        B         $C$L50,EQ             ; [CPU_] |5763| 
        ; branchcc occurs ; [] |5763| 
        MOVB      ACC,#0                ; [CPU_] |5763| 
        SUBB      ACC,#1                ; [CPU_] |5763| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5763| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5763| 
        MOVL      ACC,XAR3              ; [CPU_] |5763| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$266, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5763| 
        ; call occurs [#ULL$$CMP] ; [] |5763| 
        CMPB      AL,#0                 ; [CPU_] |5763| 
        B         $C$L50,EQ             ; [CPU_] |5763| 
        ; branchcc occurs ; [] |5763| 
	.dwpsn	file "../Source/prod.c",line 5766,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5766 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5766| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5766| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5766| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5768,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5768 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5770 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5768| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5771,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5771 | continue;                       // not calibrated                      
; 5774 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5771| 
        B         $C$L48,EQ             ; [CPU_] |5771| 
        ; branchcc occurs ; [] |5771| 
	.dwpsn	file "../Source/prod.c",line 5775,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5775 | continue;                       // doesn't match, skip                 
; 5778 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5775| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5775| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5775| 
        MOVL      ACC,XAR3              ; [CPU_] |5775| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5775| 
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$267, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5775| 
        ; call occurs [#ULL$$CMP] ; [] |5775| 
        CMPB      AL,#0                 ; [CPU_] |5775| 
        B         $C$L49,EQ             ; [CPU_] |5775| 
        ; branchcc occurs ; [] |5775| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5768,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5768| 
        MOVL      XAR0,ACC              ; [CPU_] |5768| 
        ADDB      XAR4,#1               ; [CPU_] |5768| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5768| 
        ; branchcc occurs ; [] |5768| 
        B         $C$L50,UNC            ; [CPU_] |5768| 
        ; branch occurs ; [] |5768| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5779,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5779 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5779| 
	.dwpsn	file "../Source/prod.c",line 5780,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5780 | conf_data.ch[ch].ci = sns;                                             
; 5782 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5780| 
        MOV       T,*-SP[5]             ; [CPU_] |5780| 
        MPYU      ACC,T,AL              ; [CPU_] |5780| 
        ADDL      ACC,XAR2              ; [CPU_] |5780| 
        MOVL      XAR5,ACC              ; [CPU_] |5780| 
        MOVB      XAR0,#42              ; [CPU_] |5780| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5780| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$259, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$259, DW_AT_TI_end_line(0x1699)
	.dwattr $C$DW$259, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$259

	.sect	".text"
	.clink
	.global	_main

$C$DW$269	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$269, DW_AT_name("main")
	.dwattr $C$DW$269, DW_AT_low_pc(_main)
	.dwattr $C$DW$269, DW_AT_high_pc(0x00)
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$269, DW_AT_external
	.dwattr $C$DW$269, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$269, DW_AT_TI_begin_line(0x7d)
	.dwattr $C$DW$269, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$269, DW_AT_TI_max_frame_size(-156)
	.dwpsn	file "../Source/prod.c",line 125,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("buff")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$365)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("cmdbuff")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$365)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 125 | void main(void) {                                                      
; 126 | int i, j, k;                            // general purpose indics      
; 128 | double version;                 // for firmware version print          
; 130 | static char buff[1024];         // output buffer                       
; 132 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 133 | Uint16 cmdlen;                  // the length of the command           
; 135 | adccnt_t* cntp;                 // point to ad7738 count data          
; 136 | adcwt_t* wtp;                           // point to ad7738 load data   
; 138 | Uint16 ch;                              // channel number              
; 139 | Uint16 ss;                              // sensor number               
; 140 | Uint16 pt;                              // point number                
; 142 | Uint16 tagch = 0;                       // channel number for autoid   
; 144 | char unsaved = 0;                       // change to setup not saved   
; 146 | Uint16 slen;                            // string lenght               
; 148 | double scale;                           // input float value           
; 150 | Uint16 flash_ret;                       // return value of flash access
; 151 | double tempvalue;                       // temperature value in F      
; 153 | double volt[3];                 // input value in mv/v                 
; 154 | long long dsum[2];                      // read count for input value  
; 155 | Uint16 dacc[3];                 // dac out count                       
; 156 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 158 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 160 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 162 | Uint16 line;                            // vfd diplay line             
; 164 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 166 | int ds_en = 0;                  // enabled for data streamming         
; 167 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 168 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 169 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 171 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 172 | Uint16 ds_sn = 0;                       // data packet serial number   
; 173 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 175 | Uint32 temp32;                                                         
; 176 | float ftemp;                                                           
; 177 | long templg;                                                           
; 178 | Uint16 temp16;                                                         
; 179 | int tempint;                                                           
; 180 | double tempft;                                                         
; 182 | Uint16 *intp;                                                          
; 184 | const char *ccp;                                                       
; 186 | #ifdef SDHCCARD                                                        
; 187 | FATFS *fs;                              // pointer to fatfs            
; 189 | FRESULT res;// Fatfs reseult code                                      
; 190 | FIL *fp;// pointer to file object                                      
; 192 | Uint32 fsize;                                                          
; 194 | char sd_write;// should write to SD card                               
; 195 | char sd_close;// file need to be closed                                
; 196 | Uint32 sd_cnt;                                                         
; 198 | FILINFO Finfo;                                                         
; 199 | DIR dir;// Directory object                                            
; 200 | long p1;                                                               
; 201 | UINT s1, s2;                                                           
; 203 | rtc.year = 2010;                                                       
; 204 | rtc.month = 8;                                                         
; 205 | rtc.mday = 27;                                                         
; 206 | rtc.hour = 12;                                                         
; 207 | rtc.min = 0;                                                           
; 208 | rtc.sec = 0;                                                           
; 209 | #endif                                                                 
; 211 | // KS - 2014-02-11                                                     
; 212 | //DownloadFlag = 0;     // removed for release                         
; 214 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 154           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 137 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR1   assigned to $O$U142
;* AR1   assigned to $O$U301
;* AR1   assigned to $O$U330
;* AR1   assigned to $O$U542
;* AR1   assigned to $O$U670
;* AR1   assigned to $O$U769
;* AR1   assigned to $O$U806
;* AR5   assigned to $O$U822
;* AL    assigned to $O$U982
;* AR1   assigned to $O$U960
;* AR1   assigned to $O$U1052
;* AR1   assigned to $O$U950
;* AR6   assigned to $O$U1253
;* AR1   assigned to $O$U1279
;* AR7   assigned to $O$U1516
;* XT    assigned to $O$U1543
;* PL    assigned to $O$U1544
;* AR5   assigned to $O$U1568
;* PL    assigned to $O$U1573
;* PL    assigned to $O$U1580
;* AR5   assigned to $O$U1582
;* AR5   assigned to $O$U1583
;* AR5   assigned to $O$U1597
;* XT    assigned to $O$U1639
;* PL    assigned to $O$U1640
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$272	.dwtag  DW_TAG_variable
	.dwattr $C$DW$272, DW_AT_name("ccp")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_breg20 -108]

$C$DW$273	.dwtag  DW_TAG_variable
	.dwattr $C$DW$273, DW_AT_name("tempft")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_breg20 -12]

$C$DW$274	.dwtag  DW_TAG_variable
	.dwattr $C$DW$274, DW_AT_name("templg")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_breg20 -14]

$C$DW$275	.dwtag  DW_TAG_variable
	.dwattr $C$DW$275, DW_AT_name("ds_ct")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_breg20 -51]

$C$DW$276	.dwtag  DW_TAG_variable
	.dwattr $C$DW$276, DW_AT_name("ds_sn")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$276, DW_AT_location[DW_OP_breg20 -53]

$C$DW$277	.dwtag  DW_TAG_variable
	.dwattr $C$DW$277, DW_AT_name("ds_bm")
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$277, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$277, DW_AT_location[DW_OP_breg20 -54]

$C$DW$278	.dwtag  DW_TAG_variable
	.dwattr $C$DW$278, DW_AT_name("ds_dec")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$278, DW_AT_location[DW_OP_breg20 -55]

$C$DW$279	.dwtag  DW_TAG_variable
	.dwattr $C$DW$279, DW_AT_name("ds_dn")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_breg20 -56]

$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("ds_stop")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_breg20 -57]

$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("ds_en")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -58]

$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("bincmdresult")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -51]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("line")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -59]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("daccbm")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -60]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("tempvalue")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -110]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("scale")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -16]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("unsaved")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -52]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("tagch")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -147]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ss")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -61]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("ch")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -62]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("version")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U227
;* AR1   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR7   assigned to $O$U227
;* AR7   assigned to $O$U227
;* AR7   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR1   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR1   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR1   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR5   assigned to $O$U227
;* AR4   assigned to $O$U227
;* AR1   assigned to $O$U227
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U399
;* AR1   assigned to $O$U399
;* AR1   assigned to $O$U399
;* AR1   assigned to $O$U376
;* AR1   assigned to $O$U376
;* AR1   assigned to $O$U376
;* AR1   assigned to $O$U376
;* AR1   assigned to $O$U376
;* AR5   assigned to $O$U376
;* AR1   assigned to $O$U267
;* AR1   assigned to $O$U563
;* AR1   assigned to $O$U563
;* AR1   assigned to $O$U608
;* AR1   assigned to $O$U608
;* AR4   assigned to $O$K797
;* AR4   assigned to $O$K797
;* AR1   assigned to $O$K797
;* AR4   assigned to $O$K797
;* AR1   assigned to $O$K797
;* AR1   assigned to $O$K797
;* AR1   assigned to $O$K797
;* AR1   assigned to $O$K797
;* AR5   assigned to $O$K797
;* AR5   assigned to $O$K797
;* AR1   assigned to $O$K797
;* AR1   assigned to $O$U852
;* AR1   assigned to $O$U852
;* AR1   assigned to $O$U875
;* AR3   assigned to $O$U875
;* AR1   assigned to $O$U875
;* AR6   assigned to $O$U831
;* AL    assigned to $O$U831
;* AR1   assigned to $O$U901
;* AR1   assigned to $O$U901
;* AR1   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR5   assigned to $O$U981
;* AR5   assigned to $O$U981
;* AR5   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR4   assigned to $O$U981
;* AR4   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR7   assigned to $O$U981
;* AR1   assigned to $O$K284
;* AR7   assigned to $O$U1118
;* AR7   assigned to $O$U1118
;* AR7   assigned to $O$U1118
;* AR7   assigned to $O$U1118
;* AR4   assigned to $O$U1120
;* AR4   assigned to $O$U1120
;* AR4   assigned to $O$U1120
;* AR4   assigned to $O$U1120
;* AR3   assigned to $O$U1154
;* AR1   assigned to $O$U1154
;* AR1   assigned to $O$U1154
;* AR1   assigned to $O$U1160
;* AR4   assigned to $O$U1172
;* AR4   assigned to $O$U1169
;* AR7   assigned to $O$U1169
;* PL    assigned to $O$U1169
;* AR7   assigned to $O$U1169
;* AR4   assigned to $O$U1169
;* AR5   assigned to $O$U1229
;* AR4   assigned to $O$U1229
;* AR5   assigned to $O$U1308
;* AR5   assigned to $O$U1308
;* AR4   assigned to $O$U1304
;* AR4   assigned to $O$U1304
;* AR5   assigned to $O$U1363
;* AR5   assigned to $O$U1363
;* PL    assigned to $O$U1369
;* AR1   assigned to $O$U1369
;* AR6   assigned to $O$U1370
;* AR6   assigned to $O$U1370
;* AR5   assigned to $O$U1406
;* AR5   assigned to $O$U1406
;* PL    assigned to $O$U1409
;* AR1   assigned to $O$U1409
;* AR6   assigned to $O$U1410
;* AR7   assigned to $O$U1410
;* AR5   assigned to $O$U1448
;* AR5   assigned to $O$U1448
;* AR5   assigned to $O$U1484
;* AR5   assigned to $O$U1484
;* AR4   assigned to $O$U1519
;* AR1   assigned to $O$U1519
;* AR5   assigned to $O$U1519
;* AR5   assigned to $O$U1519
;* AR4   assigned to $O$U1608
;* AR4   assigned to $O$U1608
;* AR4   assigned to $O$U1608
;* AR4   assigned to $O$U1617
;* AR3   assigned to _intp
$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("intp")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("intp")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("intp")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("intp")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("intp")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("intp")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("intp")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("intp")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("intp")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("intp")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg12]

;* AR1   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg16]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("tempint")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("tempint")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("temp16")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg10]

$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("temp16")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_breg20 -63]

$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("temp32")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_breg20 -68]

;* AL    assigned to _temp32
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("temp32")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("cmethod")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg6]

$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("cmethod")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_breg20 -51]

;* AL    assigned to _flash_ret
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("flash_ret")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("flash_ret")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("flash_ret")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("flash_ret")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("slen")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("slen")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("slen")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("slen")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("slen")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("slen")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("pt")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("pt")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg0]

$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("pt")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_breg20 -63]

$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("pt")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_breg20 -63]

;* AL    assigned to _pt
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("pt")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("pt")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("pt")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg12]

$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("pt")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_breg20 -51]

;* AR6   assigned to _pt
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("pt")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("wtp")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("wtp")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("wtp")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("wtp")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg12]

$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("cmdlen")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_breg20 -63]

;* AL    assigned to _cmdlen
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("cmdlen")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg0]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("cmdlen")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -51]

$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("cmdlen")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_breg20 -51]

;* AR6   assigned to _cmdlen
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("cmdlen")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("cmdlen")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("cmdlen")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg0]

$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("k")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_breg20 -63]

$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("k")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_breg20 -64]

$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("k")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_breg20 -64]

$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("k")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_breg20 -51]

;* AR6   assigned to _k
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("k")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg16]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("k")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -63]

$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("k")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_breg20 -51]

;* PL    assigned to _k
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("k")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg2]

$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("k")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_breg20 -51]

;* PL    assigned to _k
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("k")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("k")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("j")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_reg10]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("j")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -51]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("j")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -51]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("j")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -51]

;* AR1   assigned to _j
$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("j")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_reg6]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("j")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -51]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("j")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -51]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("j")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -51]

$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("j")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_breg20 -51]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("j")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -64]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -64]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -51]

$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_breg20 -63]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -65]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -52]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -52]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -52]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -52]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -52]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -52]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -51]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -65]

;* AR1   assigned to _i
$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("i")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("i")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("i")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_reg0]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("i")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -51]

;* AR7   assigned to _i
$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("i")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("i")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("i")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_reg18]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("i")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -51]

;* AL    assigned to _i
$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("i")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("i")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_reg0]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -51]

$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_breg20 -51]

$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_breg20 -52]

;* AL    assigned to _i
$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg16]

$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_breg20 -51]

;* AR6   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg16]

$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("volt")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$363)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_breg20 -24]

$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("dsum")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$344)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_breg20 -32]

$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("dacc")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_breg20 -35]

$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("sampcnt")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$325)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_breg20 -38]

$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("spi_buf")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_spi_buf")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$195)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_breg20 -50]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#148               ; [CPU_] 
	.dwcfi	cfa_offset, -156
	.dwpsn	file "../Source/prod.c",line 215,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 215 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$464, DW_AT_name("_sys_init")
	.dwattr $C$DW$464, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |215| 
        ; call occurs [#_sys_init] ; [] |215| 
	.dwpsn	file "../Source/prod.c",line 217,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 217 | delay_us(30000);                        // delay for 30 ms             
; 219 | // Clear all interrupts and initialize PIE vector table:               
; 220 | // Disable CPU interrupts                                              
; 221 | DINT;                                                                  
; 222 | // Initialize PIE control registers to their default state.            
; 223 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 224 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |217| 
$C$DW$465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$465, DW_AT_name("_delay_us")
	.dwattr $C$DW$465, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |217| 
        ; call occurs [#_delay_us] ; [] |217| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 225,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 225 | InitPieCtrl();                                                         
; 226 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$466, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$466, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |225| 
        ; call occurs [#_InitPieCtrl] ; [] |225| 
	.dwpsn	file "../Source/prod.c",line 227,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 227 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |227| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IFR = 0x0000;                                                          
; 229 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 230 | // Service Routines (ISR).                                             
; 231 | // This will populate the entire table, even if the interrupt          
; 232 | // is not used in this example.  This is useful for debug purposes.    
; 233 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 234 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 235,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 235 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$467, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$467, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |235| 
        ; call occurs [#_InitPieVectTable] ; [] |235| 
	.dwpsn	file "../Source/prod.c",line 237,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 237 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$468, DW_AT_name("_gpio_init")
	.dwattr $C$DW$468, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |237| 
        ; call occurs [#_gpio_init] ; [] |237| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$469, DW_AT_name("_extio_init")
	.dwattr $C$DW$469, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |238| 
        ; call occurs [#_extio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$470, DW_AT_name("_InitECan")
	.dwattr $C$DW$470, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |239| 
        ; call occurs [#_InitECan] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | configCAN();                                                           
; 242 | // Set SD select output as appropriate (Usually high)                  
; 243 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 256 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$471, DW_AT_name("_configCAN")
	.dwattr $C$DW$471, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |240| 
        ; call occurs [#_configCAN] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 257,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 257 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 258 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 260 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |257| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |257| 
        MOVL      ACC,XAR5              ; [CPU_] |257| 
        SUBL      XAR4,ACC              ; [CPU_] |257| 
        MOVL      ACC,XAR4              ; [CPU_] |257| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |257| 
$C$DW$472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$472, DW_AT_name("_memcpy")
	.dwattr $C$DW$472, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |257| 
        ; call occurs [#_memcpy] ; [] |257| 
	.dwpsn	file "../Source/prod.c",line 261,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 261 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 262 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |261| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |261| 
        MOVL      ACC,XAR5              ; [CPU_] |261| 
        SUBL      XAR4,ACC              ; [CPU_] |261| 
        MOVL      ACC,XAR4              ; [CPU_] |261| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |261| 
$C$DW$473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$473, DW_AT_name("_memcpy")
	.dwattr $C$DW$473, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |261| 
        ; call occurs [#_memcpy] ; [] |261| 
	.dwpsn	file "../Source/prod.c",line 279,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 279 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |279| 
        MOV       AH,#479               ; [CPU_] |279| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |279| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 289,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 289 | Flash_CallbackPtr = NULL;                                              
; 291 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |289| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |289| 
	.dwpsn	file "../Source/prod.c",line 292,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 292 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_flash_init")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |292| 
        ; call occurs [#_flash_init] ; [] |292| 
	.dwpsn	file "../Source/prod.c",line 294,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 294 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_led_init")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |294| 
        ; call occurs [#_led_init] ; [] |294| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | lcd_init();                             // lcd/vfd display             
; 297 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_lcd_init")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |295| 
        ; call occurs [#_lcd_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 299,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 299 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |299| 
        MOVB      AH,#0                 ; [CPU_] |299| 
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_ssr_set")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |299| 
        ; call occurs [#_ssr_set] ; [] |299| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_ssr_set")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_ssr_set")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(3, 0);                  // indicate gui not connected          
; 304 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_ssr_set")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 317,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 317 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_conf_read")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |317| 
        ; call occurs [#_conf_read] ; [] |317| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |318| 
        MOV       AH,#21930             ; [CPU_] |318| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |318| 
        B         $C$L51,EQ             ; [CPU_] |318| 
        ; branchcc occurs ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_conf_default")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |319| 
        ; call occurs [#_conf_default] ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_conf_write")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |320| 
        ; call occurs [#_conf_write] ; [] |320| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 323,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 323 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |323| 
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |323| 
        ; call occurs [#_shunt_switch] ; [] |323| 
	.dwpsn	file "../Source/prod.c",line 325,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 325 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |325| 
        ; call occurs [#_ad7738_init] ; [] |325| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_setcal();                                                       
; 328 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |326| 
        ; call occurs [#_ad7738_setcal] ; [] |326| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 329,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 329 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |329| 
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | tagwasthere[i] = 0;                                                    
; 332 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 328,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |328| 
        ; branchcc occurs ; [] |328| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 334,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 334 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |334| 
	.dwpsn	file "../Source/prod.c",line 332,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |332| 
	.dwpsn	file "../Source/prod.c",line 334,column 2,is_stmt,isa 0
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_delay_us")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |334| 
        ; call occurs [#_delay_us] ; [] |334| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 336 | lcd_clear();                                                           
; 337 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |336| 
        ; call occurs [#_lcd_clear] ; [] |336| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 338 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |338| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |337| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |338| 
        MOVL      XAR0,#44              ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |337| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |338| 
        MOVL      *-SP[4],ACC           ; [CPU_] |338| 
        MOVL      XAR4,XAR1             ; [CPU_] |338| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |338| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_sprintf")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |338| 
        ; call occurs [#_sprintf] ; [] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |339| 
        ; call occurs [#_lcd_dputs] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |340| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |340| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |340| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |340| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |340| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_sprintf")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |340| 
        ; call occurs [#_sprintf] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |341| 
        ; call occurs [#_lcd_dputs] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |342| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |342| 
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 344,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 344 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |344| 
	.dwpsn	file "../Source/prod.c",line 345,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |345| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 347,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 347 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |347| 
        TBIT      AL,#4                 ; [CPU_] |347| 
        B         $C$L54,TC             ; [CPU_] |347| 
        ; branchcc occurs ; [] |347| 
	.dwpsn	file "../Source/prod.c",line 348,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |348| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 351,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 351 | if (1 & i) {                                                           
; 352 |         led_set( LED1, LED_RED);                                       
; 353 |         led_set( LED2, LED_RED);                                       
; 354 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |351| 
        B         $C$L55,TC             ; [CPU_] |351| 
        ; branchcc occurs ; [] |351| 
	.dwpsn	file "../Source/prod.c",line 355,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 355 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |355| 
        MOVB      AH,#2                 ; [CPU_] |355| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_led_set")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |355| 
        ; call occurs [#_led_set] ; [] |355| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |356| 
        B         $C$L56,UNC            ; [CPU_] |356| 
        ; branch occurs ; [] |356| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 352,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |352| 
        MOVB      AH,#1                 ; [CPU_] |352| 
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_led_set")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |352| 
        ; call occurs [#_led_set] ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |353| 
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_led_set")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 358,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 358 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |358| 
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_delay_us")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |358| 
        ; call occurs [#_delay_us] ; [] |358| 
	.dwpsn	file "../Source/prod.c",line 345,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |345| 
        MOV       AL,AR1                ; [CPU_] |345| 
        CMPB      AL,#100               ; [CPU_] |345| 
        B         $C$L53,LT             ; [CPU_] |345| 
        ; branchcc occurs ; [] |345| 
	.dwpsn	file "../Source/prod.c",line 361,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 361 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |361| 
        MOVB      AH,#0                 ; [CPU_] |361| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_led_set")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |361| 
        ; call occurs [#_led_set] ; [] |361| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_led_set")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
        MOV       AL,AR1                ; [CPU_] |362| 
	.dwpsn	file "../Source/prod.c",line 364,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 364 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |364| 
        CMPB      AL,#20                ; [CPU_] |364| 
        B         $C$L58,GEQ            ; [CPU_] |364| 
        ; branchcc occurs ; [] |364| 
	.dwpsn	file "../Source/prod.c",line 365,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |365| 
        MOVL      XAR4,XAR5             ; [CPU_] |365| 
	.dwpsn	file "../Source/prod.c",line 367,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 367 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |367| 
	.dwpsn	file "../Source/prod.c",line 365,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |365| 
        INC       *+XAR4[0]             ; [CPU_] |365| 
	.dwpsn	file "../Source/prod.c",line 367,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |367| 
        CMPB      AL,#4                 ; [CPU_] |367| 
        B         $C$L57,LT             ; [CPU_] |367| 
        ; branchcc occurs ; [] |367| 
	.dwpsn	file "../Source/prod.c",line 368,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |368| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 371,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 371 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |371| 
        MOVB      AL,#40                ; [CPU_] |371| 
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |371| 
        ; call occurs [#_lcd_dputs] ; [] |371| 
	.dwpsn	file "../Source/prod.c",line 373,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 373 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_conf_write")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |373| 
        ; call occurs [#_conf_write] ; [] |373| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 376,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 376 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |376| 
        MOVL      XAR0,#74              ; [CPU_] |376| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |376| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |376| 
        MOVB      XAR0,#35              ; [CPU_] |376| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |376| 
        ADDL      XAR4,ACC              ; [CPU_] |376| 
        MOVL      XAR0,#88              ; [CPU_] |376| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 144,column 15,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |144| 
	.dwpsn	file "../Source/prod.c",line 156,column 13,is_stmt,isa 0
        MOV       *-SP[60],#0           ; [CPU_] |156| 
	.dwpsn	file "../Source/prod.c",line 166,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |166| 
	.dwpsn	file "../Source/prod.c",line 167,column 14,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 169,column 15,is_stmt,isa 0
        MOV       *-SP[56],#60          ; [CPU_] |169| 
	.dwpsn	file "../Source/prod.c",line 170,column 16,is_stmt,isa 0
        MOV       *-SP[55],#1           ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 15,is_stmt,isa 0
        MOV       *-SP[54],#15          ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 376,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |376| 
	.dwpsn	file "../Source/prod.c",line 142,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |142| 
        MOV       *+FP[AR0],#0          ; [CPU_] |142| 
	.dwpsn	file "../Source/prod.c",line 378,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 378 | switch (conf_data.rxdir) {                                             
; 379 | case SDIR_RS232:                        // RS232, 0                    
; 380 |         led_set( LED1, LED_RED);                                       
; 381 |         led_set( LED2, LED_RED);                                       
; 382 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 383 |         scia_init(temp32);                                             
; 384 |         break;                                                         
; 385 | case SDIR_RS485:                        // RS485, 1                    
; 386 |         led_set( LED1, LED_GREEN);                                     
; 387 |         led_set( LED2, LED_RED);                                       
; 388 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 389 |         scia_init(temp32);                                             
; 390 |         break;                                                         
; 391 | case SDIR_ENET:                 // Ethernet, 2                         
; 392 |         led_set( LED1, LED_RED);                                       
; 393 |         led_set( LED2, LED_GREEN);                                     
; 394 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 395 |         scia_init(921600L);                                            
; 396 |         //scia_init( 460800L );                                        
; 397 |         break;                                                         
; 398 | case SDIR_USB:                  // USB, 3                              
; 399 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 400 |         led_set( LED1, LED_GREEN);                                     
; 401 |         led_set( LED2, LED_GREEN);                                     
; 402 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 403 |         // the USB chip can't handle 921600bps without dropping bytes  
; 404 |         // it seems 460800bps is fine so far.                          
; 405 |         // the client (PC Host) side can use any baudrate.             
; 406 |         scia_init(460800L);                                            
; 407 |         break;                                                         
; 408 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |378| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |378| 
        B         $C$L64,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
        CMPB      AL,#1                 ; [CPU_] |378| 
        B         $C$L63,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
        CMPB      AL,#2                 ; [CPU_] |378| 
        B         $C$L60,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
        CMPB      AL,#3                 ; [CPU_] |378| 
        B         $C$L59,EQ             ; [CPU_] |378| 
        ; branchcc occurs ; [] |378| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 409 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |410| 
        MOVB      AH,#1                 ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_led_set")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |410| 
        ; call occurs [#_led_set] ; [] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |411| 
        MOVB      AH,#2                 ; [CPU_] |411| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_led_set")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 413 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |412| 
        MOVL      XAR0,#72              ; [CPU_] |412| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |412| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |412| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |412| 
        MOVB      XAR0,#34              ; [CPU_] |412| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |412| 
	.dwpsn	file "../Source/prod.c",line 414,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 414 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |414| 
        ; branch occurs ; [] |414| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |400| 
        MOVB      AH,#2                 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 399,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |399| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_led_set")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |400| 
        ; call occurs [#_led_set] ; [] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_led_set")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |402| 
        MOVL      XAR0,#72              ; [CPU_] |402| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |402| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |402| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |402| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |402| 
        ADDL      XAR4,ACC              ; [CPU_] |402| 
        MOVL      XAR0,#44              ; [CPU_] |402| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |402| 
        MOVL      *-SP[4],ACC           ; [CPU_] |402| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |402| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_sprintf")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |402| 
        ; call occurs [#_sprintf] ; [] |402| 
	.dwpsn	file "../Source/prod.c",line 406,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |406| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |407| 
        ; branch occurs ; [] |407| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 392,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |392| 
        MOVB      AH,#1                 ; [CPU_] |392| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_led_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |392| 
        ; call occurs [#_led_set] ; [] |392| 
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |393| 
        MOVB      AH,#2                 ; [CPU_] |393| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |394| 
        MOVL      XAR0,#72              ; [CPU_] |394| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |394| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |394| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |394| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |394| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |394| 
        MOVL      XAR0,#44              ; [CPU_] |394| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |394| 
        MOVL      *-SP[4],ACC           ; [CPU_] |394| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |394| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_sprintf")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |394| 
        ; call occurs [#_sprintf] ; [] |394| 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |395| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |395| 
	.dwpsn	file "../Source/prod.c",line 397,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |397| 
        ; branch occurs ; [] |397| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 386,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |386| 
	.dwpsn	file "../Source/prod.c",line 390,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |390| 
        ; branch occurs ; [] |390| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 380,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |380| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |380| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_led_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |380| 
        ; call occurs [#_led_set] ; [] |380| 
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |381| 
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |382| 
        MOVL      XAR0,#72              ; [CPU_] |382| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |382| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |382| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |382| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |382| 
        ADDL      XAR4,ACC              ; [CPU_] |382| 
        MOVL      XAR0,#88              ; [CPU_] |382| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |382| 
        MOVL      *-SP[4],ACC           ; [CPU_] |382| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |382| 
        MOVL      XAR0,#44              ; [CPU_] |382| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |382| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |382| 
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_sprintf")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |382| 
        ; call occurs [#_sprintf] ; [] |382| 
        MOVL      ACC,XAR1              ; [CPU_] |382| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_scia_init")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |383| 
        ; call occurs [#_scia_init] ; [] |383| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 416 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |416| 
        ; call occurs [#_lcd_clear] ; [] |416| 
        MOVL      XAR0,#44              ; [CPU_] |416| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |416| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 419 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |417| 
        ; call occurs [#_lcd_dputs] ; [] |417| 
	.dwpsn	file "../Source/prod.c",line 420,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | uart_set_dir(conf_data.rxdir);                                         
; 422 | // initalize hardware and SFCLIB buffers                               
; 423 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 425 | // Enable global Interrupts and higher priority real-time debug events:
; 426 | EINT;                                                                  
; 427 | // Enable Global interrupt INTM                                        
; 428 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |420| 
        MOVL      XAR0,#40              ; [CPU_] |420| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |420| 
        MOVB      XAR0,#34              ; [CPU_] |420| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |420| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |420| 
        ; call occurs [#_uart_set_dir] ; [] |420| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 430,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 430 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 432 |         for (i = 0; i < 50; i++)                // 1s                  
; 434 |                 delay_us(20000);                // delay for 20ms      
; 436 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |430| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |430| 
        CMPB      AL,#3                 ; [CPU_] |430| 
        B         $C$L76,NEQ            ; [CPU_] |430| 
        ; branchcc occurs ; [] |430| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 438,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 438 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |438| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 440,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 440 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 442 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |440| 
        ; branch occurs ; [] |440| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 443 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |443| 
        ; call occurs [#_scia_rx_getcmds] ; [] |443| 
        CMPB      AL,#0                 ; [CPU_] |443| 
        B         $C$L70,EQ             ; [CPU_] |443| 
        ; branchcc occurs ; [] |443| 
	.dwpsn	file "../Source/prod.c",line 442,column 4,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |442| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |444| 
        MOVL      XAR4,XAR1             ; [CPU_] |444| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmd] ; [] |444| 
        MOV       T,*-SP[51]            ; [CPU_] |444| 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | lcd_puts(cmdbuff, 20 * j);                                             
; 446 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |445| 
        ; call occurs [#_lcd_puts] ; [] |445| 
	.dwpsn	file "../Source/prod.c",line 447,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 447 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[51]              ; [CPU_] |447| 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 447,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |447| 
        B         $C$L69,LT             ; [CPU_] |447| 
        ; branchcc occurs ; [] |447| 
	.dwpsn	file "../Source/prod.c",line 448,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[51],#0           ; [CPU_] |448| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |443| 
        ; call occurs [#_scia_rx_getcmds] ; [] |443| 
        CMPB      AL,#0                 ; [CPU_] |443| 
        B         $C$L68,NEQ            ; [CPU_] |443| 
        ; branchcc occurs ; [] |443| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 440,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |440| 
        TBIT      AL,#5                 ; [CPU_] |440| 
        B         $C$L67,NTC            ; [CPU_] |440| 
        ; branchcc occurs ; [] |440| 
	.dwpsn	file "../Source/prod.c",line 452,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 452 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |452| 
        SPM       #0                    ; [CPU_] 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_scia_puts")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |452| 
        ; call occurs [#_scia_puts] ; [] |452| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |453| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_delay_us")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |453| 
        ; call occurs [#_delay_us] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | scia_puts("E\r");                                                      
; 455 | j = 0;                                                                 
; 456 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |454| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_scia_puts")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |454| 
        ; call occurs [#_scia_puts] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 457,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 457 | for (i = 0; i < WTT; i++)               // 10s                         
; 459 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |457| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |455| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 460,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 460 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |460| 
        ; call occurs [#_scia_rx_getcmds] ; [] |460| 
        CMPB      AL,#0                 ; [CPU_] |460| 
        B         $C$L72,EQ             ; [CPU_] |460| 
        ; branchcc occurs ; [] |460| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 461,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |461| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmd] ; [] |461| 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[51]              ; [CPU_] |462| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 464,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 464 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |464| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_delay_us")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |464| 
        ; call occurs [#_delay_us] ; [] |464| 
        MOV       AL,*-SP[51]           ; [CPU_] |464| 
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |465| 
        B         $C$L73,LT             ; [CPU_] |465| 
        ; branchcc occurs ; [] |465| 
	.dwpsn	file "../Source/prod.c",line 467,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 467 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[51],#0           ; [CPU_] |467| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | i = WTT - 10;                                                          
; 472 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |468| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 457,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |457| 
        CMP       AR1,#500              ; [CPU_] |457| 
        B         $C$L71,LT             ; [CPU_] |457| 
        ; branchcc occurs ; [] |457| 
	.dwpsn	file "../Source/prod.c",line 473,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 473 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |473| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_scia_puts")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |473| 
        ; call occurs [#_scia_puts] ; [] |473| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |474| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_delay_us")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |474| 
        ; call occurs [#_delay_us] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |475| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_puts")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |475| 
        ; call occurs [#_scia_puts] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |476| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_delay_us")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |476| 
        ; call occurs [#_delay_us] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |477| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_scia_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |477| 
        ; call occurs [#_scia_puts] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |478| 
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_delay_us")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |478| 
        ; call occurs [#_delay_us] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |479| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_puts")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |479| 
        ; call occurs [#_scia_puts] ; [] |479| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 481,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 481 | j = 0;                                                                 
; 482 | for (i = 0; i < 100; i++)               // 2s                          
; 484 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[51],#0           ; [CPU_] |481| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 485,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 485 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |485| 
        ; call occurs [#_scia_rx_getcmds] ; [] |485| 
        CMPB      AL,#0                 ; [CPU_] |485| 
        B         $C$L75,EQ             ; [CPU_] |485| 
        ; branchcc occurs ; [] |485| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |486| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmd] ; [] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
        MOV       T,*-SP[51]            ; [CPU_] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |487| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |487| 
        ; call occurs [#_lcd_puts] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[51]              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |488| 
        B         $C$L75,LT             ; [CPU_] |488| 
        ; branchcc occurs ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[51],#1           ; [CPU_] |489| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 492,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 492 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |492| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_delay_us")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |492| 
        ; call occurs [#_delay_us] ; [] |492| 
	.dwpsn	file "../Source/prod.c",line 482,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |482| 
        ; branchcc occurs ; [] |482| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 495,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 495 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |495| 
        B         $C$L78,UNC            ; [CPU_] |495| 
        ; branch occurs ; [] |495| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 434,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |434| 
        SPM       #0                    ; [CPU_] 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_delay_us")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |434| 
        ; call occurs [#_delay_us] ; [] |434| 
	.dwpsn	file "../Source/prod.c",line 432,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |432| 
        ; branchcc occurs ; [] |432| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 498,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 498 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 500 | #ifdef SDHCCARD                                                        
; 502 | // check SD card                                                       
; 503 | lcd_puts( "SD Card Testing...", 0 );                                   
; 504 | sd_write = 0;                                                          
; 505 | sd_close = 0;                                                          
; 506 | sd_cnt = 0;                                                            
; 507 | fp = NULL;                                                             
; 509 | f_mount( 0, &Fatfs );                                                  
; 511 | res = f_getfree( "0:", &fsize, &fs );                                  
; 513 | sprintf( buff, "%02X", res );                                          
; 514 | lcd_puts( buff, 18 );                                                  
; 516 | if( !res )                                                             
; 518 |         switch( fs->fs_type & 3 )                                      
; 520 |                 case 1:                                                
; 521 |                 lcd_puts( "FAT12", 20 );                               
; 522 |                 break;                                                 
; 523 |                 case 2:                                                
; 524 |                 lcd_puts( "FAT16", 20 );                               
; 525 |                 break;                                                 
; 526 |                 case 3:                                                
; 527 |                 lcd_puts( "FAT32", 20 );                               
; 528 |                 break;                                                 
; 531 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 532 |         lcd_puts( buff, 40 );                                          
; 534 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 535 |         lcd_puts( buff, 60 );                                          
; 537 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 539 |                 switch( res )                                          
; 541 |                         case CT_MMC:                                   
; 542 |                         lcd_puts( "on MMC", 26 );                      
; 543 |                         break;                                         
; 544 |                         case CT_SD1:                                   
; 545 |                         lcd_puts( "on SDV1", 26 );                     
; 546 |                         break;                                         
; 547 |                         case CT_SD2:                                   
; 548 |                         lcd_puts( "on SDV2", 26 );                     
; 549 |                         break;                                         
; 550 |                         case CT_SD2|CT_BLOCK:                          
; 551 |                         lcd_puts( "on SDHC", 26 );                     
; 552 |                         break;                                         
; 553 |                         default:                                       
; 554 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 555 |                         break;                                         
; 560 | else                                                                   
; 562 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 578 | for( i = 0; i < 100; i++ )                      // 2s                  
; 580 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 582 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |498| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |498| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |498| 
	.dwpsn	file "../Source/prod.c",line 584,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 584 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |584| 
        MOVB      AH,#2                 ; [CPU_] |584| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_led_set")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |584| 
        ; call occurs [#_led_set] ; [] |584| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |585| 
        MOVB      AH,#0                 ; [CPU_] |585| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_led_set")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 587,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 587 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_update_units")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |587| 
        ; call occurs [#_update_units] ; [] |587| 
	.dwpsn	file "../Source/prod.c",line 589,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 589 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |589| 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |589| 
        ; call occurs [#_ad7738_resetpeak] ; [] |589| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetvall( BM_ALL);              // reset valley                
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetvall] ; [] |590| 
        MOVL      XAR0,#40              ; [CPU_] |590| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |590| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | line = 0;                                                              
; 593 | //=====================================================================
;     | =====//                                                                
; 594 | // main loop                                                           
; 595 | //=====================================================================
;     | =====//                                                                
; 596 | //      spi_init();                                                    
; 597 | for (;;) {                                                             
; 599 |         int spi_buf[12], g;                                            
; 600 |         for(g = 0; g < 12; g++)                                        
; 602 |                 spi_buf[g] = spi_recv();                               
; 604 |         spi_buf[0] = spi_buf[0];                                       
; 606 |         // check SW2 for reset command                                 
; 607 |         if (!(0x0010 & INBTTN)) {                                      
; 609 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 610 |                 ad7738_resetpeak(0x0f);                                
; 611 |                 ad7738_resetvall(0x0f);                                
; 613 | #if(0)                                                                 
; 614 |                 // DEBUG: tagid                                        
; 615 |                 lcd_clear();                                           
; 616 |                 for( i = 0; i < 4; i++ )                               
; 618 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 619 |                         lcd_puts( buff, i * 20 );                      
; 621 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 623 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 625 |                 // DEBUG: tagid                                        
; 626 |                 update_units();                                        
; 627 | #endif                                                                 
; 631 | #ifdef SDHCCARD                                                        
; 632 |         // write to SD card file if flag set                           
; 633 |         if( sd_write && fp )                                           
; 635 |                 if( prod_getavail() > 31 || sd_close )                 
; 637 |                         led_set( LED2, LED_RED );                      
; 639 |                         k = 32;                                        
; 641 |                         while( prod_getavail() && k-- )                
; 643 |                                 wtp = prod_getnext();                  
; 645 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 647 |                                         intp = (Uint16*)&wtp->adw[i];  
; 649 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 651 |                                         for( j = 0; j < 2; j++ )       
; 653 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 654 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 655 |                                                 intp++;                
; 658 |                                 sd_cnt++;                              
; 661 |                         if( sd_close )                                 
; 663 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 664 |                                 if( res )                              
; 666 |                                         sprintf( buff, "%02X ", res ); 
; 667 |                                         scia_puts( buff );             
; 670 |                                 res = f_close( fp );                   
; 671 |                                 fp = NULL;                             
; 673 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 674 |                                 scia_puts( buff );                     
; 676 |                                 sd_write = 0;                          
; 677 |                                 sd_close = 0;                          
; 680 |                         led_set( LED2, LED_OFF );                      
; 683 | #endif                                                                 
; 685 |         //=============================================================
;     | =====================//                                                
; 686 |         // update the vfd
;     |                          //                                            
; 687 |         //=============================================================
;     | =====================//                                                
; 688 |         // if there is new "monitor data" ready                        
; 689 |         if (ad7738_monrdy()) {                                         
; 690 |                 // clear the ready flag                                
; 691 |                 ad7738_monclr();                                       
; 693 |                 // display the appropriate data                        
; 694 |                 switch (conf_data.vfd[line].what) {                    
; 695 |                 case VFD_LOAD:                                         
; 696 |                         wtp = ad7738_getmon();                         
; 697 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 698 |                         goto VFD_LINE_BUFF;                            
; 700 |                 case VFD_PEAK:                                         
; 701 |                         wtp = ad7738_getpeak();                        
; 702 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 703 |                         goto VFD_LINE_BUFF;                            
; 705 |                 case VFD_VALL:                                         
; 706 |                         wtp = ad7738_getvall();                        
; 707 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 708 |                         goto VFD_LINE_BUFF;                            
; 710 |                 case VFD_POSI:                                         
; 711 |                         wtp = ad7738_getmon();                         
; 712 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 713 |                         goto VFD_LINE_BUFF;                            
; 715 |                 case VFD_VELO:                                         
; 716 |                         wtp = ad7738_getmon();                         
; 717 |                         //wtp = ad7738_getpeak();                      
; 718 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 720 |                         // display appropriate decimal points          
; 721 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 722 |                         case 0:                                        
; 723 |                                 sprintf(buff, "%10.0f", tempft);       
; 724 |                                 break;                                 
; 725 |                         case 1:                                        
; 726 |                                 sprintf(buff, "%10.1f", tempft);       
; 727 |                                 break;                                 
; 728 |                         case 2:                                        
; 729 |                                 sprintf(buff, "%10.2f", tempft);       
; 730 |                                 break;                                 
; 731 |                         case 3:                                        
; 732 |                                 sprintf(buff, "%10.3f", tempft);       
; 733 |                                 break;                                 
; 734 |                         case 4:                                        
; 735 |                                 sprintf(buff, "%10.4f", tempft);       
; 736 |                                 break;                                 
; 737 |                         case 5:                                        
; 738 |                                 sprintf(buff, "%10.5f", tempft);       
; 739 |                                 break;                                 
; 741 |                         break;                                         
; 743 |                 case VFD_LIMIT:                                        
; 744 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 745 |                         sprintf(buff, "  %s",                          
; 746 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 747 |                         break;                                         
; 748 |                 case VFD_TEMP:                                         
; 749 |                         sprintf(buff, "%10.1f", tempvalue);            
; 750 |                         break;                                         
; 753 |                 // print to LCD                                        
; 754 |                 lcd_puts(buff, 7 + 20 * line);                         
; 756 |                 line++;                                                
; 757 |                 if (line >= VFD_MAX) {                                 
; 758 |                         line = 0;                                      
; 762 |         //=============================================================
;     | =====================//                                                
; 763 |         // temperature sensor reading
;     |                  //                                                    
; 764 |         //=============================================================
;     | =====================//                                                
; 766 |         // if its time to start a temp conversion...                   
; 767 |         if (ad7738_tempstart()) {                                      
; 768 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 771 |         // if its time to start a temp reading...                      
; 772 |         else if (ad7738_tempread()) {                                  
; 773 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 774 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 777 |         //=============================================================
;     | =====================//                                                
; 778 |         // Auto ID detection
;     |                  //                                                    
; 779 |         //=============================================================
;     | =====================//                                                
; 780 |         // check for changes in the load cells connected by "TAG ID"   
; 781 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 782 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 784 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 786 |                                 // new loadcell just plugged in        
; 787 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 788 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 790 |                                         DINT;                          
; 791 |                                         maf_rst();                     
; 792 |                                         ad7738_setcal();               
; 793 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 794 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 795 |                                         EINT;                          
; 797 |                                         lcd_clear();                   
; 798 |                                         update_units();                
; 799 |                                         autoidchanged = 1;             
; 802 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 803 |                 } else {                                               
; 805 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 807 |                         if (autoid[tagch]) {                           
; 808 |                                 autoid[tagch] = 0;                     
; 809 |                                 lcd_clear();                           
; 810 |                                 update_units();                        
; 811 |                                 autoidchanged = 1;                     
; 815 |                 tagch++;                                               
; 816 |                 if (tagch >= CHS_MAX) {                                
; 817 |                         tagch = 0;                                     
; 821 |         //=============================================================
;     | =====================//                                                
; 822 |         // Data streamming
;     |                          //                                            
; 823 |         //=============================================================
;     | =====================//                                                
; 824 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 825 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 826 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 827 |                 //      taking into account decimation, etc.           
; 828 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 830 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 832 |                         ds_ct = 0;                                     
; 833 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 834 |                         j = 0;                                         
; 835 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 836 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 837 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 838 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 839 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 840 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 841 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 843 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 844 |                                 wtp = prod_getnext();                  
; 845 |                                 if (--k) {                             
; 846 |                                         continue;
;     |          // decimation                                                 
; 848 |                                 k = ds_dec;                            
; 849 |                                 ds_ct++;                               
; 851 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 852 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 853 |                                         if (ds_bm & ch) {              
; 854 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 855 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 856 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 857 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 858 |                                                         intp++;        
; 861 |                                         ch <<= 1;
;     |          // next channel                                               
; 864 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 865 |                                         if (ds_bm & ch) {              
; 866 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 867 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 868 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 869 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 870 |                                                         intp++;        
; 873 |                                         ch <<= 1;
;     |          // next channel                                               
; 876 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 877 |                                         if (ds_bm & ch) {              
; 878 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 879 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 880 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 881 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 882 |                                                         intp++;        
; 885 |                                         ch <<= 1;
;     |          // next channel                                               
; 889 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 891 |                         if (ds_stop) {                                 
; 892 |                                 ds_en = 0;                             
; 895 |                         scia_send_bin(buff, j);         // send data   
; 897 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 898 |                 } else if (ad7738_getlimitchgd()) {                    
; 899 |                         j = 0;                                         
; 900 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 901 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 902 |                         for (i = 0; i < LIM_MAX; i++) {                
; 903 |                                 buff[j++] = ad7738_getlimitst(i);      
; 905 |                         scia_send_bin(buff, j);         // send data   
; 906 |                 } else if (autoidchanged) {                            
; 907 |                         autoidchanged = 0;                             
; 909 |                         j = 0;                                         
; 910 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 911 |                         buff[j++] = GetAutoId;                  // 1,  
; 912 |                         buff[j++] = conf_data.tagiden;                 
; 913 |                         for (i = 0; i < CHS_MAX; i++) {                
; 914 |                                 buff[j++] = autoid[i];                 
; 916 |                         scia_send_bin(buff, j);         // send data   
; 922 |         //=============================================================
;     | =====================//                                                
; 923 |         // serial command processing
;     |                  //                                                    
; 924 |         //=============================================================
;     | =====================//                                                
; 926 |         //=============================================================
;     | =====================//                                                
; 927 |         // Check for available command in the command buffer
;     |                  //                                                    
; 928 |         //=============================================================
;     | =====================//                                                
; 929 |         if (0 == scia_rx_getcmds()) {                                  
; 930 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 933 |         //=============================================================
;     | =====================//                                                
; 934 |         // Read one command from command buffer
;     |                  //                                                    
; 935 |         //=============================================================
;     | =====================//                                                
; 936 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 938 |         //=============================================================
;     | =====================//                                                
; 939 |         // Empty command
;     |                          //                                            
; 940 |         //=============================================================
;     | =====================//                                                
; 941 |         if (0 == cmdlen) {                                             
; 942 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 943 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 944 |                 continue;                                              
; 947 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 949 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 950 |                 // ASCII command mode processing
;     |                                  //                                    
; 951 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 953 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 956 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 957 |                 // Current configuration print out
;     |                          //                                            
; 958 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 960 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1024 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1026 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1028 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1031 |                         case 'A':                               // all 
; 1033 |                                 version = VERSION;                     
; 1034 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1035 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1036 |                                 scia_puts(buff);                       
; 1037 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1038 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1039 |                                 scia_puts(buff);                       
; 1040 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1041 |                                 scia_puts(buff);                       
; 1042 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1043 |                                                 conf_data.uname);      
; 1044 |                                 scia_puts(buff);                       
; 1046 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1047 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1048 |                                 scia_puts(buff);                       
; 1049 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1050 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1051 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1052 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1053 |                                         scia_puts(buff);               
; 1055 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1056 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1057 |                                 scia_puts(buff);                       
; 1059 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1060 |                                                 conf_data.filter);     
; 1061 |                                 scia_puts(buff);                       
; 1063 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1064 |                                         scia_puts("\r\n");             
; 1065 |                                         print_channel(ch);
;     |          // channel info                                               
; 1066 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1069 |                                 scia_puts("\r\n");                     
; 1070 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1071 |                                                 conf_data.velfilter);  
; 1072 |                                 scia_puts(buff);                       
; 1073 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1074 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1075 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1076 |                                         scia_puts(buff);               
; 1078 |                                 print_vfd();                           
; 1079 |                                 print_dac();                           
; 1080 |                                 print_limits();                        
; 1081 |                                 break;                                 
; 1083 |                         case 'S':
;     |  // sensor list                                                        
; 1085 |                                 scia_puts("\r\n");                     
; 1087 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1088 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1089 |                                         scia_puts(buff);               
; 1090 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1092 |                                 break;                                 
; 1094 |                         case 'D':
;     |  // Display settings                                                   
; 1096 |                                 print_vfd();                           
; 1097 |                                 break;                                 
; 1099 |                         case 'O':
;     |  // DAC settings                                                       
; 1101 |                                 print_dac();                           
; 1102 |                                 break;                                 
; 1104 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1106 |                                 print_limits();                        
; 1107 |                                 break;                                 
; 1109 |                         default:                                       
; 1110 |                                 goto INVALIDCMD;                       
; 1113 |                         break;                                         
; 1115 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1116 |                         // Unit config commands
;     |                                  //                                    
; 1117 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1118 |                 case 'U':                                       // Unit
; 1120 |                         if (cmdlen < 2) {                              
; 1121 |                                 goto INVALIDCMD;                       
; 1124 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1127 |                         case 'S':
;     |  // unit serial number                                                 
; 1129 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1130 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1131 |                                 conf_data.usn = atol(cmdbuff);         
; 1133 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1134 |                                 scia_puts(buff);                       
; 1135 |                                 unsaved = 1;                           
; 1136 |                                 break;                                 
; 1138 |                         case 'N':
;     |  // unit name                                                          
; 1140 |                                 j = sizeof(conf_data.uname) - 1;       
; 1141 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1142 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1143 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1145 |                                         cmdlen = j;                    
; 1146 |                                         cmdbuff[j] = '\0';             
; 1148 |                                 // also copy the null terminater       
; 1149 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1150 |                                                 cmdlen + 1);           
; 1151 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1153 |                                 scia_puts(cmdbuff);                    
; 1154 |                                 scia_puts("\r\n");                     
; 1155 |                                 unsaved = 1;                           
; 1156 |                                 break;                                 
; 1158 |                         case 'C':
;     |  // current sensor                                                     
; 1160 |                                 // channel number                      
; 1161 |                                 j = CHS_MAX;                           
; 1162 |                                 do {                                   
; 1163 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1164 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1165 |                                         ch = atoi(cmdbuff);            
; 1166 |                                         scia_puts(cmdbuff);            
; 1167 |                                         if (ch > 0 && ch <= j) {       
; 1168 |                                                 break;
;     |          // valid input channel number                                 
; 1170 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1171 |                                 } while (j);                           
; 1172 |                                 scia_puts("\r\n");                     
; 1173 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1175 |                                 // sensor number                       
; 1176 |                                 j = SENSPCH;                           
; 1177 |                                 do {                                   
; 1178 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1179 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1180 |                                         ss = atoi(cmdbuff);            
; 1181 |                                         scia_puts(cmdbuff);            
; 1182 |                                         if (ss > 0 && ss <= j) {       
; 1183 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1185 |                                                 break;                 
; 1187 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1188 |                                 } while (j);                           
; 1189 |                                 scia_puts("\r\n");                     
; 1190 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1192 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1193 |                                                 ch + 1, ss + 1);       
; 1194 |                                 scia_puts(buff);                       
; 1195 |                                 print_sensor(ss);                      
; 1196 |                                 unsaved = 1;                           
; 1198 |                                 DINT;                                  
; 1199 |                                 conf_data.ch[ch].ci = ss;              
; 1200 |                                 ad7738_setcal();                       
; 1202 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1203 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1204 |                                 EINT;                                  
; 1206 |                                 update_units();                        
; 1207 |                                 break;                                 
; 1209 |                         case 'I':
;     |  // interface                                                          
; 1211 |                                 for (j = 0; j < 4; j++) {              
; 1212 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1213 |                                         scia_puts(buff);               
; 1214 |                                         if (j < 3) {                   
; 1215 |                                                 scia_puts(", ");       
; 1218 |                                 scia_puts("\r\n");                     
; 1219 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1220 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1221 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1222 |                                 scia_puts(cmdbuff);                    
; 1223 |                                 scia_puts("\r\n");                     
; 1224 |                                 if (cmdlen == 0) {                     
; 1225 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1226 |                                         break;                         
; 1228 |                                 pt = atoi(cmdbuff);                    
; 1229 |                                 if (pt > 3) {                          
; 1230 |                                         scia_puts(                     
; 1231 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1232 |                                         break;                         
; 1234 |                                 conf_data.rxdir = pt;                  
; 1235 |                                 sprintf(buff,                          
; 1236 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1237 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1238 |                                 scia_puts(buff);                       
; 1239 |                                 scia_puts(                             
; 1240 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1241 |                                 unsaved = 1;                           
; 1242 |                                 break;                                 
; 1244 |                         case 'B':
;     |  // baudrate                                                           
; 1246 |                                 if (conf_data.rxdir == SDIR_USB        
; 1247 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1248 |                                         scia_puts(                     
; 1249 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1250 |                                         break;                         
; 1253 |                                 for (j = 0; j < 8; j++) {              
; 1254 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1255 |                                         scia_puts(buff);               
; 1256 |                                         if (j < 7) {                   
; 1257 |                                                 scia_puts(", ");       
; 1260 |                                 scia_puts("\r\n");                     
; 1261 |                                 cmdlen = sprintf(buff,                 
; 1262 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1263 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1264 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1265 |                                 scia_puts(cmdbuff);                    
; 1266 |                                 scia_puts("\r\n");                     
; 1267 |                                 if (cmdlen == 0) {                     
; 1268 |                                         scia_puts(                     
; 1269 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1270 |                                         break;                         
; 1272 |                                 pt = atoi(cmdbuff);                    
; 1273 |                                 if (pt > 7) {                          
; 1274 |                                         scia_puts(                     
; 1275 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1276 |                                         break;                         
; 1278 |                                 conf_data.baud = pt;                   
; 1279 |                                 sprintf(buff,                          
; 1280 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1281 |                                                 BAUD[conf_data.baud]); 
; 1282 |                                 scia_puts(buff);                       
; 1283 |                                 scia_puts(                             
; 1284 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1285 |                                 unsaved = 1;                           
; 1286 |                                 break;                                 
; 1288 |                         case 'F':
;     |  // averaging filter size                                              
; 1290 |                                 j = MAF_MAX;                           
; 1291 |                                 do {                                   
; 1292 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1293 |                                                         j);            
; 1294 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1295 |                                         i = atoi(cmdbuff);             
; 1296 |                                         scia_puts(cmdbuff);            
; 1297 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1298 |                                                 break;
;     |          // valid number input                                         
; 1300 |                                         scia_puts(                     
; 1301 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1302 |                                 } while (j);                           
; 1303 |                                 scia_puts("\r\n");                     
; 1305 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1306 |                                                 i);                    
; 1307 |                                 scia_puts(buff);                       
; 1308 |                                 unsaved = 1;                           
; 1310 |                                 // update new value                    
; 1311 |                                 DINT;                                  
; 1312 |                                 conf_data.filter = i;                  
; 1313 |                                 maf_rst();                             
; 1314 |                                 EINT;                                  
; 1315 |                                 break;                                 
; 1317 |                         case 'W':
;     |  // diff window ratio                                                  
; 1319 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1320 |                                                 conf_data.diffwin);    
; 1321 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1322 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1323 |                                 scia_puts(cmdbuff);                    
; 1324 |                                 scia_puts("\r\n");                     
; 1326 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1327 |                                                 conf_data.diffwin);    
; 1328 |                                 scia_puts(buff);                       
; 1329 |                                 unsaved = 1;                           
; 1331 |                                 DINT;                                  
; 1332 |                                 ad7738_setcal();                       
; 1333 |                                 maf_rst();                             
; 1334 |                                 EINT;                                  
; 1335 |                                 break;                                 
; 1337 |                         default:                                       
; 1338 |                                 goto INVALIDCMD;                       
; 1341 |                         break;                                         
; 1343 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1344 |                         // Board calibration
;     |                                  //                                    
; 1345 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1346 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1348 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1349 |                                 goto INVALIDCMD;                       
; 1352 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1353 |                                 goto INVALIDCMD;                       
; 1354 |                                 // invalid calibration method          
; 1357 |                         // channel index                               
; 1358 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1359 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1360 |                                 goto INVALIDCMD;                       
; 1361 |                                 // invalid channel number              
; 1363 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1365 |                         volt[0] = 0;                                   
; 1366 |                         volt[1] = 0;                                   
; 1367 |                         for (j = 3; j < cmdlen; j++) {                 
; 1368 |                                 if (cmdbuff[j] == 'X') {               
; 1369 |                                         j++;                           
; 1370 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1373 |                                 if (cmdbuff[j] == 'Y') {               
; 1374 |                                         j++;                           
; 1375 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1379 |                         if (volt[0] == volt[1]) {                      
; 1380 |                                 goto INVALIDCMD;                       
; 1381 |                                 // invalid parameters                  
; 1384 |                         lcd_clear();                                   
; 1385 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1386 |                         lcd_puts(buff, 20);                            
; 1387 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1388 |                         lcd_puts(buff, 40);                            
; 1389 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1390 |                         lcd_puts(buff, 60);                            
; 1392 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1395 |                         case 'C':
;     |  // board ADC calibration                                              
; 1397 |                                 lcd_puts("Board Calibration...", 0);   
; 1399 |                                 sprintf(buff,                          
; 1400 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1401 |                                                 ch + 1);               
; 1402 |                                 scia_puts(buff);                       
; 1414 |                                 for (j = 0; j < 2; j++) {              
; 1415 |                                         sprintf(buff,                  
; 1416 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1417 |                                                         volt[j]);      
; 1418 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1419 |                                         scia_puts("Reading ... ");     
; 1421 |                                         dsum[j] = 0;                   
; 1422 |                                         sampcnt = CAL_SAMPLES;         
; 1423 |                                         while (sampcnt--) {            
; 1424 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1425 |                                                         delay_us(1);
;     |                  // wait                                               
; 1427 |                                                 cntp = ad7738_getraw();
; 1428 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1431 |                                         scia_puts("done\r\n");         
; 1434 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1435 |                                                 / (dsum[1] - dsum[0]); 
; 1437 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1438 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1439 |                                 scia_puts(buff);                       
; 1440 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1441 |                                 break;                                 
; 1443 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1445 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1446 |                                                 || volt[1] < -10) {    
; 1447 |                                         lcd_clear();                   
; 1448 |                                         update_units();                
; 1449 |                                         goto INVALIDCMD;               
; 1450 |                                         // invalid parameters          
; 1453 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1455 |                                 sprintf(buff,                          
; 1456 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1457 |                                                 ch + 1);               
; 1458 |                                 scia_puts(buff);                       
; 1459 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1460 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1462 |                                 for (j = 0; j < 2; j++) {              
; 1463 |                                         if (volt[j] < 0) {             
; 1464 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1465 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1466 |                                         } else {                       
; 1467 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1468 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1470 |                                         if (dsum[0] <= 0) {            
; 1471 |                                                 dacc[j] = 0;           
; 1472 |                                         } else if (dsum[0] >= 0xffff) {
; 1473 |                                                 dacc[j] = 0xffff;      
; 1474 |                                         } else {                       
; 1475 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1478 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1479 |                                         scia_puts(buff);               
; 1480 |                                         cmdbuff[0] = '\0';             
; 1482 |                                         do {                           
; 1483 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1484 |                                                 latch_dac();           
; 1486 |                                                 do {                   
; 1487 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1488 | 
;     |  sizeof(cmdbuff));                                                     
; 1489 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1490 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1492 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1493 |                                                         break;
;     |                  // done                                               
; 1496 |                                                 i = atoi(cmdbuff + 1); 
; 1497 |                                                 if (i == 0) {          
; 1498 |                                                         i = 1;         
; 1501 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1503 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1504 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1505 |                                                         } else {       
; 1506 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1508 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1510 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1511 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1512 |                                                         } else {       
; 1513 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1516 |                                         } while (i);                   
; 1518 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1519 |                                         scia_puts(buff);               
; 1522 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1524 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1525 |                                 cmdbuff[0] = '\0';                     
; 1527 |                                 do {                                   
; 1528 |                                         mcbsp_xmit(dacc[2], ch);       
; 1529 |                                         latch_dac();                   
; 1531 |                                         do {                           
; 1532 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1533 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1534 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1536 |                                         if ('S' == cmdbuff[0]) {       
; 1537 |                                                 break;
;     |          // done                                                       
; 1540 |                                         i = atoi(cmdbuff + 1);         
; 1541 |                                         if (i == 0) {                  
; 1542 |                                                 i = 1;                 
; 1545 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1547 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1548 |                                                         dacc[2] += i;  
; 1549 |                                                 } else {               
; 1550 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1552 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1554 |                                                 if (dacc[2] >= i) {    
; 1555 |                                                         dacc[2] -= i;  
; 1556 |                                                 } else {               
; 1557 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1560 |                                 } while (i);                           
; 1562 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1563 |                                 scia_puts(buff);                       
; 1565 |                                 // do the calculations                 
; 1566 |                                 if (volt[0] < 0) {                     
; 1567 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1568 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1569 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1570 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1571 |                                 } else {                               
; 1572 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1573 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1574 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1575 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1577 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1579 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1581 |                                 sprintf(buff,                          
; 1582 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1583 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1584 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1585 |                                 scia_puts(buff);                       
; 1587 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1588 |                                 break;                                 
; 1590 |                         default:                                       
; 1591 |                                 goto INVALIDCMD;                       
; 1594 |                         unsaved = 1;                                   
; 1595 |                         lcd_clear();                                   
; 1596 |                         update_units();                                
; 1598 |                         DINT;                                          
; 1599 |                         ad7738_setcal();                               
; 1600 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1601 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1602 |                         EINT;                                          
; 1603 |                         break;                                         
; 1605 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1606 |                         // Channel sensor calibration
;     |                                  //                                    
; 1607 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1608 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1610 |                         if (cmdlen < 2) {                              
; 1611 |                                 goto INVALIDCMD;                       
; 1614 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1615 |                                         && 'S' != cmdbuff[1]) {        
; 1616 |                                 goto INVALIDCMD;                       
; 1617 |                                 // invalid calibration method          
; 1619 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1621 |                         lcd_clear();                                   
; 1622 |                         lcd_puts("Sensor Calibration..", 0);           
; 1624 |                         // === read informations ====                  
; 1625 |                         // channel number                              
; 1626 |                         j = CHS_MAX;                                   
; 1627 |                         do {                                           
; 1628 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1629 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1630 |                                 ch = atoi(cmdbuff);                    
; 1631 |                                 scia_puts(cmdbuff);                    
; 1632 |                                 if (ch > 0 && ch <= j) {               
; 1633 |                                         break;
;     |  // valid input channel number                                         
; 1635 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1636 |                         } while (j);                                   
; 1637 |                         scia_puts("\r\n");                             
; 1638 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1640 |                         // sensor number                               
; 1641 |                         j = SENSPCH;                                   
; 1642 |                         do {                                           
; 1643 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1644 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1645 |                                 ss = atoi(cmdbuff);                    
; 1646 |                                 scia_puts(cmdbuff);                    
; 1647 |                                 if (ss > 0 && ss <= j) {               
; 1648 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1650 |                                         break;                         
; 1652 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1653 |                         } while (j);                                   
; 1654 |                         scia_puts("\r\n");                             
; 1655 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1657 |                         // put on the vfd                              
; 1658 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1659 |                         lcd_puts(buff, 20);                            
; 1661 |                         // sensor serial number                        
; 1662 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1663 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1664 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1665 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1667 |                                 cmdlen = j;                            
; 1668 |                                 cmdbuff[j] = '\0';                     
; 1670 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1671 |                         scia_puts(cmdbuff);                            
; 1672 |                         scia_puts("\r\n");                             
; 1674 |                         // sensor label                                
; 1675 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1676 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1677 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1678 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1680 |                                 cmdlen = j;                            
; 1681 |                                 cmdbuff[j] = '\0';                     
; 1683 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1684 |                         scia_puts(cmdbuff);                            
; 1685 |                         scia_puts("\r\n");                             
; 1687 |                         // unit                                        
; 1688 |                         for (j = 0; j < 7; j++) {                      
; 1689 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1691 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1692 |                         scia_puts(buff);                               
; 1693 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1694 |                                         sizeof(cmdbuff));              
; 1695 |                         tsensor.unit = atoi(cmdbuff);                  
; 1697 |                         switch (tsensor.unit) {                        
; 1698 |                         case 0:                                 // lb  
; 1699 |                         case 1:                                 // kg  
; 1700 |                                 tsensor.unit |= 0x10;                  
; 1701 |                                 break;                                 
; 1702 |                         case 2:                                 // in  
; 1703 |                         case 3:                                 // cm  
; 1704 |                         case 4:                                 // mm  
; 1705 |                                 tsensor.unit |= 0x20;                  
; 1706 |                                 break;                                 
; 1707 |                         case 5:                                 // ps  
; 1708 |                                 tsensor.unit |= 0x30;                  
; 1709 |                                 break;                                 
; 1710 |                         case 6:                                 // nm  
; 1711 |                                 tsensor.unit |= 0x40;                  
; 1712 |                                 break;                                 
; 1713 |                         case 7:                                        
; 1714 |                         case 8:                                        
; 1715 |                         case 15:                                       
; 1716 |                                 tsensor.unit |= 0xf0;                  
; 1717 |                                 break;                                 
; 1718 |                         default:                                       
; 1719 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1720 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1721 |                                 break;                                 
; 1723 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1724 |                         tsensor.ufactor = 1;                    // 1:1 
; 1726 |                         scia_puts(cmdbuff);                            
; 1727 |                         scia_puts("\r\n");                             
; 1729 |                         // range                                       
; 1730 |                         j = 1;                                         
; 1731 |                         do {                                           
; 1732 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1733 |                                 tsensor.range = atof(cmdbuff);         
; 1734 |                                 if (tsensor.range != 0) {              
; 1735 |                                         break;                         
; 1737 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1738 |                         } while (j);                                   
; 1739 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1740 |                         scia_puts(cmdbuff);                            
; 1741 |                         scia_puts("\r\n");                             
; 1743 |                         tsensor.tagid = tagid(ch);                     
; 1745 |                         if (tsensor.tagid == 0) {                      
; 1746 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1747 |                         } else {                                       
; 1748 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1750 |                         scia_puts(buff);                               
; 1752 |                         switch (cmethod)
;     |  // on method code                                                     
; 1755 |                         case 'V':
;     |  // mv/v cal                                                           
; 1757 |                                 lcd_puts("Method: mv/v", 40);          
; 1759 |                                 tsensor.method = MD_RUN_MVV;           
; 1760 |                                 tsensor.points = 1;                    
; 1762 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1763 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1764 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1765 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1766 |                                 if (tsensor.slope[0] == 0) {           
; 1767 |                                         tsensor.slope[0] = 1;          
; 1769 |                                 scia_puts(cmdbuff);                    
; 1770 |                                 scia_puts("\r\n");                     
; 1772 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1773 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1775 |                                 scia_puts("Reading ... ");             
; 1777 |                                 dsum[0] = 0;                           
; 1778 |                                 sampcnt = CAL_SAMPLES;                 
; 1779 |                                 while (sampcnt--) {                    
; 1780 |                                         while (0 == ad7738_rawrdy()) { 
; 1781 |                                                 delay_us(1);
;     |          // wait                                                       
; 1784 |                                         cntp = ad7738_getraw();        
; 1785 |                                         dsum[0] += cntp->adc[ch];      
; 1787 |                                 scia_puts("done\r\n");                 
; 1789 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1790 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1791 |                                 break;                                 
; 1793 |                         case 'M':
;     |  // mass cal                                                           
; 1795 |                                 tsensor.method = MD_RUN_MAS;           
; 1797 |                                 // calibration points for mass cal only
; 1798 |                                 j = PNT_MAX;                           
; 1799 |                                 do {                                   
; 1800 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1801 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1802 |                                         tsensor.points = atoi(cmdbuff);
; 1803 |                                         scia_puts(cmdbuff);            
; 1804 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1805 |                                                 break;                 
; 1807 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1809 |                                 } while (j);                           
; 1810 |                                 scia_puts("\r\n");                     
; 1812 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1813 |                                 lcd_puts(buff, 40);                    
; 1815 |                                 // calculate the default point values  
; 1816 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1817 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1818 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1821 |                                 // read in value with default provided 
; 1822 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1823 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1824 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1825 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1827 |                                         // zero length response set the
;     |  default                                                               
; 1828 |                                         if (cmdlen > 0) {              
; 1829 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1831 |                                         scia_puts(cmdbuff);            
; 1832 |                                         scia_puts("\r\n");             
; 1835 |                                 // TODO: sort the list of points       
; 1837 |                                 // read adc count for each point       
; 1838 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1839 |                                         sprintf(buff,                  
; 1840 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1841 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1842 |                                                         j + 1);        
; 1843 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1844 |                                         scia_puts("Reading ... ");     
; 1846 |                                         dsum[0] = 0;                   
; 1847 |                                         sampcnt = CAL_SAMPLES;         
; 1848 |                                         while (sampcnt--) {            
; 1849 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1850 |                                                         delay_us(1);
;     |                  // wait                                               
; 1853 |                                                 cntp = ad7738_getraw();
; 1854 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1856 |                                         scia_puts("done\r\n");         
; 1857 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1860 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1861 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1862 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1863 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1864 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1865 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1866 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1867 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1868 | 
;     |  * tsensor.adc[j];                                                     
; 1870 |                                 break;                                 
; 1872 |                         case 'S':
;     |  // shunt cal                                                          
; 1874 |                                 lcd_puts("Method: shunt", 40);         
; 1876 |                                 tsensor.method = MD_RUN_SHT;           
; 1877 |                                 tsensor.points = 1;                    
; 1879 |                                 sprintf(buff,                          
; 1880 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1881 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1882 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1883 |                                 scia_puts(cmdbuff);                    
; 1884 |                                 scale = atof(cmdbuff);                 
; 1885 |                                 if (scale == 0) {                      
; 1886 |                                         scale = 1.46;                  
; 1887 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1889 |                                 scia_puts("\r\n");                     
; 1891 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1892 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1894 |                                 scia_puts("Reading ... ");             
; 1896 |                                 for (j = 0; j < 2; j++) {              
; 1897 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1899 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1900 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1901 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1903 |                                                 DINT;                  
; 1904 |                                                 maf_rst();             
; 1905 |                                                 EINT;                  
; 1906 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1909 |                                         dsum[j] = 0;                   
; 1910 |                                         sampcnt = CAL_SAMPLES;         
; 1911 |                                         while (sampcnt--) {            
; 1912 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1913 |                                                         delay_us(1);
;     |                  // wait                                               
; 1916 |                                                 cntp = ad7738_getraw();
; 1917 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1921 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1922 |                                 DINT;                                  
; 1923 |                                 maf_rst();                             
; 1924 |                                 EINT;                                  
; 1926 |                                 scia_puts("done\r\n");                 
; 1928 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1929 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1930 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1931 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1932 |                                 break;                                 
; 1934 |                         default:                                       
; 1935 |                                 lcd_clear();                           
; 1936 |                                 update_units();                        
; 1937 |                                 goto INVALIDCMD;                       
; 1940 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1941 |                         scia_getparam(                                 
; 1942 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1943 |                                         cmdbuff, sizeof(cmdbuff));     
; 1944 |                         scia_puts("Reading ... ");                     
; 1946 |                         for (j = 0; j < 2; j++) {                      
; 1947 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1949 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1950 |                                         for (i = 0; i < 50; i++) {     
; 1951 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1953 |                                         DINT;                          
; 1954 |                                         maf_rst();                     
; 1955 |                                         EINT;                          
; 1956 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1959 |                                 dsum[j] = 0;                           
; 1960 |                                 sampcnt = CAL_SAMPLES;                 
; 1961 |                                 while (sampcnt--) {                    
; 1962 |                                         while (0 == ad7738_rawrdy()) { 
; 1963 |                                                 delay_us(1);
;     |          // wait                                                       
; 1966 |                                         cntp = ad7738_getraw();        
; 1967 |                                         dsum[j] += cntp->adc[ch];      
; 1969 |                                 dsum[j] /= CAL_SAMPLES;                
; 1971 |                                 pt = 0;                                
; 1972 |                                 if (tsensor.points > 2) {              
; 1973 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 1974 |                                                 pt++;                  
; 1977 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 1978 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 1981 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 1982 |                         DINT;                                          
; 1983 |                         maf_rst();                                     
; 1984 |                         EINT;                                          
; 1986 |                         scia_puts("done\r\n");                         
; 1988 |                         tsensor.shunt = volt[1] - volt[0];             
; 1990 |                         // setup some other members of the structure   
; 1991 |                         tsensor.tare = 0;                              
; 1992 |                         tsensor.dacgain = 1;                           
; 1993 |                         tsensor.dacoff = 0;                            
; 1994 |                         tsensor.ch = ch;                               
; 1996 |                         DINT;                                          
; 1997 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 1998 |                                         sizeof(sconf_t));              
; 2000 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2002 |                         ad7738_setcal();                               
; 2003 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2004 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2005 |                         EINT;                                          
; 2007 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2008 |                                         ch + 1, ss + 1);               
; 2009 |                         scia_puts(buff);                               
; 2010 |                         print_sensor(ss);                              
; 2012 |                         unsaved = 1;                                   
; 2013 |                         lcd_clear();                                   
; 2014 |                         update_units();                                
; 2015 |                         break;                                         
; 2017 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2018 |                         // sensor config commands
;     |                                          //                            
; 2019 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2020 |                 case 'S':                               // sensor      
; 2022 |                         if (cmdlen < 2) {                              
; 2023 |                                 goto INVALIDCMD;                       
; 2026 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2027 |                                         && 'D' != cmdbuff[1]) {        
; 2028 |                                 goto INVALIDCMD;                       
; 2029 |                                 // invalid command                     
; 2031 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2051 |                         // sensor number                               
; 2052 |                         j = SENSPCH;                                   
; 2053 |                         do {                                           
; 2054 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2055 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2056 |                                 ss = atoi(cmdbuff);                    
; 2057 |                                 scia_puts(cmdbuff);                    
; 2058 |                                 if (ss > 0 && ss <= j) {               
; 2059 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2061 |                                         break;                         
; 2063 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2064 |                         } while (j);                                   
; 2065 |                         scia_puts("\r\n");                             
; 2066 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2068 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2071 |                         case 'N':
;     |  // change sensor label                                                
; 2073 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2074 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2075 |                                                 ss + 1, j);            
; 2076 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2077 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2079 |                                         cmdlen = j;                    
; 2080 |                                         cmdbuff[j] = '\0';             
; 2082 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2083 |                                                 cmdlen + 1);           
; 2084 |                                 scia_puts(cmdbuff);                    
; 2085 |                                 scia_puts("\r\n");                     
; 2086 |                                 unsaved = 1;                           
; 2088 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2089 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2090 |                                 scia_puts(buff);                       
; 2091 |                                 break;                                 
; 2093 |                         case 'U':
;     |  // change the output unit                                             
; 2095 |                                 scale = 0;                             
; 2097 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2098 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2100 |                                         do {                           
; 2101 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2102 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2103 |                                                 j = atoi(cmdbuff);     
; 2104 |                                                 scia_puts(cmdbuff);    
; 2105 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2106 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2108 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2109 |                                         scia_puts("\r\n");             
; 2111 |                                         switch (j) {                   
; 2112 |                                         case 0:                        
; 2113 |                                                 scale = 1;             
; 2114 |                                                 j |= 0x10;             
; 2115 |                                                 break;                 
; 2116 |                                         case 1:                        
; 2117 |                                                 scale = LB_TO_KG;      
; 2118 |                                                 j |= 0x10;             
; 2119 |                                                 break;                 
; 2120 |                                         case 7:                        
; 2121 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2122 |                                                 j |= 0xf0;             
; 2123 |                                                 break;                 
; 2125 |                                         break;                         
; 2127 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2129 |                                         do {                           
; 2130 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2131 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2132 |                                                 j = atoi(cmdbuff);     
; 2133 |                                                 scia_puts(cmdbuff);    
; 2134 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2135 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2137 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2138 |                                         scia_puts("\r\n");             
; 2140 |                                         switch (j) {                   
; 2141 |                                         case 0:                        
; 2142 |                                                 scale = 1.0 / LB_TO_KG;
; 2143 |                                                 j |= 0x10;             
; 2144 |                                                 break;                 
; 2145 |                                         case 1:                        
; 2146 |                                                 scale = 1;             
; 2147 |                                                 j |= 0x10;             
; 2148 |                                                 break;                 
; 2149 |                                         case 7:                        
; 2150 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2151 |                                                 j |= 0xf0;             
; 2152 |                                                 break;                 
; 2154 |                                         break;                         
; 2156 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2158 |                                         do {                           
; 2159 |                                                 scia_getparam(         
; 2160 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2161 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2162 |                                                 j = atoi(cmdbuff);     
; 2163 |                                                 scia_puts(cmdbuff);    
; 2164 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2165 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2167 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2168 |                                         scia_puts("\r\n");             
; 2170 |                                         switch (j) {                   
; 2171 |                                         case 2:                        
; 2172 |                                                 scale = 1;             
; 2173 |                                                 j |= 0x20;             
; 2174 |                                                 break;                 
; 2175 |                                         case 3:                        
; 2176 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2177 |                                                 j |= 0x20;             
; 2178 |                                                 break;                 
; 2179 |                                         case 4:                        
; 2180 |                                                 scale = IN_TO_MM;      
; 2181 |                                                 j |= 0x20;             
; 2182 |                                                 break;                 
; 2183 |                                         case 7:                        
; 2184 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2185 |                                                 j |= 0xf0;             
; 2186 |                                                 break;                 
; 2188 |                                         break;                         
; 2190 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2192 |                                         do {                           
; 2193 |                                                 scia_getparam(         
; 2194 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2195 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2196 |                                                 j = atoi(cmdbuff);     
; 2197 |                                                 scia_puts(cmdbuff);    
; 2198 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2199 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2201 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2202 |                                         scia_puts("\r\n");             
; 2204 |                                         switch (j) {                   
; 2205 |                                         case 2:                        
; 2206 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2207 |                                                 j |= 0x20;             
; 2208 |                                                 break;                 
; 2209 |                                         case 3:                        
; 2210 |                                                 scale = 1;             
; 2211 |                                                 j |= 0x20;             
; 2212 |                                                 break;                 
; 2213 |                                         case 4:                        
; 2214 |                                                 scale = 10;            
; 2215 |                                                 j |= 0x20;             
; 2216 |                                                 break;                 
; 2217 |                                         case 7:                        
; 2218 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2219 |                                                 j |= 0xf0;             
; 2220 |                                                 break;                 
; 2222 |                                         break;                         
; 2224 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2226 |                                         do {                           
; 2227 |                                                 scia_getparam(         
; 2228 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2229 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2230 |                                                 j = atoi(cmdbuff);     
; 2231 |                                                 scia_puts(cmdbuff);    
; 2232 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2233 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2235 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2236 |                                         scia_puts("\r\n");             
; 2238 |                                         switch (j) {                   
; 2239 |                                         case 2:                        
; 2240 |                                                 scale = 1.0 / IN_TO_MM;
; 2241 |                                                 j |= 0x20;             
; 2242 |                                                 break;                 
; 2243 |                                         case 3:                        
; 2244 |                                                 scale = 0.1;           
; 2245 |                                                 j |= 0x20;             
; 2246 |                                                 break;                 
; 2247 |                                         case 4:                        
; 2248 |                                                 scale = 1;             
; 2249 |                                                 j |= 0x20;             
; 2250 |                                                 break;                 
; 2251 |                                         case 7:                        
; 2252 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2253 |                                                 j |= 0xf0;             
; 2254 |                                                 break;                 
; 2256 |                                         break;                         
; 2258 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2260 |                                         do {                           
; 2261 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2262 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2263 |                                                 j = atoi(cmdbuff);     
; 2264 |                                                 scia_puts(cmdbuff);    
; 2265 |                                                 if (j != 5 && j != 7) {
; 2266 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2268 |                                         } while (j != 5 && j != 7);    
; 2269 |                                         scia_puts("\r\n");             
; 2271 |                                         switch (j) {                   
; 2272 |                                         case 5:                        
; 2273 |                                                 scale = 1;             
; 2274 |                                                 j |= 0x30;             
; 2275 |                                                 break;                 
; 2276 |                                         case 7:                        
; 2277 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2278 |                                                 j |= 0xf0;             
; 2279 |                                                 break;                 
; 2281 |                                         break;                         
; 2283 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2285 |                                         do {                           
; 2286 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2287 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2288 |                                                 j = atoi(cmdbuff);     
; 2289 |                                                 scia_puts(cmdbuff);    
; 2290 |                                                 if (j != 6 && j != 7) {
; 2291 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2293 |                                         } while (j != 6 && j != 7);    
; 2294 |                                         scia_puts("\r\n");             
; 2296 |                                         switch (j) {                   
; 2297 |                                         case 6:                        
; 2298 |                                                 scale = 1;             
; 2299 |                                                 j |= 0x40;             
; 2300 |                                                 break;                 
; 2301 |                                         case 7:                        
; 2302 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2303 |                                                 j |= 0xf0;             
; 2304 |                                                 break;                 
; 2306 |                                         break;                         
; 2308 |                                 default:                               
; 2309 |                                         break;                         
; 2312 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2313 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2314 |                                         break;                         
; 2317 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2318 |                                         scia_puts(                     
; 2319 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2320 |                                         break;                         
; 2323 |                                 conf_data.sensor[ss].ounit = j;        
; 2324 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2325 |                                 unsaved = 1;                           
; 2327 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2328 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2329 |                                 scia_puts(buff);                       
; 2331 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2332 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2333 |                                                 update_units();        
; 2334 |                                                 DINT;                  
; 2335 |                                                 ad7738_setcal();       
; 2336 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2337 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2338 |                                                 EINT;                  
; 2341 |                                 break;                                 
; 2343 |                         case 'B':
;     |  // change percent base                                                
; 2345 |                                 // base                                
; 2346 |                                 j = 1;                                 
; 2347 |                                 do {                                   
; 2348 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2349 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2350 |                                         scale = atof(cmdbuff);         
; 2351 |                                         scia_puts(cmdbuff);            
; 2352 |                                         if (scale != 0) {              
; 2353 |                                                 break;                 
; 2355 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2356 |                                 } while (j);                           
; 2357 |                                 scia_puts("\r\n");                     
; 2358 |                                 conf_data.sensor[ss].base = scale;     
; 2359 |                                 unsaved = 1;                           
; 2361 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2362 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2363 |                                 scia_puts(buff);                       
; 2365 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2366 |                                         // output unit is percent      
; 2367 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2368 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2370 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2371 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2372 |                                                         // changed is f
;     | or the current sensor                                                  
; 2373 |                                                         DINT;          
; 2374 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2375 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2376 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2377 |                                                         EINT;          
; 2381 |                                 break;                                 
; 2383 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2385 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2386 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2387 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2388 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2389 |                                 scia_puts(cmdbuff);                    
; 2390 |                                 scia_puts("\r\n");                     
; 2392 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2393 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2394 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2395 |                                 scia_puts(cmdbuff);                    
; 2396 |                                 scia_puts("\r\n");                     
; 2397 |                                 unsaved = 1;                           
; 2399 |                                 sprintf(buff,                          
; 2400 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2401 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2402 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2403 |                                 scia_puts(buff);                       
; 2405 |                                 DINT;                                  
; 2406 |                                 ad7738_setcal();                       
; 2407 |                                 EINT;                                  
; 2408 |                                 break;                                 
; 2410 |                         default:                                       
; 2411 |                                 goto INVALIDCMD;                       
; 2414 |                         break;                                         
; 2416 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2417 |                         // Encoder config commands
;     |                                  //                                    
; 2418 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2419 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2421 |                         if (cmdlen < 2) {                              
; 2422 |                                 goto INVALIDCMD;                       
; 2425 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2428 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2430 |                                 j = MAF_MAX;                           
; 2431 |                                 do {                                   
; 2432 |                                         sprintf(buff,                  
; 2433 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2434 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2435 |                                         i = atoi(cmdbuff);             
; 2436 |                                         scia_puts(cmdbuff);            
; 2437 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2438 |                                                 break;
;     |          // valid number input                                         
; 2440 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2441 |                                 } while (j);                           
; 2442 |                                 scia_puts("\r\n");                     
; 2444 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2445 |                                                 i);                    
; 2446 |                                 scia_puts(buff);                       
; 2447 |                                 unsaved = 1;                           
; 2449 |                                 // update new value                    
; 2450 |                                 DINT;                                  
; 2451 |                                 conf_data.velfilter = i;               
; 2452 |                                 ad7738_setcal();                       
; 2453 |                                 velf_rst();                            
; 2454 |                                 EINT;                                  
; 2455 |                                 break;                                 
; 2457 |                         case 'P':
;     |  // count per inch                                                     
; 2459 |                                 // channel number                      
; 2460 |                                 j = ENC_MAX;                           
; 2461 |                                 do {                                   
; 2462 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2463 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2464 |                                         ss = atoi(cmdbuff);            
; 2465 |                                         scia_puts(cmdbuff);            
; 2466 |                                         if (ss > 0 && ss <= j) {       
; 2467 |                                                 break;
;     |          // valid input line number                                    
; 2469 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2470 |                                 } while (j);                           
; 2471 |                                 scia_puts("\r\n");                     
; 2472 |                                 ss--;
;     |  // line number, convert to index                                      
; 2474 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2475 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2476 |                                 templg = atol(cmdbuff);                
; 2477 |                                 scia_puts(cmdbuff);                    
; 2478 |                                 scia_puts("\r\n");                     
; 2479 |                                 if (templg == 0) {                     
; 2480 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2481 |                                         break;                         
; 2483 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2484 |                                                 ss + 1, templg);       
; 2485 |                                 scia_puts(buff);                       
; 2486 |                                 unsaved = 1;                           
; 2488 |                                 // update new value                    
; 2489 |                                 DINT;                                  
; 2490 |                                 conf_data.cntperin[ss] = templg;       
; 2491 |                                 ad7738_setcal();                       
; 2492 |                                 velf_rst();                            
; 2493 |                                 EINT;                                  
; 2494 |                                 break;                                 
; 2496 |                         break;                                         
; 2498 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2499 |                         // Display command
;     |                                  //                                    
; 2500 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2501 |                 case 'D':                                              
; 2503 |                         if (cmdlen < 2) {                              
; 2504 |                                 goto INVALIDCMD;                       
; 2507 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2509 |                         case 'S':
;     |  // selection                                                          
; 2511 |                                 // line number                         
; 2512 |                                 j = VFD_MAX;                           
; 2513 |                                 do {                                   
; 2514 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2515 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2516 |                                         ss = atoi(cmdbuff);            
; 2517 |                                         scia_puts(cmdbuff);            
; 2518 |                                         if (ss > 0 && ss <= j) {       
; 2519 |                                                 break;
;     |          // valid input line number                                    
; 2521 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2522 |                                 } while (j);                           
; 2523 |                                 scia_puts("\r\n");                     
; 2524 |                                 ss--;
;     |  // line number, convert to index                                      
; 2526 |                                 // what                                
; 2527 |                                 for (j = 0; j < 7; j++) {              
; 2528 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2529 |                                         scia_puts(buff);               
; 2530 |                                         if (j < 6) {                   
; 2531 |                                                 scia_puts(", ");       
; 2534 |                                 scia_puts("\r\n");                     
; 2535 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2536 |                                                 ss + 1);               
; 2537 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2538 |                                 pt = atoi(cmdbuff);                    
; 2539 |                                 if (pt >= 7) {                         
; 2540 |                                         pt = 0;                        
; 2541 |                                         scia_puts(                     
; 2542 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2544 |                                 scia_puts(cmdbuff);                    
; 2545 |                                 scia_puts("\r\n");                     
; 2546 |                                 conf_data.vfd[ss].what = pt;           
; 2548 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2550 |                                 case VFD_LOAD:                         
; 2551 |                                 case VFD_PEAK:                         
; 2552 |                                 case VFD_VALL:                         
; 2554 |                                         j = CHS_MAX;                   
; 2555 |                                         goto VFD_CHANNEL;              
; 2557 |                                 case VFD_POSI:                         
; 2558 |                                 case VFD_VELO:                         
; 2560 |                                         j = ENC_MAX;                   
; 2562 |                                         VFD_CHANNEL:                   
; 2563 |                                         // channel number              
; 2564 |                                         do {                           
; 2565 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2566 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2567 |                                                 ch = atoi(cmdbuff);    
; 2568 |                                                 scia_puts(cmdbuff);    
; 2569 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2570 |                                                         break;
;     |          // valid input channel number                                 
; 2572 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2573 |                                         } while (j);                   
; 2574 |                                         scia_puts("\r\n");             
; 2575 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2576 |                                         conf_data.vfd[ss].ch = ch;     
; 2578 |                                         // digits after decimal point  
; 2579 |                                         j = 1;                         
; 2580 |                                         do {                           
; 2581 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2582 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2583 |                                                 i = atoi(cmdbuff);     
; 2584 |                                                 if (i >= 0 && i <= 5) {
; 2585 |                                                         break;         
; 2587 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2588 |                                         } while (j);                   
; 2589 |                                         scia_puts(cmdbuff);            
; 2590 |                                         scia_puts("\r\n");             
; 2591 |                                         conf_data.vfd[ss].adec = i;    
; 2593 |                                         sprintf(buff,                  
; 2594 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2595 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2596 |                                         scia_puts(buff);               
; 2597 |                                         break;                         
; 2599 |                                 case VFD_LIMIT:                        
; 2600 |                                         // channel number              
; 2601 |                                         j = CHS_MAX;                   
; 2602 |                                         do {                           
; 2603 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2604 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2605 |                                                 ch = atoi(cmdbuff);    
; 2606 |                                                 scia_puts(cmdbuff);    
; 2607 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2608 |                                                         break;
;     |          // valid input channel number                                 
; 2610 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2611 |                                         } while (j);                   
; 2612 |                                         scia_puts("\r\n");             
; 2613 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2614 |                                         conf_data.vfd[ss].ch = ch;     
; 2616 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2617 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2618 |                                         scia_puts(buff);               
; 2619 |                                         break;                         
; 2620 |                                 case VFD_TEMP:                         
; 2621 |                                         // no more info                
; 2622 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2623 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2624 |                                         scia_puts(buff);               
; 2625 |                                         break;                         
; 2628 |                                 lcd_clear();                           
; 2629 |                                 update_units();                        
; 2630 |                                 unsaved = 1;                           
; 2631 |                                 break;                                 
; 2633 |                         default:                                       
; 2634 |                                 goto INVALIDCMD;                       
; 2637 |                         break;                                         
; 2639 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2640 |                         // DAC out command
;     |                                  //                                    
; 2641 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2642 |                 case 'O':                                              
; 2644 |                         if (cmdlen < 2) {                              
; 2645 |                                 goto INVALIDCMD;                       
; 2648 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2650 |                         case 'S':
;     |  // selection                                                          
; 2652 |                                 // DAC channel number                  
; 2653 |                                 j = DAC_MAX;                           
; 2654 |                                 do {                                   
; 2655 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2656 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2657 |                                         ss = atoi(cmdbuff);            
; 2658 |                                         scia_puts(cmdbuff);            
; 2659 |                                         if (ss > 0 && ss <= j) {       
; 2660 |                                                 break;
;     |          // valid input channel number                                 
; 2662 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2663 |                                 } while (j);                           
; 2664 |                                 scia_puts("\r\n");                     
; 2665 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2667 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2668 |                                 for (j = 0; j < 5; j++) {              
; 2669 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2670 |                                         scia_puts(buff);               
; 2671 |                                         scia_puts(", ");               
; 2673 |                                 j = 7;                                 
; 2674 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2675 |                                 scia_puts(buff);                       
; 2676 |                                 scia_puts("\r\n");                     
; 2677 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2678 |                                                 ss + 1);               
; 2679 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2680 |                                 pt = atoi(cmdbuff);                    
; 2681 |                                 if (pt >= 5 && pt != 7) {              
; 2682 |                                         pt = 0;                        
; 2683 |                                         scia_puts(                     
; 2684 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2686 |                                 scia_puts(cmdbuff);                    
; 2687 |                                 scia_puts("\r\n");                     
; 2688 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2690 |                                 if ( VFD_VOLT != pt) {                 
; 2692 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2693 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2694 |                                                 j = CHS_MAX;           
; 2695 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2696 |                                                 j = ENC_MAX;           
; 2699 |                                         // linked load/... channel numb
;     | er                                                                     
; 2700 |                                         do {                           
; 2701 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2702 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2703 |                                                 ch = atoi(cmdbuff);    
; 2704 |                                                 scia_puts(cmdbuff);    
; 2705 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2706 |                                                         break;
;     |          // valid input channel number                                 
; 2708 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2709 |                                         } while (j);                   
; 2710 |                                         scia_puts("\r\n");             
; 2711 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2712 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2714 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2715 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2716 |                                                 // gain                
; 2717 |                                                 if ( VFD_POSI == pt) { 
; 2718 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2719 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2720 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2722 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2723 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2724 |                                                 scia_puts(cmdbuff);    
; 2725 |                                                 scia_puts("\r\n");     
; 2727 |                                                 // offset              
; 2728 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2729 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2730 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2731 |                                                 scia_puts(cmdbuff);    
; 2732 |                                                 scia_puts("\r\n");     
; 2736 |                                 unsaved = 1;                           
; 2738 |                                 // print result                        
; 2739 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2740 |                                                 LPV[pt]);              
; 2741 |                                 scia_puts(buff);                       
; 2743 |                                 if ( VFD_VOLT == pt) {                 
; 2744 |                                         scia_puts("\r\n");             
; 2745 |                                 } else {                               
; 2746 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2747 |                                         scia_puts(buff);               
; 2749 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2750 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2751 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2752 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2753 |                                                 scia_puts(buff);       
; 2757 |                                 DINT;                                  
; 2758 |                                 ad7738_setcal();                       
; 2759 |                                 EINT;                                  
; 2760 |                                 break;                                 
; 2762 |                         case 'D':
;     |  // direct voltage output                                              
; 2764 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2765 |                                                 || 'V' != cmdbuff[3]) {
; 2766 |                                         goto INVALIDCMD;               
; 2769 |                                 // channel index                       
; 2770 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2771 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2772 |                                         goto INVALIDCMD;               
; 2773 |                                         // invalid channel number      
; 2775 |                                 ss--;
;     |  // change to zero based index                                         
; 2777 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2778 |                                         goto INVALIDCMD;               
; 2779 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2782 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2783 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2784 |                                         goto INVALIDCMD;               
; 2785 |                                         // invalid voltage             
; 2788 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2789 |                                 if (volt[0] < 0) {                     
; 2790 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2791 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2792 |                                 } else {                               
; 2793 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2794 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2797 |                                 if (dsum[0] <= 0) {                    
; 2798 |                                         dacc[0] = 0;                   
; 2799 |                                 } else if (dsum[0] >= 0xffff) {        
; 2800 |                                         dacc[0] = 0xffff;              
; 2801 |                                 } else {                               
; 2802 |                                         dacc[0] = (Uint16) dsum[0];    
; 2805 |                                 mcbsp_xmit(dacc[0], ss);               
; 2806 |                                 latch_dac();                           
; 2808 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2809 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2810 |                                 scia_puts(buff);                       
; 2812 |                                 break;                                 
; 2814 |                         default:                                       
; 2815 |                                 goto INVALIDCMD;                       
; 2818 |                         break;                                         
; 2820 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2821 |                         // LIMIT command
;     |                                          //                            
; 2822 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2823 |                 case 'L':                                              
; 2825 |                         if (cmdlen < 2) {                              
; 2826 |                                 goto INVALIDCMD;                       
; 2829 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2831 |                         case 'S':
;     |  // selection                                                          
; 2833 |                                 // LIMIT channel number                
; 2834 |                                 j = LIM_MAX;                           
; 2835 |                                 do {                                   
; 2836 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2837 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2838 |                                         ss = atoi(cmdbuff);            
; 2839 |                                         scia_puts(cmdbuff);            
; 2840 |                                         if (ss > 0 && ss <= j) {       
; 2841 |                                                 break;
;     |          // valid input channel number                                 
; 2843 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2844 |                                 } while (j);                           
; 2845 |                                 scia_puts("\r\n");                     
; 2846 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2848 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2849 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2850 |                                 scia_puts(cmdbuff);                    
; 2851 |                                 scia_puts("\r\n");                     
; 2853 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2855 |                                         // set on flag                 
; 2856 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2858 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2859 |                                         for (j = 0; j < 5; j++) {      
; 2860 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2861 |                                                 scia_puts(buff);       
; 2862 |                                                 if (j < 4) {           
; 2863 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2866 |                                         scia_puts("\r\n");             
; 2867 |                                         sprintf(buff,                  
; 2868 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2869 |                                                         ss + 1);       
; 2870 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2871 |                                         pt = atoi(cmdbuff);            
; 2872 |                                         if (pt >= 5) {                 
; 2873 |                                                 pt = 0;                
; 2874 |                                                 scia_puts(             
; 2875 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2877 |                                         scia_puts(cmdbuff);            
; 2878 |                                         scia_puts("\r\n");             
; 2879 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2881 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2882 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2883 |                                                 j = CHS_MAX;           
; 2884 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2885 |                                                 j = ENC_MAX;           
; 2888 |                                         // linked load/... channel numb
;     | er                                                                     
; 2889 |                                         do {                           
; 2890 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2891 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2892 |                                                 ch = atoi(cmdbuff);    
; 2893 |                                                 scia_puts(cmdbuff);    
; 2894 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2895 |                                                         break;
;     |          // valid input channel number                                 
; 2897 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2898 |                                         } while (j);                   
; 2899 |                                         scia_puts("\r\n");             
; 2900 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2901 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2903 |                                         // NO/NC                       
; 2904 |                                         scia_getparam(                 
; 2905 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2906 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2907 |                                         scia_puts(cmdbuff);            
; 2908 |                                         scia_puts("\r\n");             
; 2910 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2912 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2913 |                                         } else {                       
; 2914 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2917 |                                         scia_getparam(                 
; 2918 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2919 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2920 |                                         scia_puts(cmdbuff);            
; 2921 |                                         scia_puts("\r\n");             
; 2923 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2925 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2926 |                                         } else {                       
; 2927 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2930 |                                         scia_getparam(                 
; 2931 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2932 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2933 |                                         scia_puts(cmdbuff);            
; 2934 |                                         scia_puts("\r\n");             
; 2936 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2938 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2939 |                                         } else {                       
; 2940 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2943 |                                         // unit (output)               
; 2944 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2945 |                                         case VFD_LOAD:                 
; 2946 |                                         case VFD_PEAK:                 
; 2947 |                                         case VFD_VALL:                 
; 2948 |                                                 ccp =                  
; 2949 |                                                                 UNITS[0
;     | x0f                                                                    
; 2950 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2951 |                                                 break;                 
; 2952 |                                         case VFD_POSI:                 
; 2953 |                                                 ccp = POS_U;           
; 2954 |                                                 break;                 
; 2955 |                                         case VFD_VELO:                 
; 2956 |                                                 ccp = VEL_U;           
; 2957 |                                                 break;                 
; 2960 |                                         // set value                   
; 2961 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2962 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2963 |                                         scia_puts(cmdbuff);            
; 2964 |                                         scia_puts("\r\n");             
; 2966 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 2967 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2968 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2970 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 2971 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2972 |                                         scia_puts(cmdbuff);            
; 2973 |                                         scia_puts("\r\n");             
; 2975 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 2976 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2977 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2978 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 2980 |                                         // print result                
; 2981 |                                         sprintf(buff,                  
; 2982 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 2983 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 2984 |                                         scia_puts(buff);               
; 2986 |                                         sprintf(buff,                  
; 2987 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 2988 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 2989 | 
;     |  "NC" : "NO",                                                          
; 2990 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 2991 | 
;     |  "ON" : "OFF",                                                         
; 2992 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 2993 |                                         scia_puts(buff);               
; 2994 |                                         sprintf(buff,                  
; 2995 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 2996 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 2997 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 2998 |                                         scia_puts(buff);               
; 3000 |                                 } else
;     |  // turn off                                                           
; 3002 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3003 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3006 |                                 unsaved = 1;                           
; 3008 |                                 DINT;                                  
; 3009 |                                 ad7738_setcal();                       
; 3010 |                                 EINT;                                  
; 3011 |                                 break;                                 
; 3013 |                         default:                                       
; 3014 |                                 goto INVALIDCMD;                       
; 3017 |                         break;                                         
; 3019 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3020 |                         // reset commands
;     |                                          //                            
; 3021 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3022 |                 case 'R':                                              
; 3024 |                         if (cmdlen < 2) {                              
; 3025 |                                 goto INVALIDCMD;                       
; 3028 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3030 |                         case 'T':
;     |  // tare                                                               
; 3032 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3033 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3034 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3035 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3036 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3037 |                                 } else {                               
; 3038 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3039 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3040 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3042 |                                 break;                                 
; 3044 |                         case 'P':
;     |  // peak                                                               
; 3046 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3047 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3048 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3049 |                                 } else {                               
; 3050 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3052 |                                 break;                                 
; 3054 |                         case 'V':
;     |  // valley                                                             
; 3056 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3057 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3058 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3059 |                                 } else {                               
; 3060 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3062 |                                 break;                                 
; 3064 |                         case 'S':
;     |  // shunt switch                                                       
; 3066 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3067 |                                         shunt_switch(1);               
; 3068 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3069 |                                 } else {                               
; 3070 |                                         shunt_switch(0);               
; 3071 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3073 |                                 break;                                 
; 3075 |                         case 'L':
;     |  // limit                                                              
; 3077 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3078 |                                 ch--;                                  
; 3080 |                                 ad7738_resetlimit(ch);                 
; 3081 |                                 break;                                 
; 3083 |                         case 'I':
;     |  // posItion                                                           
; 3085 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3086 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3087 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3088 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3089 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3090 |                                 } else {                               
; 3091 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3092 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3093 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3095 |                                 break;                                 
; 3097 |                         default:                                       
; 3098 |                                 goto INVALIDCMD;                       
; 3100 |                         break;                                         
; 3102 | #ifdef SDHCCARD                                                        
; 3104 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3105 |                         // Stream to SD Card
;     |                                  //                                    
; 3106 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3107 |                         case 'W':// Write control                      
; 3109 |                         if( cmdlen < 2 )                               
; 3111 |                                 goto INVALIDCMD;                       
; 3114 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3116 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3118 |                                 if( cmdlen < 3 )                       
; 3120 |                                         goto INVALIDCMD;               
; 3123 |                                 if( sd_write )                         
; 3125 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3126 |                                         break;                         
; 3129 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3130 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3132 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3134 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3135 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3137 |                                 if( !res )                             
; 3139 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3140 |                                         if( res || cmdlen != temp16 )  
; 3142 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3143 |                                                 scia_puts( buff );     
; 3144 |                                                 f_close( fp );         
; 3145 |                                                 fp = NULL;             
; 3146 |                                                 break;                 
; 3163 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3165 |                                         if( res )                      
; 3167 |                                                 f_close( fp );         
; 3168 |                                                 fp = NULL;             
; 3169 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3170 |                                                 break;                 
; 3173 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3174 |                                         scia_puts( buff );             
; 3176 |                                         prod_init();                   
; 3177 |                                         sd_write = 1;                  
; 3178 |                                         sd_cnt = 0;                    
; 3179 |                                         break;                         
; 3182 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3183 |                                 scia_puts( buff );                     
; 3184 |                                 break;                                 
; 3186 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3188 |                                 if( sd_write )                         
; 3190 |                                         sd_close = 1;                  
; 3191 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3192 |                                         break;                         
; 3194 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3195 |                                 break;                                 
; 3197 |                                 case 'L':
;     |          // list files                                                 
; 3199 |                                 if( sd_write )                         
; 3201 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3202 |                                         break;                         
; 3205 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3206 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3208 |                                 res = f_opendir(&dir, "0:");           
; 3209 |                                 if (res)                               
; 3211 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3212 |                                         scia_puts( buff );             
; 3213 |                                         break;                         
; 3216 |                                 p1 = s1 = s2 = 0;                      
; 3217 |                                 for(;;)                                
; 3219 |                                         res = f_readdir(&dir, &Finfo); 
; 3220 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3221 |                                         break;                         
; 3222 |                                         if (Finfo.fattrib & AM_DIR)    
; 3224 |                                                 s2++;                  
; 3226 |                                         else                           
; 3228 |                                                 s1++;                  
; 3229 |                                                 p1 += Finfo.fsize;     
; 3231 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3232 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3233 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3234 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3235 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3236 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3237 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3238 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3239 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3240 |                                         scia_puts( buff );             
; 3242 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3243 |                                 scia_puts( buff );                     
; 3244 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3246 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3247 |                                         scia_puts( buff );             
; 3249 |                                 break;                                 
; 3251 |                                 case 'G':
;     |          // get a file                                                 
; 3253 |                                 if( sd_write )                         
; 3255 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3256 |                                         break;                         
; 3259 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3260 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3262 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3264 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3265 |                                 res = f_open( fp, buff, FA_READ );     
; 3266 |                                 if (res)                               
; 3268 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3269 |                                         scia_puts( buff );             
; 3270 |                                         break;                         
; 3273 |                                 do                                     
; 3275 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3276 |                                         scia_send( buff, temp16 );     
; 3277 |                                 }while( !res && temp16 == 512 );       
; 3279 |                                 f_close( fp );                         
; 3280 |                                 fp = NULL;                             
; 3281 |                                 break;                                 
; 3283 |                                 case 'R':
;     |          // remove a file                                              
; 3285 |                                 if( sd_write )                         
; 3287 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3288 |                                         break;                         
; 3291 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3292 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3294 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3296 |                                 res = f_unlink( buff );                
; 3298 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3299 |                                 scia_puts( buff );                     
; 3300 |                                 break;                                 
; 3302 |                                 default:                               
; 3303 |                                 goto INVALIDCMD;                       
; 3306 |                         break;                                         
; 3307 | #endif                                                                 
; 3309 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3310 |                         // Flash memory access commands
;     |                                    //                                  
; 3311 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3312 |                 case 'F':                                       // flas
;     | h access                                                               
; 3314 |                         if (cmdlen < 2) {                              
; 3315 |                                 goto INVALIDCMD;                       
; 3318 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3320 |                         case 'W':
;     |  // write flash                                                        
; 3322 |                                 if (unsaved) {                         
; 3323 |                                         // flash writing               
; 3324 |                                         lcd_clear();                   
; 3325 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3326 |                                         scia_puts("Flash writing..."); 
; 3328 |                                         for (i = 0; i < 50; i++) {     
; 3329 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3332 |                                         DINT;                          
; 3333 |                                         flash_ret = conf_write();      
; 3334 |                                         EINT;                          
; 3336 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3337 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3338 |                                                 unsaved = 0;           
; 3339 |                                         } else {                       
; 3340 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3342 |                                         lcd_clear();                   
; 3343 |                                         update_units();                
; 3344 |                                         break;                         
; 3346 |                                 scia_puts(                             
; 3347 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3348 |                                 break;                                 
; 3350 |                         case 'R':
;     |  // read flash                                                         
; 3352 |                                 // flash reading                       
; 3353 |                                 conf_read();                           
; 3355 |                                 DINT;                                  
; 3356 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3357 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3358 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3359 |                                 EINT;                                  
; 3361 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3362 |                                 unsaved = 0;                           
; 3364 |                                 update_units();                        
; 3366 |                                 break;                                 
; 3368 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3370 |                                 conf_default();                        
; 3372 |                                 // flash writing                       
; 3373 |                                 lcd_clear();                           
; 3374 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3375 |                                 scia_puts("Flash write...");           
; 3377 |                                 for (i = 0; i < 50; i++) {             
; 3378 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3381 |                                 DINT;                                  
; 3382 |                                 flash_ret = conf_write();              
; 3383 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3384 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3385 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3386 |                                 EINT;                                  
; 3388 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3389 |                                         scia_puts(                     
; 3390 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3391 |                                         unsaved = 0;                   
; 3392 |                                 } else {                               
; 3393 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3395 |                                 lcd_clear();                           
; 3396 |                                 update_units();                        
; 3397 |                                 break;                                 
; 3399 |                         default:                                       
; 3400 |                                 goto INVALIDCMD;                       
; 3403 |                         break;                                         
; 3405 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3406 |                         // Help manu
;     |                                  //                                    
; 3407 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3408 |                 case 'H':                               // help menu   
; 3410 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3412 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3413 |                         scia_puts(                                     
; 3414 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3415 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3416 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3417 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3418 |                         scia_puts("\r\n");                             
; 3420 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3421 |                         scia_puts("UN          Set unit name.\r\n");   
; 3422 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3423 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3424 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3425 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3426 |                         scia_puts("\r\n");                             
; 3428 |                         scia_puts(                                     
; 3429 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3430 |                         scia_puts(                                     
; 3431 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3432 |                         scia_puts("\r\n");                             
; 3434 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3435 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3436 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3437 |                         scia_puts("\r\n");                             
; 3439 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3440 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3441 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3442 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3443 |                         scia_puts("\r\n");                             
; 3445 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3446 |                         scia_puts(                                     
; 3447 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3448 |                         scia_puts("\r\n");                             
; 3450 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3451 |                         scia_puts("\r\n");                             
; 3453 |                         scia_puts(                                     
; 3454 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3455 |                         scia_puts(                                     
; 3456 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3457 |                         scia_puts("\r\n");                             
; 3459 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3460 |                         scia_puts("\r\n");                             
; 3462 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3463 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3464 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3465 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3466 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3467 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3468 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3469 |                         scia_puts("\r\n");                             
; 3471 | #ifdef SDHCCARD                                                        
; 3472 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3473 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3474 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3475 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3476 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3477 |                         scia_puts( "\r\n" );                           
; 3478 | #endif                                                                 
; 3480 |                         scia_puts(                                     
; 3481 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3482 |                         scia_puts(                                     
; 3483 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3484 |                         scia_puts(                                     
; 3485 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3486 |                         scia_puts("\r\n");                             
; 3488 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3490 |                         // not implemented                             
; 3491 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3493 |                         scia_puts("\r\n");                             
; 3495 |                         break;                                         
; 3497 |                 case 'X':                                              
; 3499 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3501 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3503 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3506 |                         cmd_mode = SCI_MODE_BIN;                       
; 3507 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3509 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3511 |                         break;                                         
; 3513 |                 case 'Z':                                              
; 3515 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3517 |                         for (i = 0; i < 100; i++)       // 2s          
; 3519 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3522 |                         reboot();                                      
; 3523 |                         break;                                         
; 3547 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3548 |                         // Invalid commands
;     |                                  //                                    
; 3549 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3550 |                 default:                                               
; 3552 |                         INVALIDCMD:                                    
; 3554 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3555 |                         scia_puts(cmdbuff);                            
; 3556 |                         scia_puts("\", ignored.\r\n");                 
; 3557 |                         break;                                         
; 3559 |                 } // switch on 1st byte                                
; 3561 |                 if (unsaved) {                                         
; 3562 |                         scia_puts(                                     
; 3563 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3566 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3567 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3568 |                 // BIN command mode processing
;     |                          //                                            
; 3569 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3571 |                 // ------------------------------------------------    
; 3572 |                 // DEBUG: put received command on LCD                  
; 3581 |                 // ------------------------------------------------    
; 3582 |                 if (cmdlen < 2) {                                      
; 3583 |                         // INVALID COMMAND, less than 2 byte           
; 3584 |                         // may need to send NACK back                  
; 3585 |                         continue;                                      
; 3588 |                 for (i = 0; i < 2; i++) {                              
; 3589 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3592 |                 j = 2;                                  // buff length 
; 3593 |                 bincmdresult = Error_UnImpl;                           
; 3595 |                 // DEBUG, sending the command back                     
; 3596 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3598 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3600 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3603 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3718 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3720 |                 case CheckAddress:                                     
; 3722 |                         buff[j++] = 0;                                 
; 3723 |                         bincmdresult = OK_SendResult;                  
; 3724 |                         break;                                         
; 3726 |                 case SetAddress:                                       
; 3728 |                         buff[j] = cmdbuff[j];                          
; 3729 |                         j++;                                           
; 3730 |                         bincmdresult = OK_SendResult;                  
; 3731 |                         break;                                         
; 3733 |                 case RemoveAddress:                                    
; 3735 |                         buff[j] = cmdbuff[j];                          
; 3736 |                         j++;                                           
; 3737 |                         bincmdresult = OK_SendResult;                  
; 3738 |                         break;                                         
; 3740 |                 case GetUnitInfo:                                      
; 3742 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3743 |                         for (i = 0; i < 2; i++) {                      
; 3744 |                                 buff[j++] = 0xff & *intp;              
; 3745 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3746 |                                 intp++;                                
; 3749 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3750 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3752 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3753 |                         for (i = 0; i < 2; i++) {                      
; 3754 |                                 buff[j++] = 0xff & *intp;              
; 3755 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3756 |                                 intp++;                                
; 3759 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3760 |                         buff[j++] = slen;                              
; 3761 |                         for (i = 0; i < slen; i++) {                   
; 3762 |                                 buff[j++] = conf_data.uname[i]; // name
; 3764 |                         bincmdresult = OK_SendResult;                  
; 3766 |                         break;                                         
; 3768 |                 case SetUnitSN:                                        
; 3770 |                         if (cmdlen < 6) {                              
; 3771 |                                 bincmdresult = Error_Invalid;          
; 3772 |                                 break;                                 
; 3775 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3776 |                         for (i = 0; i < 2; i++) {                      
; 3777 |                                 *intp = cmdbuff[j];                    
; 3778 |                                 buff[j++] = 0xff & *intp;              
; 3779 |                                 *intp += cmdbuff[j] << 8;              
; 3780 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3781 |                                 intp++;                                
; 3783 |                         unsaved = 1;                                   
; 3785 |                         bincmdresult = OK_SendResult;                  
; 3786 |                         break;                                         
; 3788 |                 case SetUnitName:                                      
; 3790 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3791 |                                 bincmdresult = Error_Invalid;          
; 3792 |                                 break;                                 
; 3795 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3796 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3798 |                         conf_data.uname[i] = '\0';                     
; 3799 |                         unsaved = 1;                                   
; 3801 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3802 |                         buff[j++] = slen;                              
; 3803 |                         for (i = 0; i < slen; i++) {                   
; 3804 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3806 |                         bincmdresult = OK_SendResult;                  
; 3807 |                         break;                                         
; 3809 |                 case GetInterface:                                     
; 3811 |                         buff[j++] = conf_data.rxdir;                   
; 3813 |                         if (conf_data.rxdir == SDIR_RS485              
; 3814 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3815 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3816 |                                 for (i = 0; i < 2; i++) {              
; 3817 |                                         buff[j++] = 0xff & *intp;      
; 3818 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3819 |                                         intp++;                        
; 3822 |                         bincmdresult = OK_SendResult;                  
; 3823 |                         break;                                         
; 3825 |                 case SetInterface:                                     
; 3827 |                         if (cmdlen < 3) {                              
; 3828 |                                 bincmdresult = Error_Invalid;          
; 3829 |                                 break;                                 
; 3831 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3832 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3833 |                                 bincmdresult = Error_Invalid;          
; 3834 |                                 break;                                 
; 3837 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3838 |                                 if (cmdlen < 7) {                      
; 3839 |                                         bincmdresult = Error_Invalid;  
; 3840 |                                         break;                         
; 3843 |                                 temp32 = 0;                            
; 3844 |                                 for (k = 6; k > 2; k--) {              
; 3845 |                                         temp32 += cmdbuff[k];          
; 3846 |                                         temp32 <<= 8;                  
; 3849 |                                 for (i = 0; i < 8; i++) {              
; 3850 |                                         if (temp32 == BAUD[i]) {       
; 3851 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3852 |                                                 break;                 
; 3855 |                                 if (i == 8) {                          
; 3856 |                                         bincmdresult = Error_Invalid;  
; 3857 |                                         break;                         
; 3861 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3863 |                         while (j < cmdlen) {                           
; 3864 |                                 buff[j] = cmdbuff[j];                  
; 3865 |                                 j++;                                   
; 3867 |                         unsaved = 1;                                   
; 3868 |                         bincmdresult = OK_SendResult;                  
; 3869 |                         break;                                         
; 3871 |                 case GetChannel:                                       
; 3873 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3874 |                                 bincmdresult = Error_Invalid;          
; 3875 |                                 break;                                 
; 3877 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3879 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3881 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3883 |                                 buff[j++] = 0;                         
; 3886 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3887 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3889 |                                 buff[j++] = 0xff & *intp;              
; 3890 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3891 |                                 intp++;                                
; 3894 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3895 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3897 |                                 buff[j++] = 0xff & *intp;              
; 3898 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3899 |                                 intp++;                                
; 3902 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3903 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3905 |                                 buff[j++] = 0xff & *intp;              
; 3906 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3907 |                                 intp++;                                
; 3910 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3911 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3913 |                                 buff[j++] = 0xff & *intp;              
; 3914 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3915 |                                 intp++;                                
; 3918 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3919 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3921 |                                 buff[j++] = 0xff & *intp;              
; 3922 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3923 |                                 intp++;                                
; 3926 |                         bincmdresult = OK_SendResult;                  
; 3927 |                         break;                                         
; 3929 |                 case GetSensor:                                        
; 3931 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3932 |                                 bincmdresult = Error_Invalid;          
; 3933 |                                 break;                                 
; 3935 |                         ss = cmdbuff[2];                               
; 3936 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3938 |                         // sensor serial name                          
; 3939 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3940 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3941 |                         for (i = 0; i < slen; i++) {                   
; 3942 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3945 |                         // sensor name/label                           
; 3946 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3947 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3948 |                         for (i = 0; i < slen; i++) {                   
; 3949 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3952 |                         // TAGID                                       
; 3953 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3954 |                         for (i = 0; i < 4; i++) {                      
; 3955 |                                 buff[j++] = 0xff & *intp;              
; 3956 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3957 |                                 intp++;                                
; 3960 |                         // Method                                      
; 3961 |                         buff[j++] = conf_data.sensor[ss].method;       
; 3963 |                         // Date                                        
; 3964 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 3965 |                         for (i = 0; i < 2; i++) {                      
; 3966 |                                 buff[j++] = 0xff & *intp;              
; 3967 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3968 |                                 intp++;                                
; 3971 |                         // Range                                       
; 3972 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 3973 |                         for (i = 0; i < 2; i++) {                      
; 3974 |                                 buff[j++] = 0xff & *intp;              
; 3975 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3976 |                                 intp++;                                
; 3979 |                         // Unit                                        
; 3980 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 3982 |                         // Output Unit                                 
; 3983 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 3985 |                         // Unit Factor                                 
; 3986 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 3987 |                         for (i = 0; i < 2; i++) {                      
; 3988 |                                 buff[j++] = 0xff & *intp;              
; 3989 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3990 |                                 intp++;                                
; 3993 |                         // calibration points.                         
; 3994 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 3995 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 3996 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 3997 |                                         // mass point                  
; 3998 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 3999 |                                         for (i = 0; i < 2; i++) {      
; 4000 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4001 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4002 |                                                 intp++;                
; 4004 |                                         // adc counts point            
; 4005 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4006 |                                         for (i = 0; i < 2; i++) {      
; 4007 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4008 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4009 |                                                 intp++;                
; 4013 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4014 |                                         // slope point                 
; 4015 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4016 |                                         for (i = 0; i < 2; i++) {      
; 4017 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4018 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4019 |                                                 intp++;                
; 4021 |                                         // intercept point             
; 4022 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4023 |                                         for (i = 0; i < 2; i++) {      
; 4024 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4025 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4026 |                                                 intp++;                
; 4029 |                         } else {                                       
; 4030 |                                 buff[j++] = 0;                         
; 4031 |                                 // slope                               
; 4032 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4033 |                                 for (i = 0; i < 2; i++) {              
; 4034 |                                         buff[j++] = 0xff & *intp;      
; 4035 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4036 |                                         intp++;                        
; 4038 |                                 // intercept                           
; 4039 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4040 |                                 for (i = 0; i < 2; i++) {              
; 4041 |                                         buff[j++] = 0xff & *intp;      
; 4042 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4043 |                                         intp++;                        
; 4047 |                         // shunt                                       
; 4048 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4049 |                         for (i = 0; i < 2; i++) {                      
; 4050 |                                 buff[j++] = 0xff & *intp;              
; 4051 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4052 |                                 intp++;                                
; 4055 |                         // base                                        
; 4056 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4057 |                         for (i = 0; i < 2; i++) {                      
; 4058 |                                 buff[j++] = 0xff & *intp;              
; 4059 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4060 |                                 intp++;                                
; 4063 |                         // DAC calibration gain                        
; 4064 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4065 |                         for (i = 0; i < 2; i++) {                      
; 4066 |                                 buff[j++] = 0xff & *intp;              
; 4067 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4068 |                                 intp++;                                
; 4071 |                         // DAC calibration offset                      
; 4072 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4073 |                         for (i = 0; i < 2; i++) {                      
; 4074 |                                 buff[j++] = 0xff & *intp;              
; 4075 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4076 |                                 intp++;                                
; 4079 |                         // channel calibrated on                       
; 4080 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4082 |                         bincmdresult = OK_SendResult;                  
; 4083 |                         break;                                         
; 4085 |                 case GetQEPChannels:                                   
; 4087 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4088 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4089 |                                 for (i = 0; i < 2; i++) {              
; 4090 |                                         buff[j++] = 0xff & *intp;      
; 4091 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4092 |                                         intp++;                        
; 4096 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4097 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4099 |                         bincmdresult = OK_SendResult;                  
; 4100 |                         break;                                         
; 4102 |                 case GetCurSensor:                                     
; 4104 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4105 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4108 |                         bincmdresult = OK_SendResult;                  
; 4109 |                         break;                                         
; 4111 |                 case GetAFilterSize:                                   
; 4113 |                         // filter size                                 
; 4114 |                         intp = (Uint16*) &conf_data.filter;            
; 4115 |                         buff[j++] = 0xff & *intp;                      
; 4116 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4117 |                         // filter window                               
; 4118 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4119 |                         for (i = 0; i < 2; i++) {                      
; 4120 |                                 buff[j++] = 0xff & *intp;              
; 4121 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4122 |                                 intp++;                                
; 4124 |                         bincmdresult = OK_SendResult;                  
; 4125 |                         break;                                         
; 4127 |                 case GetAutoId:                                        
; 4129 |                         buff[j++] = conf_data.tagiden;                 
; 4130 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4131 |                                 buff[j++] = autoid[i];                 
; 4133 |                         bincmdresult = OK_SendResult;                  
; 4134 |                         break;                                         
; 4136 |                 case GetDisplay:                                       
; 4138 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4139 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4140 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4141 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4143 |                         bincmdresult = OK_SendResult;                  
; 4144 |                         break;                                         
; 4146 |                 case GetDAC:                                           
; 4148 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4149 |                                 buff[j++] = conf_data.dac[i].what;     
; 4150 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4152 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4153 |                                 //{                                    
; 4154 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4155 |                                 //}                                    
; 4156 |                                 //else                                 
; 4157 |                                 //{                                    
; 4158 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4159 |                                 //}                                    
; 4160 |                                 for (k = 0; k < 2; k++) {              
; 4161 |                                         buff[j++] = 0xff & *intp;      
; 4162 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4163 |                                         intp++;                        
; 4165 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4166 |                                 //{                                    
; 4167 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4168 |                                 //}                                    
; 4169 |                                 //else                                 
; 4170 |                                 //{                                    
; 4171 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4172 |                                 //}                                    
; 4173 |                                 for (k = 0; k < 2; k++) {              
; 4174 |                                         buff[j++] = 0xff & *intp;      
; 4175 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4176 |                                         intp++;                        
; 4178 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4179 |                                 for (k = 0; k < 2; k++) {              
; 4180 |                                         buff[j++] = 0xff & *intp;      
; 4181 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4182 |                                         intp++;                        
; 4184 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4185 |                                 for (k = 0; k < 2; k++) {              
; 4186 |                                         buff[j++] = 0xff & *intp;      
; 4187 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4188 |                                         intp++;                        
; 4190 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4191 |                                 for (k = 0; k < 2; k++) {              
; 4192 |                                         buff[j++] = 0xff & *intp;      
; 4193 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4194 |                                         intp++;                        
; 4197 |                         bincmdresult = OK_SendResult;                  
; 4198 |                         break;                                         
; 4200 |                 case GetLIMIT:                                         
; 4202 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4203 |                                 buff[j++] = conf_data.lim[i].what;     
; 4204 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4205 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4207 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4208 |                                 for (k = 0; k < 2; k++) {              
; 4209 |                                         buff[j++] = 0xff & *intp;      
; 4210 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4211 |                                         intp++;                        
; 4213 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4214 |                                 for (k = 0; k < 2; k++) {              
; 4215 |                                         buff[j++] = 0xff & *intp;      
; 4216 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4217 |                                         intp++;                        
; 4220 |                         bincmdresult = OK_SendResult;                  
; 4221 |                         break;                                         
; 4223 |                 case GetLIMITStatus:                                   
; 4225 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4226 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4228 |                         bincmdresult = OK_SendResult;                  
; 4229 |                         break;                                         
; 4231 |                         // Heat Cal commands.                          
; 4232 |                 case GetTCLoadA:                                       
; 4233 |                 case GetTCLoadB:                                       
; 4234 |                 case GetTCLoadC:                                       
; 4235 |                 case GetTCLoadD:                                       
; 4237 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4238 |                         intp = (Uint16*) &temp16;                      
; 4239 |                         buff[j++] = 0xff & *intp;                      
; 4240 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4242 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4243 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4244 |                         intp = (Uint16*) &templg;                      
; 4245 |                         for (i = 0; i < 2; i++) {                      
; 4246 |                                 buff[j++] = 0xff & *intp;              
; 4247 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4248 |                                 intp++;                                
; 4250 |                         bincmdresult = OK_SendResult;                  
; 4251 |                         break;                                         
; 4253 |                 case GetTCTemp:                                        
; 4255 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4256 |                         intp = (Uint16*) &temp16;                      
; 4257 |                         buff[j++] = 0xff & *intp;                      
; 4258 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4259 |                         bincmdresult = OK_SendResult;                  
; 4260 |                         break;                                         
; 4262 |                 case GetTCStatus:                                      
; 4264 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4265 |                         for (i = 0; i < 2; i++) {                      
; 4266 |                                 buff[j++] = 0xff & *intp;              
; 4267 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4268 |                                 intp++;                                
; 4271 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4272 |                                 temp16 = 0x80;                         
; 4273 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4274 |                                         temp16 |= 0x01;                
; 4276 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4277 |                                         temp16 |= 0x02;                
; 4279 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4280 |                                         temp16 |= 0x04;                
; 4282 |                                 buff[j++] = 0xff & temp16;             
; 4284 |                         bincmdresult = OK_SendResult;                  
; 4285 |                         break;                                         
; 4287 |                 case GetTCParam:                                       
; 4289 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4290 |                                 bincmdresult = Error_Invalid;          
; 4291 |                                 break;                                 
; 4294 |                         ch = cmdbuff[2];                               
; 4295 |                         buff[j++] = ch;                                
; 4297 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4298 |                         for (k = 0; k < 2; k++) {                      
; 4299 |                                 buff[j++] = 0xff & *intp;              
; 4300 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4301 |                                 intp++;                                
; 4303 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4304 |                         for (k = 0; k < 2; k++) {                      
; 4305 |                                 buff[j++] = 0xff & *intp;              
; 4306 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4307 |                                 intp++;                                
; 4309 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4310 |                         for (k = 0; k < 2; k++) {                      
; 4311 |                                 buff[j++] = 0xff & *intp;              
; 4312 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4313 |                                 intp++;                                
; 4315 |                         bincmdresult = OK_SendResult;                  
; 4316 |                         break;                                         
; 4318 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4319 | #if 1                                                                  
; 4320 |                 case Open_SSR_IN1:                                     
; 4321 |                         ssr_set(0, SSR_OPEN);                          
; 4322 |                         break;                                         
; 4324 |                 case Close_SSR_IN1:                                    
; 4325 |                         ssr_set(0, SSR_CLOSE);                         
; 4326 |                         break;                                         
; 4327 | #endif                                                                 
; 4329 |                 case SetTCParam:                                       
; 4331 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4332 |                                 bincmdresult = Error_Invalid;          
; 4333 |                                 break;                                 
; 4336 |                         ch = cmdbuff[2];                               
; 4337 |                         buff[j++] = ch;                                
; 4339 |                         k = 3;                                         
; 4340 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4341 |                         for (i = 0; i < 2; i++) {                      
; 4342 |                                 *intp = cmdbuff[k++];                  
; 4343 |                                 *intp += cmdbuff[k++] << 8;            
; 4344 |                                 intp++;                                
; 4346 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4347 |                         for (i = 0; i < 2; i++) {                      
; 4348 |                                 *intp = cmdbuff[k++];                  
; 4349 |                                 *intp += cmdbuff[k++] << 8;            
; 4350 |                                 intp++;                                
; 4352 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4353 |                         for (i = 0; i < 2; i++) {                      
; 4354 |                                 *intp = cmdbuff[k++];                  
; 4355 |                                 *intp += cmdbuff[k++] << 8;            
; 4356 |                                 intp++;                                
; 4359 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4360 |                         for (k = 0; k < 2; k++) {                      
; 4361 |                                 buff[j++] = 0xff & *intp;              
; 4362 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4363 |                                 intp++;                                
; 4365 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4366 |                         for (k = 0; k < 2; k++) {                      
; 4367 |                                 buff[j++] = 0xff & *intp;              
; 4368 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4369 |                                 intp++;                                
; 4371 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4372 |                         for (k = 0; k < 2; k++) {                      
; 4373 |                                 buff[j++] = 0xff & *intp;              
; 4374 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4375 |                                 intp++;                                
; 4377 |                         unsaved = 1;                                   
; 4378 |                         bincmdresult = OK_SendResult;                  
; 4379 |                         break;                                         
; 4381 |                 case SetBCalParam:                                     
; 4383 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4384 |                                         || cmdbuff[3] != 2) {          
; 4385 |                                 bincmdresult = Error_Invalid;          
; 4386 |                                 break;                                 
; 4389 |                         ch = cmdbuff[2];                               
; 4390 |                         buff[j++] = ch;                                
; 4391 |                         buff[j] = cmdbuff[j++];                        
; 4393 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4394 |                                 intp = (Uint16*) &volt[k];             
; 4395 |                                 for (i = 0; i < 2; i++) {              
; 4396 |                                         *intp = cmdbuff[j];            
; 4397 |                                         buff[j++] = 0xff & *intp;      
; 4398 |                                         *intp += cmdbuff[j] << 8;      
; 4399 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4400 |                                         intp++;                        
; 4403 |                         bincmdresult = OK_SendResult;                  
; 4404 |                         break;                                         
; 4406 |                 case StartBCRead:                                      
; 4408 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4409 |                                         || cmdbuff[3] >= 2) {          
; 4410 |                                 bincmdresult = Error_Invalid;          
; 4411 |                                 break;                                 
; 4414 |                         k = cmdbuff[3];                                
; 4415 |                         intp = (Uint16*) &tempft;                      
; 4416 |                         for (i = 0; i < 2; i++) {                      
; 4417 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4418 |                                 intp++;                                
; 4420 |                         if (volt[k] != tempft) {                       
; 4421 |                                 bincmdresult = Error_Invalid;          
; 4422 |                                 break;                                 
; 4424 |                         lcd_clear();                                   
; 4425 |                         lcd_puts("Board Calibration...", 0);           
; 4426 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4427 |                         lcd_puts(buff, 20);                            
; 4428 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4429 |                         lcd_puts(buff, 40);                            
; 4430 |                         lcd_puts("Reading ... ", 60);                  
; 4432 |                         dsum[k] = 0;                                   
; 4433 |                         sampcnt = CAL_SAMPLES;                         
; 4434 |                         while (sampcnt--) {                            
; 4435 |                                 while (0 == ad7738_rawrdy()) {         
; 4436 |                                         delay_us(1);
;     |  // wait                                                               
; 4438 |                                 cntp = ad7738_getraw();                
; 4439 |                                 dsum[k] += cntp->adc[ch];              
; 4441 |                         if (1 == k) {                                  
; 4442 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4443 |                                                 / (dsum[1] - dsum[0]); 
; 4445 |                                 unsaved = 1;                           
; 4446 |                                 DINT;                                  
; 4447 |                                 ad7738_setcal();                       
; 4448 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4449 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4450 |                                 EINT;                                  
; 4452 |                         for (i = 0; i < cmdlen; i++) {                 
; 4453 |                                 buff[i] = cmdbuff[i];                  
; 4455 |                         j = cmdlen;                                    
; 4456 |                         bincmdresult = OK_SendResult;                  
; 4458 |                         lcd_clear();                                   
; 4459 |                         update_units();                                
; 4460 |                         break;                                         
; 4462 |                 case SetDCalParam:                                     
; 4464 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4465 |                                         || (0x07 | daccbm) != 0x07) {  
; 4466 |                                 bincmdresult = Error_Invalid;          
; 4467 |                                 break;                                 
; 4469 |                         ch = cmdbuff[2];                               
; 4470 |                         buff[j++] = ch;                                
; 4472 |                         for (k = 0; k < 3; k++) {                      
; 4473 |                                 intp = (Uint16*) &volt[k];             
; 4474 |                                 for (i = 0; i < 2; i++) {              
; 4475 |                                         *intp = cmdbuff[j];            
; 4476 |                                         buff[j++] = 0xff & *intp;      
; 4477 |                                         *intp += cmdbuff[j] << 8;      
; 4478 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4479 |                                         intp++;                        
; 4483 |                         // order: - o +                                
; 4484 |                         // do the calculations                         
; 4485 |                         conf_data.dac[ch].dslopen =                    
; 4486 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4487 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4488 |                         conf_data.dac[ch].dslopep =                    
; 4489 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4490 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4491 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4492 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4494 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4495 |                         daccbm = 0;                                    
; 4497 |                         unsaved = 1;                                   
; 4499 |                         DINT;                                          
; 4500 |                         ad7738_setcal();                               
; 4501 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4502 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4503 |                         EINT;                                          
; 4505 |                         bincmdresult = OK_SendResult;                  
; 4506 |                         break;                                         
; 4508 |                 case StartDCRead:                                      
; 4510 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4511 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4512 |                                 bincmdresult = Error_Invalid;          
; 4513 |                                 break;                                 
; 4516 |                         if (daccbm == 0) {                             
; 4517 |                                 ch = cmdbuff[2];                       
; 4518 |                         } else {                                       
; 4519 |                                 if (ch != cmdbuff[2]) {                
; 4520 |                                         bincmdresult = Error_Invalid;  
; 4521 |                                         break;                         
; 4524 |                         buff[j++] = ch;                                
; 4525 |                         k = cmdbuff[j];                                
; 4526 |                         buff[j++] = k;                                 
; 4528 |                         intp = (Uint16*) &volt[k];                     
; 4529 |                         for (i = 0; i < 2; i++) {                      
; 4530 |                                 *intp = cmdbuff[j];                    
; 4531 |                                 buff[j++] = 0xff & *intp;              
; 4532 |                                 *intp += cmdbuff[j] << 8;              
; 4533 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4534 |                                 intp++;                                
; 4536 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4537 |                                 bincmdresult = Error_Invalid;          
; 4538 |                                 break;                                 
; 4541 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4542 |                         if (dsum[0] <= 0) {                            
; 4543 |                                 dacc[k] = 0;                           
; 4544 |                         } else if (dsum[0] >= 0xffff) {                
; 4545 |                                 dacc[k] = 0xffff;                      
; 4546 |                         } else {                                       
; 4547 |                                 dacc[k] = (Uint16) dsum[0];            
; 4550 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4552 |                         mcbsp_xmit(dacc[k], ch);                       
; 4553 |                         latch_dac();                                   
; 4555 |                         daccbm |= (0x1 << k);                          
; 4557 |                         bincmdresult = OK_SendResult;                  
; 4558 |                         break;                                         
; 4560 |                 case SetSensorCalPa:                                   
; 4562 |                         if (cmdlen < 20) {                             
; 4563 |                                 bincmdresult = Error_Invalid;          
; 4564 |                                 break;                                 
; 4566 |                         k = 2;                                         
; 4567 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4568 |                         ss = cmdbuff[k++];              // sensor index
; 4569 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4570 |                                 bincmdresult = Error_Invalid;          
; 4571 |                                 break;                                 
; 4574 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4575 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4576 |                                 bincmdresult = Error_Invalid;          
; 4577 |                                 break;                                 
; 4579 |                         for (i = 0; i < tempint; i++) {                
; 4580 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4582 |                         tsensor.ssn[i] = '\0';                         
; 4584 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4585 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4586 |                                 bincmdresult = Error_Invalid;          
; 4587 |                                 break;                                 
; 4589 |                         for (i = 0; i < tempint; i++) {                
; 4590 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4592 |                         tsensor.slbl[i] = '\0';                        
; 4594 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4596 |                         intp = (Uint16*) &tsensor.date; // date        
; 4597 |                         for (i = 0; i < 2; i++) {                      
; 4598 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4599 |                                 k += 2;                                
; 4600 |                                 intp++;                                
; 4603 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4604 |                         for (i = 0; i < 2; i++) {                      
; 4605 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4606 |                                 k += 2;                                
; 4607 |                                 intp++;                                
; 4609 |                         tsensor.base = tsensor.range;                  
; 4611 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4612 |                         switch (tsensor.unit) {                        
; 4613 |                         case 0:                                 // lb  
; 4614 |                         case 1:                                 // kg  
; 4615 |                                 tsensor.unit |= UNIT_WT;               
; 4616 |                                 break;                                 
; 4617 |                         case 2:                                 // in  
; 4618 |                         case 3:                                 // cm  
; 4619 |                         case 4:                                 // mm  
; 4620 |                                 tsensor.unit |= UNIT_LT;               
; 4621 |                                 break;                                 
; 4622 |                         case 5:                                 // ps  
; 4623 |                                 tsensor.unit |= UNIT_PR;               
; 4624 |                                 break;                                 
; 4625 |                         case 6:                                 // nm  
; 4626 |                                 tsensor.unit |= UNIT_TQ;               
; 4627 |                                 break;                                 
; 4628 |                         case 7:                                        
; 4629 |                         case 8:                                        
; 4630 |                         case 15:                                       
; 4631 |                                 tsensor.unit |= 0xf0;                  
; 4632 |                                 break;                                 
; 4633 |                         default:                                       
; 4634 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4635 |                                 break;                                 
; 4637 |                         tsensor.ounit = tsensor.unit;                  
; 4638 |                         tsensor.ufactor = 1;                           
; 4640 |                         switch (tsensor.method) {                      
; 4641 |                         case MD_RUN_MVV:                               
; 4643 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4644 |                                 for (i = 0; i < 2; i++) {              
; 4645 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4646 |                                         k += 2;                        
; 4647 |                                         intp++;                        
; 4649 |                                 if (tsensor.slope[0] == 0) {           
; 4650 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4652 |                                 tsensor.points = 1;                    
; 4653 |                                 break;                                 
; 4655 |                         case MD_RUN_MAS:                               
; 4657 |                                 tsensor.points = cmdbuff[k++];         
; 4658 |                                 if (tsensor.points > PNT_MAX) {        
; 4659 |                                         tsensor.method = MD_UNCALED;   
; 4660 |                                         break;                         
; 4663 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4664 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4665 |                                         for (i = 0; i < 2; i++) {      
; 4666 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4667 |                                                 k += 2;                
; 4668 |                                                 intp++;                
; 4671 |                                 break;                                 
; 4673 |                         case MD_RUN_SHT:                               
; 4675 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4676 |                                 for (i = 0; i < 2; i++) {              
; 4677 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4678 |                                         k += 2;                        
; 4679 |                                         intp++;                        
; 4681 |                                 if (scale == 0) {                      
; 4682 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4684 |                                 tsensor.points = 1;                    
; 4685 |                                 break;                                 
; 4687 |                         default:                                       
; 4689 |                                 tsensor.method = MD_UNCALED;           
; 4690 |                                 break;                                 
; 4693 |                         if (tsensor.method == MD_UNCALED) {            
; 4694 |                                 bincmdresult = Error_Invalid;          
; 4695 |                                 break;                                 
; 4697 |                         tsensor.tare = 0;                              
; 4698 |                         tsensor.dacgain = 1;                           
; 4699 |                         tsensor.dacoff = 0;                            
; 4700 |                         tsensor.ch = ch;                               
; 4702 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4703 |                                 buff[j] = cmdbuff[j++];                
; 4705 |                         bincmdresult = OK_SendResult;                  
; 4706 |                         break;                                         
; 4708 |                 case StartSCRead:                                      
; 4710 |                         if (cmdlen < 5) {                              
; 4711 |                                 bincmdresult = Error_Invalid;          
; 4712 |                                 break;                                 
; 4714 |                         k = 2;                                         
; 4715 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4716 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4717 |                                 bincmdresult = Error_Invalid;          
; 4718 |                                 break;                                 
; 4721 |                         lcd_clear();                                   
; 4722 |                         lcd_puts("Sensor Calibration..", 0);           
; 4723 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4724 |                         lcd_puts(buff, 20);                            
; 4725 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4726 |                         lcd_puts(buff, 40);                            
; 4728 |                         switch (tsensor.method) {                      
; 4730 |                         case MD_RUN_MVV:                               
; 4732 |                                 lcd_puts("Reading zero point...", 60); 
; 4734 |                                 dsum[0] = 0;                           
; 4735 |                                 sampcnt = CAL_SAMPLES;                 
; 4736 |                                 while (sampcnt--) {                    
; 4737 |                                         while (0 == ad7738_rawrdy()) { 
; 4738 |                                                 delay_us(1);
;     |          // wait                                                       
; 4741 |                                         cntp = ad7738_getraw();        
; 4742 |                                         dsum[0] += cntp->adc[ch];      
; 4744 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4745 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4747 |                                 bincmdresult = OK_SendResult;          
; 4748 |                                 break;                                 
; 4750 |                         case MD_RUN_MAS:                               
; 4752 |                                 pt = cmdbuff[k++];                     
; 4753 |                                 intp = (Uint16*) &scale;               
; 4754 |                                 for (i = 0; i < 2; i++) {              
; 4755 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4756 |                                         k += 2;                        
; 4757 |                                         intp++;                        
; 4759 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4760 |                                         bincmdresult = Error_Invalid;  
; 4761 |                                         break;                         
; 4763 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4764 |                                 lcd_puts(buff, 60);                    
; 4766 |                                 dsum[0] = 0;                           
; 4767 |                                 sampcnt = CAL_SAMPLES;                 
; 4768 |                                 while (sampcnt--) {                    
; 4769 |                                         while (0 == ad7738_rawrdy()) { 
; 4770 |                                                 delay_us(1);
;     |          // wait                                                       
; 4773 |                                         cntp = ad7738_getraw();        
; 4774 |                                         dsum[0] += cntp->adc[ch];      
; 4776 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4778 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4780 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4781 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4782 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4783 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4784 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4785 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4786 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4787 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4788 | 
;     |          * tsensor.adc[k];                                             
; 4792 |                                 bincmdresult = OK_SendResult;          
; 4793 |                                 break;                                 
; 4795 |                         case MD_RUN_SHT:                               
; 4797 |                                 lcd_puts("Reading zero point...", 60); 
; 4799 |                                 for (k = 0; k < 2; k++) {              
; 4800 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4802 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4803 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4804 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4806 |                                                 DINT;                  
; 4807 |                                                 maf_rst();             
; 4808 |                                                 EINT;                  
; 4809 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4812 |                                         dsum[k] = 0;                   
; 4813 |                                         sampcnt = CAL_SAMPLES;         
; 4814 |                                         while (sampcnt--) {            
; 4815 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4816 |                                                         delay_us(1);
;     |                  // wait                                               
; 4819 |                                                 cntp = ad7738_getraw();
; 4820 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4824 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4825 |                                 DINT;                                  
; 4826 |                                 maf_rst();                             
; 4827 |                                 EINT;                                  
; 4829 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4830 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4831 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4832 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4834 |                                 bincmdresult = OK_SendResult;          
; 4835 |                                 break;                                 
; 4837 |                         default:                                       
; 4839 |                                 bincmdresult = Error_Invalid;          
; 4840 |                                 break;                                 
; 4842 |                         lcd_clear();                                   
; 4843 |                         update_units();                                
; 4845 |                         if (bincmdresult != OK_SendResult) {           
; 4846 |                                 break;                                 
; 4848 |                         for (i = 0; i < cmdlen; i++) {                 
; 4849 |                                 buff[i] = cmdbuff[i];                  
; 4851 |                         j = cmdlen;                                    
; 4852 |                         break;                                         
; 4854 |                 case StartSCShuntRd:                                   
; 4856 |                         if (cmdlen < 5) {                              
; 4857 |                                 bincmdresult = Error_Invalid;          
; 4858 |                                 break;                                 
; 4860 |                         k = 2;                                         
; 4861 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4862 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4863 |                                 bincmdresult = Error_Invalid;          
; 4864 |                                 break;                                 
; 4867 |                         lcd_clear();                                   
; 4868 |                         lcd_puts("Sensor Calibration..", 0);           
; 4869 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4870 |                         lcd_puts(buff, 20);                            
; 4871 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4872 |                         lcd_puts(buff, 40);                            
; 4873 |                         lcd_puts("Reading shunt value...", 60);        
; 4875 |                         for (k = 0; k < 2; k++) {                      
; 4876 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4878 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4879 |                                         for (i = 0; i < 50; i++) {     
; 4880 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4882 |                                         DINT;                          
; 4883 |                                         maf_rst();                     
; 4884 |                                         EINT;                          
; 4885 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4888 |                                 dsum[k] = 0;                           
; 4889 |                                 sampcnt = CAL_SAMPLES;                 
; 4890 |                                 while (sampcnt--) {                    
; 4891 |                                         while (0 == ad7738_rawrdy()) { 
; 4892 |                                                 delay_us(1);
;     |          // wait                                                       
; 4895 |                                         cntp = ad7738_getraw();        
; 4896 |                                         dsum[k] += cntp->adc[ch];      
; 4898 |                                 dsum[k] /= CAL_SAMPLES;                
; 4900 |                                 pt = 0;                                
; 4901 |                                 if (tsensor.points > 2) {              
; 4902 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4903 |                                                 pt++;                  
; 4906 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4907 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4910 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4911 |                         DINT;                                          
; 4912 |                         maf_rst();                                     
; 4913 |                         EINT;                                          
; 4915 |                         tsensor.shunt = volt[1] - volt[0];             
; 4917 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4919 |                         DINT;                                          
; 4920 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4921 |                                         sizeof(sconf_t));              
; 4923 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4925 |                         ad7738_setcal();                               
; 4926 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4927 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4928 |                         EINT;                                          
; 4930 |                         unsaved = 1;                                   
; 4932 |                         lcd_clear();                                   
; 4933 |                         update_units();                                
; 4935 |                         for (i = 0; i < cmdlen; i++) {                 
; 4936 |                                 buff[i] = cmdbuff[i];                  
; 4938 |                         j = cmdlen;                                    
; 4939 |                         bincmdresult = OK_SendResult;                  
; 4940 |                         break;                                         
; 4942 |                 case SetSensorName:                                    
; 4944 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4945 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4946 |                                 bincmdresult = Error_Invalid;          
; 4947 |                                 break;                                 
; 4949 |                         ss = cmdbuff[2];                               
; 4950 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4952 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4953 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4954 |                         for (i = 0; i < slen; i++) {                   
; 4955 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4957 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4958 |                         unsaved = 1;                                   
; 4960 |                         // sensor name/label                           
; 4961 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4962 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4963 |                         for (i = 0; i < slen; i++) {                   
; 4964 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4967 |                         bincmdresult = OK_SendResult;                  
; 4968 |                         break;                                         
; 4970 |                 case SetSensorOUnit:                                   
; 4972 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4973 |                                 bincmdresult = Error_Invalid;          
; 4974 |                                 break;                                 
; 4977 |                         ss = cmdbuff[2];                               
; 4978 |                         pt = cmdbuff[3];                               
; 4980 |                         if (pt != UNIT_PC                              
; 4981 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 4982 |                                 bincmdresult = Error_Invalid;          
; 4983 |                                 break;                                 
; 4986 |                         conf_data.sensor[ss].ounit = pt;               
; 4987 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4988 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 4990 |                         if (pt == UNIT_PC) {                           
; 4991 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 4992 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 4993 |                         } else if (conf_data.sensor[ss].ounit          
; 4994 |                                         == conf_data.sensor[ss].unit) {
; 4995 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 4996 |                         } else {                                       
; 4997 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 4998 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5000 |                                         if (pt == UNIT_KG) {           
; 5001 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5003 |                                         break;                         
; 5005 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5007 |                                         if (pt == UNIT_LB) {           
; 5008 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5010 |                                         break;                         
; 5012 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5014 |                                         switch (pt) {                  
; 5015 |                                         case UNIT_CM:                  
; 5016 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5017 |                                                 break;                 
; 5018 |                                         case UNIT_MM:                  
; 5019 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5020 |                                                 break;                 
; 5022 |                                         break;                         
; 5024 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5026 |                                         switch (pt) {                  
; 5027 |                                         case UNIT_IN:                  
; 5028 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5029 |                                                 break;                 
; 5030 |                                         case UNIT_MM:                  
; 5031 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5032 |                                                 break;                 
; 5034 |                                         break;                         
; 5036 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5038 |                                         switch (pt) {                  
; 5039 |                                         case UNIT_IN:                  
; 5040 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5041 |                                                 break;                 
; 5042 |                                         case UNIT_CM:                  
; 5043 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5044 |                                                 break;                 
; 5046 |                                         break;                         
; 5048 |                                 default:                               
; 5050 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5051 |                                         break;                         
; 5055 |                         unsaved = 1;                                   
; 5057 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5058 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5059 |                                         update_units();                
; 5060 |                                         DINT;                          
; 5061 |                                         ad7738_setcal();               
; 5062 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5063 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5064 |                                         EINT;                          
; 5068 |                         bincmdresult = OK_SendResult;                  
; 5069 |                         break;                                         
; 5071 |                 case SetSensorBase:                                    
; 5073 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5074 |                                 bincmdresult = Error_Invalid;          
; 5075 |                                 break;                                 
; 5077 |                         ss = cmdbuff[2];                               
; 5078 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5080 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5081 |                         for (i = 0; i < 2; i++) {                      
; 5082 |                                 *intp = cmdbuff[j];                    
; 5083 |                                 buff[j++] = 0xff & *intp;              
; 5084 |                                 *intp += cmdbuff[j] << 8;              
; 5085 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5086 |                                 intp++;                                
; 5088 |                         unsaved = 1;                                   
; 5090 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5091 |                                 // output unit is percent              
; 5092 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5093 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5095 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5096 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5097 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5098 |                                                 DINT;                  
; 5099 |                                                 ad7738_setcal();       
; 5100 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5101 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5102 |                                                 EINT;                  
; 5107 |                         bincmdresult = OK_SendResult;                  
; 5108 |                         break;                                         
; 5110 |                 case SetQEPChannels:                                   
; 5112 |                         if (cmdlen < 6) {                              
; 5113 |                                 bincmdresult = Error_Invalid;          
; 5114 |                                 break;                                 
; 5117 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5118 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5119 |                                 for (i = 0; i < 2; i++) {              
; 5120 |                                         *intp = cmdbuff[j];            
; 5121 |                                         buff[j++] = 0xff & *intp;      
; 5122 |                                         *intp += cmdbuff[j] << 8;      
; 5123 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5124 |                                         intp++;                        
; 5128 |                         conf_data.velfilter = cmdbuff[j];              
; 5129 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5130 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5131 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5133 |                         unsaved = 1;                                   
; 5135 |                         DINT;                                          
; 5136 |                         ad7738_setcal();                               
; 5137 |                         velf_rst();                                    
; 5138 |                         EINT;                                          
; 5140 |                         bincmdresult = OK_SendResult;                  
; 5141 |                         break;                                         
; 5143 |                         //case SetEnCntperin: // not needed            
; 5144 |                         //break;                                       
; 5146 |                 case SetCurSensor:                                     
; 5148 |                         if (cmdlen < 4||                               
; 5149 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5150 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5151 |                                 bincmdresult = Error_Invalid;          
; 5152 |                                 break;                                 
; 5155 |                         ch = cmdbuff[2];                               
; 5156 |                         ss = cmdbuff[3];                               
; 5158 |                         if (autoid[ch]) {                              
; 5159 |                                 bincmdresult = Error_Exe;              
; 5160 |                                 break;                                 
; 5163 |                         DINT;                                          
; 5164 |                         conf_data.ch[ch].ci = ss;                      
; 5165 |                         ad7738_setcal();                               
; 5167 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5168 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5169 |                         EINT;                                          
; 5171 |                         update_units();                                
; 5172 |                         unsaved = 1;                                   
; 5174 |                         buff[j++] = ch;                                
; 5175 |                         buff[j++] = ss;                                
; 5176 |                         bincmdresult = OK_SendResult;                  
; 5177 |                         break;                                         
; 5179 |                 case SetAFilterSize:                                   
; 5181 |                         if (cmdlen < 4) {                              
; 5182 |                                 bincmdresult = Error_Invalid;          
; 5183 |                                 break;                                 
; 5186 |                         // filter length                               
; 5187 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5188 |                         if (temp16 > MAF_MAX) {                        
; 5189 |                                 bincmdresult = Error_Invalid;          
; 5190 |                                 break;                                 
; 5193 |                         // filter diff window                          
; 5194 |                         intp = (Uint16*) &tempft;                      
; 5195 |                         for (i = 0; i < 2; i++) {                      
; 5196 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5197 |                                 intp++;                                
; 5200 |                         DINT;                                          
; 5201 |                         conf_data.filter = temp16;                     
; 5202 |                         conf_data.diffwin = tempft;                    
; 5203 |                         maf_rst();                                     
; 5204 |                         EINT;                                          
; 5206 |                         unsaved = 1;                                   
; 5208 |                         buff[j++] = 0xff & temp16;                     
; 5209 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5211 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5212 |                         buff[j++] = 0xff & intp[0];                    
; 5213 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5214 |                         buff[j++] = 0xff & intp[1];                    
; 5215 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5217 |                         bincmdresult = OK_SendResult;                  
; 5218 |                         break;                                         
; 5220 |                 case SetAutoId:                                        
; 5222 |                         if (cmdlen < 3) {                              
; 5223 |                                 bincmdresult = Error_Invalid;          
; 5224 |                                 break;                                 
; 5227 |                         conf_data.tagiden = cmdbuff[2];                
; 5228 |                         if (!conf_data.tagiden) {                      
; 5229 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5230 |                                         tagwasthere[i] = 0;            
; 5231 |                                         autoid[i] = 0;                 
; 5233 |                                 update_units();                        
; 5235 |                         unsaved = 1;                                   
; 5237 |                         buff[j] = cmdbuff[j++];                        
; 5238 |                         bincmdresult = OK_SendResult;                  
; 5239 |                         break;                                         
; 5241 |                 case SetDisplayLine:                                   
; 5243 |                         if (cmdlen < 14) {                             
; 5244 |                                 bincmdresult = Error_Invalid;          
; 5245 |                                 break;                                 
; 5248 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5249 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5250 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5251 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5252 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5253 |                                         || cmdbuff[13] > 5) {          
; 5254 |                                 bincmdresult = Error_Invalid;          
; 5255 |                                 break;                                 
; 5258 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5259 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5260 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5261 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5262 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5263 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5264 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5266 |                         unsaved = 1;                                   
; 5268 |                         lcd_clear();                                   
; 5269 |                         update_units();                                
; 5270 |                         bincmdresult = OK_SendResult;                  
; 5271 |                         break;                                         
; 5273 |                 case SetDACCh:                                         
; 5275 |                         if (cmdlen < 42) {                             
; 5276 |                                 bincmdresult = Error_Invalid;          
; 5277 |                                 break;                                 
; 5280 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5281 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5282 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5283 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5284 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5285 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5286 |                                 bincmdresult = Error_Invalid;          
; 5287 |                                 break;                                 
; 5290 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5291 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5292 |                                 buff[j++] = conf_data.dac[i].what;     
; 5293 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5294 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5296 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5297 |                                 //{                                    
; 5298 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5299 |                                 //}                                    
; 5300 |                                 //else                                 
; 5301 |                                 //{                                    
; 5302 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5303 |                                 //}                                    
; 5304 |                                 for (k = 0; k < 2; k++) {              
; 5305 |                                         *intp = cmdbuff[j];            
; 5306 |                                         buff[j++] = 0xff & *intp;      
; 5307 |                                         *intp += cmdbuff[j] << 8;      
; 5308 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5309 |                                         intp++;                        
; 5312 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5313 |                                 //{                                    
; 5314 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5315 |                                 //}                                    
; 5316 |                                 //else                                 
; 5317 |                                 //{                                    
; 5318 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5319 |                                 //}                                    
; 5320 |                                 for (k = 0; k < 2; k++) {              
; 5321 |                                         *intp = cmdbuff[j];            
; 5322 |                                         buff[j++] = 0xff & *intp;      
; 5323 |                                         *intp += cmdbuff[j] << 8;      
; 5324 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5325 |                                         intp++;                        
; 5328 |                         unsaved = 1;                                   
; 5330 |                         DINT;                                          
; 5331 |                         ad7738_setcal();                               
; 5332 |                         EINT;                                          
; 5333 |                         bincmdresult = OK_SendResult;                  
; 5334 |                         break;                                         
; 5336 |                 case SetLIMITCh:                                       
; 5338 |                         if (cmdlen < 46) {                             
; 5339 |                                 bincmdresult = Error_Invalid;          
; 5340 |                                 break;                                 
; 5343 |                         if (cmdbuff[2]                                 
; 5344 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5345 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5346 |                                 bincmdresult = Error_Invalid;          
; 5347 |                                 break;                                 
; 5350 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5351 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5352 |                                 buff[j++] = conf_data.lim[i].what;     
; 5353 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5354 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5355 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5356 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5358 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5359 |                                 for (k = 0; k < 2; k++) {              
; 5360 |                                         *intp = cmdbuff[j];            
; 5361 |                                         buff[j++] = 0xff & *intp;      
; 5362 |                                         *intp += cmdbuff[j] << 8;      
; 5363 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5364 |                                         intp++;                        
; 5366 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5367 |                                 for (k = 0; k < 2; k++) {              
; 5368 |                                         *intp = cmdbuff[j];            
; 5369 |                                         buff[j++] = 0xff & *intp;      
; 5370 |                                         *intp += cmdbuff[j] << 8;      
; 5371 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5372 |                                         intp++;                        
; 5375 |                         unsaved = 1;                                   
; 5377 |                         DINT;                                          
; 5378 |                         ad7738_setcal();                               
; 5379 |                         EINT;                                          
; 5381 |                         bincmdresult = OK_SendResult;                  
; 5382 |                         break;                                         
; 5384 |                 case Tare:                                             
; 5386 |                         if (cmdlen < 3) {                              
; 5387 |                                 //bincmdresult = Error_Invalid;        
; 5388 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5389 |                                 ad7738_resetpeak(0xff);                
; 5390 |                                 ad7738_resetvall(0xff);                
; 5391 |                                 unsaved = 1;                           
; 5393 |                                 buff[j++] = 0xff;                      
; 5394 |                                 bincmdresult = OK_SendResult;          
; 5395 |                                 break;                                 
; 5398 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5399 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5400 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5401 |                         unsaved = 1;                                   
; 5403 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5404 |                         bincmdresult = OK_SendResult;                  
; 5405 |                         break;                                         
; 5407 |                 case ResetPkVly:                                       
; 5409 |                         if (cmdlen < 3) {                              
; 5410 |                                 bincmdresult = Error_Invalid;          
; 5411 |                                 break;                                 
; 5414 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5415 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5416 |                         unsaved = 1;                                   
; 5418 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5419 |                         bincmdresult = OK_SendResult;                  
; 5420 |                         break;                                         
; 5422 |                 case ResetPk:                                          
; 5424 |                         if (cmdlen < 3) {                              
; 5425 |                                 bincmdresult = Error_Invalid;          
; 5426 |                                 break;                                 
; 5429 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5430 |                         unsaved = 1;                                   
; 5432 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5433 |                         bincmdresult = OK_SendResult;                  
; 5434 |                         break;                                         
; 5436 |                 case ResetVly:                                         
; 5438 |                         if (cmdlen < 3) {                              
; 5439 |                                 bincmdresult = Error_Invalid;          
; 5440 |                                 break;                                 
; 5443 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5444 |                         unsaved = 1;                                   
; 5446 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5447 |                         bincmdresult = OK_SendResult;                  
; 5448 |                         break;                                         
; 5450 |                 case ResetLIMIT:                                       
; 5452 |                         if (cmdlen < 3) {                              
; 5453 |                                 bincmdresult = Error_Invalid;          
; 5454 |                                 break;                                 
; 5457 |                         k = 0x01;                                      
; 5458 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5459 |                                 if (k & cmdbuff[2]) {                  
; 5460 |                                         ad7738_resetlimit(i);          
; 5462 |                                 k <<= 1;                               
; 5464 |                         unsaved = 1;                                   
; 5466 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5467 |                         bincmdresult = OK_SendResult;                  
; 5468 |                         break;                                         
; 5470 |                 case ResetPosition:                                    
; 5472 |                         if (cmdlen < 3) {                              
; 5473 |                                 bincmdresult = Error_Invalid;          
; 5474 |                                 break;                                 
; 5477 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5478 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5479 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5480 |                         unsaved = 1;                                   
; 5482 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5483 |                         bincmdresult = OK_SendResult;                  
; 5484 |                         break;                                         
; 5486 |                 case SetShuntSwitch:                                   
; 5488 |                         if (cmdlen < 3) {                              
; 5489 |                                 bincmdresult = Error_Invalid;          
; 5490 |                                 break;                                 
; 5493 |                         shunt_switch(cmdbuff[2]);                      
; 5494 |                         unsaved = 1;                                   
; 5496 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5497 |                         bincmdresult = OK_SendResult;                  
; 5498 |                         break;                                         
; 5500 |                 case SetDirectVolt:                                    
; 5502 |                         if (cmdlen < 7) {                              
; 5503 |                                 bincmdresult = Error_Invalid;          
; 5504 |                                 break;                                 
; 5507 |                         ss = cmdbuff[j];                               
; 5508 |                         buff[j++] = ss;                                
; 5510 |                         intp = (Uint16*) &volt[0];                     
; 5511 |                         for (k = 0; k < 2; k++) {                      
; 5512 |                                 *intp = cmdbuff[j];                    
; 5513 |                                 buff[j++] = 0xff & *intp;              
; 5514 |                                 *intp += cmdbuff[j] << 8;              
; 5515 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5516 |                                 intp++;                                
; 5519 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5520 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5521 |                                 bincmdresult = Error_Invalid;          
; 5522 |                                 break;                                 
; 5525 |                         if (volt[0] < 0) {                             
; 5526 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5527 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5528 |                         } else {                                       
; 5529 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5530 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5533 |                         if (dsum[0] <= 0) {                            
; 5534 |                                 dacc[0] = 0;                           
; 5535 |                         } else if (dsum[0] >= 0xffff) {                
; 5536 |                                 dacc[0] = 0xffff;                      
; 5537 |                         } else {                                       
; 5538 |                                 dacc[0] = (Uint16) dsum[0];            
; 5541 |                         mcbsp_xmit(dacc[0], ss);                       
; 5542 |                         latch_dac();                                   
; 5544 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5545 |                         buff[j++] = 0xff & dacc[0];                    
; 5546 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5548 |                         bincmdresult = OK_SendResult;                  
; 5549 |                         break;                                         
; 5551 |                 case GetAllFlash:                                      
; 5553 |                         break;                                         
; 5555 |                 case SetAllFlash:                                      
; 5557 |                         break;                                         
; 5559 |                 case FlashMemWrite:                                    
; 5561 |                         bincmdresult = OK_SendResult;                  
; 5562 |                         if (unsaved) {                                 
; 5563 |                                 // flash writing                       
; 5564 |                                 lcd_clear();                           
; 5565 |                                 lcd_puts("Flash writing...", 0);       
; 5567 |                                 for (i = 0; i < 50; i++) {             
; 5568 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5571 |                                 DINT;                                  
; 5572 |                                 flash_ret = conf_write();              
; 5573 |                                 EINT;                                  
; 5575 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5576 |                                         lcd_puts("Done", 16);          
; 5577 |                                         unsaved = 0;                   
; 5578 |                                 } else {                               
; 5579 |                                         lcd_puts("Fail", 16);          
; 5580 |                                         bincmdresult = Error_Exe;      
; 5583 |                                 for (i = 0; i < 50; i++) {             
; 5584 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5586 |                                 lcd_clear();                           
; 5587 |                                 update_units();                        
; 5589 |                         break;                                         
; 5591 |                 case FlashMemDefault:                                  
; 5593 |                         conf_default();                                
; 5595 |                         // flash writing                               
; 5596 |                         lcd_clear();                                   
; 5597 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5599 |                         for (i = 0; i < 50; i++) {                     
; 5600 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5603 |                         DINT;                                          
; 5604 |                         flash_ret = conf_write();                      
; 5605 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5606 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5607 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5608 |                         EINT;                                          
; 5610 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5611 |                                 lcd_puts("Done", 31);                  
; 5612 |                                 unsaved = 0;                           
; 5613 |                                 bincmdresult = OK_SendResult;          
; 5614 |                         } else {                                       
; 5615 |                                 lcd_puts("Fail", 31);                  
; 5616 |                                 bincmdresult = Error_Exe;              
; 5618 |                         for (i = 0; i < 50; i++) {                     
; 5619 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5621 |                         lcd_clear();                                   
; 5622 |                         update_units();                                
; 5624 |                         break;                                         
; 5626 |                 case FlashMemRead:                                     
; 5628 |                         // flash reading                               
; 5629 |                         conf_read();                                   
; 5631 |                         DINT;                                          
; 5632 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5633 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5634 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5635 |                         EINT;                                          
; 5637 |                         unsaved = 0;                                   
; 5638 |                         update_units();                                
; 5639 |                         bincmdresult = OK_SendResult;                  
; 5640 |                         break;                                         
; 5642 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOV       *-SP[59],#0           ; [CPU_] |591| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5644 | if (cmdlen < 6) {                                                      
; 5645 |         bincmdresult = Error_Invalid;                                  
; 5646 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5644| 
        B         $C$L320,LO            ; [CPU_] |5644| 
        ; branchcc occurs ; [] |5644| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5649,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5649 | ds_dn = cmdbuff[2];                                                    
; 5650 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5649| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5651 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5651| 
	.dwpsn	file "../Source/prod.c",line 5649,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5649| 
        ADDB      ACC,#2                ; [CPU_] |5649| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5649| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5652 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5651| 
	.dwpsn	file "../Source/prod.c",line 5649,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5649| 
        MOV       *-SP[56],AL           ; [CPU_] |5649| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5651| 
        ADDB      ACC,#4                ; [CPU_] |5651| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5651| 
	.dwpsn	file "../Source/prod.c",line 5653,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5653 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5653| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5651| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5651| 
        MOV       *-SP[55],AL           ; [CPU_] |5651| 
	.dwpsn	file "../Source/prod.c",line 5653,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5655 | tempint = 0;                                                           
; 5656 | k = 0x01;                                                              
; 5657 | for (i = 0; i < 8; i++) {                                              
; 5658 |         if (ds_bm & k) {                                               
; 5659 |                 tempint++;                                             
; 5661 |         k <<= 1;                                                       
; 5664 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5665 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5666 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5667 | //                                      ds_en = 0;                     
; 5668 | //                                      bincmdresult = Error_Invalid;  
; 5669 | //                                      break;                         
; 5670 | //                              }                                      
; 5672 | ds_en = 1;                                                             
; 5673 | ds_stop = 0;                                                           
; 5674 | ds_sn = 0;                                                             
; 5676 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5677 | //                              ad7738_setlimitchgd();                 
; 5679 | for (i = 0; i < 4; i++) {                                              
; 5680 |         buff[j] = cmdbuff[j];                                          
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5653| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5653| 
        MOV       *-SP[54],AL           ; [CPU_] |5653| 
        ADDB      XAR7,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5681,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5681 | j++;                                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#91              ; [CPU_] |5681| 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5680,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5680| 
	.dwpsn	file "../Source/prod.c",line 5672,column 5,is_stmt,isa 0
        MOV       *-SP[58],#1           ; [CPU_] |5672| 
	.dwpsn	file "../Source/prod.c",line 5673,column 5,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |5673| 
	.dwpsn	file "../Source/prod.c",line 5674,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5674| 
	.dwpsn	file "../Source/prod.c",line 5681,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5683 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *+FP[AR0],#6          ; [CPU_] |5681| 
	.dwpsn	file "../Source/prod.c",line 5684,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5684 | break;                                                                 
; 5686 | case StopStream:                                                       
; 5688 | ds_stop = 1;                                                           
; 5689 | bincmdresult = OK_SendResult;                                          
; 5690 | break;                                                                 
; 5692 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5694 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L745,UNC           ; [CPU_] |5684| 
        ; branch occurs ; [] |5684| 
$C$L80:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4856,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4856| 
        B         $C$L320,LO            ; [CPU_] |4856| 
        ; branchcc occurs ; [] |4856| 
	.dwpsn	file "../Source/prod.c",line 4861,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4861| 
        MOVL      ACC,XAR4              ; [CPU_] |4861| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4861| 
        MOVZ      AR6,*-SP[62]          ; [CPU_] |4861| 
        MOVL      XAR0,#66              ; [CPU_] |4861| 
        ADDB      ACC,#2                ; [CPU_] |4861| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4861| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4861| 
        CMPL      ACC,XAR6              ; [CPU_] |4861| 
        B         $C$L320,NEQ           ; [CPU_] |4861| 
        ; branchcc occurs ; [] |4861| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] |4861| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4861| 
        CMPL      ACC,XAR6              ; [CPU_] |4861| 
        B         $C$L320,NEQ           ; [CPU_] |4861| 
        ; branchcc occurs ; [] |4861| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4861| 
        MOVL      XAR0,#64              ; [CPU_] |4861| 
        MOVL      ACC,XAR5              ; [CPU_] |4861| 
        ADDB      ACC,#4                ; [CPU_] |4861| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4861| 
        MOVB      XAR0,#36              ; [CPU_] |4861| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4861| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4861| 
        B         $C$L320,NEQ           ; [CPU_] |4861| 
        ; branchcc occurs ; [] |4861| 
	.dwpsn	file "../Source/prod.c",line 4867,column 5,is_stmt,isa 0
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4867| 
        ; call occurs [#_lcd_clear] ; [] |4867| 
	.dwpsn	file "../Source/prod.c",line 4868,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4868| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4868| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4868| 
        ; call occurs [#_lcd_puts] ; [] |4868| 
	.dwpsn	file "../Source/prod.c",line 4869,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4869| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4869| 
        MOVL      XAR0,#44              ; [CPU_] |4869| 
        ADD       AL,*-SP[62]           ; [CPU_] |4869| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4869| 
        MOV       *-SP[3],AL            ; [CPU_] |4869| 
        MOVB      AL,#1                 ; [CPU_] |4869| 
        ADD       AL,*-SP[61]           ; [CPU_] |4869| 
        MOV       *-SP[4],AL            ; [CPU_] |4869| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4869| 
        MOVL      XAR4,XAR3             ; [CPU_] |4869| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_sprintf")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4869| 
        ; call occurs [#_sprintf] ; [] |4869| 
	.dwpsn	file "../Source/prod.c",line 4870,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4870| 
        MOVL      XAR4,XAR3             ; [CPU_] |4870| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4870| 
        ; call occurs [#_lcd_puts] ; [] |4870| 
	.dwpsn	file "../Source/prod.c",line 4871,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4871| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4871| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4871| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4871| 
        MOVL      XAR0,#58              ; [CPU_] |4871| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4871| 
        MOVB      XAR1,#36              ; [CPU_] |4871| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4871| 
        ADDL      ACC,XAR6              ; [CPU_] |4871| 
        MOVL      XAR4,ACC              ; [CPU_] |4871| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4871| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4871| 
        MOVL      XAR4,XAR3             ; [CPU_] |4871| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_sprintf")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4871| 
        ; call occurs [#_sprintf] ; [] |4871| 
	.dwpsn	file "../Source/prod.c",line 4872,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4872| 
        MOVL      XAR4,XAR3             ; [CPU_] |4872| 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4872| 
        ; call occurs [#_lcd_puts] ; [] |4872| 
	.dwpsn	file "../Source/prod.c",line 4873,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4873| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4873| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4873| 
        ; call occurs [#_lcd_puts] ; [] |4873| 
        MOVL      XAR0,#78              ; [CPU_] |4873| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4873| 
        MOVZ      AR0,*-SP[62]          ; [CPU_] |4873| 
        MOV       T,*-SP[62]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[61]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4875,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4875| 
        MOVL      XAR0,#92              ; [CPU_] |4875| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4875| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4876,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4876| 
        B         $C$L83,LEQ            ; [CPU_] |4876| 
        ; branchcc occurs ; [] |4876| 
	.dwpsn	file "../Source/prod.c",line 4878,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4878| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4878| 
        ; call occurs [#_shunt_switch] ; [] |4878| 
        MOV       *-SP[52],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4880,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4880| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_delay_us")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4880| 
        ; call occurs [#_delay_us] ; [] |4880| 
        MOVZ      AR6,*-SP[52]          ; [CPU_] |4880| 
	.dwpsn	file "../Source/prod.c",line 4879,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4879| 
        MOVZ      AR0,AR6               ; [CPU_] |4879| 
        MOV       *-SP[52],AR6          ; [CPU_] |4879| 
        CMP       AR0,#-1               ; [CPU_] |4879| 
        B         $C$L82,NEQ            ; [CPU_] |4879| 
        ; branchcc occurs ; [] |4879| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4883,column 7,is_stmt,isa 0
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_maf_rst")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4883| 
        ; call occurs [#_maf_rst] ; [] |4883| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4885,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4885| 
        SPM       #0                    ; [CPU_] 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_delay_us")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4885| 
        ; call occurs [#_delay_us] ; [] |4885| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4888| 
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4889| 
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4888| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4888| 
	.dwpsn	file "../Source/prod.c",line 4890,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4890| 
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4890,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4890| 
        MOVB      ACC,#0                ; [CPU_] |4890| 
        SUBB      ACC,#1                ; [CPU_] |4890| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4890| 
        B         $C$L86,EQ             ; [CPU_] |4890| 
        ; branchcc occurs ; [] |4890| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4891,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4891| 
        ; branch occurs ; [] |4891| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4892,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4892| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_delay_us")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4892| 
        ; call occurs [#_delay_us] ; [] |4892| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4891,column 14,is_stmt,isa 0
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4891| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4891| 
        CMPB      AL,#0                 ; [CPU_] |4891| 
        B         $C$L84,EQ             ; [CPU_] |4891| 
        ; branchcc occurs ; [] |4891| 
	.dwpsn	file "../Source/prod.c",line 4895,column 7,is_stmt,isa 0
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4895| 
        ; call occurs [#_ad7738_getraw] ; [] |4895| 
	.dwpsn	file "../Source/prod.c",line 4896,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4896| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4896| 
        ADDL      XAR4,ACC              ; [CPU_] |4896| 
        MOVL      XAR0,#34              ; [CPU_] |4896| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4896| 
        MOVL      XAR0,#34              ; [CPU_] |4896| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4896| 
        ASR64     ACC:P,16              ; [CPU_] |4896| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4896| 
        MOVL      XAR0,#34              ; [CPU_] |4896| 
        ASR64     ACC:P,16              ; [CPU_] |4896| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4896| 
        MOVL      XAR0,#34              ; [CPU_] |4896| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4896| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4896| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4896| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4896| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4896| 
	.dwpsn	file "../Source/prod.c",line 4890,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4890| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4890| 
        MOVB      ACC,#0                ; [CPU_] |4890| 
        SUBB      ACC,#1                ; [CPU_] |4890| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4890| 
        B         $C$L85,NEQ            ; [CPU_] |4890| 
        ; branchcc occurs ; [] |4890| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4898,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4898| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4898| 
        MOV       *-SP[2],#0            ; [CPU_] |4898| 
        MOV       *-SP[1],#0            ; [CPU_] |4898| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4898| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4898| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4898| 
        ; call occurs [#LL$$DIV] ; [] |4898| 
	.dwpsn	file "../Source/prod.c",line 4901,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4901| 
        MOVB      XAR0,#46              ; [CPU_] |4901| 
	.dwpsn	file "../Source/prod.c",line 4898,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4898| 
	.dwpsn	file "../Source/prod.c",line 4900,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4900| 
	.dwpsn	file "../Source/prod.c",line 4898,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4898| 
	.dwpsn	file "../Source/prod.c",line 4901,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4901| 
        CMPB      AL,#2                 ; [CPU_] |4901| 
        B         $C$L89,LEQ            ; [CPU_] |4901| 
        ; branchcc occurs ; [] |4901| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4902,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4902| 
        ; branch occurs ; [] |4902| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4903,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4903| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4902,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4902| 
        B         $C$L89,HIS            ; [CPU_] |4902| 
        ; branchcc occurs ; [] |4902| 
        MOVB      AL,#1                 ; [CPU_] |4902| 
        ADD       AL,AR4                ; [CPU_] |4902| 
        MOVZ      AR5,AL                ; [CPU_] |4902| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4902| 
        ADDL      ACC,XAR1              ; [CPU_] |4902| 
        MOVL      XAR6,ACC              ; [CPU_] |4902| 
        MOVB      XAR0,#72              ; [CPU_] |4902| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4902| 
        MOVL      XAR0,#32              ; [CPU_] |4902| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4902| 
        MOVL      XAR0,#32              ; [CPU_] |4902| 
        ASR64     ACC:P,16              ; [CPU_] |4902| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4902| 
        MOVL      XAR0,#32              ; [CPU_] |4902| 
        ASR64     ACC:P,16              ; [CPU_] |4902| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4902| 
        MOVL      *-SP[4],P             ; [CPU_] |4902| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4902| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4902| 
        MOVL      P,*-SP[32]            ; [CPU_] |4902| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$560, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4902| 
        ; call occurs [#LL$$CMP] ; [] |4902| 
        CMPB      AL,#0                 ; [CPU_] |4902| 
        B         $C$L87,GT             ; [CPU_] |4902| 
        ; branchcc occurs ; [] |4902| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4906,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4906| 
        ADDL      ACC,XAR1              ; [CPU_] |4906| 
        MOVL      XAR4,ACC              ; [CPU_] |4906| 
        MOVL      XAR0,#88              ; [CPU_] |4906| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4906| 
        MOVB      XAR0,#96              ; [CPU_] |4906| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4906| 
        MOVL      XAR0,#38              ; [CPU_] |4906| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4906| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4906| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4906| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4906| 
        ; call occurs [#FS$$MPY] ; [] |4906| 
        MOVL      XAR0,#30              ; [CPU_] |4906| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4906| 
        MOVL      P,*XAR3++             ; [CPU_] |4906| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4906| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4906| 
        ; call occurs [#LL$$TOFS] ; [] |4906| 
        MOVL      XAR0,#30              ; [CPU_] |4906| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4906| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4906| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4906| 
        ; call occurs [#FS$$MPY] ; [] |4906| 
        MOVL      XAR0,#88              ; [CPU_] |4906| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4906| 
        MOVB      XAR1,#118             ; [CPU_] |4906| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4906| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4906| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4906| 
        ; call occurs [#FS$$ADD] ; [] |4906| 
        MOVL      XAR0,#36              ; [CPU_] |4906| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4906| 
        MOVL      XAR0,#36              ; [CPU_] |4906| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4906| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4906| 
        MOVL      XAR0,#92              ; [CPU_] |4906| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4906| 
	.dwpsn	file "../Source/prod.c",line 4875,column 17,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |4875| 
        ADDB      AL,#1                 ; [CPU_] |4875| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4875| 
        CMPB      AL,#2                 ; [CPU_] |4875| 
        B         $C$L81,LT             ; [CPU_] |4875| 
        ; branchcc occurs ; [] |4875| 
	.dwpsn	file "../Source/prod.c",line 4910,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4910| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4910| 
        ; call occurs [#_shunt_switch] ; [] |4910| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4912,column 5,is_stmt,isa 0
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_maf_rst")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4912| 
        ; call occurs [#_maf_rst] ; [] |4912| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4915,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4915| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4915| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4915| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4915| 
        ; call occurs [#FS$$SUB] ; [] |4915| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4915| 
        MOVL      XAR0,#36              ; [CPU_] |4915| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4915| 
        MOVB      XAR0,#140             ; [CPU_] |4915| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4915| 
        MOV       AL,*-SP[62]           ; [CPU_] |4915| 
	.dwpsn	file "../Source/prod.c",line 4917,column 5,is_stmt,isa 0
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_tagid")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4917| 
        ; call occurs [#_tagid] ; [] |4917| 
        MOVL      XAR4,XAR1             ; [CPU_] |4917| 
        ADDB      XAR4,#32              ; [CPU_] |4917| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4917| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4917| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4920,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4920| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4920| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4920| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4920| 
        MOV       AL,*-SP[61]           ; [CPU_] |4920| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4923,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4923| 
	.dwpsn	file "../Source/prod.c",line 4925,column 5,is_stmt,isa 0
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4925| 
        ; call occurs [#_ad7738_setcal] ; [] |4925| 
        MOVZ      AR1,*-SP[51]          ; [CPU_] |4925| 
	.dwpsn	file "../Source/prod.c",line 4926,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4926| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4926| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4926| 
        MOV       AL,AR1                ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4927,column 5,is_stmt,isa 0
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4927| 
        ; call occurs [#_ad7738_resetvall] ; [] |4927| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4932,column 5,is_stmt,isa 0
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4932| 
        ; call occurs [#_lcd_clear] ; [] |4932| 
	.dwpsn	file "../Source/prod.c",line 4933,column 5,is_stmt,isa 0
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_update_units")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4933| 
        ; call occurs [#_update_units] ; [] |4933| 
        MOVL      XAR0,#42              ; [CPU_] |4933| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4933| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4935,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4935| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4936,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4936| 
	.dwpsn	file "../Source/prod.c",line 4935,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4936,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4936| 
	.dwpsn	file "../Source/prod.c",line 4935,column 17,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4936,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4936| 
	.dwpsn	file "../Source/prod.c",line 4935,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4935| 
        B         $C$L90,HI             ; [CPU_] |4935| 
        ; branchcc occurs ; [] |4935| 
	.dwpsn	file "../Source/prod.c",line 4940,column 5,is_stmt,isa 0
        B         $C$L179,UNC           ; [CPU_] |4940| 
        ; branch occurs ; [] |4940| 
$C$L91:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4710,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4710| 
        B         $C$L320,LO            ; [CPU_] |4710| 
        ; branchcc occurs ; [] |4710| 
	.dwpsn	file "../Source/prod.c",line 4715,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4715| 
        MOVL      XAR0,#66              ; [CPU_] |4715| 
        MOVZ      AR6,*-SP[62]          ; [CPU_] |4715| 
        ADDB      ACC,#2                ; [CPU_] |4715| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4715| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4715| 
        CMPL      ACC,XAR6              ; [CPU_] |4715| 
        B         $C$L320,NEQ           ; [CPU_] |4715| 
        ; branchcc occurs ; [] |4715| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] |4715| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4715| 
        CMPL      ACC,XAR6              ; [CPU_] |4715| 
        B         $C$L320,NEQ           ; [CPU_] |4715| 
        ; branchcc occurs ; [] |4715| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4715| 
        MOVL      XAR0,#64              ; [CPU_] |4715| 
        MOVL      ACC,XAR5              ; [CPU_] |4715| 
        ADDB      ACC,#4                ; [CPU_] |4715| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4715| 
        MOVB      XAR0,#36              ; [CPU_] |4715| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4715| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4715| 
        B         $C$L320,NEQ           ; [CPU_] |4715| 
        ; branchcc occurs ; [] |4715| 
	.dwpsn	file "../Source/prod.c",line 4721,column 5,is_stmt,isa 0
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4721| 
        ; call occurs [#_lcd_clear] ; [] |4721| 
	.dwpsn	file "../Source/prod.c",line 4722,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4722| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4722| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4722| 
        ; call occurs [#_lcd_puts] ; [] |4722| 
	.dwpsn	file "../Source/prod.c",line 4723,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4723| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4723| 
        MOVL      XAR0,#44              ; [CPU_] |4723| 
        ADD       AL,*-SP[62]           ; [CPU_] |4723| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4723| 
        MOV       *-SP[3],AL            ; [CPU_] |4723| 
        MOVB      AL,#1                 ; [CPU_] |4723| 
        ADD       AL,*-SP[61]           ; [CPU_] |4723| 
        MOV       *-SP[4],AL            ; [CPU_] |4723| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4723| 
        MOVL      XAR4,XAR1             ; [CPU_] |4723| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_sprintf")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4723| 
        ; call occurs [#_sprintf] ; [] |4723| 
	.dwpsn	file "../Source/prod.c",line 4724,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4723,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4723| 
	.dwpsn	file "../Source/prod.c",line 4724,column 5,is_stmt,isa 0
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4724| 
        ; call occurs [#_lcd_puts] ; [] |4724| 
	.dwpsn	file "../Source/prod.c",line 4725,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4725| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4725| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4725| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4725| 
        MOVL      XAR0,#58              ; [CPU_] |4725| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4725| 
        MOVB      XAR1,#36              ; [CPU_] |4725| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4725| 
        ADDL      ACC,XAR6              ; [CPU_] |4725| 
        MOVL      XAR4,ACC              ; [CPU_] |4725| 
        MOVL      XAR0,#44              ; [CPU_] |4725| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4725| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4725| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4725| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_sprintf")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4725| 
        ; call occurs [#_sprintf] ; [] |4725| 
        MOVL      XAR0,#44              ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4726,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4725,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4725| 
	.dwpsn	file "../Source/prod.c",line 4726,column 5,is_stmt,isa 0
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4726| 
        ; call occurs [#_lcd_puts] ; [] |4726| 
	.dwpsn	file "../Source/prod.c",line 4728,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4728| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4728| 
        MOVB      XAR1,#36              ; [CPU_] |4728| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4728| 
        CMPB      AL,#1                 ; [CPU_] |4728| 
        B         $C$L92,EQ             ; [CPU_] |4728| 
        ; branchcc occurs ; [] |4728| 
        CMPB      AL,#2                 ; [CPU_] |4728| 
        B         $C$L105,EQ            ; [CPU_] |4728| 
        ; branchcc occurs ; [] |4728| 
        CMPB      AL,#3                 ; [CPU_] |4728| 
        B         $C$L96,EQ             ; [CPU_] |4728| 
        ; branchcc occurs ; [] |4728| 
        B         $C$L112,UNC           ; [CPU_] |4728| 
        ; branch occurs ; [] |4728| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4732,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4732| 
        MOVB      AL,#60                ; [CPU_] |4732| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4732| 
        ; call occurs [#_lcd_puts] ; [] |4732| 
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4734| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4735| 
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4736,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4736| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4735| 
        MOV       T,*-SP[62]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4736,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4736| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4736| 
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4736,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4736| 
        SUBB      ACC,#1                ; [CPU_] |4736| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4736| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4736| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4736| 
        ; branchcc occurs ; [] |4736| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4737,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4737| 
        ; branch occurs ; [] |4737| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4738,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4738| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_delay_us")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4738| 
        ; call occurs [#_delay_us] ; [] |4738| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4737,column 14,is_stmt,isa 0
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4737| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4737| 
        CMPB      AL,#0                 ; [CPU_] |4737| 
        B         $C$L93,EQ             ; [CPU_] |4737| 
        ; branchcc occurs ; [] |4737| 
	.dwpsn	file "../Source/prod.c",line 4741,column 7,is_stmt,isa 0
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4741| 
        ; call occurs [#_ad7738_getraw] ; [] |4741| 
	.dwpsn	file "../Source/prod.c",line 4742,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4742| 
        ADDL      XAR4,ACC              ; [CPU_] |4742| 
        MOVL      XAR0,#28              ; [CPU_] |4742| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4742| 
        MOVL      XAR0,#28              ; [CPU_] |4742| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4742| 
        ASR64     ACC:P,16              ; [CPU_] |4742| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4742| 
        MOVL      XAR0,#28              ; [CPU_] |4742| 
        ASR64     ACC:P,16              ; [CPU_] |4742| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4742| 
        MOVL      XAR0,#28              ; [CPU_] |4742| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4742| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4742| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4742| 
        MOVL      *-SP[32],P            ; [CPU_] |4742| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4742| 
	.dwpsn	file "../Source/prod.c",line 4736,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4736| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4736| 
        MOVB      ACC,#0                ; [CPU_] |4736| 
        SUBB      ACC,#1                ; [CPU_] |4736| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4736| 
        B         $C$L94,NEQ            ; [CPU_] |4736| 
        ; branchcc occurs ; [] |4736| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4744| 
	.dwpsn	file "../Source/prod.c",line 4748,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4748| 
        ; branch occurs ; [] |4748| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4797,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4797| 
        MOVB      AL,#60                ; [CPU_] |4797| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4797| 
        ; call occurs [#_lcd_puts] ; [] |4797| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[62]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4799,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4799| 
        MOVL      XAR0,#92              ; [CPU_] |4799| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4799| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4800,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4800| 
        B         $C$L99,LEQ            ; [CPU_] |4800| 
        ; branchcc occurs ; [] |4800| 
	.dwpsn	file "../Source/prod.c",line 4802,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4802| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4802| 
        ; call occurs [#_shunt_switch] ; [] |4802| 
        MOV       *-SP[51],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4804,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4804| 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_delay_us")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4804| 
        ; call occurs [#_delay_us] ; [] |4804| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4803| 
        MOVZ      AR0,AR6               ; [CPU_] |4803| 
        MOV       *-SP[51],AR6          ; [CPU_] |4803| 
        CMP       AR0,#-1               ; [CPU_] |4803| 
        B         $C$L98,NEQ            ; [CPU_] |4803| 
        ; branchcc occurs ; [] |4803| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4807,column 8,is_stmt,isa 0
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_maf_rst")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4807| 
        ; call occurs [#_maf_rst] ; [] |4807| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4809,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4809| 
        SPM       #0                    ; [CPU_] 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_delay_us")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4809| 
        ; call occurs [#_delay_us] ; [] |4809| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4812,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4812| 
	.dwpsn	file "../Source/prod.c",line 4813,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4813| 
	.dwpsn	file "../Source/prod.c",line 4812,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4812| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4812| 
	.dwpsn	file "../Source/prod.c",line 4814,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4814| 
	.dwpsn	file "../Source/prod.c",line 4813,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4814,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4814| 
        MOVB      ACC,#0                ; [CPU_] |4814| 
        SUBB      ACC,#1                ; [CPU_] |4814| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4814| 
        B         $C$L101,EQ            ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4815,column 15,is_stmt,isa 0
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4815| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4815| 
        CMPB      AL,#0                 ; [CPU_] |4815| 
        B         $C$L104,EQ            ; [CPU_] |4815| 
        ; branchcc occurs ; [] |4815| 
	.dwpsn	file "../Source/prod.c",line 4819,column 8,is_stmt,isa 0
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4819| 
        ; call occurs [#_ad7738_getraw] ; [] |4819| 
	.dwpsn	file "../Source/prod.c",line 4820,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4820| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4820| 
        ADDL      XAR4,ACC              ; [CPU_] |4820| 
        MOVL      XAR0,#26              ; [CPU_] |4820| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4820| 
        MOVL      XAR0,#26              ; [CPU_] |4820| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4820| 
        ASR64     ACC:P,16              ; [CPU_] |4820| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4820| 
        MOVL      XAR0,#26              ; [CPU_] |4820| 
        ASR64     ACC:P,16              ; [CPU_] |4820| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4820| 
        MOVL      XAR0,#26              ; [CPU_] |4820| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4820| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4820| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4820| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4820| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4820| 
	.dwpsn	file "../Source/prod.c",line 4814,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4814| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4814| 
        MOVB      ACC,#0                ; [CPU_] |4814| 
        SUBB      ACC,#1                ; [CPU_] |4814| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4814| 
        B         $C$L100,NEQ           ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4799,column 18,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |4799| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4799| 
        ADDB      XAR1,#4               ; [CPU_] |4799| 
        MOVL      XAR0,#92              ; [CPU_] |4799| 
        ADDB      AL,#1                 ; [CPU_] |4799| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4799| 
        CMPB      AL,#2                 ; [CPU_] |4799| 
        B         $C$L97,LT             ; [CPU_] |4799| 
        ; branchcc occurs ; [] |4799| 
	.dwpsn	file "../Source/prod.c",line 4824,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4824| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4824| 
        ; call occurs [#_shunt_switch] ; [] |4824| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4826,column 6,is_stmt,isa 0
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("_maf_rst")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4826| 
        ; call occurs [#_maf_rst] ; [] |4826| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4829,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4829| 
        MOV       AH,#17948             ; [CPU_] |4829| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4829| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4829| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4829| 
        ; call occurs [#FS$$MPY] ; [] |4829| 
        MOVL      XAR1,ACC              ; [CPU_] |4829| 
        MOVL      P,*-SP[28]            ; [CPU_] |4829| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4829| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4829| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4829| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4829| 
        ; call occurs [#LL$$TOFS] ; [] |4829| 
        MOVL      XAR0,#88              ; [CPU_] |4829| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4829| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4829| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4829| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4829| 
        ; call occurs [#FS$$MPY] ; [] |4829| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4829| 
        MOVL      ACC,XAR1              ; [CPU_] |4829| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4829| 
        ; call occurs [#FS$$DIV] ; [] |4829| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4829| 
        MOVB      XAR0,#96              ; [CPU_] |4829| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4829| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4831,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4831| 
        MOVL      XAR0,#52              ; [CPU_] |4831| 
        ADDB      ACC,#96               ; [CPU_] |4831| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4831| 
        MOVL      XAR0,#88              ; [CPU_] |4831| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4831| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4831| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4831| 
        ; call occurs [#FS$$NEG] ; [] |4831| 
        MOVB      XAR0,#96              ; [CPU_] |4831| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4831| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4831| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4831| 
        ; call occurs [#FS$$MPY] ; [] |4831| 
        MOVL      XAR1,ACC              ; [CPU_] |4831| 
        MOVL      P,*-SP[32]            ; [CPU_] |4831| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4831| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4831| 
        ; call occurs [#LL$$TOFS] ; [] |4831| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4831| 
        MOVL      ACC,XAR1              ; [CPU_] |4831| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4831| 
        ; call occurs [#FS$$MPY] ; [] |4831| 
        MOVL      XAR6,ACC              ; [CPU_] |4831| 
        MOV       AL,#16384             ; [CPU_] |4831| 
        MOV       AH,#17948             ; [CPU_] |4831| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4831| 
        MOVL      ACC,XAR6              ; [CPU_] |4831| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4831| 
        ; call occurs [#FS$$DIV] ; [] |4831| 
        MOVL      XAR0,#36              ; [CPU_] |4831| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4831| 
        MOVB      XAR1,#118             ; [CPU_] |4831| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4831| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4834,column 6,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4835,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4835| 
        ; branch occurs ; [] |4835| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4816,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4816| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_delay_us")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4816| 
        ; call occurs [#_delay_us] ; [] |4816| 
	.dwpsn	file "../Source/prod.c",line 4815,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4815| 
        ; branch occurs ; [] |4815| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4752,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4752,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4752| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4753| 
        MOVZ      AR5,AR5               ; [CPU_] |4753| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4755,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4755| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4755| 
        MOV       *XAR5++,AL            ; [CPU_] |4755| 
	.dwpsn	file "../Source/prod.c",line 4756,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4754,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4754| 
        ; branchcc occurs ; [] |4754| 
	.dwpsn	file "../Source/prod.c",line 4759,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4759| 
        MOVB      XAR0,#46              ; [CPU_] |4759| 
        MOV       AL,*-SP[51]           ; [CPU_] |4759| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4759| 
        B         $C$L112,HIS           ; [CPU_] |4759| 
        ; branchcc occurs ; [] |4759| 
        MOVL      XAR0,#36              ; [CPU_] |4759| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4759| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4759| 
        ADDL      ACC,XAR6              ; [CPU_] |4759| 
        ADDB      ACC,#48               ; [CPU_] |4759| 
        MOVL      XAR1,ACC              ; [CPU_] |4759| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4759| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4759| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4759| 
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4759| 
        ; call occurs [#FS$$CMP] ; [] |4759| 
        CMPB      AL,#0                 ; [CPU_] |4759| 
        B         $C$L112,NEQ           ; [CPU_] |4759| 
        ; branchcc occurs ; [] |4759| 
	.dwpsn	file "../Source/prod.c",line 4763,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4763| 
        MOVB      AL,#1                 ; [CPU_] |4763| 
        MOVL      XAR0,#44              ; [CPU_] |4763| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4763| 
        ADD       AL,*-SP[51]           ; [CPU_] |4763| 
        MOV       *-SP[3],AL            ; [CPU_] |4763| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4763| 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_sprintf")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4763| 
        ; call occurs [#_sprintf] ; [] |4763| 
        MOVL      XAR0,#44              ; [CPU_] |4763| 
	.dwpsn	file "../Source/prod.c",line 4764,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4764| 
	.dwpsn	file "../Source/prod.c",line 4763,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4763| 
	.dwpsn	file "../Source/prod.c",line 4764,column 6,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4764| 
        ; call occurs [#_lcd_puts] ; [] |4764| 
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4767| 
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4768,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4768| 
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4768,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4768| 
        MOVB      ACC,#0                ; [CPU_] |4768| 
        SUBB      ACC,#1                ; [CPU_] |4768| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4768| 
        B         $C$L108,EQ            ; [CPU_] |4768| 
        ; branchcc occurs ; [] |4768| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4769,column 14,is_stmt,isa 0
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4769| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4769| 
        CMPB      AL,#0                 ; [CPU_] |4769| 
        B         $C$L111,EQ            ; [CPU_] |4769| 
        ; branchcc occurs ; [] |4769| 
	.dwpsn	file "../Source/prod.c",line 4773,column 7,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4773| 
        ; call occurs [#_ad7738_getraw] ; [] |4773| 
	.dwpsn	file "../Source/prod.c",line 4774,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4774| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4774| 
        ADDL      XAR4,ACC              ; [CPU_] |4774| 
        MOVL      XAR0,#24              ; [CPU_] |4774| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4774| 
        MOVL      XAR0,#24              ; [CPU_] |4774| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4774| 
        ASR64     ACC:P,16              ; [CPU_] |4774| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4774| 
        MOVL      XAR0,#24              ; [CPU_] |4774| 
        ASR64     ACC:P,16              ; [CPU_] |4774| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4774| 
        MOVL      XAR0,#24              ; [CPU_] |4774| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4774| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4774| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4774| 
        MOVL      *-SP[32],P            ; [CPU_] |4774| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4774| 
	.dwpsn	file "../Source/prod.c",line 4768,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4768| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4768| 
        MOVB      ACC,#0                ; [CPU_] |4768| 
        SUBB      ACC,#1                ; [CPU_] |4768| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4768| 
        B         $C$L107,NEQ           ; [CPU_] |4768| 
        ; branchcc occurs ; [] |4768| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4776,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4776| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4776| 
        MOV       *-SP[2],#0            ; [CPU_] |4776| 
        MOV       *-SP[1],#0            ; [CPU_] |4776| 
        MOVL      P,*-SP[32]            ; [CPU_] |4776| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4776| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4776| 
        ; call occurs [#LL$$DIV] ; [] |4776| 
        ADDB      XAR1,#24              ; [CPU_] |4776| 
	.dwpsn	file "../Source/prod.c",line 4778,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4778| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4778| 
	.dwpsn	file "../Source/prod.c",line 4776,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4776| 
	.dwpsn	file "../Source/prod.c",line 4778,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4778| 
        MOV       AL,*-SP[51]           ; [CPU_] |4778| 
        SUB       AL,AR6                ; [CPU_] |4778| 
        MOVZ      AR7,AL                ; [CPU_] |4778| 
        MOVL      XAR4,#65535           ; [CPU_U] |4778| 
        MOVL      ACC,XAR4              ; [CPU_] |4778| 
        CMPL      ACC,XAR7              ; [CPU_] |4778| 
        B         $C$L103,NEQ           ; [CPU_] |4778| 
        ; branchcc occurs ; [] |4778| 
	.dwpsn	file "../Source/prod.c",line 4781,column 12,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |4781| 
        B         $C$L110,UNC           ; [CPU_] |4781| 
        ; branch occurs ; [] |4781| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4782,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4782| 
        MOVB      AL,#10                ; [CPU_] |4782| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4782| 
        MOV       T,*-SP[62]            ; [CPU_] |4782| 
        MPYU      ACC,T,AL              ; [CPU_] |4782| 
        MOVL      XAR0,#88              ; [CPU_] |4782| 
        ADDL      ACC,XAR6              ; [CPU_] |4782| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4782| 
        MOVL      XAR0,#36              ; [CPU_] |4782| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4782| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |4782| 
        MOV       ACC,AL << 1           ; [CPU_] |4782| 
        ADDL      ACC,XAR6              ; [CPU_] |4782| 
        MOVL      XAR3,ACC              ; [CPU_] |4782| 
        MOVB      XAR0,#48              ; [CPU_] |4782| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4782| 
        MOVB      XAR0,#50              ; [CPU_] |4782| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4782| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4782| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4782| 
        ; call occurs [#FS$$SUB] ; [] |4782| 
        MOVL      XAR0,#42              ; [CPU_] |4782| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4782| 
        MOVB      XAR0,#74              ; [CPU_] |4782| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4782| 
        MOVB      XAR0,#72              ; [CPU_] |4782| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4782| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4782| 
        ; call occurs [#L$$TOFS] ; [] |4782| 
        MOVL      XAR0,#42              ; [CPU_] |4782| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4782| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4782| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4782| 
        ; call occurs [#FS$$DIV] ; [] |4782| 
        MOVL      XAR0,#88              ; [CPU_] |4782| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4782| 
        MOVB      XAR1,#44              ; [CPU_] |4782| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4782| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4782| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4782| 
        ; call occurs [#FS$$DIV] ; [] |4782| 
        MOVB      XAR0,#96              ; [CPU_] |4782| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4782| 
	.dwpsn	file "../Source/prod.c",line 4786,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4786| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4786| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4786| 
        MOVB      XAR1,#44              ; [CPU_] |4786| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4786| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4786| 
        ; call occurs [#FS$$MPY] ; [] |4786| 
        MOVL      XAR0,#88              ; [CPU_] |4786| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4786| 
        MOVB      XAR0,#72              ; [CPU_] |4786| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4786| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4786| 
        ; call occurs [#L$$TOFS] ; [] |4786| 
        MOVL      XAR0,#88              ; [CPU_] |4786| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4786| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4786| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4786| 
        ; call occurs [#FS$$MPY] ; [] |4786| 
        MOVB      XAR0,#48              ; [CPU_] |4786| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4786| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4786| 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4786| 
        ; call occurs [#FS$$SUB] ; [] |4786| 
        MOVB      XAR0,#118             ; [CPU_] |4786| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4786| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4781,column 43,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |4781| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4781,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4781| 
        ADDB      AL,#-1                ; [CPU_] |4781| 
        CMP       AL,*-SP[51]           ; [CPU_] |4781| 
        B         $C$L109,GT            ; [CPU_] |4781| 
        ; branchcc occurs ; [] |4781| 
	.dwpsn	file "../Source/prod.c",line 4793,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4793| 
        ; branch occurs ; [] |4793| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4770,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4770| 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_delay_us")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4770| 
        ; call occurs [#_delay_us] ; [] |4770| 
	.dwpsn	file "../Source/prod.c",line 4769,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4769| 
        ; branch occurs ; [] |4769| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4760,column 7,is_stmt,isa 0
        MOV       *-SP[51],#2           ; [CPU_] |4760| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4842,column 5,is_stmt,isa 0
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4842| 
        ; call occurs [#_lcd_clear] ; [] |4842| 
	.dwpsn	file "../Source/prod.c",line 4843,column 5,is_stmt,isa 0
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_update_units")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4843| 
        ; call occurs [#_update_units] ; [] |4843| 
        MOV       AL,*-SP[51]           ; [CPU_] |4843| 
	.dwpsn	file "../Source/prod.c",line 4846,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4846| 
        ; branchcc occurs ; [] |4846| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4848,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4848| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4848,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4848| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4848,column 17,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |4848| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4848,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4848| 
        B         $C$L114,HI            ; [CPU_] |4848| 
        ; branchcc occurs ; [] |4848| 
	.dwpsn	file "../Source/prod.c",line 4851,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4851| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4851| 
	.dwpsn	file "../Source/prod.c",line 4852,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4852| 
        ; branch occurs ; [] |4852| 
$C$L115:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4562| 
        B         $C$L320,LO            ; [CPU_] |4562| 
        ; branchcc occurs ; [] |4562| 
	.dwpsn	file "../Source/prod.c",line 4567,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4567| 
        MOV       *-SP[62],AL           ; [CPU_] |4567| 
	.dwpsn	file "../Source/prod.c",line 4569,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4568,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4568| 
        MOV       *-SP[61],AL           ; [CPU_] |4568| 
	.dwpsn	file "../Source/prod.c",line 4569,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4569| 
        MOV       AL,*-SP[62]           ; [CPU_] |4569| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4569| 
        CMPB      AL,#4                 ; [CPU_] |4569| 
        B         $C$L320,HIS           ; [CPU_] |4569| 
        ; branchcc occurs ; [] |4569| 
        MOV       AL,*-SP[61]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4569| 
        B         $C$L320,HIS           ; [CPU_] |4569| 
        ; branchcc occurs ; [] |4569| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4575,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4575| 
        MOVL      ACC,XAR4              ; [CPU_] |4575| 
        ADDB      ACC,#4                ; [CPU_] |4575| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4575| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4575| 
        CMPB      AL,#16                ; [CPU_] |4575| 
        B         $C$L320,HIS           ; [CPU_] |4575| 
        ; branchcc occurs ; [] |4575| 
	.dwpsn	file "../Source/prod.c",line 4579,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4579| 
        MOVL      XAR0,#64              ; [CPU_] |4579| 
        CMPB      AL,#0                 ; [CPU_] |4579| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4579| 
        B         $C$L116,LEQ           ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4579| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4579| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4579| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4579| 
        MOVL      XAR0,ACC              ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4580,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4580| 
        ADD       AL,AR4                ; [CPU_] |4580| 
        MOVZ      AR6,AL                ; [CPU_] |4580| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4579,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4579| 
        ; branch occurs ; [] |4579| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4574,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4574| 
	.dwpsn	file "../Source/prod.c",line 4579,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4579| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4582,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4582| 
        MOVL      XAR0,#86              ; [CPU_] |4582| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4582| 
	.dwpsn	file "../Source/prod.c",line 4584,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4584| 
        MOVL      XAR4,ACC              ; [CPU_] |4584| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4584| 
        CMPB      AL,#16                ; [CPU_] |4584| 
        B         $C$L320,HIS           ; [CPU_] |4584| 
        ; branchcc occurs ; [] |4584| 
        ADDB      XAR4,#1               ; [CPU_] |4584| 
	.dwpsn	file "../Source/prod.c",line 4589,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4584,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4584| 
        MOVL      P,XAR4                ; [CPU_] |4584| 
	.dwpsn	file "../Source/prod.c",line 4589,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4589| 
        ; branchcc occurs ; [] |4589| 
        MOVZ      AR5,AL                ; [CPU_] |4589| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4590,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4590| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4590| 
        MOV       *XAR4++,AL            ; [CPU_] |4590| 
        ADDB      XAR7,#1               ; [CPU_] |4590| 
        MOVL      P,XAR7                ; [CPU_] |4590| 
	.dwpsn	file "../Source/prod.c",line 4589,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4589| 
        ; branchcc occurs ; [] |4589| 
        B         $C$L120,UNC           ; [CPU_] |4589| 
        ; branch occurs ; [] |4589| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4589,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4589| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4592,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4592| 
        ADD       ACC,AR5               ; [CPU_] |4592| 
        MOVL      XAR4,ACC              ; [CPU_] |4592| 
        MOVB      XAR0,#16              ; [CPU_] |4592| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4594,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4594| 
        MOV       AL,*XAR7              ; [CPU_] |4594| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4594| 
        ADDB      XAR7,#1               ; [CPU_] |4594| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4594| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4594| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4598,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4598| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4598| 
	.dwpsn	file "../Source/prod.c",line 4599,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4598,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4598| 
        MOV       *XAR5++,AL            ; [CPU_] |4598| 
	.dwpsn	file "../Source/prod.c",line 4599,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4599| 
        MOVL      P,XAR7                ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4597,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4597| 
        ; branchcc occurs ; [] |4597| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4605,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4605| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4605| 
	.dwpsn	file "../Source/prod.c",line 4606,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4606| 
	.dwpsn	file "../Source/prod.c",line 4605,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4605| 
        MOV       *XAR0++,AL            ; [CPU_] |4605| 
	.dwpsn	file "../Source/prod.c",line 4606,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4606| 
        MOVL      P,XAR5                ; [CPU_] |4606| 
	.dwpsn	file "../Source/prod.c",line 4604,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4604| 
        ; branchcc occurs ; [] |4604| 
	.dwpsn	file "../Source/prod.c",line 4609,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4609| 
        MOVB      XAR0,#40              ; [CPU_] |4609| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4609,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4609| 
        MOVB      XAR0,#142             ; [CPU_] |4609| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4609,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4609| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4611| 
        MOV       AL,*XAR7              ; [CPU_] |4611| 
        ADDB      XAR7,#1               ; [CPU_] |4611| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4612| 
        CMPB      AL,#6                 ; [CPU_] |4612| 
        B         $C$L123,GT            ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
        CMPB      AL,#6                 ; [CPU_] |4612| 
        B         $C$L126,EQ            ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
        CMPB      AL,#1                 ; [CPU_] |4612| 
        B         $C$L129,LOS           ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
        MOV       AH,AL                 ; [CPU_] |4612| 
        ADDB      AH,#-2                ; [CPU_] |4612| 
        CMPB      AH,#2                 ; [CPU_] |4612| 
        B         $C$L128,LOS           ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
        CMPB      AL,#5                 ; [CPU_] |4612| 
        B         $C$L127,EQ            ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
        B         $C$L124,UNC           ; [CPU_] |4612| 
        ; branch occurs ; [] |4612| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4612| 
        ADDB      AH,#-7                ; [CPU_] |4612| 
        CMPB      AH,#1                 ; [CPU_] |4612| 
        B         $C$L125,LOS           ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
        CMPB      AL,#15                ; [CPU_] |4612| 
        B         $C$L125,EQ            ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4634,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4634| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4634| 
	.dwpsn	file "../Source/prod.c",line 4635,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4635| 
        ; branch occurs ; [] |4635| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4631,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4631| 
	.dwpsn	file "../Source/prod.c",line 4632,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4632| 
        ; branch occurs ; [] |4632| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4626,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4627,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4627| 
        ; branch occurs ; [] |4627| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4623,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4623| 
	.dwpsn	file "../Source/prod.c",line 4624,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4624| 
        ; branch occurs ; [] |4624| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4620,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4620| 
	.dwpsn	file "../Source/prod.c",line 4621,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4621| 
        ; branch occurs ; [] |4621| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4615,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4615| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4637,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4637| 
        MOVB      XAR0,#43              ; [CPU_] |4637| 
        ADDB      XAR7,#42              ; [CPU_] |4637| 
        MOV       AL,*XAR7              ; [CPU_] |4637| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4637| 
	.dwpsn	file "../Source/prod.c",line 4638,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4638| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4638| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4638| 
	.dwpsn	file "../Source/prod.c",line 4640,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4640| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4640| 
        CMPB      AL,#1                 ; [CPU_] |4640| 
        B         $C$L137,EQ            ; [CPU_] |4640| 
        ; branchcc occurs ; [] |4640| 
        CMPB      AL,#2                 ; [CPU_] |4640| 
        B         $C$L131,EQ            ; [CPU_] |4640| 
        ; branchcc occurs ; [] |4640| 
        CMPB      AL,#3                 ; [CPU_] |4640| 
        B         $C$L135,EQ            ; [CPU_] |4640| 
        ; branchcc occurs ; [] |4640| 
        B         $C$L134,UNC           ; [CPU_] |4640| 
        ; branch occurs ; [] |4640| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4657,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4657| 
        MOVB      XAR0,#46              ; [CPU_] |4657| 
        MOV       AL,*XAR7              ; [CPU_] |4657| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4658,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4658| 
	.dwpsn	file "../Source/prod.c",line 4657,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4658,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4658| 
        CMPB      AL,#12                ; [CPU_] |4658| 
        B         $C$L134,GT            ; [CPU_] |4658| 
        ; branchcc occurs ; [] |4658| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4657,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4663,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4663| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4657,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4657| 
        MOVL      P,XAR6                ; [CPU_] |4657| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4671| 
        B         $C$L140,LEQ           ; [CPU_] |4671| 
        ; branchcc occurs ; [] |4671| 
	.dwpsn	file "../Source/prod.c",line 4664,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4664| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4664| 
        ADDB      ACC,#48               ; [CPU_] |4664| 
        MOVL      XAR0,ACC              ; [CPU_] |4664| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4666,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4666| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4667,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4666,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4666| 
        MOV       *XAR0++,AL            ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4667,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4667| 
        MOVL      P,XAR5                ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4665,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4665| 
        ; branchcc occurs ; [] |4665| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4663,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4663| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4663| 
        ; branch occurs ; [] |4663| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4689,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4689| 
	.dwpsn	file "../Source/prod.c",line 4690,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4690| 
        ; branch occurs ; [] |4690| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4675,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4675| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4675| 
        MOVZ      AR0,AR5               ; [CPU_] |4675| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4677,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4677| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4677| 
	.dwpsn	file "../Source/prod.c",line 4678,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4677,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4677| 
        MOV       *XAR0++,AL            ; [CPU_] |4677| 
	.dwpsn	file "../Source/prod.c",line 4678,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4678| 
        MOVL      P,XAR5                ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4676,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4676| 
        ; branchcc occurs ; [] |4676| 
	.dwpsn	file "../Source/prod.c",line 4681,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4681| 
        MOV       AH,#0                 ; [CPU_] |4681| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4681| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4681| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4681| 
        ; call occurs [#FS$$CMP] ; [] |4681| 
        CMPB      AL,#0                 ; [CPU_] |4681| 
        B         $C$L139,NEQ           ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
	.dwpsn	file "../Source/prod.c",line 4682,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4682| 
        MOV       AH,#16314             ; [CPU_] |4682| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4682| 
        B         $C$L139,UNC           ; [CPU_] |4682| 
        ; branch occurs ; [] |4682| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4645,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4645| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4645| 
	.dwpsn	file "../Source/prod.c",line 4646,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4645,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4645| 
        MOV       *XAR0++,AL            ; [CPU_] |4645| 
	.dwpsn	file "../Source/prod.c",line 4646,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4646| 
        MOVL      P,XAR5                ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4644,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4644| 
        ; branchcc occurs ; [] |4644| 
	.dwpsn	file "../Source/prod.c",line 4649,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4649| 
        MOVL      XAR0,#88              ; [CPU_] |4649| 
        MOVL      ACC,XAR1              ; [CPU_] |4649| 
        ADDB      ACC,#96               ; [CPU_] |4649| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4649| 
        MOVL      XAR0,#52              ; [CPU_] |4649| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4649| 
        MOV       AL,#0                 ; [CPU_] |4649| 
        MOV       AH,#0                 ; [CPU_] |4649| 
        MOVB      XAR0,#96              ; [CPU_] |4649| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4649| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4649| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4649| 
        ; call occurs [#FS$$CMP] ; [] |4649| 
        CMPB      AL,#0                 ; [CPU_] |4649| 
        B         $C$L139,NEQ           ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
	.dwpsn	file "../Source/prod.c",line 4650,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4650| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4650| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4650| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4652,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4652| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4693,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4693| 
        MOVB      XAR0,#36              ; [CPU_] |4693| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4693| 
        B         $C$L320,EQ            ; [CPU_] |4693| 
        ; branchcc occurs ; [] |4693| 
	.dwpsn	file "../Source/prod.c",line 4697,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4697| 
        MOV       AL,#0                 ; [CPU_] |4697| 
        MOV       AH,#0                 ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4698,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4698| 
	.dwpsn	file "../Source/prod.c",line 4697,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4698,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4698| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4698| 
	.dwpsn	file "../Source/prod.c",line 4699,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4699| 
        MOV       AL,#0                 ; [CPU_] |4699| 
        MOV       AH,#0                 ; [CPU_] |4699| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4699| 
	.dwpsn	file "../Source/prod.c",line 4700,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4700| 
        MOV       AL,*-SP[62]           ; [CPU_] |4700| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4700| 
        MOVZ      AR6,*-SP[63]          ; [CPU_] |4700| 
	.dwpsn	file "../Source/prod.c",line 4702,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4702| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4702| 
        ; branch occurs ; [] |4702| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4703,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4703| 
        MOV       PL,*+FP[AR0]          ; [CPU_] |4703| 
        MOVL      XAR0,#44              ; [CPU_] |4703| 
        ADD       ACC,PL                ; [CPU_] |4703| 
        MOVL      XAR7,ACC              ; [CPU_] |4703| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4703| 
        ADD       ACC,PL                ; [CPU_] |4703| 
        MOVL      XAR4,ACC              ; [CPU_] |4703| 
        MOVL      XAR0,#91              ; [CPU_] |4703| 
	.dwpsn	file "../Source/prod.c",line 4702,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4702| 
	.dwpsn	file "../Source/prod.c",line 4703,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4703| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4703| 
        MOV       AL,PL                 ; [CPU_] |4703| 
        ADDB      AL,#1                 ; [CPU_] |4703| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4703| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4702,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4702| 
        B         $C$L141,HI            ; [CPU_] |4702| 
        ; branchcc occurs ; [] |4702| 
        B         $C$L745,UNC           ; [CPU_] |4702| 
        ; branch occurs ; [] |4702| 
$C$L143:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4510,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4510| 
        B         $C$L320,LO            ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
        MOVL      ACC,XAR4              ; [CPU_] |4510| 
        MOVL      XAR0,#66              ; [CPU_] |4510| 
        ADDB      ACC,#2                ; [CPU_] |4510| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4510| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4510| 
        B         $C$L320,LT            ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
        MOVL      XAR5,XAR4             ; [CPU_] |4510| 
        MOVL      XAR0,#66              ; [CPU_] |4510| 
        CMPB      AL,#4                 ; [CPU_] |4510| 
        ADDB      XAR5,#2               ; [CPU_] |4510| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4510| 
        B         $C$L320,GEQ           ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4510| 
        B         $C$L320,LT            ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
        CMPB      AH,#2                 ; [CPU_] |4510| 
        B         $C$L320,GT            ; [CPU_] |4510| 
        ; branchcc occurs ; [] |4510| 
        MOV       AH,*-SP[60]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4516| 
        ; branchcc occurs ; [] |4516| 
	.dwpsn	file "../Source/prod.c",line 4519,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4519| 
        MOVZ      AR6,*-SP[62]          ; [CPU_] |4519| 
        MOVL      XAR0,#66              ; [CPU_] |4519| 
        MOVU      ACC,AL                ; [CPU_] |4519| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4519| 
        CMPL      ACC,XAR6              ; [CPU_] |4519| 
        B         $C$L145,EQ            ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
        B         $C$L320,UNC           ; [CPU_] |4519| 
        ; branch occurs ; [] |4519| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4517,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4517| 
        MOVL      XAR0,#66              ; [CPU_] |4517| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4517| 
        MOV       *-SP[62],AL           ; [CPU_] |4517| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4517| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4525| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4524,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4524| 
        MOV       *-SP[51],AL           ; [CPU_] |4524| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4525| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4528| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4528| 
        MOVZ      AR4,AR4               ; [CPU_] |4528| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4526| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4528| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4528| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4530,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4530| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4530| 
	.dwpsn	file "../Source/prod.c",line 4531,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4531| 
        MOV       *XAR7++,AL            ; [CPU_] |4531| 
	.dwpsn	file "../Source/prod.c",line 4532,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4532| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4532| 
        MOV       *XAR4++,AL            ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4533,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4533| 
        MOV       *XAR7++,AL            ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4529,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4529| 
        ; branchcc occurs ; [] |4529| 
	.dwpsn	file "../Source/prod.c",line 4536,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4536| 
        SUBB      XAR4,#24              ; [CPU_U] |4536| 
        MOVZ      AR4,AR4               ; [CPU_] |4536| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4536| 
        ADDL      XAR4,ACC              ; [CPU_] |4536| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4536| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4536| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4536| 
        MOVL      ACC,XAR1              ; [CPU_] |4536| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4536| 
        ; call occurs [#FS$$CMP] ; [] |4536| 
        CMPB      AL,#0                 ; [CPU_] |4536| 
        B         $C$L320,LT            ; [CPU_] |4536| 
        ; branchcc occurs ; [] |4536| 
        MOV       AL,#0                 ; [CPU_] |4536| 
        MOV       AH,#16672             ; [CPU_] |4536| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4536| 
        MOVL      ACC,XAR1              ; [CPU_] |4536| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4536| 
        ; call occurs [#FS$$CMP] ; [] |4536| 
        CMPB      AL,#0                 ; [CPU_] |4536| 
        B         $C$L320,GT            ; [CPU_] |4536| 
        ; branchcc occurs ; [] |4536| 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4541| 
        MOV       AH,#16672             ; [CPU_] |4541| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4541| 
        MOVL      ACC,XAR1              ; [CPU_] |4541| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4541| 
        ; call occurs [#FS$$ADD] ; [] |4541| 
        MOVL      XAR6,ACC              ; [CPU_] |4541| 
        MOV       AL,#65024             ; [CPU_] |4541| 
        MOV       AH,#18175             ; [CPU_] |4541| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4541| 
        MOVL      ACC,XAR6              ; [CPU_] |4541| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4541| 
        ; call occurs [#FS$$MPY] ; [] |4541| 
        MOVL      XAR6,ACC              ; [CPU_] |4541| 
        MOV       AL,#0                 ; [CPU_] |4541| 
        MOV       AH,#16672             ; [CPU_] |4541| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4541| 
        MOVL      ACC,XAR6              ; [CPU_] |4541| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4541| 
        ; call occurs [#FS$$DIV] ; [] |4541| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4541| 
        ; call occurs [#FS$$TOLL] ; [] |4541| 
	.dwpsn	file "../Source/prod.c",line 4532,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4542| 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4541| 
	.dwpsn	file "../Source/prod.c",line 4532,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#8          ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4541| 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4542| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4542| 
        CMP64     ACC:P                 ; [CPU_] |4542| 
        B         $C$L148,LEQ           ; [CPU_] |4542| 
        ; branchcc occurs ; [] |4542| 
	.dwpsn	file "../Source/prod.c",line 4544,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4544| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4544| 
        MOV       *-SP[2],#0            ; [CPU_] |4544| 
        MOV       *-SP[1],#0            ; [CPU_] |4544| 
        MOVL      P,*-SP[32]            ; [CPU_] |4544| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4544| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$628, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4544| 
        ; call occurs [#LL$$CMP] ; [] |4544| 
        CMPB      AL,#0                 ; [CPU_] |4544| 
        B         $C$L147,GEQ           ; [CPU_] |4544| 
        ; branchcc occurs ; [] |4544| 
	.dwpsn	file "../Source/prod.c",line 4547,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4547| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4547| 
        MOVU      ACC,AR4               ; [CPU_] |4547| 
        ADD       ACC,*-SP[63]          ; [CPU_] |4547| 
        MOVL      XAR1,ACC              ; [CPU_] |4547| 
        MOV       AL,*-SP[32]           ; [CPU_] |4547| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4547| 
        B         $C$L149,UNC           ; [CPU_] |4547| 
        ; branch occurs ; [] |4547| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4545,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4545| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4545| 
        MOVU      ACC,AR4               ; [CPU_] |4545| 
        ADD       ACC,*-SP[63]          ; [CPU_] |4545| 
        MOVL      XAR1,ACC              ; [CPU_] |4545| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4545| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4546| 
        ; branch occurs ; [] |4546| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4543,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4543| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4543| 
        MOVU      ACC,AR4               ; [CPU_] |4543| 
        ADD       ACC,*-SP[63]          ; [CPU_] |4543| 
        MOVL      XAR1,ACC              ; [CPU_] |4543| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4543| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4550,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4550| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4550| 
        ; call occurs [#_dac_setmode] ; [] |4550| 
	.dwpsn	file "../Source/prod.c",line 4552,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4552| 
        MOV       AH,*-SP[51]           ; [CPU_] |4552| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4552| 
        ; call occurs [#_mcbsp_xmit] ; [] |4552| 
	.dwpsn	file "../Source/prod.c",line 4553,column 5,is_stmt,isa 0
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("_latch_dac")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4553| 
        ; call occurs [#_latch_dac] ; [] |4553| 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4555| 
        MOV       T,*-SP[63]            ; [CPU_] |4555| 
        LSL       AL,T                  ; [CPU_] |4555| 
        OR        *-SP[60],AL           ; [CPU_] |4555| 
	.dwpsn	file "../Source/prod.c",line 4558,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4558| 
        ; branch occurs ; [] |4558| 
$C$L150:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4464,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4464| 
        B         $C$L320,LO            ; [CPU_] |4464| 
        ; branchcc occurs ; [] |4464| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4464| 
        MOVL      XAR0,#66              ; [CPU_] |4464| 
        MOVL      ACC,XAR5              ; [CPU_] |4464| 
        ADDB      ACC,#2                ; [CPU_] |4464| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4464| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4464| 
        MOVZ      AR7,AR6               ; [CPU_] |4464| 
        MOV       AL,*-SP[62]           ; [CPU_] |4464| 
        MOVU      ACC,AL                ; [CPU_] |4464| 
        CMPL      ACC,XAR7              ; [CPU_] |4464| 
        B         $C$L320,NEQ           ; [CPU_] |4464| 
        ; branchcc occurs ; [] |4464| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4464| 
        CMPB      AL,#7                 ; [CPU_] |4464| 
        B         $C$L320,NEQ           ; [CPU_] |4464| 
        ; branchcc occurs ; [] |4464| 
	.dwpsn	file "../Source/prod.c",line 4470,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4470| 
        MOVL      ACC,XAR5              ; [CPU_] |4470| 
        MOVL      XAR0,#66              ; [CPU_] |4470| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOV       *-SP[62],AR6          ; [CPU_] |4469| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4470,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4470| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4470| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4470| 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] |4470| 
        MOV       *+FP[AR0],#3          ; [CPU_] |4470| 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOVB      XAR6,#2               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4473,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4473| 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4475,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4475| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4475| 
	.dwpsn	file "../Source/prod.c",line 4476,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4476| 
        MOV       *XAR7++,AL            ; [CPU_] |4476| 
	.dwpsn	file "../Source/prod.c",line 4477,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4477| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4477| 
        MOV       *XAR0++,AL            ; [CPU_] |4477| 
	.dwpsn	file "../Source/prod.c",line 4478,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4478| 
        MOV       *XAR7++,AL            ; [CPU_] |4478| 
	.dwpsn	file "../Source/prod.c",line 4474,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR4--         ; [CPU_] |4474| 
        ; branchcc occurs ; [] |4474| 
	.dwpsn	file "../Source/prod.c",line 4472,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4472| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4472| 
        ADDB      XAR1,#2               ; [CPU_] |4472| 
	.dwpsn	file "../Source/prod.c",line 4478,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4478| 
        ADDB      AL,#4                 ; [CPU_] |4478| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4478| 
	.dwpsn	file "../Source/prod.c",line 4472,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR6--         ; [CPU_] |4472| 
        ; branchcc occurs ; [] |4472| 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4485| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4485| 
        ; call occurs [#U$$TOFS] ; [] |4485| 
        MOVL      XAR1,ACC              ; [CPU_] |4485| 
        MOV       AL,*-SP[35]           ; [CPU_] |4485| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4485| 
        ; call occurs [#U$$TOFS] ; [] |4485| 
        MOVL      XAR0,#86              ; [CPU_] |4485| 
        MOV       T,*-SP[62]            ; [CPU_] |4485| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4485| 
        MOVL      XAR0,#40              ; [CPU_] |4485| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4485| 
        MOVB      AL,#12                ; [CPU_] |4485| 
        MPYU      ACC,T,AL              ; [CPU_] |4485| 
        MOVL      XAR0,#88              ; [CPU_] |4485| 
        ADDL      ACC,XAR6              ; [CPU_] |4485| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4485| 
        MOVL      XAR0,#86              ; [CPU_] |4485| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4485| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4485| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4485| 
        ; call occurs [#FS$$SUB] ; [] |4485| 
        MOVL      XAR0,#42              ; [CPU_] |4485| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4485| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4485| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4485| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4485| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4485| 
        ; call occurs [#FS$$SUB] ; [] |4485| 
        MOVL      XAR0,#42              ; [CPU_] |4485| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4485| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4485| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4485| 
        ; call occurs [#FS$$DIV] ; [] |4485| 
        MOVL      XAR0,#88              ; [CPU_] |4485| 
        MOVL      XAR6,ACC              ; [CPU_] |4485| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4485| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4485| 
        MOVL      XAR4,ACC              ; [CPU_] |4485| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4488| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4488| 
        ; call occurs [#U$$TOFS] ; [] |4488| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4488| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4488| 
        ; call occurs [#FS$$SUB] ; [] |4488| 
        MOVL      XAR1,ACC              ; [CPU_] |4488| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4488| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4488| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4488| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4488| 
        ; call occurs [#FS$$SUB] ; [] |4488| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4488| 
        MOVL      ACC,XAR1              ; [CPU_] |4488| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4488| 
        ; call occurs [#FS$$DIV] ; [] |4488| 
        MOVL      XAR0,#88              ; [CPU_] |4488| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4488| 
        MOVL      XAR6,ACC              ; [CPU_] |4488| 
        MOVL      ACC,XAR1              ; [CPU_] |4488| 
        ADD       ACC,#49 << 6          ; [CPU_] |4488| 
        MOVL      XAR4,ACC              ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4488,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4491| 
        MOVL      XAR4,ACC              ; [CPU_] |4491| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4491| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4491| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4491| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4491| 
        ; call occurs [#FS$$MPY] ; [] |4491| 
        MOVL      XAR0,#86              ; [CPU_] |4491| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4491| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4491| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4491| 
        ; call occurs [#FS$$SUB] ; [] |4491| 
        MOVL      XAR6,ACC              ; [CPU_] |4491| 
        MOVL      ACC,XAR1              ; [CPU_] |4491| 
        ADD       ACC,#785 << 2         ; [CPU_] |4491| 
        MOVL      XAR4,ACC              ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4494,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4494| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4494,column 5,is_stmt,isa 0
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4494| 
        ; call occurs [#_dac_setmode] ; [] |4494| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4500,column 5,is_stmt,isa 0
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4500| 
        ; call occurs [#_ad7738_setcal] ; [] |4500| 
        MOVL      XAR0,#78              ; [CPU_] |4500| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4500| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |4501| 
        MOVL      XAR1,ACC              ; [CPU_] |4501| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4501| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4501| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4501| 
	.dwpsn	file "../Source/prod.c",line 4502,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4502| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4502| 
        ; call occurs [#_ad7738_resetvall] ; [] |4502| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
        MOV       *-SP[60],#0           ; [CPU_] |4495| 
	.dwpsn	file "../Source/prod.c",line 4506,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |4506| 
        ; branch occurs ; [] |4506| 
$C$L153:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4408| 
        B         $C$L320,LO            ; [CPU_] |4408| 
        ; branchcc occurs ; [] |4408| 
        MOVL      XAR0,#88              ; [CPU_] |4408| 
        MOVL      ACC,XAR4              ; [CPU_] |4408| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4408| 
        MOVL      XAR0,#66              ; [CPU_] |4408| 
        ADDB      ACC,#2                ; [CPU_] |4408| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4408| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4408| 
        MOV       AL,*-SP[62]           ; [CPU_] |4408| 
        MOVU      ACC,AL                ; [CPU_] |4408| 
        CMPL      ACC,XAR6              ; [CPU_] |4408| 
        B         $C$L320,NEQ           ; [CPU_] |4408| 
        ; branchcc occurs ; [] |4408| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4408| 
        B         $C$L320,LT            ; [CPU_] |4408| 
        ; branchcc occurs ; [] |4408| 
        CMPB      AL,#2                 ; [CPU_] |4408| 
        B         $C$L320,GEQ           ; [CPU_] |4408| 
        ; branchcc occurs ; [] |4408| 
	.dwpsn	file "../Source/prod.c",line 4414,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4414| 
	.dwpsn	file "../Source/prod.c",line 4415,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4415| 
	.dwpsn	file "../Source/prod.c",line 4414,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |4414| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4414| 
	.dwpsn	file "../Source/prod.c",line 4415,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4415| 
        MOVZ      AR7,AR6               ; [CPU_] |4415| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4417,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4417| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4416,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4416| 
        ADDB      XAR4,#2               ; [CPU_] |4416| 
	.dwpsn	file "../Source/prod.c",line 4417,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4416,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4416| 
        ; branchcc occurs ; [] |4416| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4420| 
        SUBB      XAR4,#24              ; [CPU_U] |4420| 
        MOVZ      AR1,AR4               ; [CPU_] |4420| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4420| 
        ADDL      XAR1,ACC              ; [CPU_] |4420| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4420| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4420| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4420| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4420| 
        ; call occurs [#FS$$CMP] ; [] |4420| 
        CMPB      AL,#0                 ; [CPU_] |4420| 
        B         $C$L320,NEQ           ; [CPU_] |4420| 
        ; branchcc occurs ; [] |4420| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4424| 
        ; call occurs [#_lcd_clear] ; [] |4424| 
	.dwpsn	file "../Source/prod.c",line 4425,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4425| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4425| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4425| 
        ; call occurs [#_lcd_puts] ; [] |4425| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4426| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4426| 
        MOVL      XAR0,#44              ; [CPU_] |4426| 
        ADD       AL,*-SP[62]           ; [CPU_] |4426| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4426| 
        MOV       *-SP[3],AL            ; [CPU_] |4426| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4426| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("_sprintf")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4426| 
        ; call occurs [#_sprintf] ; [] |4426| 
        MOVL      XAR0,#44              ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4427| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4427| 
        ; call occurs [#_lcd_puts] ; [] |4427| 
	.dwpsn	file "../Source/prod.c",line 4428,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4428| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4428| 
        MOVL      XAR0,#44              ; [CPU_] |4428| 
        ADD       AL,*-SP[51]           ; [CPU_] |4428| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4428| 
        MOV       *-SP[3],AL            ; [CPU_] |4428| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4428| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4428| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4428| 
        MOVL      XAR4,XAR1             ; [CPU_] |4428| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("_sprintf")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4428| 
        ; call occurs [#_sprintf] ; [] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4429| 
	.dwpsn	file "../Source/prod.c",line 4428,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 5,is_stmt,isa 0
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4429| 
        ; call occurs [#_lcd_puts] ; [] |4429| 
	.dwpsn	file "../Source/prod.c",line 4430,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4430| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4430| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4430| 
        ; call occurs [#_lcd_puts] ; [] |4430| 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4432| 
        SUBB      XAR4,#32              ; [CPU_U] |4432| 
        MOVZ      AR1,AR4               ; [CPU_] |4432| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4430,column 5,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4430| 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4432| 
        ADDL      XAR1,ACC              ; [CPU_] |4432| 
	.dwpsn	file "../Source/prod.c",line 4433,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4433| 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4432| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4432| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4432| 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4434| 
	.dwpsn	file "../Source/prod.c",line 4433,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4433| 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4434| 
        MOVB      ACC,#0                ; [CPU_] |4434| 
        SUBB      ACC,#1                ; [CPU_] |4434| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4434| 
        B         $C$L157,EQ            ; [CPU_] |4434| 
        ; branchcc occurs ; [] |4434| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4435,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4435| 
        ; branch occurs ; [] |4435| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4436,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4436| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("_delay_us")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4436| 
        ; call occurs [#_delay_us] ; [] |4436| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4435,column 13,is_stmt,isa 0
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4435| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4435| 
        CMPB      AL,#0                 ; [CPU_] |4435| 
        B         $C$L155,EQ            ; [CPU_] |4435| 
        ; branchcc occurs ; [] |4435| 
	.dwpsn	file "../Source/prod.c",line 4438,column 6,is_stmt,isa 0
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4438| 
        ; call occurs [#_ad7738_getraw] ; [] |4438| 
	.dwpsn	file "../Source/prod.c",line 4439,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4439| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4439| 
        ADDL      XAR4,ACC              ; [CPU_] |4439| 
        MOVL      XAR0,#22              ; [CPU_] |4439| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4439| 
        MOVL      XAR0,#22              ; [CPU_] |4439| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4439| 
        ASR64     ACC:P,16              ; [CPU_] |4439| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4439| 
        MOVL      XAR0,#22              ; [CPU_] |4439| 
        ASR64     ACC:P,16              ; [CPU_] |4439| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4439| 
        MOVL      XAR0,#22              ; [CPU_] |4439| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4439| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4439| 
        MOVL      XAR0,#22              ; [CPU_] |4439| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4439| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4439| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4439| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4439| 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4434| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4434| 
        MOVB      ACC,#0                ; [CPU_] |4434| 
        SUBB      ACC,#1                ; [CPU_] |4434| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4434| 
        B         $C$L156,NEQ           ; [CPU_] |4434| 
        ; branchcc occurs ; [] |4434| 
$C$L157:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4441,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4441| 
        B         $C$L158,NEQ           ; [CPU_] |4441| 
        ; branchcc occurs ; [] |4441| 
	.dwpsn	file "../Source/prod.c",line 4442,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4442| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4442| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4442| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4442| 
        ; call occurs [#FS$$SUB] ; [] |4442| 
        MOVL      XAR6,ACC              ; [CPU_] |4442| 
        MOV       AL,#16384             ; [CPU_] |4442| 
        MOV       AH,#17948             ; [CPU_] |4442| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4442| 
        MOVL      ACC,XAR6              ; [CPU_] |4442| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4442| 
        ; call occurs [#FS$$MPY] ; [] |4442| 
        MOVL      XAR1,ACC              ; [CPU_] |4442| 
        MOVL      P,*-SP[28]            ; [CPU_] |4442| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4442| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4442| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4442| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4442| 
        ; call occurs [#LL$$TOFS] ; [] |4442| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4442| 
        MOVL      ACC,XAR1              ; [CPU_] |4442| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4442| 
        ; call occurs [#FS$$DIV] ; [] |4442| 
        MOVL      XAR0,#40              ; [CPU_] |4442| 
        MOV       T,*-SP[62]            ; [CPU_] |4442| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4442| 
        MOVL      XAR6,ACC              ; [CPU_] |4442| 
        MOVB      AL,#10                ; [CPU_] |4442| 
        MPYU      ACC,T,AL              ; [CPU_] |4442| 
        ADDL      ACC,XAR7              ; [CPU_] |4442| 
        MOVL      XAR4,ACC              ; [CPU_] |4442| 
        MOVB      XAR0,#44              ; [CPU_] |4442| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4442| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4447,column 6,is_stmt,isa 0
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4447| 
        ; call occurs [#_ad7738_setcal] ; [] |4447| 
        MOVL      XAR0,#78              ; [CPU_] |4447| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4447| 
	.dwpsn	file "../Source/prod.c",line 4448,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |4448| 
        MOVL      XAR1,ACC              ; [CPU_] |4448| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4448| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4448| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4448| 
	.dwpsn	file "../Source/prod.c",line 4449,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4449| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4449| 
        ; call occurs [#_ad7738_resetvall] ; [] |4449| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4445,column 6,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |4445| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4452,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4452| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4453,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4452,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4452| 
	.dwpsn	file "../Source/prod.c",line 4453,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4452,column 17,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |4452| 
	.dwpsn	file "../Source/prod.c",line 4453,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4452,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4452| 
        B         $C$L159,HI            ; [CPU_] |4452| 
        ; branchcc occurs ; [] |4452| 
	.dwpsn	file "../Source/prod.c",line 4455,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4455| 
        SPM       #0                    ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4455| 
	.dwpsn	file "../Source/prod.c",line 4458,column 5,is_stmt,isa 0
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4458| 
        ; call occurs [#_lcd_clear] ; [] |4458| 
	.dwpsn	file "../Source/prod.c",line 4459,column 5,is_stmt,isa 0
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("_update_units")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4459| 
        ; call occurs [#_update_units] ; [] |4459| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4460| 
        ; branch occurs ; [] |4460| 
$C$L160:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4383,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4383| 
        B         $C$L320,LO            ; [CPU_] |4383| 
        ; branchcc occurs ; [] |4383| 
        MOVL      ACC,XAR4              ; [CPU_] |4383| 
        MOVL      XAR0,#66              ; [CPU_] |4383| 
        ADDB      ACC,#2                ; [CPU_] |4383| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4383| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4383| 
        B         $C$L320,LT            ; [CPU_] |4383| 
        ; branchcc occurs ; [] |4383| 
        MOVL      XAR5,XAR4             ; [CPU_] |4383| 
        MOVL      XAR0,#66              ; [CPU_] |4383| 
        CMPB      AL,#4                 ; [CPU_] |4383| 
        ADDB      XAR5,#2               ; [CPU_] |4383| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4383| 
        B         $C$L320,GEQ           ; [CPU_] |4383| 
        ; branchcc occurs ; [] |4383| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4383| 
        CMPB      AH,#2                 ; [CPU_] |4383| 
        B         $C$L320,NEQ           ; [CPU_] |4383| 
        ; branchcc occurs ; [] |4383| 
	.dwpsn	file "../Source/prod.c",line 4390,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4390| 
        MOVL      XAR0,#66              ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4389,column 5,is_stmt,isa 0
        MOV       *-SP[62],AL           ; [CPU_] |4389| 
	.dwpsn	file "../Source/prod.c",line 4393,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4393| 
	.dwpsn	file "../Source/prod.c",line 4390,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4391,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4391| 
	.dwpsn	file "../Source/prod.c",line 4390,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4390| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4390| 
	.dwpsn	file "../Source/prod.c",line 4391,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4391| 
        MOV       *+FP[AR0],#4          ; [CPU_] |4391| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4393,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4393| 
        ; branch occurs ; [] |4393| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4394,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4394| 
        SUBB      XAR4,#24              ; [CPU_U] |4394| 
        MOVZ      AR4,AR4               ; [CPU_] |4394| 
        MOV       ACC,PL << 1           ; [CPU_] |4394| 
        MOVL      XAR0,#44              ; [CPU_] |4394| 
        ADDL      XAR4,ACC              ; [CPU_] |4394| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4394| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4396,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4396| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4396| 
	.dwpsn	file "../Source/prod.c",line 4397,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4397| 
        MOV       *XAR7++,AL            ; [CPU_] |4397| 
	.dwpsn	file "../Source/prod.c",line 4398,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4398| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4398| 
        MOV       *XAR4++,AL            ; [CPU_] |4398| 
	.dwpsn	file "../Source/prod.c",line 4399,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4399| 
        MOV       *XAR7++,AL            ; [CPU_] |4399| 
	.dwpsn	file "../Source/prod.c",line 4395,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4395| 
        ; branchcc occurs ; [] |4395| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4393,column 33,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4393| 
        ADDB      AL,#1                 ; [CPU_] |4393| 
        MOV       PL,AL                 ; [CPU_] |4393| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4393| 
	.dwpsn	file "../Source/prod.c",line 4399,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4399| 
        ADDB      AL,#4                 ; [CPU_] |4399| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4399| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4393,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4393| 
        MOV       AL,PL                 ; [CPU_] |4393| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4393| 
        B         $C$L161,LT            ; [CPU_] |4393| 
        ; branchcc occurs ; [] |4393| 
        B         $C$L745,UNC           ; [CPU_] |4393| 
        ; branch occurs ; [] |4393| 
$C$L164:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5338,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5338| 
        B         $C$L320,LO            ; [CPU_] |5338| 
        ; branchcc occurs ; [] |5338| 
	.dwpsn	file "../Source/prod.c",line 5343,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5343| 
        MOVL      XAR0,#66              ; [CPU_] |5343| 
        MOVL      ACC,XAR7              ; [CPU_] |5343| 
        ADDB      ACC,#2                ; [CPU_] |5343| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5343| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GT            ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVB      XAR0,#13              ; [CPU_] |5343| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GT            ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVB      XAR0,#24              ; [CPU_] |5343| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GT            ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVB      XAR0,#35              ; [CPU_] |5343| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GT            ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GEQ           ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVB      XAR0,#14              ; [CPU_] |5343| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GEQ           ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVB      XAR0,#25              ; [CPU_] |5343| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GEQ           ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVB      XAR0,#36              ; [CPU_] |5343| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5343| 
        CMPB      AL,#4                 ; [CPU_] |5343| 
        B         $C$L320,GEQ           ; [CPU_] |5343| 
        ; branchcc occurs ; [] |5343| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5351,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5351| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5351| 
        MOVL      XAR0,ACC              ; [CPU_] |5351| 
        MOV       AL,*XAR7              ; [CPU_] |5351| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5351| 
	.dwpsn	file "../Source/prod.c",line 5352,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5352| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5352| 
        MOVL      XAR0,ACC              ; [CPU_] |5352| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5352| 
        MOV       *XAR4++,AL            ; [CPU_] |5352| 
	.dwpsn	file "../Source/prod.c",line 5353,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5353| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5353| 
        MOVL      XAR0,ACC              ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5351,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5351| 
	.dwpsn	file "../Source/prod.c",line 5353,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5353| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5354,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5354| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5354| 
        MOVL      XAR0,ACC              ; [CPU_] |5354| 
	.dwpsn	file "../Source/prod.c",line 5353,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5354,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |5354| 
        MOV       *XAR4++,AL            ; [CPU_] |5354| 
	.dwpsn	file "../Source/prod.c",line 5355,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5355| 
        ANDB      AL,#0xfe              ; [CPU_] |5355| 
        MOV       T,AL                  ; [CPU_] |5355| 
        MOVL      ACC,XAR5              ; [CPU_] |5355| 
        ADD       ACC,#199 << 4         ; [CPU_] |5355| 
        MOVL      XAR0,ACC              ; [CPU_] |5355| 
	.dwpsn	file "../Source/prod.c",line 5356,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5356| 
        ADD       ACC,#199 << 4         ; [CPU_] |5356| 
	.dwpsn	file "../Source/prod.c",line 5355,column 6,is_stmt,isa 0
        MOV       *+XAR0[0],T           ; [CPU_] |5355| 
	.dwpsn	file "../Source/prod.c",line 5356,column 6,is_stmt,isa 0
        MOVL      XAR0,ACC              ; [CPU_] |5356| 
        MOVL      XAR1,P                ; [CPU_] |5356| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5356| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5356| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5360,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5360| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5361| 
        MOV       *XAR4++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5362,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5362| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5362| 
        MOV       *XAR1++,AL            ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5363| 
        MOV       *XAR4++,AL            ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5359,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR0--         ; [CPU_] |5359| 
        ; branchcc occurs ; [] |5359| 
	.dwpsn	file "../Source/prod.c",line 5366,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5366| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5368,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5368| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5368| 
	.dwpsn	file "../Source/prod.c",line 5369,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5369| 
        MOV       *XAR4++,AL            ; [CPU_] |5369| 
	.dwpsn	file "../Source/prod.c",line 5370,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5370| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5370| 
        MOV       *XAR1++,AL            ; [CPU_] |5370| 
	.dwpsn	file "../Source/prod.c",line 5371,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5371| 
        MOV       *XAR4++,AL            ; [CPU_] |5371| 
	.dwpsn	file "../Source/prod.c",line 5367,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR0--         ; [CPU_] |5367| 
        ; branchcc occurs ; [] |5367| 
	.dwpsn	file "../Source/prod.c",line 5350,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5350| 
        MOVL      XAR0,#91              ; [CPU_] |5350| 
        ADDB      ACC,#8                ; [CPU_] |5350| 
        MOVL      P,ACC                 ; [CPU_] |5350| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5353,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5353| 
        ADDB      AL,#11                ; [CPU_] |5353| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5353| 
        MOVZ      AR0,AR3               ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5350,column 17,is_stmt,isa 0
        ADDB      XAR6,#8               ; [CPU_] |5350| 
        ADDB      XAR5,#8               ; [CPU_] |5350| 
        SUBB      XAR0,#1               ; [CPU_U] |5350| 
        MOVZ      AR3,AR0               ; [CPU_] |5350| 
        CMP       AR0,#-1               ; [CPU_] |5350| 
        B         $C$L165,NEQ           ; [CPU_] |5350| 
        ; branchcc occurs ; [] |5350| 
        B         $C$L176,UNC           ; [CPU_] |5350| 
        ; branch occurs ; [] |5350| 
$C$L168:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5275,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5275| 
        B         $C$L320,LO            ; [CPU_] |5275| 
        ; branchcc occurs ; [] |5275| 
	.dwpsn	file "../Source/prod.c",line 5280,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5280| 
        MOVL      XAR0,#66              ; [CPU_] |5280| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5280| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L169,LEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        CMPB      AL,#7                 ; [CPU_] |5280| 
        B         $C$L320,NEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5280| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L170,LEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        CMPB      AL,#7                 ; [CPU_] |5280| 
        B         $C$L320,NEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5280| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L171,LEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        CMPB      AL,#7                 ; [CPU_] |5280| 
        B         $C$L320,NEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5280| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L172,LEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        CMPB      AL,#7                 ; [CPU_] |5280| 
        B         $C$L320,NEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5280| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L320,GEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        MOVB      XAR0,#13              ; [CPU_] |5280| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L320,GEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        MOVB      XAR0,#23              ; [CPU_] |5280| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L320,GEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        MOVB      XAR0,#33              ; [CPU_] |5280| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5280| 
        CMPB      AL,#4                 ; [CPU_] |5280| 
        B         $C$L320,GEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5291,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5291| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5291| 
        MOVL      XAR0,ACC              ; [CPU_] |5291| 
        MOV       AL,*XAR7              ; [CPU_] |5291| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5291| 
	.dwpsn	file "../Source/prod.c",line 5292,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5292| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5292| 
        MOVL      XAR0,ACC              ; [CPU_] |5292| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5292| 
        MOV       *XAR4++,AL            ; [CPU_] |5292| 
	.dwpsn	file "../Source/prod.c",line 5293,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5293| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5293| 
        MOVL      XAR0,ACC              ; [CPU_] |5293| 
	.dwpsn	file "../Source/prod.c",line 5291,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5291| 
	.dwpsn	file "../Source/prod.c",line 5293,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5293| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5293| 
	.dwpsn	file "../Source/prod.c",line 5294,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5294| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5294| 
        MOVL      XAR0,ACC              ; [CPU_] |5294| 
	.dwpsn	file "../Source/prod.c",line 5293,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5293| 
	.dwpsn	file "../Source/prod.c",line 5294,column 6,is_stmt,isa 0
        MOVL      XAR1,P                ; [CPU_] |5294| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5294| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5294| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5305,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5305| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5305| 
	.dwpsn	file "../Source/prod.c",line 5306,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5306| 
        MOV       *XAR4++,AL            ; [CPU_] |5306| 
	.dwpsn	file "../Source/prod.c",line 5307,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5307| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5307| 
        MOV       *XAR1++,AL            ; [CPU_] |5307| 
	.dwpsn	file "../Source/prod.c",line 5308,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5308| 
        MOV       *XAR4++,AL            ; [CPU_] |5308| 
	.dwpsn	file "../Source/prod.c",line 5304,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR0--         ; [CPU_] |5304| 
        ; branchcc occurs ; [] |5304| 
	.dwpsn	file "../Source/prod.c",line 5314,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5314| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5321,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5321| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5321| 
	.dwpsn	file "../Source/prod.c",line 5322,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5322| 
        MOV       *XAR4++,AL            ; [CPU_] |5322| 
	.dwpsn	file "../Source/prod.c",line 5323,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5323| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5323| 
        MOV       *XAR1++,AL            ; [CPU_] |5323| 
	.dwpsn	file "../Source/prod.c",line 5324,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5324| 
        MOV       *XAR4++,AL            ; [CPU_] |5324| 
	.dwpsn	file "../Source/prod.c",line 5320,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR0--         ; [CPU_] |5320| 
        ; branchcc occurs ; [] |5320| 
	.dwpsn	file "../Source/prod.c",line 5290,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5290| 
        MOVL      XAR0,#91              ; [CPU_] |5290| 
        ADDB      ACC,#12               ; [CPU_] |5290| 
        MOVL      P,ACC                 ; [CPU_] |5290| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5290| 
	.dwpsn	file "../Source/prod.c",line 5293,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5293| 
        ADDB      AL,#10                ; [CPU_] |5293| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5293| 
        MOVZ      AR0,AR3               ; [CPU_] |5293| 
	.dwpsn	file "../Source/prod.c",line 5290,column 17,is_stmt,isa 0
        ADDB      XAR6,#12              ; [CPU_] |5290| 
        ADDB      XAR5,#12              ; [CPU_] |5290| 
        SUBB      XAR0,#1               ; [CPU_U] |5290| 
        MOVZ      AR3,AR0               ; [CPU_] |5290| 
        CMP       AR0,#-1               ; [CPU_] |5290| 
        B         $C$L173,NEQ           ; [CPU_] |5290| 
        ; branchcc occurs ; [] |5290| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5331,column 5,is_stmt,isa 0
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5331| 
        ; call occurs [#_ad7738_setcal] ; [] |5331| 
	.dwpsn	file "../Source/prod.c",line 5334,column 5,is_stmt,isa 0
        B         $C$L189,UNC           ; [CPU_] |5334| 
        ; branch occurs ; [] |5334| 
$C$L177:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5243,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5243| 
        B         $C$L320,LO            ; [CPU_] |5243| 
        ; branchcc occurs ; [] |5243| 
	.dwpsn	file "../Source/prod.c",line 5248,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5248| 
        MOVL      XAR0,#66              ; [CPU_] |5248| 
        MOVL      ACC,XAR7              ; [CPU_] |5248| 
        ADDB      ACC,#2                ; [CPU_] |5248| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5248| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GT            ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GT            ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVB      XAR0,#8               ; [CPU_] |5248| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GT            ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVB      XAR0,#11              ; [CPU_] |5248| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GT            ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5248| 
        CMPB      AL,#4                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5248| 
        CMPB      AL,#4                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVB      XAR0,#9               ; [CPU_] |5248| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5248| 
        CMPB      AL,#4                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVB      XAR0,#12              ; [CPU_] |5248| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5248| 
        CMPB      AL,#4                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVL      ACC,XAR7              ; [CPU_] |5248| 
        MOVL      XAR0,#64              ; [CPU_] |5248| 
        ADDB      ACC,#4                ; [CPU_] |5248| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5248| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVB      XAR0,#10              ; [CPU_] |5248| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVB      XAR0,#13              ; [CPU_] |5248| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5248| 
        CMPB      AL,#6                 ; [CPU_] |5248| 
        B         $C$L320,GEQ           ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5259,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5259| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5259| 
	.dwpsn	file "../Source/prod.c",line 5260,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5260| 
	.dwpsn	file "../Source/prod.c",line 5259,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5259| 
	.dwpsn	file "../Source/prod.c",line 5260,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5260| 
	.dwpsn	file "../Source/prod.c",line 5261,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5261| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5261| 
        ADDB      XAR7,#1               ; [CPU_] |5261| 
	.dwpsn	file "../Source/prod.c",line 5262,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5262| 
        MOV       *XAR4++,AL            ; [CPU_] |5262| 
	.dwpsn	file "../Source/prod.c",line 5263,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5263| 
        ADDB      XAR7,#1               ; [CPU_] |5263| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5263| 
	.dwpsn	file "../Source/prod.c",line 5264,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5258,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5258| 
	.dwpsn	file "../Source/prod.c",line 5264,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5258,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5258| 
        ; branchcc occurs ; [] |5258| 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5268| 
        ; call occurs [#_lcd_clear] ; [] |5268| 
	.dwpsn	file "../Source/prod.c",line 5269,column 5,is_stmt,isa 0
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("_update_units")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5269| 
        ; call occurs [#_update_units] ; [] |5269| 
	.dwpsn	file "../Source/prod.c",line 5266,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5266| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5266| 
	.dwpsn	file "../Source/prod.c",line 5264,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |5264| 
$C$L179:    
        MOVL      XAR0,#91              ; [CPU_] |5264| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5271,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |5271| 
        ; branch occurs ; [] |5271| 
$C$L180:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5222,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5222| 
        B         $C$L320,LO            ; [CPU_] |5222| 
        ; branchcc occurs ; [] |5222| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5227| 
        MOVB      XAR0,#36              ; [CPU_] |5227| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5227| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5228,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5228| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5228| 
        B         $C$L182,NEQ           ; [CPU_] |5228| 
        ; branchcc occurs ; [] |5228| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L181:    
	.dwpsn	file "../Source/prod.c",line 5230,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5230| 
	.dwpsn	file "../Source/prod.c",line 5231,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5231| 
	.dwpsn	file "../Source/prod.c",line 5229,column 18,is_stmt,isa 0
        BANZ      $C$L181,AR6--         ; [CPU_] |5229| 
        ; branchcc occurs ; [] |5229| 
	.dwpsn	file "../Source/prod.c",line 5233,column 6,is_stmt,isa 0
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("_update_units")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5233| 
        ; call occurs [#_update_units] ; [] |5233| 
$C$L182:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5237,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5237| 
        MOVL      XAR0,#66              ; [CPU_] |5237| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5237| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5237| 
	.dwpsn	file "../Source/prod.c",line 5239,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5239| 
        ; branch occurs ; [] |5239| 
$C$L183:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5181,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5181| 
        B         $C$L320,LO            ; [CPU_] |5181| 
        ; branchcc occurs ; [] |5181| 
	.dwpsn	file "../Source/prod.c",line 5187,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5187| 
        ADDB      XAR4,#2               ; [CPU_] |5187| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5187| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5187| 
        MOVZ      AR3,AL                ; [CPU_] |5187| 
	.dwpsn	file "../Source/prod.c",line 5188,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5188| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5188| 
        CMP       AR3,#4096             ; [CPU_] |5188| 
        B         $C$L320,HI            ; [CPU_] |5188| 
        ; branchcc occurs ; [] |5188| 
	.dwpsn	file "../Source/prod.c",line 5194,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5194| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5194| 
        MOVZ      AR7,AR6               ; [CPU_] |5194| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L184:    
	.dwpsn	file "../Source/prod.c",line 5196,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5196| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5196| 
	.dwpsn	file "../Source/prod.c",line 5195,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5195| 
        ADDB      XAR4,#2               ; [CPU_] |5195| 
	.dwpsn	file "../Source/prod.c",line 5196,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5196| 
	.dwpsn	file "../Source/prod.c",line 5195,column 17,is_stmt,isa 0
        BANZ      $C$L184,AR6--         ; [CPU_] |5195| 
        ; branchcc occurs ; [] |5195| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5201| 
        MOVB      XAR1,#38              ; [CPU_] |5201| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5202| 
        MOVB      XAR1,#40              ; [CPU_] |5202| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_maf_rst")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5203| 
        ; call occurs [#_maf_rst] ; [] |5203| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5208| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5208| 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5212| 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5208| 
	.dwpsn	file "../Source/prod.c",line 5209,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5209| 
        LSR       AL,8                  ; [CPU_] |5209| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5209| 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5212| 
        MOVB      XAR1,#40              ; [CPU_] |5212| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5213| 
        MOVL      XAR0,#50              ; [CPU_] |5213| 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5212| 
        ANDB      AL,#0xff              ; [CPU_] |5212| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5213| 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5212| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5213| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5214| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5213| 
        LSR       AL,8                  ; [CPU_] |5213| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5213| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5214| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5214| 
	.dwpsn	file "../Source/prod.c",line 5215,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5215| 
        LSR       AL,8                  ; [CPU_] |5215| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5214| 
	.dwpsn	file "../Source/prod.c",line 5215,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5215| 
        MOV       *+FP[AR0],#8          ; [CPU_] |5215| 
	.dwpsn	file "../Source/prod.c",line 5218,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |5218| 
        ; branch occurs ; [] |5218| 
$C$L185:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5148,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5148| 
        B         $C$L320,LO            ; [CPU_] |5148| 
        ; branchcc occurs ; [] |5148| 
        MOVL      ACC,XAR4              ; [CPU_] |5148| 
        MOVL      XAR0,#66              ; [CPU_] |5148| 
        ADDB      ACC,#2                ; [CPU_] |5148| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5148| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5148| 
        B         $C$L320,LT            ; [CPU_] |5148| 
        ; branchcc occurs ; [] |5148| 
        MOVL      XAR5,XAR4             ; [CPU_] |5148| 
        MOVL      XAR0,#66              ; [CPU_] |5148| 
        CMPB      AL,#4                 ; [CPU_] |5148| 
        ADDB      XAR5,#2               ; [CPU_] |5148| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5148| 
        B         $C$L320,GEQ           ; [CPU_] |5148| 
        ; branchcc occurs ; [] |5148| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5148| 
        B         $C$L320,LT            ; [CPU_] |5148| 
        ; branchcc occurs ; [] |5148| 
        CMPB      AH,#20                ; [CPU_] |5148| 
        B         $C$L320,GEQ           ; [CPU_] |5148| 
        ; branchcc occurs ; [] |5148| 
	.dwpsn	file "../Source/prod.c",line 5158,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5158| 
        MOVL      XAR0,#66              ; [CPU_] |5158| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5158| 
        MOVL      XAR0,#80              ; [CPU_] |5158| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5158| 
	.dwpsn	file "../Source/prod.c",line 5156,column 5,is_stmt,isa 0
        MOVL      *-SP[62],ACC          ; [CPU_] |5156| 
	.dwpsn	file "../Source/prod.c",line 5158,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[62]          ; [CPU_] |5158| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5158| 
        B         $C$L318,NEQ           ; [CPU_] |5158| 
        ; branchcc occurs ; [] |5158| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5164,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5164| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5164| 
        MOVB      AL,#10                ; [CPU_] |5164| 
        MOV       T,*-SP[62]            ; [CPU_] |5164| 
        MPYU      ACC,T,AL              ; [CPU_] |5164| 
        ADDL      ACC,XAR6              ; [CPU_] |5164| 
        MOVL      XAR4,ACC              ; [CPU_] |5164| 
        MOVB      XAR0,#42              ; [CPU_] |5164| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[61]           ; [CPU_] |5164| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5164| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5165| 
        ; call occurs [#_ad7738_setcal] ; [] |5165| 
        MOVL      XAR0,#78              ; [CPU_] |5165| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |5167| 
        MOVL      XAR1,ACC              ; [CPU_] |5167| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5167| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5167| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5167| 
	.dwpsn	file "../Source/prod.c",line 5168,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5168| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5168| 
        ; call occurs [#_ad7738_resetvall] ; [] |5168| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5171,column 5,is_stmt,isa 0
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_update_units")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5171| 
        ; call occurs [#_update_units] ; [] |5171| 
	.dwpsn	file "../Source/prod.c",line 5174,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5174| 
        MOV       AL,*-SP[62]           ; [CPU_] |5174| 
	.dwpsn	file "../Source/prod.c",line 5175,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5175| 
	.dwpsn	file "../Source/prod.c",line 5174,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5174| 
        MOV       AL,*-SP[61]           ; [CPU_] |5174| 
	.dwpsn	file "../Source/prod.c",line 5175,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5175| 
        MOV       *+FP[AR0],#4          ; [CPU_] |5175| 
	.dwpsn	file "../Source/prod.c",line 5177,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |5177| 
        ; branch occurs ; [] |5177| 
$C$L186:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5112,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5112| 
        B         $C$L320,LO            ; [CPU_] |5112| 
        ; branchcc occurs ; [] |5112| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5118,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR5             ; [CPU_] |5118| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L188:    
	.dwpsn	file "../Source/prod.c",line 5120,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5120| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5121,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5121| 
        MOV       *XAR4++,AL            ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5122,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5122| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5122| 
        MOV       *XAR1++,AL            ; [CPU_] |5122| 
	.dwpsn	file "../Source/prod.c",line 5123,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5123| 
        MOV       *XAR4++,AL            ; [CPU_] |5123| 
	.dwpsn	file "../Source/prod.c",line 5119,column 18,is_stmt,isa 0
        BANZ      $C$L188,AR0--         ; [CPU_] |5119| 
        ; branchcc occurs ; [] |5119| 
	.dwpsn	file "../Source/prod.c",line 5117,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5117| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5117| 
        ADDB      XAR5,#2               ; [CPU_] |5117| 
	.dwpsn	file "../Source/prod.c",line 5123,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5123| 
        ADDB      AL,#4                 ; [CPU_] |5123| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5123| 
	.dwpsn	file "../Source/prod.c",line 5117,column 17,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5117| 
        ; branchcc occurs ; [] |5117| 
	.dwpsn	file "../Source/prod.c",line 5128,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |5128| 
        MOVL      ACC,XAR5              ; [CPU_] |5128| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5128| 
        MOVL      XAR6,ACC              ; [CPU_] |5128| 
        MOV       AL,*XAR7              ; [CPU_] |5128| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5128| 
	.dwpsn	file "../Source/prod.c",line 5129,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5129| 
        MOVL      XAR6,XAR5             ; [CPU_] |5129| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5129| 
        MOVL      XAR5,ACC              ; [CPU_] |5129| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5129| 
        ANDB      AL,#0xff              ; [CPU_] |5129| 
        MOV       *XAR4++,AL            ; [CPU_] |5129| 
	.dwpsn	file "../Source/prod.c",line 5130,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5130| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5130| 
        MOVL      XAR5,ACC              ; [CPU_] |5130| 
	.dwpsn	file "../Source/prod.c",line 5128,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5128| 
	.dwpsn	file "../Source/prod.c",line 5130,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5130| 
        ADD       *+XAR5[0],AL          ; [CPU_] |5130| 
	.dwpsn	file "../Source/prod.c",line 5131,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5131| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5131| 
        MOVL      XAR5,ACC              ; [CPU_] |5131| 
        MOVL      XAR0,#91              ; [CPU_] |5131| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5131| 
        LSR       AL,8                  ; [CPU_] |5131| 
        MOV       *+XAR4[0],AL          ; [CPU_] |5131| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5131| 
	.dwpsn	file "../Source/prod.c",line 5130,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5130| 
        ADDB      AL,#2                 ; [CPU_] |5130| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5130| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5136,column 5,is_stmt,isa 0
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5136| 
        ; call occurs [#_ad7738_setcal] ; [] |5136| 
	.dwpsn	file "../Source/prod.c",line 5137,column 5,is_stmt,isa 0
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_velf_rst")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5137| 
        ; call occurs [#_velf_rst] ; [] |5137| 
$C$L189:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5141,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |5141| 
        ; branch occurs ; [] |5141| 
$C$L190:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5073,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5073| 
        B         $C$L320,LO            ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
        MOVL      ACC,XAR4              ; [CPU_] |5073| 
        MOVL      XAR0,#66              ; [CPU_] |5073| 
        ADDB      ACC,#2                ; [CPU_] |5073| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5073| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5073| 
        B         $C$L320,LT            ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
        MOVL      XAR5,XAR4             ; [CPU_] |5073| 
        MOVL      XAR0,#66              ; [CPU_] |5073| 
        CMPB      AL,#20                ; [CPU_] |5073| 
        ADDB      XAR5,#2               ; [CPU_] |5073| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5073| 
        B         $C$L320,GEQ           ; [CPU_] |5073| 
        ; branchcc occurs ; [] |5073| 
	.dwpsn	file "../Source/prod.c",line 5077,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |5077| 
	.dwpsn	file "../Source/prod.c",line 5078,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5078| 
	.dwpsn	file "../Source/prod.c",line 5080,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5080| 
	.dwpsn	file "../Source/prod.c",line 5078,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5078| 
	.dwpsn	file "../Source/prod.c",line 5080,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5080| 
        ADDB      ACC,#2                ; [CPU_] |5080| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5080| 
        MOVL      XAR0,#40              ; [CPU_] |5080| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5080| 
        MOV       T,*-SP[61]            ; [CPU_] |5080| 
        MOVB      AL,#152               ; [CPU_] |5080| 
        MPYU      ACC,T,AL              ; [CPU_] |5080| 
        ADDL      ACC,XAR6              ; [CPU_] |5080| 
        ADDB      ACC,#224              ; [CPU_] |5080| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5080| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5082,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5082| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5082| 
	.dwpsn	file "../Source/prod.c",line 5083,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5083| 
        MOV       *XAR5++,AL            ; [CPU_] |5083| 
	.dwpsn	file "../Source/prod.c",line 5084,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5084| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5084| 
        MOV       *XAR7++,AL            ; [CPU_] |5084| 
	.dwpsn	file "../Source/prod.c",line 5085,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5085| 
        MOV       *XAR5++,AL            ; [CPU_] |5085| 
	.dwpsn	file "../Source/prod.c",line 5081,column 17,is_stmt,isa 0
        BANZ      $C$L191,AR6--         ; [CPU_] |5081| 
        ; branchcc occurs ; [] |5081| 
	.dwpsn	file "../Source/prod.c",line 5090,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5090| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5090| 
        MOVB      AL,#152               ; [CPU_] |5090| 
        MPYU      ACC,T,AL              ; [CPU_] |5090| 
        ADDL      ACC,XAR6              ; [CPU_] |5090| 
        MOVL      XAR1,ACC              ; [CPU_] |5090| 
        MOVB      XAR0,#125             ; [CPU_] |5090| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5090| 
        CMPB      AL,#247               ; [CPU_] |5090| 
        B         $C$L194,NEQ           ; [CPU_] |5090| 
        ; branchcc occurs ; [] |5090| 
	.dwpsn	file "../Source/prod.c",line 5092,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5092| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5092| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5092| 
        MOV       AL,#0                 ; [CPU_] |5092| 
        MOV       AH,#17096             ; [CPU_] |5092| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5092| 
        ; call occurs [#FS$$DIV] ; [] |5092| 
        MOVB      XAR0,#126             ; [CPU_] |5092| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5092| 
        MOVL      XAR0,#40              ; [CPU_] |5092| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5092| 
	.dwpsn	file "../Source/prod.c",line 5095,column 11,is_stmt,isa 0
        MOV       *-SP[62],#0           ; [CPU_] |5095| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5096,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[61]          ; [CPU_] |5096| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5096| 
        CMPL      ACC,XAR6              ; [CPU_] |5096| 
        B         $C$L193,NEQ           ; [CPU_] |5096| 
        ; branchcc occurs ; [] |5096| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5099,column 8,is_stmt,isa 0
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5099| 
        ; call occurs [#_ad7738_setcal] ; [] |5099| 
        MOVL      XAR0,#78              ; [CPU_] |5099| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5099| 
	.dwpsn	file "../Source/prod.c",line 5100,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |5100| 
        MOVL      XAR4,ACC              ; [CPU_] |5100| 
        MOVL      XAR0,#88              ; [CPU_] |5100| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5100| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5100| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5100| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5100| 
        MOVL      XAR0,#88              ; [CPU_] |5100| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5100| 
	.dwpsn	file "../Source/prod.c",line 5101,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5101| 
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5101| 
        ; call occurs [#_ad7738_resetvall] ; [] |5101| 
 clrc INTM
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5095,column 19,is_stmt,isa 0
        INC       *-SP[62]              ; [CPU_] |5095| 
        ADDB      XAR1,#10              ; [CPU_] |5095| 
        MOV       AL,*-SP[62]           ; [CPU_] |5095| 
        CMPB      AL,#4                 ; [CPU_] |5095| 
        B         $C$L192,LO            ; [CPU_] |5095| 
        ; branchcc occurs ; [] |5095| 
$C$L194:    
	.dwpsn	file "../Source/prod.c",line 5084,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5084| 
        MOV       *+FP[AR0],#7          ; [CPU_] |5084| 
	.dwpsn	file "../Source/prod.c",line 5108,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |5108| 
        ; branch occurs ; [] |5108| 
$C$L195:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4972,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4972| 
        B         $C$L320,LO            ; [CPU_] |4972| 
        ; branchcc occurs ; [] |4972| 
        MOVL      ACC,XAR4              ; [CPU_] |4972| 
        MOVL      XAR0,#66              ; [CPU_] |4972| 
        ADDB      ACC,#2                ; [CPU_] |4972| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4972| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4972| 
        B         $C$L320,LT            ; [CPU_] |4972| 
        ; branchcc occurs ; [] |4972| 
        MOVL      XAR5,XAR4             ; [CPU_] |4972| 
        MOVL      XAR0,#66              ; [CPU_] |4972| 
        CMPB      AL,#20                ; [CPU_] |4972| 
        ADDB      XAR5,#2               ; [CPU_] |4972| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4972| 
        B         $C$L320,GEQ           ; [CPU_] |4972| 
        ; branchcc occurs ; [] |4972| 
	.dwpsn	file "../Source/prod.c",line 4977,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |4977| 
        MOVL      XAR0,#66              ; [CPU_] |4977| 
        MOV       *-SP[61],AL           ; [CPU_] |4977| 
        ADDB      XAR5,#2               ; [CPU_] |4977| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4978,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |4978| 
        MOV       AL,AR6                ; [CPU_] |4978| 
        CMPB      AL,#247               ; [CPU_] |4978| 
        B         $C$L196,EQ            ; [CPU_] |4978| 
        ; branchcc occurs ; [] |4978| 
	.dwpsn	file "../Source/prod.c",line 4980,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4980| 
        MOVL      XAR0,#66              ; [CPU_] |4980| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4980| 
        MOVL      XAR0,#40              ; [CPU_] |4980| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4980| 
        MOVB      AL,#152               ; [CPU_] |4980| 
        MOV       T,*-SP[61]            ; [CPU_] |4980| 
        MPYU      ACC,T,AL              ; [CPU_] |4980| 
        ADDL      ACC,XAR7              ; [CPU_] |4980| 
        MOVL      XAR4,ACC              ; [CPU_] |4980| 
        MOVB      XAR0,#124             ; [CPU_] |4980| 
        MOV       PH,#0                 ; [CPU_] |4980| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4980| 
        ANDB      AL,#0xf0              ; [CPU_] |4980| 
        MOVU      ACC,AL                ; [CPU_] |4980| 
        MOVL      XAR7,ACC              ; [CPU_] |4980| 
        MOV       AL,AR6                ; [CPU_] |4980| 
        ANDB      AL,#240               ; [CPU_] |4980| 
        MOV       PL,AL                 ; [CPU_] |4980| 
        MOVL      ACC,XAR7              ; [CPU_] |4980| 
        CMPL      ACC,P                 ; [CPU_] |4980| 
        B         $C$L320,NEQ           ; [CPU_] |4980| 
        ; branchcc occurs ; [] |4980| 
$C$L196:    
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4986| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4986| 
        MOVB      AL,#152               ; [CPU_] |4986| 
        MOV       T,*-SP[61]            ; [CPU_] |4986| 
        MPYU      ACC,T,AL              ; [CPU_] |4986| 
        ADDL      ACC,XAR7              ; [CPU_] |4986| 
        MOVL      XAR1,ACC              ; [CPU_] |4986| 
        MOVB      XAR0,#125             ; [CPU_] |4986| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4987| 
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |4986| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |4987| 
	.dwpsn	file "../Source/prod.c",line 4988,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4988| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4987| 
	.dwpsn	file "../Source/prod.c",line 4988,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |4988| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |4988| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4988| 
        MOV       AL,AR6                ; [CPU_] |4988| 
        MOV       *+FP[AR0],#4          ; [CPU_] |4988| 
	.dwpsn	file "../Source/prod.c",line 4990,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |4990| 
        B         $C$L206,EQ            ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
	.dwpsn	file "../Source/prod.c",line 4993,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4993| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |4993| 
        B         $C$L205,EQ            ; [CPU_] |4993| 
        ; branchcc occurs ; [] |4993| 
	.dwpsn	file "../Source/prod.c",line 4997,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4997| 
        CMPB      AL,#34                ; [CPU_] |4997| 
        B         $C$L197,GT            ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        CMPB      AL,#34                ; [CPU_] |4997| 
        B         $C$L201,EQ            ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        CMPB      AL,#16                ; [CPU_] |4997| 
        B         $C$L204,EQ            ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        CMPB      AL,#17                ; [CPU_] |4997| 
        B         $C$L203,EQ            ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        B         $C$L205,UNC           ; [CPU_] |4997| 
        ; branch occurs ; [] |4997| 
$C$L197:    
        CMPB      AL,#35                ; [CPU_] |4997| 
        B         $C$L199,EQ            ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        CMPB      AL,#36                ; [CPU_] |4997| 
        B         $C$L205,NEQ           ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5038,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5038| 
        B         $C$L198,EQ            ; [CPU_] |5038| 
        ; branchcc occurs ; [] |5038| 
        CMPB      AL,#35                ; [CPU_] |5038| 
        B         $C$L208,NEQ           ; [CPU_] |5038| 
        ; branchcc occurs ; [] |5038| 
	.dwpsn	file "../Source/prod.c",line 5043,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5043| 
        MOV       AH,#15820             ; [CPU_] |5043| 
	.dwpsn	file "../Source/prod.c",line 5044,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5044| 
        ; branch occurs ; [] |5044| 
$C$L198:    
	.dwpsn	file "../Source/prod.c",line 5040,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5040| 
        MOV       AH,#15649             ; [CPU_] |5040| 
	.dwpsn	file "../Source/prod.c",line 5041,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5041| 
        ; branch occurs ; [] |5041| 
$C$L199:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5026,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5026| 
        B         $C$L200,EQ            ; [CPU_] |5026| 
        ; branchcc occurs ; [] |5026| 
        CMPB      AL,#36                ; [CPU_] |5026| 
        B         $C$L208,NEQ           ; [CPU_] |5026| 
        ; branchcc occurs ; [] |5026| 
	.dwpsn	file "../Source/prod.c",line 5031,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5031| 
        MOV       AH,#16672             ; [CPU_] |5031| 
	.dwpsn	file "../Source/prod.c",line 5032,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5032| 
        ; branch occurs ; [] |5032| 
$C$L200:    
	.dwpsn	file "../Source/prod.c",line 5028,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5028| 
        MOV       AH,#16073             ; [CPU_] |5028| 
	.dwpsn	file "../Source/prod.c",line 5029,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5029| 
        ; branch occurs ; [] |5029| 
$C$L201:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5014,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5014| 
        B         $C$L202,EQ            ; [CPU_] |5014| 
        ; branchcc occurs ; [] |5014| 
        CMPB      AL,#36                ; [CPU_] |5014| 
        B         $C$L208,NEQ           ; [CPU_] |5014| 
        ; branchcc occurs ; [] |5014| 
	.dwpsn	file "../Source/prod.c",line 5019,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5019| 
        MOV       AH,#16843             ; [CPU_] |5019| 
	.dwpsn	file "../Source/prod.c",line 5020,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5020| 
        ; branch occurs ; [] |5020| 
$C$L202:    
	.dwpsn	file "../Source/prod.c",line 5016,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5016| 
        MOV       AH,#16418             ; [CPU_] |5016| 
	.dwpsn	file "../Source/prod.c",line 5017,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5017| 
        ; branch occurs ; [] |5017| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5007,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5007| 
        B         $C$L208,NEQ           ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
	.dwpsn	file "../Source/prod.c",line 5008,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5008| 
        MOV       AH,#16397             ; [CPU_] |5008| 
        B         $C$L207,UNC           ; [CPU_] |5008| 
        ; branch occurs ; [] |5008| 
$C$L204:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5000,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5000| 
        B         $C$L208,NEQ           ; [CPU_] |5000| 
        ; branchcc occurs ; [] |5000| 
	.dwpsn	file "../Source/prod.c",line 5001,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5001| 
        MOV       AH,#16104             ; [CPU_] |5001| 
        B         $C$L207,UNC           ; [CPU_] |5001| 
        ; branch occurs ; [] |5001| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 4995,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4995| 
	.dwpsn	file "../Source/prod.c",line 4996,column 5,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |4996| 
        ; branch occurs ; [] |4996| 
$C$L206:    
	.dwpsn	file "../Source/prod.c",line 4991,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |4991| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4991| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4991| 
        MOV       AL,#0                 ; [CPU_] |4991| 
        MOV       AH,#17096             ; [CPU_] |4991| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4991| 
        ; call occurs [#FS$$DIV] ; [] |4991| 
$C$L207:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4991| 
$C$L208:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5057,column 10,is_stmt,isa 0
        MOV       *-SP[62],#0           ; [CPU_] |5057| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5058,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[61]          ; [CPU_] |5058| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5058| 
        CMPL      ACC,XAR6              ; [CPU_] |5058| 
        B         $C$L210,NEQ           ; [CPU_] |5058| 
        ; branchcc occurs ; [] |5058| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5059,column 7,is_stmt,isa 0
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_update_units")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5059| 
        ; call occurs [#_update_units] ; [] |5059| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5061,column 7,is_stmt,isa 0
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5061| 
        ; call occurs [#_ad7738_setcal] ; [] |5061| 
        MOVL      XAR0,#78              ; [CPU_] |5061| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5061| 
	.dwpsn	file "../Source/prod.c",line 5062,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |5062| 
        MOVL      XAR4,ACC              ; [CPU_] |5062| 
        MOVL      XAR0,#88              ; [CPU_] |5062| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5062| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5062| 
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5062| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5062| 
        MOVL      XAR0,#88              ; [CPU_] |5062| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5062| 
	.dwpsn	file "../Source/prod.c",line 5063,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5063| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5063| 
        ; call occurs [#_ad7738_resetvall] ; [] |5063| 
 clrc INTM
$C$L210:    
	.dwpsn	file "../Source/prod.c",line 5057,column 18,is_stmt,isa 0
        INC       *-SP[62]              ; [CPU_] |5057| 
        ADDB      XAR1,#10              ; [CPU_] |5057| 
        MOV       AL,*-SP[62]           ; [CPU_] |5057| 
        CMPB      AL,#4                 ; [CPU_] |5057| 
        B         $C$L209,LO            ; [CPU_] |5057| 
        ; branchcc occurs ; [] |5057| 
        B         $C$L302,UNC           ; [CPU_] |5057| 
        ; branch occurs ; [] |5057| 
$C$L211:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4944,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4944| 
        B         $C$L320,LO            ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4944| 
        MOVL      XAR0,#66              ; [CPU_] |4944| 
        MOVL      ACC,XAR7              ; [CPU_] |4944| 
        ADDB      ACC,#2                ; [CPU_] |4944| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4944| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4944| 
        B         $C$L320,LT            ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
        ADDB      XAR4,#2               ; [CPU_] |4944| 
        MOVL      XAR0,#66              ; [CPU_] |4944| 
        CMPB      AL,#20                ; [CPU_] |4944| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4944| 
        B         $C$L320,GEQ           ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4944| 
        MOVB      AH,#4                 ; [CPU_] |4944| 
        ADD       AH,AR6                ; [CPU_] |4944| 
        CMP       AH,*-SP[63]           ; [CPU_] |4944| 
        B         $C$L320,HI            ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
	.dwpsn	file "../Source/prod.c",line 4949,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4950,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4950| 
        MOVL      XAR0,#66              ; [CPU_] |4950| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4950| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4950| 
        MOV       AL,*-SP[61]           ; [CPU_] |4950| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4950| 
        MOV       AL,AR6                ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4952| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4952| 
        B         $C$L212,HIS           ; [CPU_] |4952| 
        ; branchcc occurs ; [] |4952| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4952| 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4954,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4954| 
        MOVB      XAR5,#0               ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        B         $C$L214,EQ            ; [CPU_] |4954| 
        ; branchcc occurs ; [] |4954| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[61]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 4955,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4955,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4955,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4954,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4954| 
        B         $C$L213,HI            ; [CPU_] |4954| 
        ; branchcc occurs ; [] |4954| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 4957,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4957| 
        MOVB      AL,#152               ; [CPU_] |4957| 
        MOV       T,*-SP[61]            ; [CPU_] |4957| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4957| 
        MPYU      P,T,AL                ; [CPU_] |4957| 
        MOVL      ACC,P                 ; [CPU_] |4957| 
        ADD       ACC,AR5               ; [CPU_] |4957| 
        ADDL      ACC,XAR6              ; [CPU_] |4957| 
        MOVL      XAR4,ACC              ; [CPU_] |4957| 
        MOVB      XAR0,#98              ; [CPU_] |4957| 
	.dwpsn	file "../Source/prod.c",line 4961,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4961| 
	.dwpsn	file "../Source/prod.c",line 4957,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4957| 
	.dwpsn	file "../Source/prod.c",line 4961,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4961| 
        MOVL      XAR4,ACC              ; [CPU_] |4961| 
        MOVL      XAR1,ACC              ; [CPU_] |4961| 
        ADDB      XAR4,#98              ; [CPU_] |4961| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_strlen")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4961| 
        ; call occurs [#_strlen] ; [] |4961| 
	.dwpsn	file "../Source/prod.c",line 4962,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4962| 
        MOVL      XAR0,#91              ; [CPU_] |4962| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4962| 
	.dwpsn	file "../Source/prod.c",line 4963,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4963| 
	.dwpsn	file "../Source/prod.c",line 4962,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],#4          ; [CPU_] |4962| 
	.dwpsn	file "../Source/prod.c",line 4963,column 17,is_stmt,isa 0
        B         $C$L302,EQ            ; [CPU_] |4963| 
        ; branchcc occurs ; [] |4963| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4963,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4963| 
$C$L215:    
	.dwpsn	file "../Source/prod.c",line 4964,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |4964| 
        MOVL      XAR0,#91              ; [CPU_] |4964| 
        MOV       *XAR4++,AH            ; [CPU_] |4964| 
	.dwpsn	file "../Source/prod.c",line 4963,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4963| 
	.dwpsn	file "../Source/prod.c",line 4964,column 6,is_stmt,isa 0
        MOV       AH,*+FP[AR0]          ; [CPU_] |4964| 
        ADDB      AH,#1                 ; [CPU_] |4964| 
        MOVL      XAR0,#91              ; [CPU_] |4964| 
	.dwpsn	file "../Source/prod.c",line 4963,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |4963| 
	.dwpsn	file "../Source/prod.c",line 4964,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |4964| 
	.dwpsn	file "../Source/prod.c",line 4963,column 17,is_stmt,isa 0
        B         $C$L215,HI            ; [CPU_] |4963| 
        ; branchcc occurs ; [] |4963| 
        B         $C$L302,UNC           ; [CPU_] |4963| 
        ; branch occurs ; [] |4963| 
$C$L216:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5502,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5502| 
        B         $C$L320,LO            ; [CPU_] |5502| 
        ; branchcc occurs ; [] |5502| 
	.dwpsn	file "../Source/prod.c",line 5507,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5507| 
	.dwpsn	file "../Source/prod.c",line 5508,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5508| 
	.dwpsn	file "../Source/prod.c",line 5507,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5507| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5507| 
        MOV       *-SP[61],AL           ; [CPU_] |5507| 
	.dwpsn	file "../Source/prod.c",line 5508,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5508| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5508| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5508| 
	.dwpsn	file "../Source/prod.c",line 5510,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5510| 
        SUBB      XAR5,#24              ; [CPU_U] |5510| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5510| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L217:    
	.dwpsn	file "../Source/prod.c",line 5512,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5512| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5512| 
	.dwpsn	file "../Source/prod.c",line 5513,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5513| 
        MOV       *XAR1++,AL            ; [CPU_] |5513| 
	.dwpsn	file "../Source/prod.c",line 5514,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5514| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5514| 
        MOV       *XAR5++,AL            ; [CPU_] |5514| 
	.dwpsn	file "../Source/prod.c",line 5515,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5515| 
        MOV       *XAR1++,AL            ; [CPU_] |5515| 
	.dwpsn	file "../Source/prod.c",line 5511,column 17,is_stmt,isa 0
        BANZ      $C$L217,AR6--         ; [CPU_] |5511| 
        ; branchcc occurs ; [] |5511| 
        MOV       AL,*-SP[61]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5519,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5519| 
        B         $C$L320,HIS           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
        MOVL      XAR0,#40              ; [CPU_] |5519| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5519| 
        MOVB      AL,#12                ; [CPU_] |5519| 
        MOV       T,*-SP[61]            ; [CPU_] |5519| 
        MPYU      ACC,T,AL              ; [CPU_] |5519| 
        ADDL      ACC,XAR6              ; [CPU_] |5519| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5519| 
        MOVL      XAR4,ACC              ; [CPU_] |5519| 
        MOVL      XAR0,#88              ; [CPU_] |5519| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5519| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5519| 
        CMPB      AL,#7                 ; [CPU_] |5519| 
        B         $C$L320,NEQ           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5519| 
        MOV       *-SP[51],#0           ; [CPU_] |5519| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5519| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5519| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5519| 
        ; call occurs [#FS$$CMP] ; [] |5519| 
        CMPB      AL,#0                 ; [CPU_] |5519| 
        B         $C$L218,GEQ           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
        MOV       *-SP[51],#1           ; [CPU_] |5519| 
$C$L218:    
        MOV       AL,*-SP[51]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
        MOV       AL,#0                 ; [CPU_] |5519| 
        MOV       AH,#16672             ; [CPU_] |5519| 
        MOV       *-SP[51],#0           ; [CPU_] |5519| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5519| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5519| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5519| 
        ; call occurs [#FS$$CMP] ; [] |5519| 
        CMPB      AL,#0                 ; [CPU_] |5519| 
        B         $C$L219,LEQ           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
        MOV       *-SP[51],#1           ; [CPU_] |5519| 
$C$L219:    
        MOV       AL,*-SP[51]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5519| 
        ; branchcc occurs ; [] |5519| 
	.dwpsn	file "../Source/prod.c",line 5526,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5526| 
        MOV       AH,#0                 ; [CPU_] |5526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5526| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5526| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5526| 
        ; call occurs [#FS$$CMP] ; [] |5526| 
        CMPB      AL,#0                 ; [CPU_] |5526| 
        B         $C$L220,GEQ           ; [CPU_] |5526| 
        ; branchcc occurs ; [] |5526| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5526| 
        MOVL      XAR0,#88              ; [CPU_] |5526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5526| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5526| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5526| 
        B         $C$L221,UNC           ; [CPU_] |5526| 
        ; branch occurs ; [] |5526| 
$C$L220:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5526| 
        MOVL      XAR0,#88              ; [CPU_] |5526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5526| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5526| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5526| 
$C$L221:    
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5526| 
        ; call occurs [#FS$$MPY] ; [] |5526| 
        MOVL      XAR0,#88              ; [CPU_] |5526| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5526| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5526| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5526| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5526| 
        ; call occurs [#FS$$ADD] ; [] |5526| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5526| 
        ; call occurs [#FS$$TOLL] ; [] |5526| 
	.dwpsn	file "../Source/prod.c",line 5514,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5514| 
	.dwpsn	file "../Source/prod.c",line 5533,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5533| 
	.dwpsn	file "../Source/prod.c",line 5526,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5526| 
	.dwpsn	file "../Source/prod.c",line 5514,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#7          ; [CPU_] |5514| 
	.dwpsn	file "../Source/prod.c",line 5526,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5526| 
	.dwpsn	file "../Source/prod.c",line 5533,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5533| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5533| 
        CMP64     ACC:P                 ; [CPU_] |5533| 
        B         $C$L223,LEQ           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
	.dwpsn	file "../Source/prod.c",line 5535,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5535| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5535| 
        MOV       *-SP[2],#0            ; [CPU_] |5535| 
        MOV       *-SP[1],#0            ; [CPU_] |5535| 
        MOVL      P,*-SP[32]            ; [CPU_] |5535| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5535| 
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$694, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5535| 
        ; call occurs [#LL$$CMP] ; [] |5535| 
        CMPB      AL,#0                 ; [CPU_] |5535| 
        B         $C$L222,GEQ           ; [CPU_] |5535| 
        ; branchcc occurs ; [] |5535| 
	.dwpsn	file "../Source/prod.c",line 5538,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5538| 
        MOV       *-SP[35],AL           ; [CPU_] |5538| 
        B         $C$L224,UNC           ; [CPU_] |5538| 
        ; branch occurs ; [] |5538| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5536,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5536| 
	.dwpsn	file "../Source/prod.c",line 5537,column 5,is_stmt,isa 0
        B         $C$L224,UNC           ; [CPU_] |5537| 
        ; branch occurs ; [] |5537| 
$C$L223:    
	.dwpsn	file "../Source/prod.c",line 5534,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5534| 
$C$L224:    
        MOV       AH,*-SP[61]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5541,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5541| 
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5541| 
        ; call occurs [#_mcbsp_xmit] ; [] |5541| 
	.dwpsn	file "../Source/prod.c",line 5542,column 5,is_stmt,isa 0
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_latch_dac")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5542| 
        ; call occurs [#_latch_dac] ; [] |5542| 
	.dwpsn	file "../Source/prod.c",line 5545,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5545| 
        ANDB      AL,#0xff              ; [CPU_] |5545| 
        MOV       *XAR1++,AL            ; [CPU_] |5545| 
	.dwpsn	file "../Source/prod.c",line 5546,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5546| 
        LSR       AL,8                  ; [CPU_] |5546| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5546| 
	.dwpsn	file "../Source/prod.c",line 5549,column 5,is_stmt,isa 0
        B         $C$L736,UNC           ; [CPU_] |5549| 
        ; branch occurs ; [] |5549| 
$C$L225:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5438,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5438| 
        B         $C$L320,LO            ; [CPU_] |5438| 
        ; branchcc occurs ; [] |5438| 
	.dwpsn	file "../Source/prod.c",line 5443,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5443| 
$C$L226:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5443| 
$C$L227:    
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5443| 
        ; call occurs [#_ad7738_resetvall] ; [] |5443| 
$C$L228:    
	.dwpsn	file "../Source/prod.c",line 5446,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5446| 
        MOVL      XAR0,#66              ; [CPU_] |5446| 
        ADDB      ACC,#2                ; [CPU_] |5446| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5446| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5446| 
        ANDB      AL,#0x0f              ; [CPU_] |5446| 
	.dwpsn	file "../Source/prod.c",line 5448,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5448| 
        ; branch occurs ; [] |5448| 
$C$L229:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5424,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5424| 
        B         $C$L320,LO            ; [CPU_] |5424| 
        ; branchcc occurs ; [] |5424| 
	.dwpsn	file "../Source/prod.c",line 5429,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5429| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5429| 
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5429| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5429| 
	.dwpsn	file "../Source/prod.c",line 5434,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5434| 
        ; branch occurs ; [] |5434| 
$C$L230:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5488,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5488| 
        B         $C$L320,LO            ; [CPU_] |5488| 
        ; branchcc occurs ; [] |5488| 
	.dwpsn	file "../Source/prod.c",line 5493,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5493| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5493| 
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5493| 
        ; call occurs [#_shunt_switch] ; [] |5493| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5498| 
        ; branch occurs ; [] |5498| 
$C$L231:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5472,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5472| 
        B         $C$L320,LO            ; [CPU_] |5472| 
        ; branchcc occurs ; [] |5472| 
	.dwpsn	file "../Source/prod.c",line 5477,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5477| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5477| 
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5477| 
        ; call occurs [#_ad7738_resettare] ; [] |5477| 
	.dwpsn	file "../Source/prod.c",line 5478,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5478| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5478| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5478| 
	.dwpsn	file "../Source/prod.c",line 5479,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5479| 
	.dwpsn	file "../Source/prod.c",line 5484,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5484| 
        ; branch occurs ; [] |5484| 
$C$L232:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5452,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5452| 
        B         $C$L320,LO            ; [CPU_] |5452| 
        ; branchcc occurs ; [] |5452| 
	.dwpsn	file "../Source/prod.c",line 5457,column 5,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |5457| 
	.dwpsn	file "../Source/prod.c",line 5458,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5458| 
$C$L233:    
        MOV       AL,*-SP[51]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5459,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5459| 
        B         $C$L234,EQ            ; [CPU_] |5459| 
        ; branchcc occurs ; [] |5459| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5460,column 7,is_stmt,isa 0
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5460| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5460| 
$C$L234:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5458,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5458| 
	.dwpsn	file "../Source/prod.c",line 5462,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5462| 
        MOV       *-SP[51],AL           ; [CPU_] |5462| 
	.dwpsn	file "../Source/prod.c",line 5458,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5458| 
        CMPB      AL,#4                 ; [CPU_] |5458| 
        B         $C$L233,LT            ; [CPU_] |5458| 
        ; branchcc occurs ; [] |5458| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5466,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5466| 
        MOVL      XAR0,#66              ; [CPU_] |5466| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5466| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5466| 
        ANDB      AL,#0x0f              ; [CPU_] |5466| 
        MOVL      XAR0,#91              ; [CPU_] |5466| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5466| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5466| 
        MOV       *+FP[AR0],#3          ; [CPU_] |5466| 
	.dwpsn	file "../Source/prod.c",line 5468,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |5468| 
        ; branch occurs ; [] |5468| 
$C$L235:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5409,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5409| 
        B         $C$L320,LO            ; [CPU_] |5409| 
        ; branchcc occurs ; [] |5409| 
	.dwpsn	file "../Source/prod.c",line 5414,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5414| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5414| 
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5414| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5414| 
	.dwpsn	file "../Source/prod.c",line 5420,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5420| 
        ; branch occurs ; [] |5420| 
$C$L236:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5386,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5386| 
        B         $C$L239,LO            ; [CPU_] |5386| 
        ; branchcc occurs ; [] |5386| 
	.dwpsn	file "../Source/prod.c",line 5398,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5398| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5398| 
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5398| 
        ; call occurs [#_ad7738_resettare] ; [] |5398| 
	.dwpsn	file "../Source/prod.c",line 5399,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5399| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5399| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5399| 
	.dwpsn	file "../Source/prod.c",line 5400,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5400| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5400| 
        ; call occurs [#_ad7738_resetvall] ; [] |5400| 
	.dwpsn	file "../Source/prod.c",line 5403,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5403| 
        MOVL      ACC,XAR1              ; [CPU_] |5403| 
        ADDB      ACC,#2                ; [CPU_] |5403| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5403| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5403| 
        ANDB      AL,#0xff              ; [CPU_] |5403| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5403| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5403| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5401,column 5,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |5401| 
	.dwpsn	file "../Source/prod.c",line 5405,column 5,is_stmt,isa 0
        B         $C$L744,UNC           ; [CPU_] |5405| 
        ; branch occurs ; [] |5405| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5388| 
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5388| 
        ; call occurs [#_ad7738_resettare] ; [] |5388| 
	.dwpsn	file "../Source/prod.c",line 5389,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5389| 
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5389| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5389| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5390| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5390| 
        ; call occurs [#_ad7738_resetvall] ; [] |5390| 
	.dwpsn	file "../Source/prod.c",line 5393,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5393| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5393| 
	.dwpsn	file "../Source/prod.c",line 5395,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5395| 
        ; branch occurs ; [] |5395| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5561,column 5,is_stmt,isa 0
        MOV       AL,*-SP[52]           ; [CPU_] |5561| 
        MOV       *-SP[51],#0           ; [CPU_] |5561| 
	.dwpsn	file "../Source/prod.c",line 5562,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5562| 
        ; branchcc occurs ; [] |5562| 
	.dwpsn	file "../Source/prod.c",line 5564,column 6,is_stmt,isa 0
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5564| 
        ; call occurs [#_lcd_clear] ; [] |5564| 
	.dwpsn	file "../Source/prod.c",line 5565,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5565| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5565| 
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5565| 
        ; call occurs [#_lcd_puts] ; [] |5565| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5568,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5568| 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_delay_us")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5568| 
        ; call occurs [#_delay_us] ; [] |5568| 
	.dwpsn	file "../Source/prod.c",line 5567,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5567| 
        ; branchcc occurs ; [] |5567| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5572,column 6,is_stmt,isa 0
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_conf_write")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5572| 
        ; call occurs [#_conf_write] ; [] |5572| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5575,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5575| 
        B         $C$L242,NEQ           ; [CPU_] |5575| 
        ; branchcc occurs ; [] |5575| 
	.dwpsn	file "../Source/prod.c",line 5576,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5576| 
        MOVB      AL,#16                ; [CPU_] |5576| 
        SPM       #0                    ; [CPU_] 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5576| 
        ; call occurs [#_lcd_puts] ; [] |5576| 
	.dwpsn	file "../Source/prod.c",line 5577,column 7,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |5577| 
	.dwpsn	file "../Source/prod.c",line 5578,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5578| 
        ; branch occurs ; [] |5578| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5579,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5579| 
        MOVB      AL,#16                ; [CPU_] |5579| 
        SPM       #0                    ; [CPU_] 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5579| 
        ; call occurs [#_lcd_puts] ; [] |5579| 
	.dwpsn	file "../Source/prod.c",line 5580,column 7,is_stmt,isa 0
        MOV       *-SP[51],#3           ; [CPU_] |5580| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5584,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5584| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_delay_us")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5584| 
        ; call occurs [#_delay_us] ; [] |5584| 
	.dwpsn	file "../Source/prod.c",line 5583,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5583| 
        ; branchcc occurs ; [] |5583| 
        B         $C$L316,UNC           ; [CPU_] |5583| 
        ; branch occurs ; [] |5583| 
$C$L245:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4331,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4331| 
        B         $C$L320,LO            ; [CPU_] |4331| 
        ; branchcc occurs ; [] |4331| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4331| 
        MOVL      XAR0,#66              ; [CPU_] |4331| 
        MOVL      ACC,XAR7              ; [CPU_] |4331| 
        ADDB      ACC,#2                ; [CPU_] |4331| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4331| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4331| 
        B         $C$L320,LT            ; [CPU_] |4331| 
        ; branchcc occurs ; [] |4331| 
        ADDB      XAR4,#2               ; [CPU_] |4331| 
        MOVL      XAR0,#66              ; [CPU_] |4331| 
        CMPB      AL,#4                 ; [CPU_] |4331| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4331| 
        B         $C$L320,GEQ           ; [CPU_] |4331| 
        ; branchcc occurs ; [] |4331| 
	.dwpsn	file "../Source/prod.c",line 4336,column 5,is_stmt,isa 0
        MOV       *-SP[62],AL           ; [CPU_] |4336| 
	.dwpsn	file "../Source/prod.c",line 4337,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4337| 
	.dwpsn	file "../Source/prod.c",line 4340,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4340| 
	.dwpsn	file "../Source/prod.c",line 4337,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4337| 
	.dwpsn	file "../Source/prod.c",line 4340,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4340| 
        ADDB      ACC,#2                ; [CPU_] |4340| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4340| 
        MOVL      XAR0,#40              ; [CPU_] |4340| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4340| 
        MOV       T,*-SP[62]            ; [CPU_] |4340| 
        MOVB      AL,#10                ; [CPU_] |4340| 
        MPYU      ACC,T,AL              ; [CPU_] |4340| 
        ADDL      ACC,XAR6              ; [CPU_] |4340| 
        ADDB      ACC,#46               ; [CPU_] |4340| 
        MOVL      XAR4,ACC              ; [CPU_] |4340| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4342,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4342| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4342| 
        ADDB      XAR7,#1               ; [CPU_] |4342| 
	.dwpsn	file "../Source/prod.c",line 4343,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4343| 
        ADD       *XAR4++,AL            ; [CPU_] |4343| 
	.dwpsn	file "../Source/prod.c",line 4341,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4341| 
        ; branchcc occurs ; [] |4341| 
	.dwpsn	file "../Source/prod.c",line 4346,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4346| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4346| 
        MOVB      AL,#10                ; [CPU_] |4346| 
        MPYU      ACC,T,AL              ; [CPU_] |4346| 
        ADDL      ACC,XAR6              ; [CPU_] |4346| 
        MOVL      XAR5,ACC              ; [CPU_] |4346| 
        ADDB      ACC,#48               ; [CPU_] |4346| 
        MOVL      XAR4,ACC              ; [CPU_] |4346| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4346| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4348,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4348| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4348| 
        ADDB      XAR7,#1               ; [CPU_] |4348| 
	.dwpsn	file "../Source/prod.c",line 4349,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4349| 
        ADD       *XAR4++,AL            ; [CPU_] |4349| 
	.dwpsn	file "../Source/prod.c",line 4347,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4347| 
        ; branchcc occurs ; [] |4347| 
	.dwpsn	file "../Source/prod.c",line 4352,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4352| 
        ADDB      ACC,#50               ; [CPU_] |4352| 
        MOVL      XAR4,ACC              ; [CPU_] |4352| 
        MOVL      P,ACC                 ; [CPU_] |4352| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4354,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4354| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4354| 
        ADDB      XAR7,#1               ; [CPU_] |4354| 
	.dwpsn	file "../Source/prod.c",line 4355,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4355| 
        ADD       *XAR4++,AL            ; [CPU_] |4355| 
	.dwpsn	file "../Source/prod.c",line 4353,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4353| 
        ; branchcc occurs ; [] |4353| 
	.dwpsn	file "../Source/prod.c",line 4359,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4359| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4359| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4359| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4361,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4361| 
        ANDB      AL,#0xff              ; [CPU_] |4361| 
        MOV       *XAR4++,AL            ; [CPU_] |4361| 
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4362| 
        LSR       AL,8                  ; [CPU_] |4362| 
        MOV       *XAR4++,AL            ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4360,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4360| 
        ; branchcc occurs ; [] |4360| 
	.dwpsn	file "../Source/prod.c",line 4365,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4365| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4367,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4367| 
        ANDB      AL,#0xff              ; [CPU_] |4367| 
        MOV       *XAR4++,AL            ; [CPU_] |4367| 
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4368| 
        LSR       AL,8                  ; [CPU_] |4368| 
        MOV       *XAR4++,AL            ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4366,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4366| 
        ; branchcc occurs ; [] |4366| 
	.dwpsn	file "../Source/prod.c",line 4371,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4371| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4373,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4373| 
        ANDB      AL,#0xff              ; [CPU_] |4373| 
        MOV       *XAR4++,AL            ; [CPU_] |4373| 
	.dwpsn	file "../Source/prod.c",line 4374,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4374| 
        LSR       AL,8                  ; [CPU_] |4374| 
        MOV       *XAR4++,AL            ; [CPU_] |4374| 
	.dwpsn	file "../Source/prod.c",line 4372,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4372| 
        ; branchcc occurs ; [] |4372| 
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4362| 
        MOV       *+FP[AR0],#15         ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4379,column 5,is_stmt,isa 0
        B         $C$L302,UNC           ; [CPU_] |4379| 
        ; branch occurs ; [] |4379| 
$C$L252:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4289,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4289| 
        B         $C$L320,LO            ; [CPU_] |4289| 
        ; branchcc occurs ; [] |4289| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4289| 
        MOVL      XAR0,#66              ; [CPU_] |4289| 
        MOVL      ACC,XAR5              ; [CPU_] |4289| 
        ADDB      ACC,#2                ; [CPU_] |4289| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4289| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4289| 
        B         $C$L320,LT            ; [CPU_] |4289| 
        ; branchcc occurs ; [] |4289| 
        ADDB      XAR4,#2               ; [CPU_] |4289| 
        MOVL      XAR0,#66              ; [CPU_] |4289| 
        CMPB      AL,#4                 ; [CPU_] |4289| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4289| 
        B         $C$L320,GEQ           ; [CPU_] |4289| 
        ; branchcc occurs ; [] |4289| 
	.dwpsn	file "../Source/prod.c",line 4294,column 5,is_stmt,isa 0
        MOV       *-SP[62],AL           ; [CPU_] |4294| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4295| 
	.dwpsn	file "../Source/prod.c",line 4297,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4297| 
        MOVL      XAR0,#66              ; [CPU_] |4297| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4297,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4297| 
        MOVL      XAR0,#40              ; [CPU_] |4297| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4297| 
        MOVB      AL,#10                ; [CPU_] |4297| 
        MOV       T,*-SP[62]            ; [CPU_] |4297| 
        MPYU      ACC,T,AL              ; [CPU_] |4297| 
        ADDL      ACC,XAR6              ; [CPU_] |4297| 
        ADDB      ACC,#46               ; [CPU_] |4297| 
        MOVL      XAR5,ACC              ; [CPU_] |4297| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4299,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4299| 
        ANDB      AL,#0xff              ; [CPU_] |4299| 
        MOV       *XAR4++,AL            ; [CPU_] |4299| 
	.dwpsn	file "../Source/prod.c",line 4300,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4300| 
        LSR       AL,8                  ; [CPU_] |4300| 
        MOV       *XAR4++,AL            ; [CPU_] |4300| 
	.dwpsn	file "../Source/prod.c",line 4298,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4298| 
        ; branchcc occurs ; [] |4298| 
	.dwpsn	file "../Source/prod.c",line 4303,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4303| 
        MPYU      ACC,T,AL              ; [CPU_] |4303| 
        ADDL      ACC,XAR6              ; [CPU_] |4303| 
        MOVL      XAR7,ACC              ; [CPU_] |4303| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |4303| 
        ADDB      XAR7,#48              ; [CPU_] |4303| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4305,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4305| 
        ANDB      AL,#0xff              ; [CPU_] |4305| 
        MOV       *XAR4++,AL            ; [CPU_] |4305| 
	.dwpsn	file "../Source/prod.c",line 4306,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4306| 
        LSR       AL,8                  ; [CPU_] |4306| 
        MOV       *XAR4++,AL            ; [CPU_] |4306| 
	.dwpsn	file "../Source/prod.c",line 4304,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4304| 
        ; branchcc occurs ; [] |4304| 
	.dwpsn	file "../Source/prod.c",line 4300,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4300| 
	.dwpsn	file "../Source/prod.c",line 4309,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4309| 
	.dwpsn	file "../Source/prod.c",line 4300,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#15         ; [CPU_] |4300| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4311,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4311| 
        ANDB      AL,#0xff              ; [CPU_] |4311| 
        MOV       *XAR4++,AL            ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4312,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4312| 
        LSR       AL,8                  ; [CPU_] |4312| 
        MOV       *XAR4++,AL            ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4310,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4310| 
        ; branchcc occurs ; [] |4310| 
        B         $C$L745,UNC           ; [CPU_] |4310| 
        ; branch occurs ; [] |4310| 
$C$L256:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3931,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3931| 
        B         $C$L320,LO            ; [CPU_] |3931| 
        ; branchcc occurs ; [] |3931| 
        MOVL      ACC,XAR4              ; [CPU_] |3931| 
        MOVL      XAR0,#66              ; [CPU_] |3931| 
        ADDB      ACC,#2                ; [CPU_] |3931| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3931| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3931| 
        B         $C$L320,LT            ; [CPU_] |3931| 
        ; branchcc occurs ; [] |3931| 
        MOVL      XAR5,XAR4             ; [CPU_] |3931| 
        MOVL      XAR0,#66              ; [CPU_] |3931| 
        CMPB      AL,#20                ; [CPU_] |3931| 
        ADDB      XAR5,#2               ; [CPU_] |3931| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3931| 
        B         $C$L320,GEQ           ; [CPU_] |3931| 
        ; branchcc occurs ; [] |3931| 
	.dwpsn	file "../Source/prod.c",line 3935,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3936,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3936| 
	.dwpsn	file "../Source/prod.c",line 3939,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3939| 
        MOVL      XAR0,#66              ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3936,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3936| 
	.dwpsn	file "../Source/prod.c",line 3939,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3939| 
        MOVL      XAR0,#40              ; [CPU_] |3939| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3939| 
        MOVB      AL,#152               ; [CPU_] |3939| 
        MOV       T,*-SP[61]            ; [CPU_] |3939| 
        MPYU      ACC,T,AL              ; [CPU_] |3939| 
        ADDL      ACC,XAR6              ; [CPU_] |3939| 
        ADDB      ACC,#82               ; [CPU_] |3939| 
        MOVL      XAR4,ACC              ; [CPU_] |3939| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_strlen")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3939| 
        ; call occurs [#_strlen] ; [] |3939| 
        MOVZ      AR6,AL                ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3940,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3940| 
        MOV       *+XAR1[3],AL          ; [CPU_] |3940| 
        MOV       *+FP[AR0],#4          ; [CPU_] |3940| 
        MOV       AL,AR6                ; [CPU_] |3940| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |3941| 
        ; branchcc occurs ; [] |3941| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[61]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3941,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3941| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 3942,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3942| 
        MOVL      XAR0,#91              ; [CPU_] |3942| 
        MOV       *XAR4++,AL            ; [CPU_] |3942| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3941| 
	.dwpsn	file "../Source/prod.c",line 3942,column 6,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |3942| 
        MOVL      XAR0,#91              ; [CPU_] |3942| 
        ADDB      AL,#1                 ; [CPU_] |3942| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3942| 
	.dwpsn	file "../Source/prod.c",line 3941,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3941| 
        CMP       AL,AH                 ; [CPU_] |3941| 
        B         $C$L257,HI            ; [CPU_] |3941| 
        ; branchcc occurs ; [] |3941| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3946,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3946| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3946| 
        MOVB      AL,#152               ; [CPU_] |3946| 
        MOV       T,*-SP[61]            ; [CPU_] |3946| 
        MPYU      ACC,T,AL              ; [CPU_] |3946| 
        ADDL      ACC,XAR6              ; [CPU_] |3946| 
        MOVL      XAR4,ACC              ; [CPU_] |3946| 
        MOVL      XAR1,ACC              ; [CPU_] |3946| 
        ADDB      XAR4,#98              ; [CPU_] |3946| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_strlen")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3946| 
        ; call occurs [#_strlen] ; [] |3946| 
        MOVL      XAR0,#44              ; [CPU_] |3946| 
        MOVZ      AR6,AL                ; [CPU_] |3946| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3946| 
	.dwpsn	file "../Source/prod.c",line 3947,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3947| 
        MOVZ      AR7,*+FP[AR0]         ; [CPU_] |3947| 
        SETC      SXM                   ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] |3947| 
        MOVL      XAR4,ACC              ; [CPU_] |3947| 
        MOVL      XAR0,#91              ; [CPU_] |3947| 
        MOV       AL,AR7                ; [CPU_] |3947| 
        ADDB      AL,#1                 ; [CPU_] |3947| 
        MOV       *XAR4++,AR6           ; [CPU_] |3947| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3947| 
        MOV       AL,AR6                ; [CPU_] |3947| 
	.dwpsn	file "../Source/prod.c",line 3948,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |3948| 
        ; branchcc occurs ; [] |3948| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3948,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3948| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 3949,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3949| 
        MOVL      XAR0,#91              ; [CPU_] |3949| 
        MOV       *XAR4++,AL            ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3948,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3948| 
	.dwpsn	file "../Source/prod.c",line 3949,column 6,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |3949| 
        MOVL      XAR0,#91              ; [CPU_] |3949| 
        ADDB      AL,#1                 ; [CPU_] |3949| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3948,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3948| 
        CMP       AL,AH                 ; [CPU_] |3948| 
        B         $C$L259,HI            ; [CPU_] |3948| 
        ; branchcc occurs ; [] |3948| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3953,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3953| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |3953| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3955,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3955| 
        ANDB      AL,#0xff              ; [CPU_] |3955| 
        MOV       *XAR4++,AL            ; [CPU_] |3955| 
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3956| 
        LSR       AL,8                  ; [CPU_] |3956| 
        MOV       *XAR4++,AL            ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3954,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |3954| 
        ; branchcc occurs ; [] |3954| 
	.dwpsn	file "../Source/prod.c",line 3961,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3961| 
	.dwpsn	file "../Source/prod.c",line 3964,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3964| 
	.dwpsn	file "../Source/prod.c",line 3961,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3961| 
        MOV       *XAR4++,AL            ; [CPU_] |3961| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3964,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |3964| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 3966,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3966| 
        ANDB      AL,#0xff              ; [CPU_] |3966| 
        MOV       *XAR4++,AL            ; [CPU_] |3966| 
	.dwpsn	file "../Source/prod.c",line 3967,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3967| 
        LSR       AL,8                  ; [CPU_] |3967| 
        MOV       *XAR4++,AL            ; [CPU_] |3967| 
	.dwpsn	file "../Source/prod.c",line 3965,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |3965| 
        ; branchcc occurs ; [] |3965| 
	.dwpsn	file "../Source/prod.c",line 3972,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3972| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |3972| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 3974,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3974| 
        ANDB      AL,#0xff              ; [CPU_] |3974| 
        MOV       *XAR4++,AL            ; [CPU_] |3974| 
	.dwpsn	file "../Source/prod.c",line 3975,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3975| 
        LSR       AL,8                  ; [CPU_] |3975| 
        MOV       *XAR4++,AL            ; [CPU_] |3975| 
	.dwpsn	file "../Source/prod.c",line 3973,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |3973| 
        ; branchcc occurs ; [] |3973| 
	.dwpsn	file "../Source/prod.c",line 3980,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |3980| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3980| 
	.dwpsn	file "../Source/prod.c",line 3986,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3980,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3980| 
	.dwpsn	file "../Source/prod.c",line 3983,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3980,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3980| 
	.dwpsn	file "../Source/prod.c",line 3983,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3986,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3983,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3983| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |3983| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 3988,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3988| 
        ANDB      AL,#0xff              ; [CPU_] |3988| 
        MOV       *XAR4++,AL            ; [CPU_] |3988| 
	.dwpsn	file "../Source/prod.c",line 3989,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3989| 
        LSR       AL,8                  ; [CPU_] |3989| 
        MOV       *XAR4++,AL            ; [CPU_] |3989| 
	.dwpsn	file "../Source/prod.c",line 3987,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |3987| 
        ; branchcc occurs ; [] |3987| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3956| 
        ADDB      AL,#23                ; [CPU_] |3956| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3994,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3994| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3994| 
        CMPB      AL,#2                 ; [CPU_] |3994| 
        B         $C$L267,EQ            ; [CPU_] |3994| 
        ; branchcc occurs ; [] |3994| 
	.dwpsn	file "../Source/prod.c",line 4032,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4032| 
        ADDB      ACC,#178              ; [CPU_] |4032| 
        MOVL      XAR5,ACC              ; [CPU_] |4032| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4030,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4030| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4034,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4034| 
        ANDB      AL,#0xff              ; [CPU_] |4034| 
        MOV       *XAR4++,AL            ; [CPU_] |4034| 
	.dwpsn	file "../Source/prod.c",line 4035,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4035| 
        LSR       AL,8                  ; [CPU_] |4035| 
        MOV       *XAR4++,AL            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4033,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4033| 
        ; branchcc occurs ; [] |4033| 
	.dwpsn	file "../Source/prod.c",line 4039,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4039| 
        MOVL      XAR0,#91              ; [CPU_] |4039| 
        ADDB      ACC,#200              ; [CPU_] |4039| 
        MOVL      XAR5,ACC              ; [CPU_] |4039| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4039| 
	.dwpsn	file "../Source/prod.c",line 4030,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4030| 
        ADDB      AL,#9                 ; [CPU_] |4030| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4030| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4041,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4041| 
        ANDB      AL,#0xff              ; [CPU_] |4041| 
        MOV       *XAR4++,AL            ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4042,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4042| 
        LSR       AL,8                  ; [CPU_] |4042| 
        MOV       *XAR4++,AL            ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4040,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4040| 
        ; branchcc occurs ; [] |4040| 
        B         $C$L276,UNC           ; [CPU_] |4040| 
        ; branch occurs ; [] |4040| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 3995,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |3995| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3995| 
	.dwpsn	file "../Source/prod.c",line 3996,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |3996| 
	.dwpsn	file "../Source/prod.c",line 3995,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3995| 
        MOVL      XAR0,#91              ; [CPU_] |3995| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3995| 
        MOVL      XAR0,#91              ; [CPU_] |3995| 
        ADDB      AL,#1                 ; [CPU_] |3995| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3995| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3996,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |3996| 
        ; branch occurs ; [] |3996| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 3998,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |3998| 
        MOVL      XAR0,#40              ; [CPU_] |3998| 
        MOV       T,*-SP[61]            ; [CPU_] |3998| 
        MOVL      XAR6,ACC              ; [CPU_] |3998| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |3998| 
        MOVB      AL,#76                ; [CPU_] |3998| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |3998| 
        ADDL      ACC,XAR6              ; [CPU_] |3998| 
        LSL       ACC,1                 ; [CPU_] |3998| 
        ADDL      ACC,XAR7              ; [CPU_] |3998| 
        ADDB      ACC,#130              ; [CPU_] |3998| 
        MOVL      XAR7,ACC              ; [CPU_] |3998| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4000,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4000| 
        ANDB      AL,#0xff              ; [CPU_] |4000| 
        MOV       *XAR4++,AL            ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 4001,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4001| 
        LSR       AL,8                  ; [CPU_] |4001| 
        MOV       *XAR4++,AL            ; [CPU_] |4001| 
	.dwpsn	file "../Source/prod.c",line 3999,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |3999| 
        ; branchcc occurs ; [] |3999| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4007,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4007| 
        ANDB      AL,#0xff              ; [CPU_] |4007| 
        MOV       *XAR4++,AL            ; [CPU_] |4007| 
	.dwpsn	file "../Source/prod.c",line 4008,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4008| 
        LSR       AL,8                  ; [CPU_] |4008| 
        MOV       *XAR4++,AL            ; [CPU_] |4008| 
	.dwpsn	file "../Source/prod.c",line 4006,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4006| 
        ; branchcc occurs ; [] |4006| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3996,column 51,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3996| 
        ADDB      AL,#1                 ; [CPU_] |3996| 
        MOV       PL,AL                 ; [CPU_] |3996| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3996| 
	.dwpsn	file "../Source/prod.c",line 4001,column 8,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4001| 
        ADDB      AL,#8                 ; [CPU_] |4001| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4001| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 3996,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |3996| 
        MOV       AL,PL                 ; [CPU_] |3996| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |3996| 
        B         $C$L268,LT            ; [CPU_] |3996| 
        ; branchcc occurs ; [] |3996| 
	.dwpsn	file "../Source/prod.c",line 4013,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4013| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4013| 
        ; branch occurs ; [] |4013| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4015,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4015| 
        MOVL      XAR0,#40              ; [CPU_] |4015| 
        MOV       T,*-SP[61]            ; [CPU_] |4015| 
        MOVL      P,ACC                 ; [CPU_] |4015| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4015| 
        MOVB      AL,#76                ; [CPU_] |4015| 
        MPYU      ACC,T,AL              ; [CPU_] |4015| 
        ADDL      ACC,P                 ; [CPU_] |4015| 
        LSL       ACC,1                 ; [CPU_] |4015| 
        ADDL      ACC,XAR6              ; [CPU_] |4015| 
        ADDB      ACC,#178              ; [CPU_] |4015| 
        MOVL      XAR7,ACC              ; [CPU_] |4015| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4017,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4017| 
        ANDB      AL,#0xff              ; [CPU_] |4017| 
        MOV       *XAR4++,AL            ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4018,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4018| 
        LSR       AL,8                  ; [CPU_] |4018| 
        MOV       *XAR4++,AL            ; [CPU_] |4018| 
	.dwpsn	file "../Source/prod.c",line 4016,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4016| 
        ; branchcc occurs ; [] |4016| 
	.dwpsn	file "../Source/prod.c",line 4022,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4022| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4024,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4024| 
        ANDB      AL,#0xff              ; [CPU_] |4024| 
        MOV       *XAR4++,AL            ; [CPU_] |4024| 
	.dwpsn	file "../Source/prod.c",line 4025,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4025| 
        LSR       AL,8                  ; [CPU_] |4025| 
        MOV       *XAR4++,AL            ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4023,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4023| 
        ; branchcc occurs ; [] |4023| 
	.dwpsn	file "../Source/prod.c",line 4013,column 55,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4013| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4013| 
        ADDB      XAR5,#1               ; [CPU_] |4013| 
	.dwpsn	file "../Source/prod.c",line 4018,column 8,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4018| 
        ADDB      AL,#8                 ; [CPU_] |4018| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4018| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4029,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4029| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4029| 
        ADDB      AL,#-1                ; [CPU_] |4029| 
        CMP       AL,AR5                ; [CPU_] |4029| 
        B         $C$L272,GT            ; [CPU_] |4029| 
        ; branchcc occurs ; [] |4029| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4048,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4048| 
        ADDB      ACC,#222              ; [CPU_] |4048| 
        MOVL      XAR5,ACC              ; [CPU_] |4048| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4050| 
        ANDB      AL,#0xff              ; [CPU_] |4050| 
        MOV       *XAR4++,AL            ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4051,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4051| 
        LSR       AL,8                  ; [CPU_] |4051| 
        MOV       *XAR4++,AL            ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4049,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4049| 
        ; branchcc occurs ; [] |4049| 
	.dwpsn	file "../Source/prod.c",line 4056,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4056| 
        ADDB      ACC,#224              ; [CPU_] |4056| 
        MOVL      XAR5,ACC              ; [CPU_] |4056| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4058,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4058| 
        ANDB      AL,#0xff              ; [CPU_] |4058| 
        MOV       *XAR4++,AL            ; [CPU_] |4058| 
	.dwpsn	file "../Source/prod.c",line 4059,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4059| 
        LSR       AL,8                  ; [CPU_] |4059| 
        MOV       *XAR4++,AL            ; [CPU_] |4059| 
	.dwpsn	file "../Source/prod.c",line 4057,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4057| 
        ; branchcc occurs ; [] |4057| 
	.dwpsn	file "../Source/prod.c",line 4064,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4064| 
        ADDB      ACC,#228              ; [CPU_] |4064| 
        MOVL      XAR5,ACC              ; [CPU_] |4064| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4066,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4066| 
        ANDB      AL,#0xff              ; [CPU_] |4066| 
        MOV       *XAR4++,AL            ; [CPU_] |4066| 
	.dwpsn	file "../Source/prod.c",line 4067,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4067| 
        LSR       AL,8                  ; [CPU_] |4067| 
        MOV       *XAR4++,AL            ; [CPU_] |4067| 
	.dwpsn	file "../Source/prod.c",line 4065,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4065| 
        ; branchcc occurs ; [] |4065| 
	.dwpsn	file "../Source/prod.c",line 4072,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4072| 
        ADDB      ACC,#230              ; [CPU_] |4072| 
        MOVL      XAR5,ACC              ; [CPU_] |4072| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4074,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4074| 
        ANDB      AL,#0xff              ; [CPU_] |4074| 
        MOV       *XAR4++,AL            ; [CPU_] |4074| 
	.dwpsn	file "../Source/prod.c",line 4075,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4075| 
        LSR       AL,8                  ; [CPU_] |4075| 
        MOV       *XAR4++,AL            ; [CPU_] |4075| 
	.dwpsn	file "../Source/prod.c",line 4073,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4073| 
        ; branchcc occurs ; [] |4073| 
	.dwpsn	file "../Source/prod.c",line 4080,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4080| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4080| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4080| 
        MOVL      XAR0,#91              ; [CPU_] |4080| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4080| 
	.dwpsn	file "../Source/prod.c",line 4051,column 6,is_stmt,isa 0
        ADDB      AL,#17                ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4083,column 5,is_stmt,isa 0
        B         $C$L737,UNC           ; [CPU_] |4083| 
        ; branch occurs ; [] |4083| 
$C$L281:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3873,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3873| 
        B         $C$L320,LO            ; [CPU_] |3873| 
        ; branchcc occurs ; [] |3873| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3873| 
        MOVL      XAR0,#66              ; [CPU_] |3873| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3873| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3873| 
        B         $C$L320,LT            ; [CPU_] |3873| 
        ; branchcc occurs ; [] |3873| 
        CMPB      AL,#4                 ; [CPU_] |3873| 
        B         $C$L320,GEQ           ; [CPU_] |3873| 
        ; branchcc occurs ; [] |3873| 
	.dwpsn	file "../Source/prod.c",line 3877,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3877| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3877| 
	.dwpsn	file "../Source/prod.c",line 3879,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3879| 
        MOVL      XAR0,#40              ; [CPU_] |3879| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3879| 
        MPYB      ACC,T,#10             ; [CPU_] |3879| 
        ADDL      ACC,XAR6              ; [CPU_] |3879| 
        MOVL      XAR4,ACC              ; [CPU_] |3879| 
        MOVB      XAR0,#42              ; [CPU_] |3879| 
        MOVL      P,ACC                 ; [CPU_] |3879| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3879| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOV       *+XAR5[3],AL          ; [CPU_] |3879| 
	.dwpsn	file "../Source/prod.c",line 3886,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3886| 
        ADDB      XAR5,#44              ; [CPU_] |3886| 
        MOVL      XAR7,XAR5             ; [CPU_] |3886| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3883,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3883| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3889,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3889| 
        ANDB      AL,#0xff              ; [CPU_] |3889| 
        MOV       *XAR4++,AL            ; [CPU_] |3889| 
	.dwpsn	file "../Source/prod.c",line 3890,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3890| 
        LSR       AL,8                  ; [CPU_] |3890| 
        MOV       *XAR4++,AL            ; [CPU_] |3890| 
	.dwpsn	file "../Source/prod.c",line 3887,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3887| 
        ; branchcc occurs ; [] |3887| 
	.dwpsn	file "../Source/prod.c",line 3894,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |3894| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3897,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |3897| 
        ANDB      AL,#0xff              ; [CPU_] |3897| 
        MOV       *XAR4++,AL            ; [CPU_] |3897| 
	.dwpsn	file "../Source/prod.c",line 3898,column 6,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |3898| 
        LSR       AL,8                  ; [CPU_] |3898| 
        MOV       *XAR4++,AL            ; [CPU_] |3898| 
	.dwpsn	file "../Source/prod.c",line 3895,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR0--         ; [CPU_] |3895| 
        ; branchcc occurs ; [] |3895| 
	.dwpsn	file "../Source/prod.c",line 3902,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3902| 
        ADDB      XAR5,#46              ; [CPU_] |3902| 
        MOVL      XAR7,XAR5             ; [CPU_] |3902| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3905,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3905| 
        ANDB      AL,#0xff              ; [CPU_] |3905| 
        MOV       *XAR4++,AL            ; [CPU_] |3905| 
	.dwpsn	file "../Source/prod.c",line 3906,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3906| 
        LSR       AL,8                  ; [CPU_] |3906| 
        MOV       *XAR4++,AL            ; [CPU_] |3906| 
	.dwpsn	file "../Source/prod.c",line 3903,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3903| 
        ; branchcc occurs ; [] |3903| 
	.dwpsn	file "../Source/prod.c",line 3910,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3910| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3913,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3913| 
        ANDB      AL,#0xff              ; [CPU_] |3913| 
        MOV       *XAR4++,AL            ; [CPU_] |3913| 
	.dwpsn	file "../Source/prod.c",line 3914,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3914| 
        LSR       AL,8                  ; [CPU_] |3914| 
        MOV       *XAR4++,AL            ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3911,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3911| 
        ; branchcc occurs ; [] |3911| 
	.dwpsn	file "../Source/prod.c",line 3883,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3883| 
        MOV       *+FP[AR0],#28         ; [CPU_] |3883| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3921,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3921| 
        ANDB      AL,#0xff              ; [CPU_] |3921| 
        MOV       *XAR4++,AL            ; [CPU_] |3921| 
	.dwpsn	file "../Source/prod.c",line 3922,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3922| 
        LSR       AL,8                  ; [CPU_] |3922| 
        MOV       *XAR4++,AL            ; [CPU_] |3922| 
	.dwpsn	file "../Source/prod.c",line 3919,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR0--         ; [CPU_] |3919| 
        ; branchcc occurs ; [] |3919| 
        B         $C$L745,UNC           ; [CPU_] |3919| 
        ; branch occurs ; [] |3919| 
$C$L287:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3827,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3827| 
        B         $C$L320,LO            ; [CPU_] |3827| 
        ; branchcc occurs ; [] |3827| 
	.dwpsn	file "../Source/prod.c",line 3831,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3831| 
        B         $C$L288,EQ            ; [CPU_] |3831| 
        ; branchcc occurs ; [] |3831| 
        CMPB      AL,#1                 ; [CPU_] |3831| 
        B         $C$L288,EQ            ; [CPU_] |3831| 
        ; branchcc occurs ; [] |3831| 
        CMPB      AL,#2                 ; [CPU_] |3831| 
        B         $C$L288,EQ            ; [CPU_] |3831| 
        ; branchcc occurs ; [] |3831| 
        ADDB      XAR4,#2               ; [CPU_] |3831| 
        MOVL      XAR0,#66              ; [CPU_] |3831| 
        CMPB      AL,#3                 ; [CPU_] |3831| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3831| 
        B         $C$L320,NEQ           ; [CPU_] |3831| 
        ; branchcc occurs ; [] |3831| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3837,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3837| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3837| 
        MOVL      XAR4,XAR5             ; [CPU_] |3837| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3837| 
        ADDB      XAR5,#2               ; [CPU_] |3837| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3837| 
        ADDB      XAR4,#6               ; [CPU_] |3837| 
        B         $C$L293,NEQ           ; [CPU_] |3837| 
        ; branchcc occurs ; [] |3837| 
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3838,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3838| 
        B         $C$L320,LO            ; [CPU_] |3838| 
        ; branchcc occurs ; [] |3838| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3843,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3843| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3845,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3845| 
        ADDL      ACC,XT                ; [CPU_] |3845| 
	.dwpsn	file "../Source/prod.c",line 3846,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3844,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3844| 
        ; branchcc occurs ; [] |3844| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3849,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3849| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3850,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3850| 
        B         $C$L291,EQ            ; [CPU_] |3850| 
        ; branchcc occurs ; [] |3850| 
	.dwpsn	file "../Source/prod.c",line 3849,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3849| 
        ADDB      XAR4,#1               ; [CPU_] |3849| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3849| 
        ; branchcc occurs ; [] |3849| 
        B         $C$L292,UNC           ; [CPU_] |3849| 
        ; branch occurs ; [] |3849| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3851,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3851| 
        MOVB      XAR0,#35              ; [CPU_] |3851| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3851| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3855,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3855| 
        B         $C$L320,EQ            ; [CPU_] |3855| 
        ; branchcc occurs ; [] |3855| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3861,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3861| 
        MOVL      XAR0,#66              ; [CPU_] |3861| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3861| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3861| 
        ADDB      ACC,#2                ; [CPU_] |3861| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3861| 
        MOVB      XAR0,#34              ; [CPU_] |3861| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3861| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3861| 
        MOVL      XAR0,#44              ; [CPU_] |3861| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3861| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3864,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3864| 
        MOVL      XAR0,#91              ; [CPU_] |3864| 
        MOV       *XAR4++,AL            ; [CPU_] |3864| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3864| 
        ADDB      XAR7,#1               ; [CPU_] |3864| 
	.dwpsn	file "../Source/prod.c",line 3863,column 12,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |3863| 
        MOVL      XAR0,#91              ; [CPU_] |3863| 
        MOV       AH,AL                 ; [CPU_] |3863| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3863| 
        MOV       AL,*-SP[63]           ; [CPU_] |3863| 
        CMP       AL,AH                 ; [CPU_] |3863| 
        B         $C$L294,HI            ; [CPU_] |3863| 
        ; branchcc occurs ; [] |3863| 
        B         $C$L302,UNC           ; [CPU_] |3863| 
        ; branch occurs ; [] |3863| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3811,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3811| 
        MOVB      XAR0,#34              ; [CPU_] |3811| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3811| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3811| 
        MOVL      XAR0,#91              ; [CPU_] |3811| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3811| 
        MOV       *+FP[AR0],#3          ; [CPU_] |3811| 
	.dwpsn	file "../Source/prod.c",line 3813,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3813| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3813| 
        CMPB      AL,#1                 ; [CPU_] |3813| 
        B         $C$L296,EQ            ; [CPU_] |3813| 
        ; branchcc occurs ; [] |3813| 
        MOVB      XAR1,#34              ; [CPU_] |3813| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3813| 
        B         $C$L745,NEQ           ; [CPU_] |3813| 
        ; branchcc occurs ; [] |3813| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3815,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3815| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3815| 
        MOVL      XAR0,#74              ; [CPU_] |3815| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3815| 
        MOVL      XAR0,#44              ; [CPU_] |3815| 
        ADDL      ACC,XAR6              ; [CPU_] |3815| 
        MOVL      XAR5,ACC              ; [CPU_] |3815| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3815| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3818,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3818| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      AL,#4                 ; [CPU_] |3818| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |3818| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3817,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3817| 
        ANDB      AL,#0xff              ; [CPU_] |3817| 
        MOV       *XAR4++,AL            ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3818,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3818| 
        LSR       AL,8                  ; [CPU_] |3818| 
        MOV       *XAR4++,AL            ; [CPU_] |3818| 
	.dwpsn	file "../Source/prod.c",line 3816,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3816| 
        ; branchcc occurs ; [] |3816| 
        B         $C$L745,UNC           ; [CPU_] |3816| 
        ; branch occurs ; [] |3816| 
$C$L298:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3790,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3790| 
        B         $C$L320,LO            ; [CPU_] |3790| 
        ; branchcc occurs ; [] |3790| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3790| 
        MOVL      XAR0,#66              ; [CPU_] |3790| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3790| 
        ADDB      AL,#3                 ; [CPU_] |3790| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3790| 
        CMP       AL,*-SP[63]           ; [CPU_] |3790| 
        B         $C$L320,HI            ; [CPU_] |3790| 
        ; branchcc occurs ; [] |3790| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3795,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3795| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3795| 
        ; branch occurs ; [] |3795| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3796,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3796| 
        ADD       PL,AL                 ; [CPU_] |3796| 
        MOVL      ACC,XAR7              ; [CPU_] |3796| 
        ADD       ACC,PL                ; [CPU_] |3796| 
        MOVL      XAR7,ACC              ; [CPU_] |3796| 
	.dwpsn	file "../Source/prod.c",line 3795,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3795| 
	.dwpsn	file "../Source/prod.c",line 3796,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3796| 
        MOV       *XAR4++,AL            ; [CPU_] |3796| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3795,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3795| 
        MOVL      XAR0,#66              ; [CPU_] |3795| 
        MOVL      ACC,XAR7              ; [CPU_] |3795| 
        ADDB      ACC,#2                ; [CPU_] |3795| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3795| 
        MOV       AL,AR6                ; [CPU_] |3795| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3795| 
        B         $C$L299,LT            ; [CPU_] |3795| 
        ; branchcc occurs ; [] |3795| 
	.dwpsn	file "../Source/prod.c",line 3798,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3798| 
        MOVL      XAR0,#76              ; [CPU_] |3798| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3798| 
	.dwpsn	file "../Source/prod.c",line 3801,column 5,is_stmt,isa 0
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_strlen")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3801| 
        ; call occurs [#_strlen] ; [] |3801| 
	.dwpsn	file "../Source/prod.c",line 3802,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3802| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3802| 
	.dwpsn	file "../Source/prod.c",line 3803,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3803| 
	.dwpsn	file "../Source/prod.c",line 3802,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3802| 
        MOV       *+FP[AR0],#3          ; [CPU_] |3802| 
	.dwpsn	file "../Source/prod.c",line 3803,column 17,is_stmt,isa 0
        B         $C$L302,EQ            ; [CPU_] |3803| 
        ; branchcc occurs ; [] |3803| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3803,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3803| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3804,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3804| 
        MOVL      XAR0,#91              ; [CPU_] |3804| 
        MOV       *XAR5++,AH            ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3803,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3803| 
	.dwpsn	file "../Source/prod.c",line 3804,column 6,is_stmt,isa 0
        MOV       AH,*+FP[AR0]          ; [CPU_] |3804| 
        ADDB      AH,#1                 ; [CPU_] |3804| 
        MOVL      XAR0,#91              ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3803,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3803| 
	.dwpsn	file "../Source/prod.c",line 3804,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3803,column 17,is_stmt,isa 0
        B         $C$L301,HI            ; [CPU_] |3803| 
        ; branchcc occurs ; [] |3803| 
$C$L302:    
	.dwpsn	file "../Source/prod.c",line 3799,column 5,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |3799| 
	.dwpsn	file "../Source/prod.c",line 3807,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |3807| 
        ; branch occurs ; [] |3807| 
$C$L303:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3770,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3770| 
        B         $C$L320,LO            ; [CPU_] |3770| 
        ; branchcc occurs ; [] |3770| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3775,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3775| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3775| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3777,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3777| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3777| 
	.dwpsn	file "../Source/prod.c",line 3778,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3778| 
        MOV       *XAR5++,AL            ; [CPU_] |3778| 
	.dwpsn	file "../Source/prod.c",line 3779,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3779| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3779| 
        MOV       *XAR4++,AL            ; [CPU_] |3779| 
	.dwpsn	file "../Source/prod.c",line 3780,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3780| 
        MOV       *XAR5++,AL            ; [CPU_] |3780| 
	.dwpsn	file "../Source/prod.c",line 3776,column 17,is_stmt,isa 0
        BANZ      $C$L304,AR6--         ; [CPU_] |3776| 
        ; branchcc occurs ; [] |3776| 
	.dwpsn	file "../Source/prod.c",line 3783,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3783| 
        MOV       *-SP[52],#1           ; [CPU_] |3783| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3783| 
	.dwpsn	file "../Source/prod.c",line 3780,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3780| 
	.dwpsn	file "../Source/prod.c",line 3786,column 5,is_stmt,isa 0
        B         $C$L737,UNC           ; [CPU_] |3786| 
        ; branch occurs ; [] |3786| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5695,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5695 | cmd_mode = SCI_MODE_ASCII;                                             
; 5696 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5697 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5698 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5695| 
	.dwpsn	file "../Source/prod.c",line 5701,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5701 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_update_units")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5701| 
        ; call occurs [#_update_units] ; [] |5701| 
	.dwpsn	file "../Source/prod.c",line 5694,column 5,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5694| 
	.dwpsn	file "../Source/prod.c",line 5702,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5702 | break;                                                                 
; 5704 | default:                                                               
; 5706 | // send back NACK?                                                     
; 5708 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L745,UNC           ; [CPU_] |5702| 
        ; branch occurs ; [] |5702| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
        MOV       *-SP[57],#1           ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5690,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |5690| 
        ; branch occurs ; [] |5690| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4325,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4325| 
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4326| 
        ; branch occurs ; [] |4326| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4321,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4321| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4321| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_ssr_set")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4321| 
        ; call occurs [#_ssr_set] ; [] |4321| 
	.dwpsn	file "../Source/prod.c",line 4322,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4322| 
        ; branch occurs ; [] |4322| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5629,column 5,is_stmt,isa 0
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_conf_read")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5629| 
        ; call occurs [#_conf_read] ; [] |5629| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5632,column 5,is_stmt,isa 0
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5632| 
        ; call occurs [#_ad7738_setcal] ; [] |5632| 
	.dwpsn	file "../Source/prod.c",line 5633,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5633| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5633| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5633| 
	.dwpsn	file "../Source/prod.c",line 5634,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5634| 
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5634| 
        ; call occurs [#_ad7738_resetvall] ; [] |5634| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5638,column 5,is_stmt,isa 0
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_update_units")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5638| 
        ; call occurs [#_update_units] ; [] |5638| 
	.dwpsn	file "../Source/prod.c",line 5637,column 5,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |5637| 
	.dwpsn	file "../Source/prod.c",line 5640,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |5640| 
        ; branch occurs ; [] |5640| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5593,column 5,is_stmt,isa 0
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_conf_default")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5593| 
        ; call occurs [#_conf_default] ; [] |5593| 
	.dwpsn	file "../Source/prod.c",line 5596,column 5,is_stmt,isa 0
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5596| 
        ; call occurs [#_lcd_clear] ; [] |5596| 
	.dwpsn	file "../Source/prod.c",line 5597,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5597| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5597| 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5597| 
        ; call occurs [#_lcd_puts] ; [] |5597| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5600,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5600| 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_delay_us")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5600| 
        ; call occurs [#_delay_us] ; [] |5600| 
	.dwpsn	file "../Source/prod.c",line 5599,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5599| 
        ; branchcc occurs ; [] |5599| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5604,column 5,is_stmt,isa 0
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_conf_write")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5604| 
        ; call occurs [#_conf_write] ; [] |5604| 
        MOVZ      AR1,AL                ; [CPU_] |5604| 
	.dwpsn	file "../Source/prod.c",line 5605,column 5,is_stmt,isa 0
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5605| 
        ; call occurs [#_ad7738_setcal] ; [] |5605| 
	.dwpsn	file "../Source/prod.c",line 5606,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5606| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5606| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5606| 
	.dwpsn	file "../Source/prod.c",line 5607,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5607| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5607| 
        ; call occurs [#_ad7738_resetvall] ; [] |5607| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5610,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5610| 
        ; branchcc occurs ; [] |5610| 
	.dwpsn	file "../Source/prod.c",line 5611,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5611| 
        MOVB      AL,#31                ; [CPU_] |5611| 
        SPM       #0                    ; [CPU_] 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5611| 
        ; call occurs [#_lcd_puts] ; [] |5611| 
	.dwpsn	file "../Source/prod.c",line 5612,column 6,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |5612| 
	.dwpsn	file "../Source/prod.c",line 5613,column 6,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |5613| 
	.dwpsn	file "../Source/prod.c",line 5614,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5614| 
        ; branch occurs ; [] |5614| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5615,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5615| 
        MOVB      AL,#31                ; [CPU_] |5615| 
        SPM       #0                    ; [CPU_] 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5615| 
        ; call occurs [#_lcd_puts] ; [] |5615| 
	.dwpsn	file "../Source/prod.c",line 5616,column 6,is_stmt,isa 0
        MOV       *-SP[51],#3           ; [CPU_] |5616| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5619,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5619| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_delay_us")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5619| 
        ; call occurs [#_delay_us] ; [] |5619| 
	.dwpsn	file "../Source/prod.c",line 5618,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5618| 
        ; branchcc occurs ; [] |5618| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5621,column 5,is_stmt,isa 0
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5621| 
        ; call occurs [#_lcd_clear] ; [] |5621| 
	.dwpsn	file "../Source/prod.c",line 5622,column 5,is_stmt,isa 0
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_update_units")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5622| 
        ; call occurs [#_update_units] ; [] |5622| 
$C$L317:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5711,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5711 | switch (bincmdresult) {                                                
; 5712 | case OK_SendResult:                                                    
; 5713 |         scia_send_bin(buff, j);         // send back                   
; 5715 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5716 |                 delay_us(2000);                 // 2ms                 
; 5717 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5719 |         break;                                                         
; 5721 | case Error_UnImpl:                                                     
; 5723 |         buff[1] = CmdUnImpl;                                           
; 5724 |         buff[2] = cmdbuff[1];                                          
; 5725 |         scia_send_bin(buff, 3);         // send back                   
; 5726 |         break;                                                         
; 5728 | case Error_Invalid:                                                    
; 5730 |         buff[1] = CmdInvalid;                                          
; 5731 |         buff[2] = cmdbuff[1];                                          
; 5732 |         scia_send_bin(buff, 3);         // send back                   
; 5733 |         break;                                                         
; 5735 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L745,EQ            ; [CPU_] |5711| 
        ; branchcc occurs ; [] |5711| 
        CMPB      AL,#1                 ; [CPU_] |5711| 
        B         $C$L321,EQ            ; [CPU_] |5711| 
        ; branchcc occurs ; [] |5711| 
        CMPB      AL,#2                 ; [CPU_] |5711| 
        B         $C$L320,EQ            ; [CPU_] |5711| 
        ; branchcc occurs ; [] |5711| 
        CMPB      AL,#3                 ; [CPU_] |5711| 
        B         $C$L634,NEQ           ; [CPU_] |5711| 
        ; branchcc occurs ; [] |5711| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5737 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5737| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5737| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5738,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5738 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5738| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5738| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5738| 
	.dwpsn	file "../Source/prod.c",line 5739,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5739 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5739| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5739| 
        ; call occurs [#_scia_send_bin] ; [] |5739| 
	.dwpsn	file "../Source/prod.c",line 5740,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5740 | break;                                                                 
; 5742 | default:                                                               
; 5744 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5740| 
        ; branch occurs ; [] |5740| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5730| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5730| 
	.dwpsn	file "../Source/prod.c",line 5733,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5733| 
        ; branch occurs ; [] |5733| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5723,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5723| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5723| 
	.dwpsn	file "../Source/prod.c",line 5726,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5726| 
        ; branch occurs ; [] |5726| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 953,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |953| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |953| 
        CMPB      AL,#79                ; [CPU_] |953| 
        B         $C$L324,GT            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#79                ; [CPU_] |953| 
        B         $C$L445,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#69                ; [CPU_] |953| 
        B         $C$L323,GT            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#69                ; [CPU_] |953| 
        B         $C$L505,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#66                ; [CPU_] |953| 
        B         $C$L591,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#67                ; [CPU_] |953| 
        B         $C$L532,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#68                ; [CPU_] |953| 
        B         $C$L514,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        B         $C$L625,UNC           ; [CPU_] |953| 
        ; branch occurs ; [] |953| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |953| 
        B         $C$L496,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#72                ; [CPU_] |953| 
        B         $C$L630,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#76                ; [CPU_] |953| 
        B         $C$L468,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        B         $C$L625,UNC           ; [CPU_] |953| 
        ; branch occurs ; [] |953| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |953| 
        B         $C$L325,GT            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#85                ; [CPU_] |953| 
        B         $C$L326,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#80                ; [CPU_] |953| 
        B         $C$L431,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#82                ; [CPU_] |953| 
        B         $C$L416,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#83                ; [CPU_] |953| 
        B         $C$L352,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        B         $C$L625,UNC           ; [CPU_] |953| 
        ; branch occurs ; [] |953| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |953| 
        B         $C$L628,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        CMPB      AL,#90                ; [CPU_] |953| 
        B         $C$L626,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        B         $C$L625,UNC           ; [CPU_] |953| 
        ; branch occurs ; [] |953| 
$C$L326:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1121,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1121| 
        B         $C$L625,LO            ; [CPU_] |1121| 
        ; branchcc occurs ; [] |1121| 
	.dwpsn	file "../Source/prod.c",line 1124,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1124| 
        CMPB      AL,#73                ; [CPU_] |1124| 
        B         $C$L327,GT            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        CMPB      AL,#73                ; [CPU_] |1124| 
        B         $C$L341,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        CMPB      AL,#66                ; [CPU_] |1124| 
        B         $C$L330,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        CMPB      AL,#67                ; [CPU_] |1124| 
        B         $C$L348,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        CMPB      AL,#70                ; [CPU_] |1124| 
        B         $C$L346,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        B         $C$L625,UNC           ; [CPU_] |1124| 
        ; branch occurs ; [] |1124| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1124| 
        B         $C$L328,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        CMPB      AL,#83                ; [CPU_] |1124| 
        B         $C$L340,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        CMPB      AL,#87                ; [CPU_] |1124| 
        B         $C$L338,EQ            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        B         $C$L625,UNC           ; [CPU_] |1124| 
        ; branch occurs ; [] |1124| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1141| 
        MOVL      XAR0,#44              ; [CPU_] |1141| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1141| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1141| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1141| 
        MOVL      XAR4,XAR1             ; [CPU_] |1141| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_sprintf")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1141| 
        ; call occurs [#_sprintf] ; [] |1141| 
	.dwpsn	file "../Source/prod.c",line 1142,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1142| 
        MOV       AL,#1024              ; [CPU_] |1142| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1142| 
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1141| 
	.dwpsn	file "../Source/prod.c",line 1142,column 6,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1142| 
        ; call occurs [#_scia_getparam] ; [] |1142| 
        CMPB      AL,#31                ; [CPU_] |1142| 
        B         $C$L329,LOS           ; [CPU_] |1142| 
        ; branchcc occurs ; [] |1142| 
	.dwpsn	file "../Source/prod.c",line 1146,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1146| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1146| 
	.dwpsn	file "../Source/prod.c",line 1145,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1145| 
	.dwpsn	file "../Source/prod.c",line 1146,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1146| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1146| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1149,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1149| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1149| 
        MOVL      XAR0,#86              ; [CPU_] |1149| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1149| 
        MOVB      AH,#1                 ; [CPU_] |1149| 
        ADD       AH,AL                 ; [CPU_] |1149| 
        MOVU      ACC,AH                ; [CPU_] |1149| 
        MOVL      XAR5,XAR1             ; [CPU_] |1149| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_memcpy")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1149| 
        ; call occurs [#_memcpy] ; [] |1149| 
        MOVL      XAR4,XAR1             ; [CPU_] |1149| 
	.dwpsn	file "../Source/prod.c",line 1153,column 6,is_stmt,isa 0
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_scia_puts")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1153| 
        ; call occurs [#_scia_puts] ; [] |1153| 
	.dwpsn	file "../Source/prod.c",line 1154,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1154| 
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
        B         $C$L334,UNC           ; [CPU_] |1156| 
        ; branch occurs ; [] |1156| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1246,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1246| 
        MOVB      XAR0,#34              ; [CPU_] |1246| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1246| 
        CMPB      AL,#3                 ; [CPU_] |1246| 
        B         $C$L337,EQ            ; [CPU_] |1246| 
        ; branchcc occurs ; [] |1246| 
        MOVB      XAR1,#34              ; [CPU_] |1246| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1246| 
        CMPB      AL,#2                 ; [CPU_] |1246| 
        B         $C$L337,EQ            ; [CPU_] |1246| 
        ; branchcc occurs ; [] |1246| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1253,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1253| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] |1253| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1254,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1254| 
        MOVL      XAR0,#44              ; [CPU_] |1254| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1254| 
        MOV       *-SP[3],AL            ; [CPU_] |1254| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1254| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1254| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1254| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_sprintf")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1254| 
        ; call occurs [#_sprintf] ; [] |1254| 
        MOVL      XAR0,#44              ; [CPU_] |1254| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1255,column 7,is_stmt,isa 0
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_scia_puts")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1255| 
        ; call occurs [#_scia_puts] ; [] |1255| 
        MOV       AL,*-SP[51]           ; [CPU_] |1255| 
	.dwpsn	file "../Source/prod.c",line 1256,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1256| 
        B         $C$L332,GEQ           ; [CPU_] |1256| 
        ; branchcc occurs ; [] |1256| 
	.dwpsn	file "../Source/prod.c",line 1257,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1257| 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_scia_puts")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1257| 
        ; call occurs [#_scia_puts] ; [] |1257| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1253,column 18,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |1253| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1253| 
        B         $C$L331,LT            ; [CPU_] |1253| 
        ; branchcc occurs ; [] |1253| 
	.dwpsn	file "../Source/prod.c",line 1260,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1260| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_scia_puts")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1260| 
        ; call occurs [#_scia_puts] ; [] |1260| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1261,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1261| 
        MOVB      XAR0,#35              ; [CPU_] |1261| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1261| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1261| 
        MOV       *-SP[3],AL            ; [CPU_] |1261| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1261| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1261| 
        MOVL      XAR0,#74              ; [CPU_] |1261| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1261| 
        ADDL      ACC,XAR6              ; [CPU_] |1261| 
        MOVL      XAR4,ACC              ; [CPU_] |1261| 
        MOVL      XAR0,#44              ; [CPU_] |1261| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1261| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1261| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1261| 
        MOVL      XAR4,XAR1             ; [CPU_] |1261| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_sprintf")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1261| 
        ; call occurs [#_sprintf] ; [] |1261| 
	.dwpsn	file "../Source/prod.c",line 1264,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1264| 
	.dwpsn	file "../Source/prod.c",line 1261,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1261| 
	.dwpsn	file "../Source/prod.c",line 1264,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1264| 
	.dwpsn	file "../Source/prod.c",line 1261,column 6,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |1261| 
	.dwpsn	file "../Source/prod.c",line 1264,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1264| 
        MOVL      XAR5,XAR1             ; [CPU_] |1264| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1264| 
        ; call occurs [#_scia_getparam] ; [] |1264| 
        MOVL      XAR4,XAR1             ; [CPU_] |1264| 
	.dwpsn	file "../Source/prod.c",line 1265,column 6,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_scia_puts")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1265| 
        ; call occurs [#_scia_puts] ; [] |1265| 
	.dwpsn	file "../Source/prod.c",line 1266,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1266| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_scia_puts")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1266| 
        ; call occurs [#_scia_puts] ; [] |1266| 
        MOV       AL,*-SP[51]           ; [CPU_] |1266| 
	.dwpsn	file "../Source/prod.c",line 1267,column 6,is_stmt,isa 0
        B         $C$L336,EQ            ; [CPU_] |1267| 
        ; branchcc occurs ; [] |1267| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_atoi")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1272| 
        ; call occurs [#_atoi] ; [] |1272| 
        CMPB      AL,#7                 ; [CPU_] |1272| 
        B         $C$L335,HI            ; [CPU_] |1272| 
        ; branchcc occurs ; [] |1272| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1278| 
        MOVB      XAR1,#35              ; [CPU_] |1278| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1279,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1279| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1279| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1279,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1279| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1279| 
        MOVL      XAR0,#74              ; [CPU_] |1279| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1279| 
$C$L333:    
        ADDL      ACC,XAR6              ; [CPU_] |1279| 
        MOVL      XAR4,ACC              ; [CPU_] |1279| 
        MOVL      XAR0,#44              ; [CPU_] |1279| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1279| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1279| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1279| 
        MOVL      XAR4,XAR1             ; [CPU_] |1279| 
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_sprintf")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1279| 
        ; call occurs [#_sprintf] ; [] |1279| 
        MOVL      XAR4,XAR1             ; [CPU_] |1279| 
	.dwpsn	file "../Source/prod.c",line 1282,column 6,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_scia_puts")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1282| 
        ; call occurs [#_scia_puts] ; [] |1282| 
	.dwpsn	file "../Source/prod.c",line 1283,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1283| 
$C$L334:    
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_scia_puts")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1283| 
        ; call occurs [#_scia_puts] ; [] |1283| 
	.dwpsn	file "../Source/prod.c",line 1286,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |1286| 
        ; branch occurs ; [] |1286| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1274,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1274| 
	.dwpsn	file "../Source/prod.c",line 1276,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1276| 
        ; branch occurs ; [] |1276| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1268,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1268| 
	.dwpsn	file "../Source/prod.c",line 1270,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1270| 
        ; branch occurs ; [] |1270| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1248,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1248| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1250| 
        ; branch occurs ; [] |1250| 
$C$L338:    
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1319| 
        MOVB      XAR0,#40              ; [CPU_] |1319| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1319| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1319| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1319| 
        MOVL      XAR0,#44              ; [CPU_] |1319| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1319| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1319| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_sprintf")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1319| 
        ; call occurs [#_sprintf] ; [] |1319| 
        MOVL      XAR0,#44              ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1321| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1321| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1321| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1321| 
        ; call occurs [#_scia_getparam] ; [] |1321| 
        MOVL      XAR0,#86              ; [CPU_] |1321| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1321| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_strtod")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1322,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1322| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1322| 
        MOVB      XAR1,#40              ; [CPU_] |1322| 
        MOVL      XAR0,#86              ; [CPU_] |1322| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1322| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1322| 
	.dwpsn	file "../Source/prod.c",line 1323,column 6,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_scia_puts")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1323| 
        ; call occurs [#_scia_puts] ; [] |1323| 
	.dwpsn	file "../Source/prod.c",line 1324,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1324| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_scia_puts")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1324| 
        ; call occurs [#_scia_puts] ; [] |1324| 
	.dwpsn	file "../Source/prod.c",line 1326,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1326| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1326| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1326| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1326| 
        MOVB      XAR1,#40              ; [CPU_] |1326| 
        MOVL      XAR0,#44              ; [CPU_] |1326| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1326| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1326| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1326| 
        MOVL      XAR4,XAR1             ; [CPU_] |1326| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_sprintf")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1326| 
        ; call occurs [#_sprintf] ; [] |1326| 
        MOVL      XAR4,XAR1             ; [CPU_] |1326| 
	.dwpsn	file "../Source/prod.c",line 1328,column 6,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_scia_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1328| 
        ; call occurs [#_scia_puts] ; [] |1328| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1332,column 6,is_stmt,isa 0
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1332| 
        ; call occurs [#_ad7738_setcal] ; [] |1332| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_maf_rst")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1333| 
        ; call occurs [#_maf_rst] ; [] |1333| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |1335| 
        ; branch occurs ; [] |1335| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1129,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1129| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1129| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1129| 
        MOV       AL,#1024              ; [CPU_] |1129| 
        MOVL      XAR5,XAR1             ; [CPU_] |1129| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1129| 
        ; call occurs [#_scia_getparam] ; [] |1129| 
        MOVL      XAR4,XAR1             ; [CPU_] |1129| 
	.dwpsn	file "../Source/prod.c",line 1131,column 6,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_atol")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1131| 
        ; call occurs [#_atol] ; [] |1131| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1131| 
	.dwpsn	file "../Source/prod.c",line 1133,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1133| 
	.dwpsn	file "../Source/prod.c",line 1131,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1131| 
	.dwpsn	file "../Source/prod.c",line 1133,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1133| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1133| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1133| 
	.dwpsn	file "../Source/prod.c",line 1136,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1136| 
        ; branch occurs ; [] |1136| 
$C$L341:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1211,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1211| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] |1211| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1212,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1212| 
        MOVL      XAR0,#44              ; [CPU_] |1212| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1212| 
        MOV       *-SP[3],AL            ; [CPU_] |1212| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1212| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1212| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1212| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_sprintf")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1212| 
        ; call occurs [#_sprintf] ; [] |1212| 
        MOVL      XAR0,#44              ; [CPU_] |1212| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1212| 
	.dwpsn	file "../Source/prod.c",line 1213,column 7,is_stmt,isa 0
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_scia_puts")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1213| 
        ; call occurs [#_scia_puts] ; [] |1213| 
        MOV       AL,*-SP[51]           ; [CPU_] |1213| 
	.dwpsn	file "../Source/prod.c",line 1214,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1214| 
        B         $C$L343,GEQ           ; [CPU_] |1214| 
        ; branchcc occurs ; [] |1214| 
	.dwpsn	file "../Source/prod.c",line 1215,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1215| 
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_scia_puts")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1215| 
        ; call occurs [#_scia_puts] ; [] |1215| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1211,column 18,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |1211| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1211| 
        B         $C$L342,LT            ; [CPU_] |1211| 
        ; branchcc occurs ; [] |1211| 
	.dwpsn	file "../Source/prod.c",line 1218,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1218| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_scia_puts")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1218| 
        ; call occurs [#_scia_puts] ; [] |1218| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1219,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1219| 
        MOVB      XAR0,#34              ; [CPU_] |1219| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1219| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1219| 
        MOV       *-SP[3],AL            ; [CPU_] |1219| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1219| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1219| 
        MOVL      XAR0,#72              ; [CPU_] |1219| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1219| 
        ADDL      ACC,XAR6              ; [CPU_] |1219| 
        MOVL      XAR4,ACC              ; [CPU_] |1219| 
        MOVL      XAR0,#44              ; [CPU_] |1219| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1219| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1219| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1219| 
        MOVL      XAR4,XAR1             ; [CPU_] |1219| 
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_sprintf")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1219| 
        ; call occurs [#_sprintf] ; [] |1219| 
	.dwpsn	file "../Source/prod.c",line 1221,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1221| 
	.dwpsn	file "../Source/prod.c",line 1219,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1219| 
	.dwpsn	file "../Source/prod.c",line 1221,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1221| 
        MOV       AL,#1024              ; [CPU_] |1221| 
        MOVL      XAR5,XAR1             ; [CPU_] |1221| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1221| 
        ; call occurs [#_scia_getparam] ; [] |1221| 
        MOV       *-SP[51],AL           ; [CPU_] |1221| 
        MOVL      XAR4,XAR1             ; [CPU_] |1221| 
	.dwpsn	file "../Source/prod.c",line 1222,column 6,is_stmt,isa 0
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_puts")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1222| 
        ; call occurs [#_scia_puts] ; [] |1222| 
	.dwpsn	file "../Source/prod.c",line 1223,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1223| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_scia_puts")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1223| 
        ; call occurs [#_scia_puts] ; [] |1223| 
        MOV       AL,*-SP[51]           ; [CPU_] |1223| 
	.dwpsn	file "../Source/prod.c",line 1224,column 6,is_stmt,isa 0
        B         $C$L345,EQ            ; [CPU_] |1224| 
        ; branchcc occurs ; [] |1224| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_atoi")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1228| 
        ; call occurs [#_atoi] ; [] |1228| 
        CMPB      AL,#3                 ; [CPU_] |1228| 
        B         $C$L344,HI            ; [CPU_] |1228| 
        ; branchcc occurs ; [] |1228| 
	.dwpsn	file "../Source/prod.c",line 1234,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1234| 
        MOVB      XAR1,#34              ; [CPU_] |1234| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1235| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1234,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1235| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1235| 
        MOVL      XAR0,#72              ; [CPU_] |1235| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
        B         $C$L333,UNC           ; [CPU_] |1242| 
        ; branch occurs ; [] |1242| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1230,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1230| 
	.dwpsn	file "../Source/prod.c",line 1232,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1232| 
        ; branch occurs ; [] |1232| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1225,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1225| 
	.dwpsn	file "../Source/prod.c",line 1226,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1226| 
        ; branch occurs ; [] |1226| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1292,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1292| 
        MOVL      XAR0,#44              ; [CPU_] |1292| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1292| 
        MOV       *-SP[3],#4096         ; [CPU_] |1292| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1292| 
        MOVL      XAR4,XAR1             ; [CPU_] |1292| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_sprintf")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1292| 
        ; call occurs [#_sprintf] ; [] |1292| 
	.dwpsn	file "../Source/prod.c",line 1294,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1294| 
	.dwpsn	file "../Source/prod.c",line 1292,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1294,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1294| 
        MOV       AL,#1024              ; [CPU_] |1294| 
        MOVL      XAR5,XAR1             ; [CPU_] |1294| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1294| 
        ; call occurs [#_scia_getparam] ; [] |1294| 
	.dwpsn	file "../Source/prod.c",line 1295,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1295| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_atoi")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1295| 
        ; call occurs [#_atoi] ; [] |1295| 
        MOV       *-SP[51],AL           ; [CPU_] |1295| 
	.dwpsn	file "../Source/prod.c",line 1296,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1296| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_puts")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1296| 
        ; call occurs [#_scia_puts] ; [] |1296| 
        MOV       AL,*-SP[51]           ; [CPU_] |1296| 
	.dwpsn	file "../Source/prod.c",line 1298,column 8,is_stmt,isa 0
        B         $C$L347,LEQ           ; [CPU_] |1298| 
        ; branchcc occurs ; [] |1298| 
        CMP       AL,#4096              ; [CPU_] |1298| 
        B         $C$L347,GT            ; [CPU_] |1298| 
        ; branchcc occurs ; [] |1298| 
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1303| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_scia_puts")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1303| 
        ; call occurs [#_scia_puts] ; [] |1303| 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1305| 
        MOVL      XAR0,#44              ; [CPU_] |1305| 
        MOV       AL,*-SP[51]           ; [CPU_] |1305| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1305| 
        MOV       *-SP[3],AL            ; [CPU_] |1305| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1305| 
        MOVL      XAR4,XAR1             ; [CPU_] |1305| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_sprintf")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1305| 
        ; call occurs [#_sprintf] ; [] |1305| 
        MOVL      XAR4,XAR1             ; [CPU_] |1305| 
	.dwpsn	file "../Source/prod.c",line 1307,column 6,is_stmt,isa 0
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_puts")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1307| 
        ; call occurs [#_scia_puts] ; [] |1307| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1312| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1312| 
        MOV       AL,*-SP[51]           ; [CPU_] |1312| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1312| 
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        B         $C$L339,UNC           ; [CPU_] |1315| 
        ; branch occurs ; [] |1315| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1300,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1300| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_scia_puts")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1300| 
        ; call occurs [#_scia_puts] ; [] |1300| 
	.dwpsn	file "../Source/prod.c",line 1291,column 6,is_stmt,isa 0
        B         $C$L346,UNC           ; [CPU_] |1291| 
        ; branch occurs ; [] |1291| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1163,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1163| 
        MOVL      XAR0,#44              ; [CPU_] |1163| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1163| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1163| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1163| 
        MOVL      XAR4,XAR1             ; [CPU_] |1163| 
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_sprintf")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1163| 
        ; call occurs [#_sprintf] ; [] |1163| 
	.dwpsn	file "../Source/prod.c",line 1164,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1164| 
	.dwpsn	file "../Source/prod.c",line 1163,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1163| 
	.dwpsn	file "../Source/prod.c",line 1164,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1164| 
        MOV       AL,#1024              ; [CPU_] |1164| 
        MOVL      XAR5,XAR1             ; [CPU_] |1164| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1164| 
        ; call occurs [#_scia_getparam] ; [] |1164| 
	.dwpsn	file "../Source/prod.c",line 1165,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1165| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_atoi")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1165| 
        ; call occurs [#_atoi] ; [] |1165| 
        MOV       *-SP[62],AL           ; [CPU_] |1165| 
	.dwpsn	file "../Source/prod.c",line 1166,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1166| 
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_puts")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1166| 
        ; call occurs [#_scia_puts] ; [] |1166| 
        MOV       AL,*-SP[62]           ; [CPU_] |1166| 
	.dwpsn	file "../Source/prod.c",line 1168,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1168| 
        CMPB      AL,#4                 ; [CPU_] |1168| 
        B         $C$L351,HIS           ; [CPU_] |1168| 
        ; branchcc occurs ; [] |1168| 
	.dwpsn	file "../Source/prod.c",line 1172,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1172| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_scia_puts")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1172| 
        ; call occurs [#_scia_puts] ; [] |1172| 
	.dwpsn	file "../Source/prod.c",line 1173,column 6,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |1173| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1178,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1178| 
        MOVL      XAR0,#44              ; [CPU_] |1178| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1178| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1178| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1178| 
        MOVL      XAR4,XAR1             ; [CPU_] |1178| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_sprintf")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1178| 
        ; call occurs [#_sprintf] ; [] |1178| 
	.dwpsn	file "../Source/prod.c",line 1179,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1179| 
	.dwpsn	file "../Source/prod.c",line 1178,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1178| 
	.dwpsn	file "../Source/prod.c",line 1179,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1179| 
        MOV       AL,#1024              ; [CPU_] |1179| 
        MOVL      XAR5,XAR1             ; [CPU_] |1179| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1179| 
        ; call occurs [#_scia_getparam] ; [] |1179| 
	.dwpsn	file "../Source/prod.c",line 1180,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1180| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_atoi")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1180| 
        ; call occurs [#_atoi] ; [] |1180| 
        MOV       *-SP[61],AL           ; [CPU_] |1180| 
	.dwpsn	file "../Source/prod.c",line 1181,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1181| 
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_scia_puts")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1181| 
        ; call occurs [#_scia_puts] ; [] |1181| 
        MOV       AL,*-SP[61]           ; [CPU_] |1181| 
	.dwpsn	file "../Source/prod.c",line 1185,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1185| 
        CMPB      AL,#20                ; [CPU_] |1185| 
        B         $C$L350,HIS           ; [CPU_] |1185| 
        ; branchcc occurs ; [] |1185| 
	.dwpsn	file "../Source/prod.c",line 1189,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1189| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_puts")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1189| 
        ; call occurs [#_scia_puts] ; [] |1189| 
	.dwpsn	file "../Source/prod.c",line 1192,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1192| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1192| 
        MOVL      XAR0,#44              ; [CPU_] |1192| 
        MOV       AH,*-SP[61]           ; [CPU_] |1192| 
        ADD       AL,*-SP[62]           ; [CPU_] |1192| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1192| 
        MOV       *-SP[3],AL            ; [CPU_] |1192| 
        MOV       *-SP[4],AH            ; [CPU_] |1192| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1192| 
        DEC       *-SP[61]              ; [CPU_] |1192| 
        MOVL      XAR4,XAR1             ; [CPU_] |1192| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_sprintf")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1192| 
        ; call occurs [#_sprintf] ; [] |1192| 
        MOVL      XAR4,XAR1             ; [CPU_] |1192| 
	.dwpsn	file "../Source/prod.c",line 1194,column 6,is_stmt,isa 0
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_scia_puts")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1194| 
        ; call occurs [#_scia_puts] ; [] |1194| 
        MOV       AL,*-SP[61]           ; [CPU_] |1194| 
	.dwpsn	file "../Source/prod.c",line 1195,column 6,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_print_sensor")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1195| 
        ; call occurs [#_print_sensor] ; [] |1195| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1199,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1199| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1199| 
        MOVB      AL,#10                ; [CPU_] |1199| 
        MOV       T,*-SP[62]            ; [CPU_] |1199| 
        MPYU      ACC,T,AL              ; [CPU_] |1199| 
        ADDL      ACC,XAR6              ; [CPU_] |1199| 
        MOVL      XAR4,ACC              ; [CPU_] |1199| 
        MOVB      XAR0,#42              ; [CPU_] |1199| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[61]           ; [CPU_] |1199| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1199| 
	.dwpsn	file "../Source/prod.c",line 1200,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1200| 
        ; call occurs [#_ad7738_setcal] ; [] |1200| 
        MOVL      XAR0,#78              ; [CPU_] |1200| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1202,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |1202| 
        MOVL      XAR1,ACC              ; [CPU_] |1202| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1202| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1202| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1202| 
	.dwpsn	file "../Source/prod.c",line 1203,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1203| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1203| 
        ; call occurs [#_ad7738_resetvall] ; [] |1203| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1207,column 6,is_stmt,isa 0
        B         $C$L528,UNC           ; [CPU_] |1207| 
        ; branch occurs ; [] |1207| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1187,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1187| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_puts")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1187| 
        ; call occurs [#_scia_puts] ; [] |1187| 
	.dwpsn	file "../Source/prod.c",line 1177,column 6,is_stmt,isa 0
        B         $C$L349,UNC           ; [CPU_] |1177| 
        ; branch occurs ; [] |1177| 
$C$L351:    
	.dwpsn	file "../Source/prod.c",line 1170,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1170| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_puts")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1170| 
        ; call occurs [#_scia_puts] ; [] |1170| 
	.dwpsn	file "../Source/prod.c",line 1162,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1162| 
        ; branch occurs ; [] |1162| 
$C$L352:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2023,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2023| 
        B         $C$L625,LO            ; [CPU_] |2023| 
        ; branchcc occurs ; [] |2023| 
	.dwpsn	file "../Source/prod.c",line 2028,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2028| 
        CMPB      AL,#78                ; [CPU_] |2028| 
        B         $C$L353,EQ            ; [CPU_] |2028| 
        ; branchcc occurs ; [] |2028| 
        CMPB      AL,#85                ; [CPU_] |2028| 
        B         $C$L353,EQ            ; [CPU_] |2028| 
        ; branchcc occurs ; [] |2028| 
        CMPB      AL,#66                ; [CPU_] |2028| 
        B         $C$L353,EQ            ; [CPU_] |2028| 
        ; branchcc occurs ; [] |2028| 
        CMPB      AL,#68                ; [CPU_] |2028| 
        B         $C$L625,NEQ           ; [CPU_] |2028| 
        ; branchcc occurs ; [] |2028| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2031,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2031| 
	.dwpsn	file "../Source/prod.c",line 2052,column 5,is_stmt,isa 0
        MOV       *-SP[51],#20          ; [CPU_] |2052| 
$C$L354:    
	.dwpsn	file "../Source/prod.c",line 2054,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2054| 
        MOVL      XAR0,#44              ; [CPU_] |2054| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2054| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2054| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2054| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_sprintf")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2054| 
        ; call occurs [#_sprintf] ; [] |2054| 
        MOVL      XAR0,#44              ; [CPU_] |2054| 
	.dwpsn	file "../Source/prod.c",line 2055,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2055| 
	.dwpsn	file "../Source/prod.c",line 2054,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2054| 
	.dwpsn	file "../Source/prod.c",line 2055,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2055| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2055| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2055| 
        ; call occurs [#_scia_getparam] ; [] |2055| 
        MOVL      XAR0,#86              ; [CPU_] |2055| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2055| 
	.dwpsn	file "../Source/prod.c",line 2056,column 6,is_stmt,isa 0
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_atoi")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2056| 
        ; call occurs [#_atoi] ; [] |2056| 
        MOVL      XAR0,#86              ; [CPU_] |2056| 
        MOV       *-SP[61],AL           ; [CPU_] |2056| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2056| 
	.dwpsn	file "../Source/prod.c",line 2057,column 6,is_stmt,isa 0
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2057| 
        ; call occurs [#_scia_puts] ; [] |2057| 
        MOV       AL,*-SP[61]           ; [CPU_] |2057| 
	.dwpsn	file "../Source/prod.c",line 2061,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2061| 
        CMPB      AL,#20                ; [CPU_] |2061| 
        B         $C$L415,HIS           ; [CPU_] |2061| 
        ; branchcc occurs ; [] |2061| 
	.dwpsn	file "../Source/prod.c",line 2065,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2065| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2065| 
        ; call occurs [#_scia_puts] ; [] |2065| 
	.dwpsn	file "../Source/prod.c",line 2066,column 5,is_stmt,isa 0
        DEC       *-SP[61]              ; [CPU_] |2066| 
	.dwpsn	file "../Source/prod.c",line 2068,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2068| 
        CMPB      AL,#66                ; [CPU_] |2068| 
        B         $C$L410,EQ            ; [CPU_] |2068| 
        ; branchcc occurs ; [] |2068| 
        CMPB      AL,#68                ; [CPU_] |2068| 
        B         $C$L407,EQ            ; [CPU_] |2068| 
        ; branchcc occurs ; [] |2068| 
        CMPB      AL,#78                ; [CPU_] |2068| 
        B         $C$L404,EQ            ; [CPU_] |2068| 
        ; branchcc occurs ; [] |2068| 
        CMPB      AL,#85                ; [CPU_] |2068| 
        B         $C$L625,NEQ           ; [CPU_] |2068| 
        ; branchcc occurs ; [] |2068| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2097| 
	.dwpsn	file "../Source/prod.c",line 2095,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2095| 
        MOV       AH,#0                 ; [CPU_] |2095| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        MOV       T,*-SP[61]            ; [CPU_] |2097| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2097| 
	.dwpsn	file "../Source/prod.c",line 2095,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2095| 
	.dwpsn	file "../Source/prod.c",line 2097,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2097| 
        MPYU      ACC,T,AL              ; [CPU_] |2097| 
        ADDL      ACC,XAR6              ; [CPU_] |2097| 
        ADDB      ACC,#124              ; [CPU_] |2097| 
        MOVL      XAR1,ACC              ; [CPU_] |2097| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2097| 
        CMPB      AL,#35                ; [CPU_] |2097| 
        B         $C$L355,GT            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#35                ; [CPU_] |2097| 
        B         $C$L371,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#16                ; [CPU_] |2097| 
        B         $C$L391,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#17                ; [CPU_] |2097| 
        B         $C$L387,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#34                ; [CPU_] |2097| 
        B         $C$L378,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        B         $C$L395,UNC           ; [CPU_] |2097| 
        ; branch occurs ; [] |2097| 
$C$L355:    
        CMPB      AL,#36                ; [CPU_] |2097| 
        B         $C$L364,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#53                ; [CPU_] |2097| 
        B         $C$L360,EQ            ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
        CMPB      AL,#70                ; [CPU_] |2097| 
        B         $C$L395,NEQ           ; [CPU_] |2097| 
        ; branchcc occurs ; [] |2097| 
$C$L356:    
	.dwpsn	file "../Source/prod.c",line 2286,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2286| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2286| 
        MOV       AL,#1024              ; [CPU_] |2286| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2286| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2286| 
        ; call occurs [#_scia_getparam] ; [] |2286| 
        MOVL      XAR0,#86              ; [CPU_] |2286| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2286| 
	.dwpsn	file "../Source/prod.c",line 2288,column 8,is_stmt,isa 0
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_atoi")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2288| 
        ; call occurs [#_atoi] ; [] |2288| 
        MOVL      XAR0,#86              ; [CPU_] |2288| 
        MOV       *-SP[51],AL           ; [CPU_] |2288| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2288| 
	.dwpsn	file "../Source/prod.c",line 2289,column 8,is_stmt,isa 0
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_puts")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2289| 
        ; call occurs [#_scia_puts] ; [] |2289| 
        MOV       AL,*-SP[51]           ; [CPU_] |2289| 
	.dwpsn	file "../Source/prod.c",line 2290,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2290| 
        B         $C$L357,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
        CMPB      AL,#7                 ; [CPU_] |2290| 
        B         $C$L358,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
	.dwpsn	file "../Source/prod.c",line 2291,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2291| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2291| 
        ; call occurs [#_scia_puts] ; [] |2291| 
$C$L357:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2293,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2293| 
        B         $C$L358,EQ            ; [CPU_] |2293| 
        ; branchcc occurs ; [] |2293| 
        CMPB      AL,#7                 ; [CPU_] |2293| 
        B         $C$L356,NEQ           ; [CPU_] |2293| 
        ; branchcc occurs ; [] |2293| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2294,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2294| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_scia_puts")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2294| 
        ; call occurs [#_scia_puts] ; [] |2294| 
        MOV       AL,*-SP[51]           ; [CPU_] |2294| 
	.dwpsn	file "../Source/prod.c",line 2296,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2296| 
        B         $C$L359,EQ            ; [CPU_] |2296| 
        ; branchcc occurs ; [] |2296| 
        CMPB      AL,#7                 ; [CPU_] |2296| 
        B         $C$L394,EQ            ; [CPU_] |2296| 
        ; branchcc occurs ; [] |2296| 
        B         $C$L395,UNC           ; [CPU_] |2296| 
        ; branch occurs ; [] |2296| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2298,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2298| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2298| 
        MOV       AL,*-SP[51]           ; [CPU_] |2298| 
	.dwpsn	file "../Source/prod.c",line 2299,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2299| 
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
        B         $C$L399,UNC           ; [CPU_] |2300| 
        ; branch occurs ; [] |2300| 
$C$L360:    
	.dwpsn	file "../Source/prod.c",line 2261,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2261| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2261| 
        MOV       AL,#1024              ; [CPU_] |2261| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2261| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2261| 
        ; call occurs [#_scia_getparam] ; [] |2261| 
        MOVL      XAR0,#86              ; [CPU_] |2261| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2261| 
	.dwpsn	file "../Source/prod.c",line 2263,column 8,is_stmt,isa 0
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_atoi")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2263| 
        ; call occurs [#_atoi] ; [] |2263| 
        MOVL      XAR0,#86              ; [CPU_] |2263| 
        MOV       *-SP[51],AL           ; [CPU_] |2263| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2263| 
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_puts")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2264| 
        ; call occurs [#_scia_puts] ; [] |2264| 
        MOV       AL,*-SP[51]           ; [CPU_] |2264| 
	.dwpsn	file "../Source/prod.c",line 2265,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2265| 
        B         $C$L361,EQ            ; [CPU_] |2265| 
        ; branchcc occurs ; [] |2265| 
        CMPB      AL,#7                 ; [CPU_] |2265| 
        B         $C$L362,EQ            ; [CPU_] |2265| 
        ; branchcc occurs ; [] |2265| 
	.dwpsn	file "../Source/prod.c",line 2266,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2266| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_puts")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2266| 
        ; call occurs [#_scia_puts] ; [] |2266| 
$C$L361:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2268,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2268| 
        B         $C$L362,EQ            ; [CPU_] |2268| 
        ; branchcc occurs ; [] |2268| 
        CMPB      AL,#7                 ; [CPU_] |2268| 
        B         $C$L360,NEQ           ; [CPU_] |2268| 
        ; branchcc occurs ; [] |2268| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2269,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2269| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2269| 
        ; call occurs [#_scia_puts] ; [] |2269| 
        MOV       AL,*-SP[51]           ; [CPU_] |2269| 
	.dwpsn	file "../Source/prod.c",line 2271,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2271| 
        B         $C$L363,EQ            ; [CPU_] |2271| 
        ; branchcc occurs ; [] |2271| 
        CMPB      AL,#7                 ; [CPU_] |2271| 
        B         $C$L394,EQ            ; [CPU_] |2271| 
        ; branchcc occurs ; [] |2271| 
        B         $C$L395,UNC           ; [CPU_] |2271| 
        ; branch occurs ; [] |2271| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2273,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2273| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2273| 
        MOV       AL,*-SP[51]           ; [CPU_] |2273| 
	.dwpsn	file "../Source/prod.c",line 2274,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2274| 
	.dwpsn	file "../Source/prod.c",line 2275,column 8,is_stmt,isa 0
        B         $C$L399,UNC           ; [CPU_] |2275| 
        ; branch occurs ; [] |2275| 
$C$L364:    
	.dwpsn	file "../Source/prod.c",line 2227,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2227| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2227| 
        MOV       AL,#1024              ; [CPU_] |2227| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2227| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2227| 
        ; call occurs [#_scia_getparam] ; [] |2227| 
        MOVL      XAR0,#86              ; [CPU_] |2227| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2227| 
	.dwpsn	file "../Source/prod.c",line 2230,column 8,is_stmt,isa 0
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_atoi")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2230| 
        ; call occurs [#_atoi] ; [] |2230| 
        MOVL      XAR0,#86              ; [CPU_] |2230| 
        MOV       *-SP[51],AL           ; [CPU_] |2230| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2230| 
	.dwpsn	file "../Source/prod.c",line 2231,column 8,is_stmt,isa 0
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2231| 
        ; call occurs [#_scia_puts] ; [] |2231| 
        MOV       AL,*-SP[51]           ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2232,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2232| 
        B         $C$L365,EQ            ; [CPU_] |2232| 
        ; branchcc occurs ; [] |2232| 
        CMPB      AL,#3                 ; [CPU_] |2232| 
        B         $C$L366,EQ            ; [CPU_] |2232| 
        ; branchcc occurs ; [] |2232| 
        CMPB      AL,#4                 ; [CPU_] |2232| 
        B         $C$L367,EQ            ; [CPU_] |2232| 
        ; branchcc occurs ; [] |2232| 
        CMPB      AL,#7                 ; [CPU_] |2232| 
        B         $C$L368,EQ            ; [CPU_] |2232| 
        ; branchcc occurs ; [] |2232| 
	.dwpsn	file "../Source/prod.c",line 2233,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2233| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_scia_puts")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2233| 
        ; call occurs [#_scia_puts] ; [] |2233| 
$C$L365:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2235,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2235| 
        B         $C$L368,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
$C$L366:    
        CMPB      AL,#3                 ; [CPU_] |2235| 
        B         $C$L368,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
$C$L367:    
        CMPB      AL,#4                 ; [CPU_] |2235| 
        B         $C$L368,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#7                 ; [CPU_] |2235| 
        B         $C$L364,NEQ           ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2236,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2236| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2236| 
        ; call occurs [#_scia_puts] ; [] |2236| 
        MOV       AL,*-SP[51]           ; [CPU_] |2236| 
	.dwpsn	file "../Source/prod.c",line 2238,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2238| 
        B         $C$L370,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        CMPB      AL,#3                 ; [CPU_] |2238| 
        B         $C$L369,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        CMPB      AL,#4                 ; [CPU_] |2238| 
        B         $C$L386,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        CMPB      AL,#7                 ; [CPU_] |2238| 
        B         $C$L394,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        B         $C$L395,UNC           ; [CPU_] |2238| 
        ; branch occurs ; [] |2238| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2244,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2244| 
        MOV       AH,#15820             ; [CPU_] |2244| 
	.dwpsn	file "../Source/prod.c",line 2246,column 8,is_stmt,isa 0
        B         $C$L384,UNC           ; [CPU_] |2246| 
        ; branch occurs ; [] |2246| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2240,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2240| 
        MOV       AH,#15649             ; [CPU_] |2240| 
	.dwpsn	file "../Source/prod.c",line 2242,column 8,is_stmt,isa 0
        B         $C$L384,UNC           ; [CPU_] |2242| 
        ; branch occurs ; [] |2242| 
$C$L371:    
	.dwpsn	file "../Source/prod.c",line 2193,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2193| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2193| 
        MOV       AL,#1024              ; [CPU_] |2193| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2193| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2193| 
        ; call occurs [#_scia_getparam] ; [] |2193| 
        MOVL      XAR0,#86              ; [CPU_] |2193| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2193| 
	.dwpsn	file "../Source/prod.c",line 2196,column 8,is_stmt,isa 0
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_atoi")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2196| 
        ; call occurs [#_atoi] ; [] |2196| 
        MOVL      XAR0,#86              ; [CPU_] |2196| 
        MOV       *-SP[51],AL           ; [CPU_] |2196| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2196| 
	.dwpsn	file "../Source/prod.c",line 2197,column 8,is_stmt,isa 0
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_puts")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2197| 
        ; call occurs [#_scia_puts] ; [] |2197| 
        MOV       AL,*-SP[51]           ; [CPU_] |2197| 
	.dwpsn	file "../Source/prod.c",line 2198,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2198| 
        B         $C$L372,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#3                 ; [CPU_] |2198| 
        B         $C$L373,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#4                 ; [CPU_] |2198| 
        B         $C$L374,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
        CMPB      AL,#7                 ; [CPU_] |2198| 
        B         $C$L375,EQ            ; [CPU_] |2198| 
        ; branchcc occurs ; [] |2198| 
	.dwpsn	file "../Source/prod.c",line 2199,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2199| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_scia_puts")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2199| 
        ; call occurs [#_scia_puts] ; [] |2199| 
$C$L372:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2201,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2201| 
        B         $C$L375,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
$C$L373:    
        CMPB      AL,#3                 ; [CPU_] |2201| 
        B         $C$L375,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
$C$L374:    
        CMPB      AL,#4                 ; [CPU_] |2201| 
        B         $C$L375,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
        CMPB      AL,#7                 ; [CPU_] |2201| 
        B         $C$L371,NEQ           ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2202,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2202| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2202| 
        ; call occurs [#_scia_puts] ; [] |2202| 
        MOV       AL,*-SP[51]           ; [CPU_] |2202| 
	.dwpsn	file "../Source/prod.c",line 2204,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2204| 
        B         $C$L377,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#3                 ; [CPU_] |2204| 
        B         $C$L386,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#4                 ; [CPU_] |2204| 
        B         $C$L376,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#7                 ; [CPU_] |2204| 
        B         $C$L394,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        B         $C$L395,UNC           ; [CPU_] |2204| 
        ; branch occurs ; [] |2204| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2214,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2214| 
        MOV       AH,#16672             ; [CPU_] |2214| 
	.dwpsn	file "../Source/prod.c",line 2216,column 8,is_stmt,isa 0
        B         $C$L384,UNC           ; [CPU_] |2216| 
        ; branch occurs ; [] |2216| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2206,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2206| 
        MOV       AH,#16073             ; [CPU_] |2206| 
	.dwpsn	file "../Source/prod.c",line 2208,column 8,is_stmt,isa 0
        B         $C$L384,UNC           ; [CPU_] |2208| 
        ; branch occurs ; [] |2208| 
$C$L378:    
	.dwpsn	file "../Source/prod.c",line 2159,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2159| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2159| 
        MOV       AL,#1024              ; [CPU_] |2159| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2159| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2159| 
        ; call occurs [#_scia_getparam] ; [] |2159| 
        MOVL      XAR0,#86              ; [CPU_] |2159| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2159| 
	.dwpsn	file "../Source/prod.c",line 2162,column 8,is_stmt,isa 0
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_atoi")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2162| 
        ; call occurs [#_atoi] ; [] |2162| 
        MOVL      XAR0,#86              ; [CPU_] |2162| 
        MOV       *-SP[51],AL           ; [CPU_] |2162| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2162| 
	.dwpsn	file "../Source/prod.c",line 2163,column 8,is_stmt,isa 0
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_puts")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2163| 
        ; call occurs [#_scia_puts] ; [] |2163| 
        MOV       AL,*-SP[51]           ; [CPU_] |2163| 
	.dwpsn	file "../Source/prod.c",line 2164,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2164| 
        B         $C$L379,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
        CMPB      AL,#3                 ; [CPU_] |2164| 
        B         $C$L380,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
        CMPB      AL,#4                 ; [CPU_] |2164| 
        B         $C$L381,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
        CMPB      AL,#7                 ; [CPU_] |2164| 
        B         $C$L382,EQ            ; [CPU_] |2164| 
        ; branchcc occurs ; [] |2164| 
	.dwpsn	file "../Source/prod.c",line 2165,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2165| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_puts")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2165| 
        ; call occurs [#_scia_puts] ; [] |2165| 
$C$L379:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2167,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2167| 
        B         $C$L382,EQ            ; [CPU_] |2167| 
        ; branchcc occurs ; [] |2167| 
$C$L380:    
        CMPB      AL,#3                 ; [CPU_] |2167| 
        B         $C$L382,EQ            ; [CPU_] |2167| 
        ; branchcc occurs ; [] |2167| 
$C$L381:    
        CMPB      AL,#4                 ; [CPU_] |2167| 
        B         $C$L382,EQ            ; [CPU_] |2167| 
        ; branchcc occurs ; [] |2167| 
        CMPB      AL,#7                 ; [CPU_] |2167| 
        B         $C$L378,NEQ           ; [CPU_] |2167| 
        ; branchcc occurs ; [] |2167| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2168,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2168| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2168| 
        ; call occurs [#_scia_puts] ; [] |2168| 
        MOV       AL,*-SP[51]           ; [CPU_] |2168| 
	.dwpsn	file "../Source/prod.c",line 2170,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2170| 
        B         $C$L386,EQ            ; [CPU_] |2170| 
        ; branchcc occurs ; [] |2170| 
        CMPB      AL,#3                 ; [CPU_] |2170| 
        B         $C$L385,EQ            ; [CPU_] |2170| 
        ; branchcc occurs ; [] |2170| 
        CMPB      AL,#4                 ; [CPU_] |2170| 
        B         $C$L383,EQ            ; [CPU_] |2170| 
        ; branchcc occurs ; [] |2170| 
        CMPB      AL,#7                 ; [CPU_] |2170| 
        B         $C$L394,EQ            ; [CPU_] |2170| 
        ; branchcc occurs ; [] |2170| 
        B         $C$L395,UNC           ; [CPU_] |2170| 
        ; branch occurs ; [] |2170| 
$C$L383:    
	.dwpsn	file "../Source/prod.c",line 2180,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2180| 
        MOV       AH,#16843             ; [CPU_] |2180| 
$C$L384:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2180| 
        MOV       AL,*-SP[51]           ; [CPU_] |2180| 
	.dwpsn	file "../Source/prod.c",line 2181,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2181| 
	.dwpsn	file "../Source/prod.c",line 2182,column 8,is_stmt,isa 0
        B         $C$L399,UNC           ; [CPU_] |2182| 
        ; branch occurs ; [] |2182| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2176,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2176| 
        MOV       AH,#16418             ; [CPU_] |2176| 
	.dwpsn	file "../Source/prod.c",line 2178,column 8,is_stmt,isa 0
        B         $C$L384,UNC           ; [CPU_] |2178| 
        ; branch occurs ; [] |2178| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2172,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2172| 
	.dwpsn	file "../Source/prod.c",line 2174,column 8,is_stmt,isa 0
        B         $C$L384,UNC           ; [CPU_] |2174| 
        ; branch occurs ; [] |2174| 
$C$L387:    
	.dwpsn	file "../Source/prod.c",line 2130,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2130| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2130| 
        MOV       AL,#1024              ; [CPU_] |2130| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2130| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2130| 
        ; call occurs [#_scia_getparam] ; [] |2130| 
        MOVL      XAR0,#86              ; [CPU_] |2130| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2130| 
	.dwpsn	file "../Source/prod.c",line 2132,column 8,is_stmt,isa 0
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_atoi")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2132| 
        ; call occurs [#_atoi] ; [] |2132| 
        MOVL      XAR0,#86              ; [CPU_] |2132| 
        MOV       *-SP[51],AL           ; [CPU_] |2132| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2133,column 8,is_stmt,isa 0
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2133| 
        ; call occurs [#_scia_puts] ; [] |2133| 
        MOV       AL,*-SP[51]           ; [CPU_] |2133| 
	.dwpsn	file "../Source/prod.c",line 2134,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2134| 
        B         $C$L389,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2134| 
        B         $C$L388,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
	.dwpsn	file "../Source/prod.c",line 2135,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2135| 
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_scia_puts")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2135| 
        ; call occurs [#_scia_puts] ; [] |2135| 
$C$L388:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2137,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2137| 
        B         $C$L389,EQ            ; [CPU_] |2137| 
        ; branchcc occurs ; [] |2137| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2137| 
        B         $C$L387,NEQ           ; [CPU_] |2137| 
        ; branchcc occurs ; [] |2137| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2138,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2138| 
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2138| 
        ; call occurs [#_scia_puts] ; [] |2138| 
        MOV       AL,*-SP[51]           ; [CPU_] |2138| 
	.dwpsn	file "../Source/prod.c",line 2140,column 7,is_stmt,isa 0
        B         $C$L390,EQ            ; [CPU_] |2140| 
        ; branchcc occurs ; [] |2140| 
        CMPB      AL,#1                 ; [CPU_] |2140| 
        B         $C$L397,EQ            ; [CPU_] |2140| 
        ; branchcc occurs ; [] |2140| 
        CMPB      AL,#7                 ; [CPU_] |2140| 
        B         $C$L394,EQ            ; [CPU_] |2140| 
        ; branchcc occurs ; [] |2140| 
        B         $C$L395,UNC           ; [CPU_] |2140| 
        ; branch occurs ; [] |2140| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2142,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2142| 
        MOV       AH,#16397             ; [CPU_] |2142| 
	.dwpsn	file "../Source/prod.c",line 2144,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2144| 
        ; branch occurs ; [] |2144| 
$C$L391:    
	.dwpsn	file "../Source/prod.c",line 2101,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2101| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2101| 
        MOV       AL,#1024              ; [CPU_] |2101| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2101| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2101| 
        ; call occurs [#_scia_getparam] ; [] |2101| 
        MOVL      XAR0,#86              ; [CPU_] |2101| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2101| 
	.dwpsn	file "../Source/prod.c",line 2103,column 8,is_stmt,isa 0
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_atoi")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2103| 
        ; call occurs [#_atoi] ; [] |2103| 
        MOVL      XAR0,#86              ; [CPU_] |2103| 
        MOV       *-SP[51],AL           ; [CPU_] |2103| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2103| 
	.dwpsn	file "../Source/prod.c",line 2104,column 8,is_stmt,isa 0
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2104| 
        ; call occurs [#_scia_puts] ; [] |2104| 
        MOV       AL,*-SP[51]           ; [CPU_] |2104| 
	.dwpsn	file "../Source/prod.c",line 2105,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2105| 
        B         $C$L393,EQ            ; [CPU_] |2105| 
        ; branchcc occurs ; [] |2105| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2105| 
        B         $C$L392,EQ            ; [CPU_] |2105| 
        ; branchcc occurs ; [] |2105| 
	.dwpsn	file "../Source/prod.c",line 2106,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2106| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2106| 
        ; call occurs [#_scia_puts] ; [] |2106| 
$C$L392:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2108,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2108| 
        B         $C$L393,EQ            ; [CPU_] |2108| 
        ; branchcc occurs ; [] |2108| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2108| 
        B         $C$L391,NEQ           ; [CPU_] |2108| 
        ; branchcc occurs ; [] |2108| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2109,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2109| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_puts")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2109| 
        ; call occurs [#_scia_puts] ; [] |2109| 
        MOV       AL,*-SP[51]           ; [CPU_] |2109| 
	.dwpsn	file "../Source/prod.c",line 2111,column 7,is_stmt,isa 0
        B         $C$L397,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#1                 ; [CPU_] |2111| 
        B         $C$L396,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#7                 ; [CPU_] |2111| 
        B         $C$L395,NEQ           ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2121,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2121| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2121| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2121| 
        MOV       AL,#0                 ; [CPU_] |2121| 
        MOV       AH,#17096             ; [CPU_] |2121| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2121| 
        ; call occurs [#FS$$DIV] ; [] |2121| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2121| 
        MOV       AL,*-SP[51]           ; [CPU_] |2121| 
	.dwpsn	file "../Source/prod.c",line 2122,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2122| 
        MOV       *-SP[51],AL           ; [CPU_] |2122| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2312,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2312| 
        MOV       AH,#0                 ; [CPU_] |2312| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2312| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2312| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2312| 
        ; call occurs [#FS$$CMP] ; [] |2312| 
        CMPB      AL,#0                 ; [CPU_] |2312| 
        B         $C$L400,NEQ           ; [CPU_] |2312| 
        ; branchcc occurs ; [] |2312| 
	.dwpsn	file "../Source/prod.c",line 2313,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2313| 
	.dwpsn	file "../Source/prod.c",line 2314,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2314| 
        ; branch occurs ; [] |2314| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2117,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2117| 
        MOV       AH,#16104             ; [CPU_] |2117| 
	.dwpsn	file "../Source/prod.c",line 2119,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2119| 
        ; branch occurs ; [] |2119| 
$C$L397:    
	.dwpsn	file "../Source/prod.c",line 2113,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2113| 
$C$L398:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2113| 
        MOV       AL,*-SP[51]           ; [CPU_] |2113| 
	.dwpsn	file "../Source/prod.c",line 2114,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2114| 
$C$L399:    
        MOV       *-SP[51],AL           ; [CPU_] |2114| 
$C$L400:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2317,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2317| 
        B         $C$L403,EQ            ; [CPU_] |2317| 
        ; branchcc occurs ; [] |2317| 
	.dwpsn	file "../Source/prod.c",line 2323,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2323| 
	.dwpsn	file "../Source/prod.c",line 2327,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2327| 
	.dwpsn	file "../Source/prod.c",line 2324,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2324| 
	.dwpsn	file "../Source/prod.c",line 2327,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2327| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2324,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2324| 
	.dwpsn	file "../Source/prod.c",line 2327,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2327| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2327| 
        ADD       AL,*-SP[61]           ; [CPU_] |2327| 
        MOV       *-SP[3],AL            ; [CPU_] |2327| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2327| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2327| 
        ANDB      AL,#0x0f              ; [CPU_] |2327| 
        MOV       ACC,AL << 1           ; [CPU_] |2327| 
        ADDL      ACC,XAR6              ; [CPU_] |2327| 
        MOVL      XAR4,ACC              ; [CPU_] |2327| 
        MOVL      XAR0,#44              ; [CPU_] |2327| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2327| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2327| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2327| 
        MOVL      XAR4,XAR1             ; [CPU_] |2327| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_sprintf")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2327| 
        ; call occurs [#_sprintf] ; [] |2327| 
        MOVL      XAR4,XAR1             ; [CPU_] |2327| 
	.dwpsn	file "../Source/prod.c",line 2329,column 6,is_stmt,isa 0
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_puts")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2329| 
        ; call occurs [#_scia_puts] ; [] |2329| 
        MOVL      XAR0,#40              ; [CPU_] |2329| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2329| 
	.dwpsn	file "../Source/prod.c",line 2331,column 11,is_stmt,isa 0
        MOV       *-SP[62],#0           ; [CPU_] |2331| 
	.dwpsn	file "../Source/prod.c",line 2325,column 6,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |2325| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2332,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[61]          ; [CPU_] |2332| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2332| 
        CMPL      ACC,XAR6              ; [CPU_] |2332| 
        B         $C$L402,NEQ           ; [CPU_] |2332| 
        ; branchcc occurs ; [] |2332| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2333,column 8,is_stmt,isa 0
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_update_units")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2333| 
        ; call occurs [#_update_units] ; [] |2333| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2335,column 8,is_stmt,isa 0
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2335| 
        ; call occurs [#_ad7738_setcal] ; [] |2335| 
        MOVL      XAR0,#78              ; [CPU_] |2335| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2335| 
	.dwpsn	file "../Source/prod.c",line 2336,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |2336| 
        MOVL      XAR4,ACC              ; [CPU_] |2336| 
        MOVL      XAR0,#88              ; [CPU_] |2336| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2336| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2336| 
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2336| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2336| 
        MOVL      XAR0,#88              ; [CPU_] |2336| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2336| 
	.dwpsn	file "../Source/prod.c",line 2337,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2337| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2337| 
        ; call occurs [#_ad7738_resetvall] ; [] |2337| 
 clrc INTM
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2331,column 19,is_stmt,isa 0
        INC       *-SP[62]              ; [CPU_] |2331| 
        ADDB      XAR1,#10              ; [CPU_] |2331| 
        MOV       AL,*-SP[62]           ; [CPU_] |2331| 
        CMPB      AL,#4                 ; [CPU_] |2331| 
        B         $C$L401,LO            ; [CPU_] |2331| 
        ; branchcc occurs ; [] |2331| 
        B         $C$L632,UNC           ; [CPU_] |2331| 
        ; branch occurs ; [] |2331| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2318,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2318| 
	.dwpsn	file "../Source/prod.c",line 2320,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2320| 
        ; branch occurs ; [] |2320| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2074,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2074| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2074| 
        MOVL      XAR0,#44              ; [CPU_] |2074| 
        ADD       AL,*-SP[61]           ; [CPU_] |2074| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2074| 
        MOV       *-SP[3],AL            ; [CPU_] |2074| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2074| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2074| 
        MOV       *-SP[51],AL           ; [CPU_] |2074| 
        MOVL      XAR4,XAR1             ; [CPU_] |2074| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_sprintf")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2074| 
        ; call occurs [#_sprintf] ; [] |2074| 
	.dwpsn	file "../Source/prod.c",line 2076,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2076| 
        MOV       AL,#1024              ; [CPU_] |2076| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2076| 
	.dwpsn	file "../Source/prod.c",line 2074,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2074| 
	.dwpsn	file "../Source/prod.c",line 2076,column 6,is_stmt,isa 0
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2076| 
        ; call occurs [#_scia_getparam] ; [] |2076| 
        MOVZ      AR6,AL                ; [CPU_] |2076| 
        CMPB      AL,#15                ; [CPU_] |2076| 
        B         $C$L405,LOS           ; [CPU_] |2076| 
        ; branchcc occurs ; [] |2076| 
	.dwpsn	file "../Source/prod.c",line 2080,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2080| 
        MOVB      XAR0,#15              ; [CPU_] |2080| 
	.dwpsn	file "../Source/prod.c",line 2079,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2079| 
	.dwpsn	file "../Source/prod.c",line 2080,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2080| 
$C$L405:    
	.dwpsn	file "../Source/prod.c",line 2082,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2082| 
        MOVB      AL,#152               ; [CPU_] |2082| 
        MOV       T,*-SP[61]            ; [CPU_] |2082| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2082| 
        MOVL      XAR0,#86              ; [CPU_] |2082| 
        MPYU      ACC,T,AL              ; [CPU_] |2082| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2082| 
        ADDL      ACC,XAR7              ; [CPU_] |2082| 
        ADDB      ACC,#98               ; [CPU_] |2082| 
        MOVL      XAR1,ACC              ; [CPU_] |2082| 
        MOVL      XAR4,ACC              ; [CPU_] |2082| 
        MOVB      AH,#1                 ; [CPU_] |2082| 
        ADD       AH,AR6                ; [CPU_] |2082| 
        MOVU      ACC,AH                ; [CPU_] |2082| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_memcpy")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2082| 
        ; call occurs [#_memcpy] ; [] |2082| 
        MOVL      XAR0,#86              ; [CPU_] |2082| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2082| 
	.dwpsn	file "../Source/prod.c",line 2084,column 6,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2084| 
        ; call occurs [#_scia_puts] ; [] |2084| 
	.dwpsn	file "../Source/prod.c",line 2085,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2085| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_puts")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2085| 
        ; call occurs [#_scia_puts] ; [] |2085| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2088| 
        MOV       AL,*-SP[51]           ; [CPU_] |2088| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2088| 
        MOV       *-SP[3],AL            ; [CPU_] |2088| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2088| 
$C$L406:    
        MOVL      XAR0,#44              ; [CPU_] |2088| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2088| 
        MOVL      XAR4,XAR1             ; [CPU_] |2088| 
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_sprintf")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2088| 
        ; call occurs [#_sprintf] ; [] |2088| 
        MOVL      XAR4,XAR1             ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2091,column 6,is_stmt,isa 0
        B         $C$L334,UNC           ; [CPU_] |2091| 
        ; branch occurs ; [] |2091| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2385,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2385| 
        MOVB      AL,#152               ; [CPU_] |2385| 
        MOV       T,*-SP[61]            ; [CPU_] |2385| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2385| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2385| 
        MPYU      ACC,T,AL              ; [CPU_] |2385| 
        MOVB      XAR0,#124             ; [CPU_] |2385| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2385| 
        ADDL      ACC,XAR6              ; [CPU_] |2385| 
        MOVL      XAR1,ACC              ; [CPU_] |2385| 
        MOVB      AL,#1                 ; [CPU_] |2385| 
        ADD       AL,*-SP[61]           ; [CPU_] |2385| 
        MOV       *-SP[51],AL           ; [CPU_] |2385| 
        MOV       *-SP[3],AL            ; [CPU_] |2385| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2385| 
        MOVL      XAR0,#70              ; [CPU_] |2385| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2385| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2385| 
        MOV       ACC,AL << 1           ; [CPU_] |2385| 
        ADDL      ACC,XAR6              ; [CPU_] |2385| 
        MOVL      XAR4,ACC              ; [CPU_] |2385| 
        MOVL      XAR0,#44              ; [CPU_] |2385| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2385| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2385| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2385| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_sprintf")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2385| 
        ; call occurs [#_sprintf] ; [] |2385| 
        MOVL      XAR0,#44              ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2387,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2387| 
	.dwpsn	file "../Source/prod.c",line 2385,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2387,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2387| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2387| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2387| 
        ; call occurs [#_scia_getparam] ; [] |2387| 
        MOVL      XAR0,#86              ; [CPU_] |2387| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2387,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2387| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_strtod")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2388,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2388| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2388| 
        MOVL      XAR0,#86              ; [CPU_] |2388| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2388| 
	.dwpsn	file "../Source/prod.c",line 2389,column 6,is_stmt,isa 0
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_puts")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2389| 
        ; call occurs [#_scia_puts] ; [] |2389| 
	.dwpsn	file "../Source/prod.c",line 2390,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2390| 
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2390| 
        ; call occurs [#_scia_puts] ; [] |2390| 
	.dwpsn	file "../Source/prod.c",line 2392,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2392| 
        MOVL      XAR0,#44              ; [CPU_] |2392| 
        MOV       AL,*-SP[51]           ; [CPU_] |2392| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2392| 
        MOV       *-SP[3],AL            ; [CPU_] |2392| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2392| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_sprintf")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2392| 
        ; call occurs [#_sprintf] ; [] |2392| 
        MOVL      XAR0,#44              ; [CPU_] |2392| 
	.dwpsn	file "../Source/prod.c",line 2393,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2393| 
	.dwpsn	file "../Source/prod.c",line 2392,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2392| 
	.dwpsn	file "../Source/prod.c",line 2393,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2393| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2393| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2393| 
        ; call occurs [#_scia_getparam] ; [] |2393| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_strtod")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2394,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2394| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2394| 
        MOVL      XAR0,#86              ; [CPU_] |2394| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2394| 
	.dwpsn	file "../Source/prod.c",line 2395,column 6,is_stmt,isa 0
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_puts")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2395| 
        ; call occurs [#_scia_puts] ; [] |2395| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2396| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2396| 
        ; call occurs [#_scia_puts] ; [] |2396| 
	.dwpsn	file "../Source/prod.c",line 2399,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2399| 
        MOVB      XAR0,#228             ; [CPU_] |2399| 
        MOV       AL,*-SP[51]           ; [CPU_] |2399| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2399| 
        MOV       *-SP[3],AL            ; [CPU_] |2399| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2399| 
        MOVB      XAR0,#230             ; [CPU_] |2399| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2399| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2399| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2399| 
$C$L408:    
        MOVL      XAR0,#44              ; [CPU_] |2399| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2399| 
        MOVL      XAR4,XAR1             ; [CPU_] |2399| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_sprintf")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2399| 
        ; call occurs [#_sprintf] ; [] |2399| 
        MOVL      XAR4,XAR1             ; [CPU_] |2399| 
	.dwpsn	file "../Source/prod.c",line 2403,column 6,is_stmt,isa 0
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2403| 
        ; call occurs [#_scia_puts] ; [] |2403| 
$C$L409:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2406,column 6,is_stmt,isa 0
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2406| 
        ; call occurs [#_ad7738_setcal] ; [] |2406| 
	.dwpsn	file "../Source/prod.c",line 2408,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |2408| 
        ; branch occurs ; [] |2408| 
$C$L410:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[61]           ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] 
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2348,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2348| 
        MOV       AL,*-SP[51]           ; [CPU_] |2348| 
        MOVL      XAR0,#44              ; [CPU_] |2348| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2348| 
        MOV       *-SP[3],AL            ; [CPU_] |2348| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2348| 
        MOVL      XAR4,XAR1             ; [CPU_] |2348| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_sprintf")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2348| 
        ; call occurs [#_sprintf] ; [] |2348| 
	.dwpsn	file "../Source/prod.c",line 2349,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2348,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2348| 
	.dwpsn	file "../Source/prod.c",line 2349,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2349| 
        MOV       AL,#1024              ; [CPU_] |2349| 
        MOVL      XAR5,XAR1             ; [CPU_] |2349| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2349| 
        ; call occurs [#_scia_getparam] ; [] |2349| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_strtod")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2351,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2351| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2351| 
        ; call occurs [#_scia_puts] ; [] |2351| 
	.dwpsn	file "../Source/prod.c",line 2353,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2353| 
        MOV       AH,#0                 ; [CPU_] |2353| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2353| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2353| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2353| 
        ; call occurs [#FS$$CMP] ; [] |2353| 
        CMPB      AL,#0                 ; [CPU_] |2353| 
        B         $C$L414,EQ            ; [CPU_] |2353| 
        ; branchcc occurs ; [] |2353| 
	.dwpsn	file "../Source/prod.c",line 2357,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2357| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_scia_puts")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2357| 
        ; call occurs [#_scia_puts] ; [] |2357| 
	.dwpsn	file "../Source/prod.c",line 2358,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2358| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2358| 
        MOVB      AL,#152               ; [CPU_] |2358| 
        MOV       T,*-SP[61]            ; [CPU_] |2358| 
        MPYU      ACC,T,AL              ; [CPU_] |2358| 
        ADDL      ACC,XAR6              ; [CPU_] |2358| 
        MOVL      XAR1,ACC              ; [CPU_] |2358| 
        MOVB      XAR0,#224             ; [CPU_] |2358| 
	.dwpsn	file "../Source/prod.c",line 2361,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2361| 
	.dwpsn	file "../Source/prod.c",line 2358,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2358| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2358| 
	.dwpsn	file "../Source/prod.c",line 2361,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2361| 
        MOV       AL,*-SP[51]           ; [CPU_] |2361| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2361| 
        MOV       *-SP[3],AL            ; [CPU_] |2361| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2361| 
        MOVL      XAR0,#44              ; [CPU_] |2361| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2361| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2361| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_sprintf")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2361| 
        ; call occurs [#_sprintf] ; [] |2361| 
        MOVL      XAR0,#44              ; [CPU_] |2361| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2361| 
	.dwpsn	file "../Source/prod.c",line 2363,column 6,is_stmt,isa 0
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2363| 
        ; call occurs [#_scia_puts] ; [] |2363| 
	.dwpsn	file "../Source/prod.c",line 2359,column 6,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |2359| 
	.dwpsn	file "../Source/prod.c",line 2365,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2365| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2365| 
        CMPB      AL,#247               ; [CPU_] |2365| 
        B         $C$L632,NEQ           ; [CPU_] |2365| 
        ; branchcc occurs ; [] |2365| 
	.dwpsn	file "../Source/prod.c",line 2367,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2367| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2367| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2367| 
        MOV       AL,#0                 ; [CPU_] |2367| 
        MOV       AH,#17096             ; [CPU_] |2367| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2367| 
        ; call occurs [#FS$$DIV] ; [] |2367| 
        MOVB      XAR0,#126             ; [CPU_] |2367| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2367| 
        MOVL      XAR0,#40              ; [CPU_] |2367| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2367| 
	.dwpsn	file "../Source/prod.c",line 2370,column 12,is_stmt,isa 0
        MOV       *-SP[62],#0           ; [CPU_] |2370| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2371,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[61]          ; [CPU_] |2371| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2371| 
        CMPL      ACC,XAR6              ; [CPU_] |2371| 
        B         $C$L413,NEQ           ; [CPU_] |2371| 
        ; branchcc occurs ; [] |2371| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2374,column 9,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2374| 
        ; call occurs [#_ad7738_setcal] ; [] |2374| 
        MOVL      XAR0,#78              ; [CPU_] |2374| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2374| 
	.dwpsn	file "../Source/prod.c",line 2375,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |2375| 
        MOVL      XAR4,ACC              ; [CPU_] |2375| 
        MOVL      XAR0,#88              ; [CPU_] |2375| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2375| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2375| 
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2375| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2375| 
        MOVL      XAR0,#88              ; [CPU_] |2375| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2375| 
	.dwpsn	file "../Source/prod.c",line 2376,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2376| 
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2376| 
        ; call occurs [#_ad7738_resetvall] ; [] |2376| 
 clrc INTM
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2370,column 20,is_stmt,isa 0
        INC       *-SP[62]              ; [CPU_] |2370| 
        ADDB      XAR1,#10              ; [CPU_] |2370| 
        MOV       AL,*-SP[62]           ; [CPU_] |2370| 
        CMPB      AL,#4                 ; [CPU_] |2370| 
        B         $C$L412,LO            ; [CPU_] |2370| 
        ; branchcc occurs ; [] |2370| 
        B         $C$L632,UNC           ; [CPU_] |2370| 
        ; branch occurs ; [] |2370| 
$C$L414:    
	.dwpsn	file "../Source/prod.c",line 2355,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2355| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2355| 
        ; call occurs [#_scia_puts] ; [] |2355| 
	.dwpsn	file "../Source/prod.c",line 2347,column 6,is_stmt,isa 0
        B         $C$L411,UNC           ; [CPU_] |2347| 
        ; branch occurs ; [] |2347| 
$C$L415:    
	.dwpsn	file "../Source/prod.c",line 2063,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2063| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_scia_puts")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2063| 
        ; call occurs [#_scia_puts] ; [] |2063| 
	.dwpsn	file "../Source/prod.c",line 2053,column 5,is_stmt,isa 0
        B         $C$L354,UNC           ; [CPU_] |2053| 
        ; branch occurs ; [] |2053| 
$C$L416:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3025,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3025| 
        B         $C$L625,LO            ; [CPU_] |3025| 
        ; branchcc occurs ; [] |3025| 
	.dwpsn	file "../Source/prod.c",line 3028,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3028| 
        CMPB      AL,#83                ; [CPU_] |3028| 
        B         $C$L417,GT            ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        CMPB      AL,#83                ; [CPU_] |3028| 
        B         $C$L421,EQ            ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        CMPB      AL,#73                ; [CPU_] |3028| 
        B         $C$L426,EQ            ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        CMPB      AL,#76                ; [CPU_] |3028| 
        B         $C$L430,EQ            ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        CMPB      AL,#80                ; [CPU_] |3028| 
        B         $C$L423,EQ            ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        B         $C$L625,UNC           ; [CPU_] |3028| 
        ; branch occurs ; [] |3028| 
$C$L417:    
        CMPB      AL,#84                ; [CPU_] |3028| 
        B         $C$L419,EQ            ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        CMPB      AL,#86                ; [CPU_] |3028| 
        B         $C$L625,NEQ           ; [CPU_] |3028| 
        ; branchcc occurs ; [] |3028| 
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3056,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3056| 
        B         $C$L418,LOS           ; [CPU_] |3056| 
        ; branchcc occurs ; [] |3056| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3056,column 6,is_stmt,isa 0
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_atoi")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3056| 
        ; call occurs [#_atoi] ; [] |3056| 
        CMPB      AL,#4                 ; [CPU_] |3056| 
        B         $C$L418,GT            ; [CPU_] |3056| 
        ; branchcc occurs ; [] |3056| 
        CMPB      AL,#0                 ; [CPU_] |3056| 
        B         $C$L418,LEQ           ; [CPU_] |3056| 
        ; branchcc occurs ; [] |3056| 
	.dwpsn	file "../Source/prod.c",line 3058,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3058| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3058| 
        ADD       ACC,AR5               ; [CPU_] |3058| 
        MOVL      XAR4,ACC              ; [CPU_] |3058| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3058| 
	.dwpsn	file "../Source/prod.c",line 3059,column 6,is_stmt,isa 0
        B         $C$L428,UNC           ; [CPU_] |3059| 
        ; branch occurs ; [] |3059| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3060,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3060| 
        B         $C$L428,UNC           ; [CPU_] |3060| 
        ; branch occurs ; [] |3060| 
$C$L419:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3032,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3032| 
        B         $C$L420,LOS           ; [CPU_] |3032| 
        ; branchcc occurs ; [] |3032| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L420,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3032,column 6,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_atoi")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3032| 
        ; call occurs [#_atoi] ; [] |3032| 
        CMPB      AL,#4                 ; [CPU_] |3032| 
        MOVZ      AR4,AL                ; [CPU_] |3032| 
        B         $C$L420,GT            ; [CPU_] |3032| 
        ; branchcc occurs ; [] |3032| 
        CMPB      AL,#0                 ; [CPU_] |3032| 
        B         $C$L420,LEQ           ; [CPU_] |3032| 
        ; branchcc occurs ; [] |3032| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3034,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3034| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3034| 
	.dwpsn	file "../Source/prod.c",line 3037,column 6,is_stmt,isa 0
        B         $C$L427,UNC           ; [CPU_] |3037| 
        ; branch occurs ; [] |3037| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3038,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3038| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3038| 
        ; call occurs [#_ad7738_resettare] ; [] |3038| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3039| 
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3039| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3039| 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3040| 
        B         $C$L428,UNC           ; [CPU_] |3040| 
        ; branch occurs ; [] |3040| 
$C$L421:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3066,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3066| 
        B         $C$L422,LOS           ; [CPU_] |3066| 
        ; branchcc occurs ; [] |3066| 
        MOVL      ACC,XAR4              ; [CPU_] |3066| 
        MOVL      XAR0,#66              ; [CPU_] |3066| 
        ADDB      ACC,#2                ; [CPU_] |3066| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3066| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3066| 
        CMPB      AL,#67                ; [CPU_] |3066| 
        B         $C$L422,NEQ           ; [CPU_] |3066| 
        ; branchcc occurs ; [] |3066| 
	.dwpsn	file "../Source/prod.c",line 3067,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3067| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3067| 
        ; call occurs [#_shunt_switch] ; [] |3067| 
	.dwpsn	file "../Source/prod.c",line 3068,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3068| 
	.dwpsn	file "../Source/prod.c",line 3069,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3069| 
        ; branch occurs ; [] |3069| 
$C$L422:    
	.dwpsn	file "../Source/prod.c",line 3070,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3070| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3070| 
        ; call occurs [#_shunt_switch] ; [] |3070| 
	.dwpsn	file "../Source/prod.c",line 3071,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3071| 
        B         $C$L631,UNC           ; [CPU_] |3071| 
        ; branch occurs ; [] |3071| 
$C$L423:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3046| 
        B         $C$L425,LOS           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L425,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_atoi")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3046| 
        ; call occurs [#_atoi] ; [] |3046| 
        CMPB      AL,#4                 ; [CPU_] |3046| 
        B         $C$L425,GT            ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
        CMPB      AL,#0                 ; [CPU_] |3046| 
        B         $C$L425,LEQ           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
	.dwpsn	file "../Source/prod.c",line 3048,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3048| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3048| 
        ADD       ACC,AR5               ; [CPU_] |3048| 
        MOVL      XAR4,ACC              ; [CPU_] |3048| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3048| 
$C$L424:    
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3048| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3048| 
	.dwpsn	file "../Source/prod.c",line 3049,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3049| 
        ; branch occurs ; [] |3049| 
$C$L425:    
	.dwpsn	file "../Source/prod.c",line 3050,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3050| 
        B         $C$L424,UNC           ; [CPU_] |3050| 
        ; branch occurs ; [] |3050| 
$C$L426:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3085,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3085| 
        B         $C$L429,LOS           ; [CPU_] |3085| 
        ; branchcc occurs ; [] |3085| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L429,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3085,column 6,is_stmt,isa 0
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_atoi")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3085| 
        ; call occurs [#_atoi] ; [] |3085| 
        CMPB      AL,#2                 ; [CPU_] |3085| 
        B         $C$L429,GT            ; [CPU_] |3085| 
        ; branchcc occurs ; [] |3085| 
        CMPB      AL,#0                 ; [CPU_] |3085| 
        B         $C$L429,LEQ           ; [CPU_] |3085| 
        ; branchcc occurs ; [] |3085| 
	.dwpsn	file "../Source/prod.c",line 3087,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3087| 
        ADD       AR6,AL                ; [CPU_] |3087| 
        MOVL      XAR0,#78              ; [CPU_] |3087| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3087| 
        ADD       ACC,AR6               ; [CPU_] |3087| 
$C$L427:    
        MOVL      XAR1,ACC              ; [CPU_] |3087| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3087| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3087| 
        ; call occurs [#_ad7738_resettare] ; [] |3087| 
	.dwpsn	file "../Source/prod.c",line 3088,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3088| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3088| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3088| 
	.dwpsn	file "../Source/prod.c",line 3089,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3089| 
$C$L428:    
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3089| 
        ; call occurs [#_ad7738_resetvall] ; [] |3089| 
	.dwpsn	file "../Source/prod.c",line 3090,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3090| 
        ; branch occurs ; [] |3090| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 3091,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3091| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3091| 
        ; call occurs [#_ad7738_resettare] ; [] |3091| 
	.dwpsn	file "../Source/prod.c",line 3092,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3092| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3092| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3092| 
	.dwpsn	file "../Source/prod.c",line 3093,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3093| 
        B         $C$L428,UNC           ; [CPU_] |3093| 
        ; branch occurs ; [] |3093| 
$C$L430:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3077,column 6,is_stmt,isa 0
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_atoi")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3077| 
        ; call occurs [#_atoi] ; [] |3077| 
	.dwpsn	file "../Source/prod.c",line 3080,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3080| 
        MOV       *-SP[62],AL           ; [CPU_] |3080| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3080| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3080| 
	.dwpsn	file "../Source/prod.c",line 3081,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3081| 
        ; branch occurs ; [] |3081| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1028,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1028| 
        CMPB      AL,#76                ; [CPU_] |1028| 
        B         $C$L432,GT            ; [CPU_] |1028| 
        ; branchcc occurs ; [] |1028| 
        CMPB      AL,#76                ; [CPU_] |1028| 
        B         $C$L440,EQ            ; [CPU_] |1028| 
        ; branchcc occurs ; [] |1028| 
        CMPB      AL,#65                ; [CPU_] |1028| 
        B         $C$L433,EQ            ; [CPU_] |1028| 
        ; branchcc occurs ; [] |1028| 
        CMPB      AL,#68                ; [CPU_] |1028| 
        B         $C$L444,EQ            ; [CPU_] |1028| 
        ; branchcc occurs ; [] |1028| 
        B         $C$L625,UNC           ; [CPU_] |1028| 
        ; branch occurs ; [] |1028| 
$C$L432:    
        CMPB      AL,#79                ; [CPU_] |1028| 
        B         $C$L443,EQ            ; [CPU_] |1028| 
        ; branchcc occurs ; [] |1028| 
        CMPB      AL,#83                ; [CPU_] |1028| 
        B         $C$L441,EQ            ; [CPU_] |1028| 
        ; branchcc occurs ; [] |1028| 
        B         $C$L625,UNC           ; [CPU_] |1028| 
        ; branch occurs ; [] |1028| 
$C$L433:    
	.dwpsn	file "../Source/prod.c",line 1033,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1033| 
	.dwpsn	file "../Source/prod.c",line 1034,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1034| 
	.dwpsn	file "../Source/prod.c",line 1033,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1033| 
	.dwpsn	file "../Source/prod.c",line 1034,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1034| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1034| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1034| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1034| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1034| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1034| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1034| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1034| 
        MOVL      XAR4,XAR1             ; [CPU_] |1034| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_sprintf")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1034| 
        ; call occurs [#_sprintf] ; [] |1034| 
	.dwpsn	file "../Source/prod.c",line 1036,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1036| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_scia_puts")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1036| 
        ; call occurs [#_scia_puts] ; [] |1036| 
	.dwpsn	file "../Source/prod.c",line 1037,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1037| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1037| 
        LSR       AL,8                  ; [CPU_] |1037| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1037| 
        MOV       *-SP[3],AL            ; [CPU_] |1037| 
        IN        AL,*(04004H)          ; [CPU_] |1037| 
        MOVL      XAR4,XAR1             ; [CPU_] |1037| 
        ANDB      AL,#0xff              ; [CPU_] |1037| 
        MOV       *-SP[4],AL            ; [CPU_] |1037| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_sprintf")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1037| 
        ; call occurs [#_sprintf] ; [] |1037| 
	.dwpsn	file "../Source/prod.c",line 1039,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1039| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_scia_puts")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1039| 
        ; call occurs [#_scia_puts] ; [] |1039| 
	.dwpsn	file "../Source/prod.c",line 1040,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1040| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1040| 
        MOVL      XAR0,#44              ; [CPU_] |1040| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1040| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1040| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1040| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1040| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_sprintf")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1040| 
        ; call occurs [#_sprintf] ; [] |1040| 
        MOVL      XAR0,#44              ; [CPU_] |1040| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1040| 
	.dwpsn	file "../Source/prod.c",line 1041,column 6,is_stmt,isa 0
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_scia_puts")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1041| 
        ; call occurs [#_scia_puts] ; [] |1041| 
	.dwpsn	file "../Source/prod.c",line 1042,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1042| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1042| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1042| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1042| 
        MOVL      XAR0,#44              ; [CPU_] |1042| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1042| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1042| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_sprintf")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1042| 
        ; call occurs [#_sprintf] ; [] |1042| 
        MOVL      XAR0,#44              ; [CPU_] |1042| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1042| 
	.dwpsn	file "../Source/prod.c",line 1044,column 6,is_stmt,isa 0
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1044| 
        ; call occurs [#_scia_puts] ; [] |1044| 
	.dwpsn	file "../Source/prod.c",line 1046,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1046| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1046| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1046| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1046| 
        MOVL      XAR0,#72              ; [CPU_] |1046| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1046| 
        ADDL      ACC,XAR6              ; [CPU_] |1046| 
        MOVL      XAR4,ACC              ; [CPU_] |1046| 
        MOVL      XAR0,#44              ; [CPU_] |1046| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1046| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1046| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1046| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_sprintf")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1046| 
        ; call occurs [#_sprintf] ; [] |1046| 
        MOVL      XAR0,#44              ; [CPU_] |1046| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1046| 
	.dwpsn	file "../Source/prod.c",line 1048,column 6,is_stmt,isa 0
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_scia_puts")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1048| 
        ; call occurs [#_scia_puts] ; [] |1048| 
	.dwpsn	file "../Source/prod.c",line 1049,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1049| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1049| 
        B         $C$L434,EQ            ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
        MOVB      XAR0,#34              ; [CPU_] |1049| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1049| 
        CMPB      AL,#1                 ; [CPU_] |1049| 
        B         $C$L435,NEQ           ; [CPU_] |1049| 
        ; branchcc occurs ; [] |1049| 
$C$L434:    
	.dwpsn	file "../Source/prod.c",line 1051,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1051| 
        MOVL      XAR0,#74              ; [CPU_] |1051| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1051| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1051| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1051| 
        ADDL      ACC,XAR6              ; [CPU_] |1051| 
        MOVL      XAR4,ACC              ; [CPU_] |1051| 
        MOVL      XAR0,#44              ; [CPU_] |1051| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1051| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1051| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1051| 
        MOVL      XAR4,XAR1             ; [CPU_] |1051| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_sprintf")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1051| 
        ; call occurs [#_sprintf] ; [] |1051| 
        MOVL      XAR4,XAR1             ; [CPU_] |1051| 
	.dwpsn	file "../Source/prod.c",line 1053,column 7,is_stmt,isa 0
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1053| 
        ; call occurs [#_scia_puts] ; [] |1053| 
$C$L435:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1055,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1055| 
        B         $C$L436,NEQ           ; [CPU_] |1055| 
        ; branchcc occurs ; [] |1055| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1055| 
        B         $C$L437,UNC           ; [CPU_] |1055| 
        ; branch occurs ; [] |1055| 
$C$L436:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1055| 
$C$L437:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1055| 
        MOVL      XAR0,#44              ; [CPU_] |1055| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1055| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1055| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1055| 
        MOVL      XAR4,XAR1             ; [CPU_] |1055| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_sprintf")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1055| 
        ; call occurs [#_sprintf] ; [] |1055| 
        MOVL      XAR4,XAR1             ; [CPU_] |1055| 
	.dwpsn	file "../Source/prod.c",line 1057,column 6,is_stmt,isa 0
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_scia_puts")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1057| 
        ; call occurs [#_scia_puts] ; [] |1057| 
	.dwpsn	file "../Source/prod.c",line 1059,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1059| 
        MOVB      XAR0,#38              ; [CPU_] |1059| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1059| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1059| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1059| 
        MOVL      XAR0,#44              ; [CPU_] |1059| 
        MOV       *-SP[3],AL            ; [CPU_] |1059| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1059| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_sprintf")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1059| 
        ; call occurs [#_sprintf] ; [] |1059| 
        MOVL      XAR0,#44              ; [CPU_] |1059| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1059| 
	.dwpsn	file "../Source/prod.c",line 1061,column 6,is_stmt,isa 0
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_scia_puts")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1061| 
        ; call occurs [#_scia_puts] ; [] |1061| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1063,column 11,is_stmt,isa 0
        MOV       *-SP[62],#0           ; [CPU_] |1063| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1064,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1064| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1064| 
        ; call occurs [#_scia_puts] ; [] |1064| 
        MOV       AL,*-SP[62]           ; [CPU_] |1064| 
	.dwpsn	file "../Source/prod.c",line 1065,column 7,is_stmt,isa 0
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_print_channel")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1065| 
        ; call occurs [#_print_channel] ; [] |1065| 
	.dwpsn	file "../Source/prod.c",line 1066,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1066| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_print_sensor")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1066| 
        ; call occurs [#_print_sensor] ; [] |1066| 
	.dwpsn	file "../Source/prod.c",line 1063,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1063| 
        INC       *-SP[62]              ; [CPU_] |1063| 
        MOV       AL,*-SP[62]           ; [CPU_] |1063| 
        CMPB      AL,#4                 ; [CPU_] |1063| 
        B         $C$L438,LO            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
	.dwpsn	file "../Source/prod.c",line 1069,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1069| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_scia_puts")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1069| 
        ; call occurs [#_scia_puts] ; [] |1069| 
	.dwpsn	file "../Source/prod.c",line 1070,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1070| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1070| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1070| 
        MOVL      ACC,XAR4              ; [CPU_] |1070| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1070| 
        MOVL      XAR4,ACC              ; [CPU_] |1070| 
        MOVL      XAR0,#44              ; [CPU_] |1070| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1070| 
        MOV       *-SP[3],AL            ; [CPU_] |1070| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1070| 
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_sprintf")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1070| 
        ; call occurs [#_sprintf] ; [] |1070| 
        MOVL      XAR0,#44              ; [CPU_] |1070| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1070| 
	.dwpsn	file "../Source/prod.c",line 1072,column 6,is_stmt,isa 0
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_scia_puts")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1072| 
        ; call occurs [#_scia_puts] ; [] |1072| 
        MOVL      XAR0,#40              ; [CPU_] |1072| 
	.dwpsn	file "../Source/prod.c",line 1073,column 11,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |1073| 
	.dwpsn	file "../Source/prod.c",line 1072,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1072| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1074,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1074| 
        MOVB      AL,#65                ; [CPU_] |1074| 
        MOVL      XAR0,#44              ; [CPU_] |1074| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1074| 
        ADD       AL,*-SP[51]           ; [CPU_] |1074| 
        MOV       *-SP[3],AL            ; [CPU_] |1074| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1074| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1074| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1074| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_sprintf")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1074| 
        ; call occurs [#_sprintf] ; [] |1074| 
        MOVL      XAR0,#44              ; [CPU_] |1074| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1074| 
	.dwpsn	file "../Source/prod.c",line 1076,column 7,is_stmt,isa 0
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_scia_puts")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1076| 
        ; call occurs [#_scia_puts] ; [] |1076| 
	.dwpsn	file "../Source/prod.c",line 1073,column 18,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |1073| 
	.dwpsn	file "../Source/prod.c",line 1076,column 7,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |1076| 
	.dwpsn	file "../Source/prod.c",line 1073,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1073| 
        B         $C$L439,LT            ; [CPU_] |1073| 
        ; branchcc occurs ; [] |1073| 
	.dwpsn	file "../Source/prod.c",line 1078,column 6,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_print_vfd")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1078| 
        ; call occurs [#_print_vfd] ; [] |1078| 
	.dwpsn	file "../Source/prod.c",line 1079,column 6,is_stmt,isa 0
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_print_dac")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1079| 
        ; call occurs [#_print_dac] ; [] |1079| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1080,column 6,is_stmt,isa 0
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_print_limits")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1080| 
        ; call occurs [#_print_limits] ; [] |1080| 
	.dwpsn	file "../Source/prod.c",line 1081,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1081| 
        ; branch occurs ; [] |1081| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1085,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1085| 
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_scia_puts")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1085| 
        ; call occurs [#_scia_puts] ; [] |1085| 
	.dwpsn	file "../Source/prod.c",line 1087,column 11,is_stmt,isa 0
        MOV       *-SP[61],#0           ; [CPU_] |1087| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1088,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1088| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1088| 
        MOVL      XAR0,#44              ; [CPU_] |1088| 
        ADD       AL,*-SP[61]           ; [CPU_] |1088| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1088| 
        MOVZ      AR1,AL                ; [CPU_] |1088| 
        MOV       *-SP[3],AL            ; [CPU_] |1088| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1088| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_sprintf")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1088| 
        ; call occurs [#_sprintf] ; [] |1088| 
        MOVL      XAR0,#44              ; [CPU_] |1088| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1088| 
	.dwpsn	file "../Source/prod.c",line 1089,column 7,is_stmt,isa 0
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_scia_puts")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1089| 
        ; call occurs [#_scia_puts] ; [] |1089| 
        MOV       AL,*-SP[61]           ; [CPU_] |1089| 
	.dwpsn	file "../Source/prod.c",line 1090,column 7,is_stmt,isa 0
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_print_sensor")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1090| 
        ; call occurs [#_print_sensor] ; [] |1090| 
	.dwpsn	file "../Source/prod.c",line 1087,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1087| 
        MOV       *-SP[61],AR1          ; [CPU_] |1087| 
        CMPB      AL,#20                ; [CPU_] |1087| 
        B         $C$L442,LO            ; [CPU_] |1087| 
        ; branchcc occurs ; [] |1087| 
        B         $C$L632,UNC           ; [CPU_] |1087| 
        ; branch occurs ; [] |1087| 
$C$L443:    
	.dwpsn	file "../Source/prod.c",line 1101,column 6,is_stmt,isa 0
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_print_dac")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1101| 
        ; call occurs [#_print_dac] ; [] |1101| 
	.dwpsn	file "../Source/prod.c",line 1102,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1102| 
        ; branch occurs ; [] |1102| 
$C$L444:    
	.dwpsn	file "../Source/prod.c",line 1096,column 6,is_stmt,isa 0
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_print_vfd")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1096| 
        ; call occurs [#_print_vfd] ; [] |1096| 
	.dwpsn	file "../Source/prod.c",line 1097,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1097| 
        ; branch occurs ; [] |1097| 
$C$L445:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2645,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2645| 
        B         $C$L625,LO            ; [CPU_] |2645| 
        ; branchcc occurs ; [] |2645| 
	.dwpsn	file "../Source/prod.c",line 2648,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2648| 
        CMPB      AL,#68                ; [CPU_] |2648| 
        B         $C$L446,EQ            ; [CPU_] |2648| 
        ; branchcc occurs ; [] |2648| 
        CMPB      AL,#83                ; [CPU_] |2648| 
        B         $C$L452,EQ            ; [CPU_] |2648| 
        ; branchcc occurs ; [] |2648| 
        B         $C$L625,UNC           ; [CPU_] |2648| 
        ; branch occurs ; [] |2648| 
$C$L446:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2766,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2766| 
        B         $C$L625,LO            ; [CPU_] |2766| 
        ; branchcc occurs ; [] |2766| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2770,column 6,is_stmt,isa 0
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_atoi")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2770| 
        ; call occurs [#_atoi] ; [] |2770| 
        MOV       *-SP[61],AL           ; [CPU_] |2770| 
	.dwpsn	file "../Source/prod.c",line 2772,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2772| 
        CMPB      AL,#4                 ; [CPU_] |2772| 
        B         $C$L625,HIS           ; [CPU_] |2772| 
        ; branchcc occurs ; [] |2772| 
	.dwpsn	file "../Source/prod.c",line 2778,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2778| 
        MOV       *-SP[61],AL           ; [CPU_] |2778| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2778| 
        MOV       T,AL                  ; [CPU_] |2778| 
        MOVB      AL,#12                ; [CPU_] |2778| 
        MPYU      ACC,T,AL              ; [CPU_] |2778| 
        ADDL      ACC,XAR6              ; [CPU_] |2778| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2778| 
        MOVL      XAR1,ACC              ; [CPU_] |2778| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2778| 
        CMPB      AL,#7                 ; [CPU_] |2778| 
        B         $C$L625,NEQ           ; [CPU_] |2778| 
        ; branchcc occurs ; [] |2778| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_strtod")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2782,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2782| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2784,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2784| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2784| 
        MOVL      ACC,XAR6              ; [CPU_] |2784| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2784| 
        ; call occurs [#FS$$CMP] ; [] |2784| 
        CMPB      AL,#0                 ; [CPU_] |2784| 
        B         $C$L625,LT            ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
        MOV       AL,#0                 ; [CPU_] |2784| 
        MOV       AH,#16672             ; [CPU_] |2784| 
        MOVL      XAR0,#88              ; [CPU_] |2784| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2784| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2784| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2784| 
        ; call occurs [#FS$$CMP] ; [] |2784| 
        CMPB      AL,#0                 ; [CPU_] |2784| 
        B         $C$L625,GT            ; [CPU_] |2784| 
        ; branchcc occurs ; [] |2784| 
	.dwpsn	file "../Source/prod.c",line 2790,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2790| 
        MOV       AH,#0                 ; [CPU_] |2790| 
        MOVL      XAR0,#88              ; [CPU_] |2790| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2790| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2790| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2790| 
        ; call occurs [#FS$$CMP] ; [] |2790| 
        CMPB      AL,#0                 ; [CPU_] |2790| 
        B         $C$L447,GEQ           ; [CPU_] |2790| 
        ; branchcc occurs ; [] |2790| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2790| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2790| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2790| 
        B         $C$L448,UNC           ; [CPU_] |2790| 
        ; branch occurs ; [] |2790| 
$C$L447:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2790| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2790| 
$C$L448:    
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2790| 
        ; call occurs [#FS$$MPY] ; [] |2790| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2790| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2790| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2790| 
        ; call occurs [#FS$$ADD] ; [] |2790| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2790| 
        ; call occurs [#FS$$TOLL] ; [] |2790| 
	.dwpsn	file "../Source/prod.c",line 2797,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2797| 
	.dwpsn	file "../Source/prod.c",line 2790,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2790| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2790| 
	.dwpsn	file "../Source/prod.c",line 2797,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2797| 
        CMP64     ACC:P                 ; [CPU_] |2797| 
        B         $C$L450,LEQ           ; [CPU_] |2797| 
        ; branchcc occurs ; [] |2797| 
	.dwpsn	file "../Source/prod.c",line 2799,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2799| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2799| 
        MOV       *-SP[2],#0            ; [CPU_] |2799| 
        MOV       *-SP[1],#0            ; [CPU_] |2799| 
        MOVL      P,*-SP[32]            ; [CPU_] |2799| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2799| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$941, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2799| 
        ; call occurs [#LL$$CMP] ; [] |2799| 
        CMPB      AL,#0                 ; [CPU_] |2799| 
        B         $C$L449,GEQ           ; [CPU_] |2799| 
        ; branchcc occurs ; [] |2799| 
	.dwpsn	file "../Source/prod.c",line 2802,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2802| 
        MOV       *-SP[35],AL           ; [CPU_] |2802| 
        B         $C$L451,UNC           ; [CPU_] |2802| 
        ; branch occurs ; [] |2802| 
$C$L449:    
	.dwpsn	file "../Source/prod.c",line 2800,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2800| 
	.dwpsn	file "../Source/prod.c",line 2801,column 6,is_stmt,isa 0
        B         $C$L451,UNC           ; [CPU_] |2801| 
        ; branch occurs ; [] |2801| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2798,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2798| 
$C$L451:    
        MOV       AH,*-SP[61]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2805,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2805| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2805| 
        ; call occurs [#_mcbsp_xmit] ; [] |2805| 
	.dwpsn	file "../Source/prod.c",line 2806,column 6,is_stmt,isa 0
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_latch_dac")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2806| 
        ; call occurs [#_latch_dac] ; [] |2806| 
	.dwpsn	file "../Source/prod.c",line 2808,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2808| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2808| 
        MOVL      XAR0,#44              ; [CPU_] |2808| 
        ADD       AL,*-SP[61]           ; [CPU_] |2808| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2808| 
        MOV       *-SP[3],AL            ; [CPU_] |2808| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2808| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2808| 
        MOV       AL,*-SP[35]           ; [CPU_] |2808| 
        MOV       *-SP[7],AL            ; [CPU_] |2808| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2808| 
        MOVL      XAR4,XAR1             ; [CPU_] |2808| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_sprintf")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2808| 
        ; call occurs [#_sprintf] ; [] |2808| 
        MOVL      XAR4,XAR1             ; [CPU_] |2808| 
	.dwpsn	file "../Source/prod.c",line 2812,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2812| 
        ; branch occurs ; [] |2812| 
$C$L452:    
	.dwpsn	file "../Source/prod.c",line 2655,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2655| 
        MOVL      XAR0,#44              ; [CPU_] |2655| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2655| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2655| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2655| 
        MOVL      XAR4,XAR1             ; [CPU_] |2655| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_sprintf")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2655| 
        ; call occurs [#_sprintf] ; [] |2655| 
	.dwpsn	file "../Source/prod.c",line 2656,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2656| 
	.dwpsn	file "../Source/prod.c",line 2655,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2655| 
	.dwpsn	file "../Source/prod.c",line 2656,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2656| 
        MOV       AL,#1024              ; [CPU_] |2656| 
        MOVL      XAR5,XAR1             ; [CPU_] |2656| 
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2656| 
        ; call occurs [#_scia_getparam] ; [] |2656| 
	.dwpsn	file "../Source/prod.c",line 2657,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2657| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_atoi")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2657| 
        ; call occurs [#_atoi] ; [] |2657| 
        MOV       *-SP[61],AL           ; [CPU_] |2657| 
	.dwpsn	file "../Source/prod.c",line 2658,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2658| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_scia_puts")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2658| 
        ; call occurs [#_scia_puts] ; [] |2658| 
        MOV       AL,*-SP[61]           ; [CPU_] |2658| 
	.dwpsn	file "../Source/prod.c",line 2660,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2660| 
        CMPB      AL,#4                 ; [CPU_] |2660| 
        B         $C$L467,HIS           ; [CPU_] |2660| 
        ; branchcc occurs ; [] |2660| 
	.dwpsn	file "../Source/prod.c",line 2664,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2664| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_scia_puts")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2664| 
        ; call occurs [#_scia_puts] ; [] |2664| 
        MOVL      XAR0,#62              ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2668,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2668| 
	.dwpsn	file "../Source/prod.c",line 2664,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2664| 
	.dwpsn	file "../Source/prod.c",line 2668,column 11,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |2668| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2669,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2669| 
        MOVL      XAR0,#44              ; [CPU_] |2669| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2669| 
        MOV       *-SP[3],AL            ; [CPU_] |2669| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2669| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2669| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2669| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_sprintf")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2669| 
        ; call occurs [#_sprintf] ; [] |2669| 
        MOVL      XAR0,#44              ; [CPU_] |2669| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2670,column 7,is_stmt,isa 0
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_scia_puts")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2670| 
        ; call occurs [#_scia_puts] ; [] |2670| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2671| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_puts")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2671| 
        ; call occurs [#_scia_puts] ; [] |2671| 
	.dwpsn	file "../Source/prod.c",line 2668,column 18,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |2668| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2668,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2668| 
        B         $C$L453,LT            ; [CPU_] |2668| 
        ; branchcc occurs ; [] |2668| 
	.dwpsn	file "../Source/prod.c",line 2674,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2674| 
        MOVB      XAR0,#14              ; [CPU_] |2674| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2674| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2674| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2674| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2674| 
        MOVL      XAR0,#44              ; [CPU_] |2674| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2674| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2674| 
        MOVL      XAR4,XAR1             ; [CPU_] |2674| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_sprintf")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2674| 
        ; call occurs [#_sprintf] ; [] |2674| 
	.dwpsn	file "../Source/prod.c",line 2675,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2675| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2675| 
        ; call occurs [#_scia_puts] ; [] |2675| 
	.dwpsn	file "../Source/prod.c",line 2676,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2676| 
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2676| 
        ; call occurs [#_scia_puts] ; [] |2676| 
	.dwpsn	file "../Source/prod.c",line 2677,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2677| 
	.dwpsn	file "../Source/prod.c",line 2676,column 6,is_stmt,isa 0
        MOV       AH,*-SP[61]           ; [CPU_] |2676| 
	.dwpsn	file "../Source/prod.c",line 2677,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2677| 
        DEC       *-SP[61]              ; [CPU_] |2677| 
        MOV       *-SP[51],AH           ; [CPU_] |2677| 
        MOV       *-SP[3],AH            ; [CPU_] |2677| 
        MOVL      XAR4,XAR1             ; [CPU_] |2677| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_sprintf")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2677| 
        ; call occurs [#_sprintf] ; [] |2677| 
	.dwpsn	file "../Source/prod.c",line 2679,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2679| 
        MOVL      XAR4,XAR1             ; [CPU_] |2679| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2679| 
        MOV       AL,#1024              ; [CPU_] |2679| 
        MOVL      XAR5,XAR1             ; [CPU_] |2679| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2679| 
        ; call occurs [#_scia_getparam] ; [] |2679| 
        MOVL      XAR4,XAR1             ; [CPU_] |2679| 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_atoi")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2680| 
        ; call occurs [#_atoi] ; [] |2680| 
	.dwpsn	file "../Source/prod.c",line 2673,column 6,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |2680| 
	.dwpsn	file "../Source/prod.c",line 2673,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#7          ; [CPU_] |2673| 
        MOV       AL,*-SP[63]           ; [CPU_] |2673| 
	.dwpsn	file "../Source/prod.c",line 2681,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2681| 
        B         $C$L454,LO            ; [CPU_] |2681| 
        ; branchcc occurs ; [] |2681| 
        CMPB      AL,#7                 ; [CPU_] |2681| 
        B         $C$L454,EQ            ; [CPU_] |2681| 
        ; branchcc occurs ; [] |2681| 
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2683| 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_scia_puts")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2683| 
        ; call occurs [#_scia_puts] ; [] |2683| 
	.dwpsn	file "../Source/prod.c",line 2682,column 7,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |2682| 
$C$L454:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2686,column 6,is_stmt,isa 0
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_scia_puts")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2686| 
        ; call occurs [#_scia_puts] ; [] |2686| 
	.dwpsn	file "../Source/prod.c",line 2687,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2687| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2687| 
        ; call occurs [#_scia_puts] ; [] |2687| 
	.dwpsn	file "../Source/prod.c",line 2688,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2688| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2688| 
        MOVB      AL,#12                ; [CPU_] |2688| 
        MOV       T,*-SP[61]            ; [CPU_] |2688| 
        MPYU      ACC,T,AL              ; [CPU_] |2688| 
        ADDL      ACC,XAR6              ; [CPU_] |2688| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2688| 
        MOVL      XAR1,ACC              ; [CPU_] |2688| 
        MOV       AL,*-SP[63]           ; [CPU_] |2688| 
	.dwpsn	file "../Source/prod.c",line 2690,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2690| 
	.dwpsn	file "../Source/prod.c",line 2688,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2688| 
	.dwpsn	file "../Source/prod.c",line 2690,column 6,is_stmt,isa 0
        B         $C$L461,EQ            ; [CPU_] |2690| 
        ; branchcc occurs ; [] |2690| 
	.dwpsn	file "../Source/prod.c",line 2692,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2692| 
        B         $C$L456,EQ            ; [CPU_] |2692| 
        ; branchcc occurs ; [] |2692| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2692| 
        B         $C$L456,EQ            ; [CPU_] |2692| 
        ; branchcc occurs ; [] |2692| 
	.dwpsn	file "../Source/prod.c",line 2695,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2695| 
        B         $C$L455,EQ            ; [CPU_] |2695| 
        ; branchcc occurs ; [] |2695| 
        CMPB      AL,#4                 ; [CPU_] |2695| 
        B         $C$L457,NEQ           ; [CPU_] |2695| 
        ; branchcc occurs ; [] |2695| 
$C$L455:    
	.dwpsn	file "../Source/prod.c",line 2696,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2696| 
        MOV       *+FP[AR0],#2          ; [CPU_] |2696| 
        B         $C$L457,UNC           ; [CPU_] |2696| 
        ; branch occurs ; [] |2696| 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2694,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2694| 
        MOV       *+FP[AR0],#4          ; [CPU_] |2694| 
$C$L457:    
        MOVL      XAR0,#92              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOV       *-SP[52],AL           ; [CPU_] 
$C$L458:    
	.dwpsn	file "../Source/prod.c",line 2701,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2701| 
        MOVL      XAR0,#92              ; [CPU_] |2701| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2701| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2701| 
        MOVL      XAR0,#44              ; [CPU_] |2701| 
        MOV       *-SP[3],AL            ; [CPU_] |2701| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2701| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_sprintf")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2701| 
        ; call occurs [#_sprintf] ; [] |2701| 
        MOVL      XAR0,#44              ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2702,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2701,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2702,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2702| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2702| 
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2702| 
        ; call occurs [#_scia_getparam] ; [] |2702| 
        MOVL      XAR0,#86              ; [CPU_] |2702| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2703,column 8,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_atoi")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2703| 
        ; call occurs [#_atoi] ; [] |2703| 
        MOVL      XAR0,#86              ; [CPU_] |2703| 
        MOV       *-SP[62],AL           ; [CPU_] |2703| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2703| 
	.dwpsn	file "../Source/prod.c",line 2704,column 8,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_scia_puts")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2704| 
        ; call occurs [#_scia_puts] ; [] |2704| 
        MOV       AL,*-SP[62]           ; [CPU_] |2704| 
	.dwpsn	file "../Source/prod.c",line 2706,column 9,is_stmt,isa 0
        B         $C$L466,EQ            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[62]           ; [CPU_] |2706| 
        B         $C$L466,LO            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
	.dwpsn	file "../Source/prod.c",line 2710,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2710| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_scia_puts")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2710| 
        ; call occurs [#_scia_puts] ; [] |2710| 
	.dwpsn	file "../Source/prod.c",line 2712,column 7,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |2712| 
	.dwpsn	file "../Source/prod.c",line 2710,column 7,is_stmt,isa 0
        MOV       AL,*-SP[62]           ; [CPU_] |2710| 
	.dwpsn	file "../Source/prod.c",line 2712,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2712| 
        MOV       AL,*-SP[63]           ; [CPU_] |2712| 
	.dwpsn	file "../Source/prod.c",line 2715,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2715| 
        B         $C$L459,EQ            ; [CPU_] |2715| 
        ; branchcc occurs ; [] |2715| 
        CMPB      AL,#4                 ; [CPU_] |2715| 
        B         $C$L461,NEQ           ; [CPU_] |2715| 
        ; branchcc occurs ; [] |2715| 
	.dwpsn	file "../Source/prod.c",line 2720,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2720| 
        B         $C$L460,UNC           ; [CPU_] |2720| 
        ; branch occurs ; [] |2720| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2718,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2718| 
$C$L460:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2718| 
        MOVL      XAR0,#44              ; [CPU_] |2718| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2718| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_sprintf")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2718| 
        ; call occurs [#_sprintf] ; [] |2718| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2722| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2722| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2722| 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2722| 
        ; call occurs [#_scia_getparam] ; [] |2722| 
        MOVL      XAR0,#86              ; [CPU_] |2722| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2722| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_strtod")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2723,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2723| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2723| 
        MOVL      XAR0,#86              ; [CPU_] |2723| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2724,column 8,is_stmt,isa 0
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_scia_puts")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2724| 
        ; call occurs [#_scia_puts] ; [] |2724| 
	.dwpsn	file "../Source/prod.c",line 2725,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2725| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_puts")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2725| 
        ; call occurs [#_scia_puts] ; [] |2725| 
	.dwpsn	file "../Source/prod.c",line 2728,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2728| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2728| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2728| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2728| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_sprintf")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2728| 
        ; call occurs [#_sprintf] ; [] |2728| 
        MOVL      XAR0,#44              ; [CPU_] |2728| 
	.dwpsn	file "../Source/prod.c",line 2729,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2729| 
	.dwpsn	file "../Source/prod.c",line 2728,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2728| 
	.dwpsn	file "../Source/prod.c",line 2729,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2729| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2729| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2729| 
        ; call occurs [#_scia_getparam] ; [] |2729| 
        MOVL      XAR0,#86              ; [CPU_] |2729| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2729,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2729| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_strtod")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2730,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2730| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2730| 
        MOVL      XAR0,#86              ; [CPU_] |2730| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2730| 
	.dwpsn	file "../Source/prod.c",line 2731,column 8,is_stmt,isa 0
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_scia_puts")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2731| 
        ; call occurs [#_scia_puts] ; [] |2731| 
	.dwpsn	file "../Source/prod.c",line 2732,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2732| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_scia_puts")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2732| 
        ; call occurs [#_scia_puts] ; [] |2732| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2739,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2739| 
        MOV       AL,*-SP[51]           ; [CPU_] |2739| 
        MOVL      XAR0,#62              ; [CPU_] |2739| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2739| 
        MOV       *-SP[3],AL            ; [CPU_] |2739| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2739| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[63]           ; [CPU_] |2739| 
        MOV       ACC,AL << 1           ; [CPU_] |2739| 
        ADDL      ACC,XAR6              ; [CPU_] |2739| 
        MOVL      XAR4,ACC              ; [CPU_] |2739| 
        MOVL      XAR0,#44              ; [CPU_] |2739| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2739| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_sprintf")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2739| 
        ; call occurs [#_sprintf] ; [] |2739| 
        MOVL      XAR0,#44              ; [CPU_] |2739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2741,column 6,is_stmt,isa 0
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_scia_puts")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2741| 
        ; call occurs [#_scia_puts] ; [] |2741| 
	.dwpsn	file "../Source/prod.c",line 2736,column 6,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |2736| 
        MOV       AL,*-SP[63]           ; [CPU_] |2736| 
	.dwpsn	file "../Source/prod.c",line 2743,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2743| 
        B         $C$L463,EQ            ; [CPU_] |2743| 
        ; branchcc occurs ; [] |2743| 
	.dwpsn	file "../Source/prod.c",line 2746,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2746| 
        MOVB      AL,#1                 ; [CPU_] |2746| 
        MOVL      XAR0,#44              ; [CPU_] |2746| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2746| 
        ADD       AL,*-SP[62]           ; [CPU_] |2746| 
        MOV       *-SP[3],AL            ; [CPU_] |2746| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2746| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_sprintf")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2746| 
        ; call occurs [#_sprintf] ; [] |2746| 
        MOVL      XAR0,#44              ; [CPU_] |2746| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2746| 
	.dwpsn	file "../Source/prod.c",line 2747,column 7,is_stmt,isa 0
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2747| 
        ; call occurs [#_scia_puts] ; [] |2747| 
        MOV       AL,*-SP[63]           ; [CPU_] |2747| 
	.dwpsn	file "../Source/prod.c",line 2749,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2749| 
        B         $C$L462,EQ            ; [CPU_] |2749| 
        ; branchcc occurs ; [] |2749| 
        CMPB      AL,#4                 ; [CPU_] |2749| 
        B         $C$L465,NEQ           ; [CPU_] |2749| 
        ; branchcc occurs ; [] |2749| 
$C$L462:    
	.dwpsn	file "../Source/prod.c",line 2750,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2750| 
        MOVB      XAR0,#8               ; [CPU_] |2750| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2750| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2750| 
        MOVB      XAR0,#10              ; [CPU_] |2750| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2750| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2750| 
        MOVL      XAR0,#44              ; [CPU_] |2750| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2750| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2750| 
        MOVL      XAR4,XAR1             ; [CPU_] |2750| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_sprintf")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2750| 
        ; call occurs [#_sprintf] ; [] |2750| 
        MOVL      XAR4,XAR1             ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2753,column 8,is_stmt,isa 0
        B         $C$L464,UNC           ; [CPU_] |2753| 
        ; branch occurs ; [] |2753| 
$C$L463:    
	.dwpsn	file "../Source/prod.c",line 2744,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2744| 
$C$L464:    
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_puts")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2744| 
        ; call occurs [#_scia_puts] ; [] |2744| 
$C$L465:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2758,column 6,is_stmt,isa 0
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2758| 
        ; call occurs [#_ad7738_setcal] ; [] |2758| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2760,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2760| 
        ; branch occurs ; [] |2760| 
$C$L466:    
	.dwpsn	file "../Source/prod.c",line 2708,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2708| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2708| 
        ; call occurs [#_scia_puts] ; [] |2708| 
	.dwpsn	file "../Source/prod.c",line 2700,column 7,is_stmt,isa 0
        B         $C$L458,UNC           ; [CPU_] |2700| 
        ; branch occurs ; [] |2700| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2662| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2662| 
        ; call occurs [#_scia_puts] ; [] |2662| 
	.dwpsn	file "../Source/prod.c",line 2654,column 6,is_stmt,isa 0
        B         $C$L452,UNC           ; [CPU_] |2654| 
        ; branch occurs ; [] |2654| 
$C$L468:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2826,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2826| 
        B         $C$L625,LO            ; [CPU_] |2826| 
        ; branchcc occurs ; [] |2826| 
	.dwpsn	file "../Source/prod.c",line 2829,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2829| 
        CMPB      AL,#83                ; [CPU_] |2829| 
        B         $C$L625,NEQ           ; [CPU_] |2829| 
        ; branchcc occurs ; [] |2829| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2836,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2836| 
        MOVL      XAR0,#44              ; [CPU_] |2836| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2836| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2836| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2836| 
        MOVL      XAR4,XAR1             ; [CPU_] |2836| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_sprintf")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2836| 
        ; call occurs [#_sprintf] ; [] |2836| 
	.dwpsn	file "../Source/prod.c",line 2837,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2837| 
	.dwpsn	file "../Source/prod.c",line 2836,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2836| 
	.dwpsn	file "../Source/prod.c",line 2837,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2837| 
        MOV       AL,#1024              ; [CPU_] |2837| 
        MOVL      XAR5,XAR1             ; [CPU_] |2837| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2837| 
        ; call occurs [#_scia_getparam] ; [] |2837| 
	.dwpsn	file "../Source/prod.c",line 2838,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2838| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_atoi")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2838| 
        ; call occurs [#_atoi] ; [] |2838| 
        MOV       *-SP[61],AL           ; [CPU_] |2838| 
	.dwpsn	file "../Source/prod.c",line 2839,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2839| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2839| 
        ; call occurs [#_scia_puts] ; [] |2839| 
        MOV       AL,*-SP[61]           ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2841,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2841| 
        CMPB      AL,#4                 ; [CPU_] |2841| 
        B         $C$L495,HIS           ; [CPU_] |2841| 
        ; branchcc occurs ; [] |2841| 
	.dwpsn	file "../Source/prod.c",line 2845,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2845| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_scia_puts")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2845| 
        ; call occurs [#_scia_puts] ; [] |2845| 
        MOVZ      AR1,*-SP[61]          ; [CPU_] |2845| 
	.dwpsn	file "../Source/prod.c",line 2848,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2848| 
        MOVL      XAR0,#44              ; [CPU_] |2848| 
        DEC       *-SP[61]              ; [CPU_] |2848| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2848| 
        MOV       *-SP[51],AR1          ; [CPU_] |2848| 
        MOV       *-SP[3],AR1           ; [CPU_] |2848| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2848| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_sprintf")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2848| 
        ; call occurs [#_sprintf] ; [] |2848| 
        MOVL      XAR0,#44              ; [CPU_] |2848| 
	.dwpsn	file "../Source/prod.c",line 2849,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2849| 
	.dwpsn	file "../Source/prod.c",line 2848,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2848| 
	.dwpsn	file "../Source/prod.c",line 2849,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2849| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2849| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2849| 
        ; call occurs [#_scia_getparam] ; [] |2849| 
        MOVL      XAR0,#86              ; [CPU_] |2849| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2849| 
	.dwpsn	file "../Source/prod.c",line 2850,column 6,is_stmt,isa 0
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2850| 
        ; call occurs [#_scia_puts] ; [] |2850| 
	.dwpsn	file "../Source/prod.c",line 2851,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2851| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_scia_puts")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2851| 
        ; call occurs [#_scia_puts] ; [] |2851| 
        MOVL      XAR0,#86              ; [CPU_] |2851| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2851| 
	.dwpsn	file "../Source/prod.c",line 2853,column 6,is_stmt,isa 0
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_atoi")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2853| 
        ; call occurs [#_atoi] ; [] |2853| 
        CMPB      AL,#1                 ; [CPU_] |2853| 
        B         $C$L470,EQ            ; [CPU_] |2853| 
        ; branchcc occurs ; [] |2853| 
	.dwpsn	file "../Source/prod.c",line 3002,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3002| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3002| 
        MOV       AL,*-SP[61]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3002| 
        ADDL      ACC,XAR6              ; [CPU_] |3002| 
        ADD       ACC,#199 << 4         ; [CPU_] |3002| 
        MOVL      XAR4,ACC              ; [CPU_] |3002| 
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3003| 
	.dwpsn	file "../Source/prod.c",line 3002,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3002| 
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3003| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3003| 
        MOV       *-SP[3],AR1           ; [CPU_] |3003| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3003| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_sprintf")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3003| 
        ; call occurs [#_sprintf] ; [] |3003| 
        B         $C$L409,UNC           ; [CPU_] |3003| 
        ; branch occurs ; [] |3003| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2856,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2856| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2856| 
        MOV       AL,*-SP[61]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2856| 
        ADDL      ACC,XAR6              ; [CPU_] |2856| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2856| 
        MOVL      XAR1,ACC              ; [CPU_] |2856| 
        MOVL      XAR0,#62              ; [CPU_] |2856| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2856| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2856| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2859,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2859| 
        MOVL      XAR0,#92              ; [CPU_] |2859| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2859| 
$C$L471:    
	.dwpsn	file "../Source/prod.c",line 2860,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2860| 
        MOVL      XAR0,#88              ; [CPU_] |2860| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2860| 
        MOV       *-SP[3],AL            ; [CPU_] |2860| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2860| 
        MOVL      XAR0,#88              ; [CPU_] |2860| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2860| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2860| 
        MOVL      XAR0,#44              ; [CPU_] |2860| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2860| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2860| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_sprintf")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2860| 
        ; call occurs [#_sprintf] ; [] |2860| 
        MOVL      XAR0,#44              ; [CPU_] |2860| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2860| 
	.dwpsn	file "../Source/prod.c",line 2861,column 8,is_stmt,isa 0
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2861| 
        ; call occurs [#_scia_puts] ; [] |2861| 
        MOVL      XAR0,#92              ; [CPU_] |2861| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2861| 
	.dwpsn	file "../Source/prod.c",line 2862,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2862| 
        B         $C$L472,GEQ           ; [CPU_] |2862| 
        ; branchcc occurs ; [] |2862| 
	.dwpsn	file "../Source/prod.c",line 2863,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2863| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_scia_puts")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2863| 
        ; call occurs [#_scia_puts] ; [] |2863| 
$C$L472:    
        MOVL      XAR0,#92              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2859,column 19,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2859| 
        ADDB      AL,#1                 ; [CPU_] |2859| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2859| 
        CMPB      AL,#5                 ; [CPU_] |2859| 
        B         $C$L471,LT            ; [CPU_] |2859| 
        ; branchcc occurs ; [] |2859| 
	.dwpsn	file "../Source/prod.c",line 2866,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2866| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2866| 
        ; call occurs [#_scia_puts] ; [] |2866| 
	.dwpsn	file "../Source/prod.c",line 2867,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2867| 
        MOVL      XAR0,#44              ; [CPU_] |2867| 
        MOV       AL,*-SP[51]           ; [CPU_] |2867| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2867| 
        MOV       *-SP[3],AL            ; [CPU_] |2867| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2867| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_sprintf")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2867| 
        ; call occurs [#_sprintf] ; [] |2867| 
        MOVL      XAR0,#44              ; [CPU_] |2867| 
	.dwpsn	file "../Source/prod.c",line 2870,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2870| 
	.dwpsn	file "../Source/prod.c",line 2867,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2867| 
	.dwpsn	file "../Source/prod.c",line 2870,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2870| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2870| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2870| 
        ; call occurs [#_scia_getparam] ; [] |2870| 
        MOVL      XAR0,#86              ; [CPU_] |2870| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2870| 
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_atoi")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2871| 
        ; call occurs [#_atoi] ; [] |2871| 
        MOV       *-SP[63],AL           ; [CPU_] |2871| 
        CMPB      AL,#5                 ; [CPU_] |2871| 
        B         $C$L473,LO            ; [CPU_] |2871| 
        ; branchcc occurs ; [] |2871| 
	.dwpsn	file "../Source/prod.c",line 2874,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2874| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2874| 
        ; call occurs [#_scia_puts] ; [] |2874| 
	.dwpsn	file "../Source/prod.c",line 2873,column 8,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |2873| 
$C$L473:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2877,column 7,is_stmt,isa 0
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2877| 
        ; call occurs [#_scia_puts] ; [] |2877| 
	.dwpsn	file "../Source/prod.c",line 2878,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2878| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2878| 
        ; call occurs [#_scia_puts] ; [] |2878| 
        MOV       AL,*-SP[63]           ; [CPU_] |2878| 
	.dwpsn	file "../Source/prod.c",line 2879,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2879| 
	.dwpsn	file "../Source/prod.c",line 2881,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2881| 
        B         $C$L475,EQ            ; [CPU_] |2881| 
        ; branchcc occurs ; [] |2881| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2881| 
        B         $C$L475,EQ            ; [CPU_] |2881| 
        ; branchcc occurs ; [] |2881| 
	.dwpsn	file "../Source/prod.c",line 2884,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2884| 
        B         $C$L474,EQ            ; [CPU_] |2884| 
        ; branchcc occurs ; [] |2884| 
        CMPB      AL,#4                 ; [CPU_] |2884| 
        B         $C$L476,NEQ           ; [CPU_] |2884| 
        ; branchcc occurs ; [] |2884| 
$C$L474:    
	.dwpsn	file "../Source/prod.c",line 2885,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2885| 
        MOV       *+FP[AR0],#2          ; [CPU_] |2885| 
        B         $C$L476,UNC           ; [CPU_] |2885| 
        ; branch occurs ; [] |2885| 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2883,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2883| 
        MOV       *+FP[AR0],#4          ; [CPU_] |2883| 
$C$L476:    
        MOVL      XAR0,#92              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOV       *-SP[52],AL           ; [CPU_] 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2890,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2890| 
        MOVL      XAR0,#92              ; [CPU_] |2890| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2890| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2890| 
        MOVL      XAR0,#44              ; [CPU_] |2890| 
        MOV       *-SP[3],AL            ; [CPU_] |2890| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2890| 
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_sprintf")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2890| 
        ; call occurs [#_sprintf] ; [] |2890| 
        MOVL      XAR0,#44              ; [CPU_] |2890| 
	.dwpsn	file "../Source/prod.c",line 2891,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2891| 
	.dwpsn	file "../Source/prod.c",line 2890,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2890| 
	.dwpsn	file "../Source/prod.c",line 2891,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2891| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2891| 
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2891| 
        ; call occurs [#_scia_getparam] ; [] |2891| 
        MOVL      XAR0,#86              ; [CPU_] |2891| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2891| 
	.dwpsn	file "../Source/prod.c",line 2892,column 8,is_stmt,isa 0
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_atoi")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2892| 
        ; call occurs [#_atoi] ; [] |2892| 
        MOVL      XAR0,#86              ; [CPU_] |2892| 
        MOV       *-SP[62],AL           ; [CPU_] |2892| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2892| 
	.dwpsn	file "../Source/prod.c",line 2893,column 8,is_stmt,isa 0
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2893| 
        ; call occurs [#_scia_puts] ; [] |2893| 
        MOV       AL,*-SP[62]           ; [CPU_] |2893| 
	.dwpsn	file "../Source/prod.c",line 2895,column 9,is_stmt,isa 0
        B         $C$L494,EQ            ; [CPU_] |2895| 
        ; branchcc occurs ; [] |2895| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[62]           ; [CPU_] |2895| 
        B         $C$L494,LO            ; [CPU_] |2895| 
        ; branchcc occurs ; [] |2895| 
	.dwpsn	file "../Source/prod.c",line 2899,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2899| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2899| 
        ; call occurs [#_scia_puts] ; [] |2899| 
	.dwpsn	file "../Source/prod.c",line 2901,column 7,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |2901| 
	.dwpsn	file "../Source/prod.c",line 2904,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2899,column 7,is_stmt,isa 0
        MOV       AL,*-SP[62]           ; [CPU_] |2899| 
	.dwpsn	file "../Source/prod.c",line 2904,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2904| 
	.dwpsn	file "../Source/prod.c",line 2901,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2901| 
	.dwpsn	file "../Source/prod.c",line 2904,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2904| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2904| 
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2904| 
        ; call occurs [#_scia_getparam] ; [] |2904| 
        MOVL      XAR0,#86              ; [CPU_] |2904| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2907| 
        ; call occurs [#_scia_puts] ; [] |2907| 
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2908| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2908| 
        ; call occurs [#_scia_puts] ; [] |2908| 
        MOVL      XAR0,#86              ; [CPU_] |2908| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2908| 
	.dwpsn	file "../Source/prod.c",line 2910,column 7,is_stmt,isa 0
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_atoi")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2910| 
        ; call occurs [#_atoi] ; [] |2910| 
        CMPB      AL,#1                 ; [CPU_] |2910| 
        B         $C$L478,EQ            ; [CPU_] |2910| 
        ; branchcc occurs ; [] |2910| 
	.dwpsn	file "../Source/prod.c",line 2914,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2914| 
        B         $C$L479,UNC           ; [CPU_] |2914| 
        ; branch occurs ; [] |2914| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2912,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2912| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2917,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2917| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2917| 
        MOV       AL,#1024              ; [CPU_] |2917| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2917| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2917| 
        ; call occurs [#_scia_getparam] ; [] |2917| 
        MOVL      XAR0,#86              ; [CPU_] |2917| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2917| 
	.dwpsn	file "../Source/prod.c",line 2920,column 7,is_stmt,isa 0
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2920| 
        ; call occurs [#_scia_puts] ; [] |2920| 
	.dwpsn	file "../Source/prod.c",line 2921,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2921| 
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2921| 
        ; call occurs [#_scia_puts] ; [] |2921| 
        MOVL      XAR0,#86              ; [CPU_] |2921| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2921| 
	.dwpsn	file "../Source/prod.c",line 2923,column 7,is_stmt,isa 0
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_atoi")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2923| 
        ; call occurs [#_atoi] ; [] |2923| 
        CMPB      AL,#1                 ; [CPU_] |2923| 
        B         $C$L480,EQ            ; [CPU_] |2923| 
        ; branchcc occurs ; [] |2923| 
	.dwpsn	file "../Source/prod.c",line 2927,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2927| 
        B         $C$L481,UNC           ; [CPU_] |2927| 
        ; branch occurs ; [] |2927| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2925,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2925| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2930,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2930| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2930| 
        MOV       AL,#1024              ; [CPU_] |2930| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2930| 
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2930| 
        ; call occurs [#_scia_getparam] ; [] |2930| 
        MOVL      XAR0,#86              ; [CPU_] |2930| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2930| 
	.dwpsn	file "../Source/prod.c",line 2933,column 7,is_stmt,isa 0
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2933| 
        ; call occurs [#_scia_puts] ; [] |2933| 
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2934| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2934| 
        ; call occurs [#_scia_puts] ; [] |2934| 
        MOVL      XAR0,#86              ; [CPU_] |2934| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2934| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_atoi")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2936| 
        ; call occurs [#_atoi] ; [] |2936| 
        CMPB      AL,#1                 ; [CPU_] |2936| 
        B         $C$L482,EQ            ; [CPU_] |2936| 
        ; branchcc occurs ; [] |2936| 
	.dwpsn	file "../Source/prod.c",line 2940,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2940| 
        B         $C$L483,UNC           ; [CPU_] |2940| 
        ; branch occurs ; [] |2940| 
$C$L482:    
	.dwpsn	file "../Source/prod.c",line 2938,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2938| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2944,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2944| 
        CMPB      AL,#2                 ; [CPU_] |2944| 
        B         $C$L485,LOS           ; [CPU_] |2944| 
        ; branchcc occurs ; [] |2944| 
        CMPB      AL,#3                 ; [CPU_] |2944| 
        B         $C$L484,EQ            ; [CPU_] |2944| 
        ; branchcc occurs ; [] |2944| 
        CMPB      AL,#4                 ; [CPU_] |2944| 
        B         $C$L487,NEQ           ; [CPU_] |2944| 
        ; branchcc occurs ; [] |2944| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2956,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2957,column 8,is_stmt,isa 0
        B         $C$L486,UNC           ; [CPU_] |2957| 
        ; branch occurs ; [] |2957| 
$C$L484:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2953,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2953| 
	.dwpsn	file "../Source/prod.c",line 2954,column 8,is_stmt,isa 0
        B         $C$L486,UNC           ; [CPU_] |2954| 
        ; branch occurs ; [] |2954| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2948,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2948| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2948| 
        MOV       T,#10                 ; [CPU_] |2948| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2948| 
        ADDL      ACC,XAR6              ; [CPU_] |2948| 
        MOVL      XAR4,ACC              ; [CPU_] |2948| 
        MOVB      XAR0,#42              ; [CPU_] |2948| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2948| 
        MPYB      ACC,T,#152            ; [CPU_] |2948| 
        ADDL      ACC,XAR6              ; [CPU_] |2948| 
        MOVL      XAR4,ACC              ; [CPU_] |2948| 
        MOVB      XAR0,#125             ; [CPU_] |2948| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2948| 
        MOVL      XAR0,#70              ; [CPU_] |2948| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2948| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2948| 
        MOV       ACC,AL << 1           ; [CPU_] |2948| 
        ADDL      ACC,XAR6              ; [CPU_] |2948| 
        MOVL      XAR4,ACC              ; [CPU_] |2948| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2948| 
$C$L486:    
        MOVL      XAR0,#48              ; [CPU_] |2948| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2948| 
$C$L487:    
	.dwpsn	file "../Source/prod.c",line 2961,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2961| 
        MOVL      XAR0,#48              ; [CPU_] |2961| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2961| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_sprintf")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2961| 
        ; call occurs [#_sprintf] ; [] |2961| 
        MOVL      XAR0,#44              ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2961,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2962| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2962| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2962| 
        ; call occurs [#_scia_getparam] ; [] |2962| 
        MOVL      XAR0,#86              ; [CPU_] |2962| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2962| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2963| 
        ; call occurs [#_scia_puts] ; [] |2963| 
	.dwpsn	file "../Source/prod.c",line 2964,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2964| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2964| 
        ; call occurs [#_scia_puts] ; [] |2964| 
        MOVL      XAR0,#86              ; [CPU_] |2964| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2964,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2964| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_strtod")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |2970| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |2970| 
	.dwpsn	file "../Source/prod.c",line 2966,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |2966| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2970| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2970| 
        MOVL      XAR0,#44              ; [CPU_] |2970| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2970| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2970| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_sprintf")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2970| 
        ; call occurs [#_sprintf] ; [] |2970| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2971| 
        MOVL      XAR0,#86              ; [CPU_] |2971| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2971| 
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2971| 
        ; call occurs [#_scia_getparam] ; [] |2971| 
        MOVL      XAR0,#86              ; [CPU_] |2971| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2971| 
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2972| 
        ; call occurs [#_scia_puts] ; [] |2972| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2973| 
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2973| 
        ; call occurs [#_scia_puts] ; [] |2973| 
        MOVL      XAR0,#86              ; [CPU_] |2973| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2973| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_strtod")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2981,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |2981| 
        MOVL      XAR0,#62              ; [CPU_] |2981| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |2975| 
	.dwpsn	file "../Source/prod.c",line 2981,column 7,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |2981| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2981| 
        MOV       *-SP[3],AL            ; [CPU_] |2981| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2981| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[63]           ; [CPU_] |2981| 
        MOV       ACC,AL << 1           ; [CPU_] |2981| 
        ADDL      ACC,XAR6              ; [CPU_] |2981| 
        MOVL      XAR4,ACC              ; [CPU_] |2981| 
        MOVL      XAR0,#44              ; [CPU_] |2981| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2981| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2981| 
        MOVB      AL,#1                 ; [CPU_] |2981| 
        ADD       AL,*-SP[62]           ; [CPU_] |2981| 
        MOV       *-SP[7],AL            ; [CPU_] |2981| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2981| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_sprintf")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2981| 
        ; call occurs [#_sprintf] ; [] |2981| 
        MOVL      XAR0,#44              ; [CPU_] |2981| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2981| 
	.dwpsn	file "../Source/prod.c",line 2984,column 7,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2984| 
        ; call occurs [#_scia_puts] ; [] |2984| 
	.dwpsn	file "../Source/prod.c",line 2986,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |2986| 
        B         $C$L488,TC            ; [CPU_] |2986| 
        ; branchcc occurs ; [] |2986| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |2986| 
        B         $C$L489,UNC           ; [CPU_] |2986| 
        ; branch occurs ; [] |2986| 
$C$L488:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |2986| 
$C$L489:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |2986| 
        B         $C$L490,TC            ; [CPU_] |2986| 
        ; branchcc occurs ; [] |2986| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |2986| 
        B         $C$L491,UNC           ; [CPU_] |2986| 
        ; branch occurs ; [] |2986| 
$C$L490:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |2986| 
$C$L491:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |2986| 
        B         $C$L492,TC            ; [CPU_] |2986| 
        ; branchcc occurs ; [] |2986| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |2986| 
        B         $C$L493,UNC           ; [CPU_] |2986| 
        ; branch occurs ; [] |2986| 
$C$L492:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |2986| 
$C$L493:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |2986| 
        MOVL      XAR0,#44              ; [CPU_] |2986| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |2986| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2986| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |2986| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |2986| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2986| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_sprintf")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2986| 
        ; call occurs [#_sprintf] ; [] |2986| 
        MOVL      XAR0,#44              ; [CPU_] |2986| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2986| 
	.dwpsn	file "../Source/prod.c",line 2993,column 7,is_stmt,isa 0
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2993| 
        ; call occurs [#_scia_puts] ; [] |2993| 
	.dwpsn	file "../Source/prod.c",line 2994,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |2994| 
        MOVL      XAR0,#48              ; [CPU_] |2994| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2994| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2994| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2994| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2994| 
        MOVL      XAR0,#48              ; [CPU_] |2994| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2994| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |2994| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2994| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2994| 
        MOVL      *-SP[10],ACC          ; [CPU_] |2994| 
	.dwpsn	file "../Source/prod.c",line 3011,column 6,is_stmt,isa 0
        B         $C$L408,UNC           ; [CPU_] |3011| 
        ; branch occurs ; [] |3011| 
$C$L494:    
	.dwpsn	file "../Source/prod.c",line 2897,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2897| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2897| 
        ; call occurs [#_scia_puts] ; [] |2897| 
	.dwpsn	file "../Source/prod.c",line 2889,column 7,is_stmt,isa 0
        B         $C$L477,UNC           ; [CPU_] |2889| 
        ; branch occurs ; [] |2889| 
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 2843,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2843| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2843| 
        ; call occurs [#_scia_puts] ; [] |2843| 
	.dwpsn	file "../Source/prod.c",line 2835,column 6,is_stmt,isa 0
        B         $C$L469,UNC           ; [CPU_] |2835| 
        ; branch occurs ; [] |2835| 
$C$L496:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3315,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3315| 
        B         $C$L625,LO            ; [CPU_] |3315| 
        ; branchcc occurs ; [] |3315| 
	.dwpsn	file "../Source/prod.c",line 3318,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3318| 
        CMPB      AL,#68                ; [CPU_] |3318| 
        B         $C$L500,EQ            ; [CPU_] |3318| 
        ; branchcc occurs ; [] |3318| 
        CMPB      AL,#82                ; [CPU_] |3318| 
        B         $C$L499,EQ            ; [CPU_] |3318| 
        ; branchcc occurs ; [] |3318| 
        CMPB      AL,#87                ; [CPU_] |3318| 
        B         $C$L625,NEQ           ; [CPU_] |3318| 
        ; branchcc occurs ; [] |3318| 
        MOV       AL,*-SP[52]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3322,column 6,is_stmt,isa 0
        B         $C$L497,NEQ           ; [CPU_] |3322| 
        ; branchcc occurs ; [] |3322| 
	.dwpsn	file "../Source/prod.c",line 3346,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3346| 
	.dwpsn	file "../Source/prod.c",line 3348,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3348| 
        ; branch occurs ; [] |3348| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 3324,column 7,is_stmt,isa 0
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3324| 
        ; call occurs [#_lcd_clear] ; [] |3324| 
	.dwpsn	file "../Source/prod.c",line 3325,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3325| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3325| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3325| 
        ; call occurs [#_lcd_puts] ; [] |3325| 
	.dwpsn	file "../Source/prod.c",line 3326,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3326| 
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3326| 
        ; call occurs [#_scia_puts] ; [] |3326| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L498:    
	.dwpsn	file "../Source/prod.c",line 3329,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3329| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_delay_us")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3329| 
        ; call occurs [#_delay_us] ; [] |3329| 
	.dwpsn	file "../Source/prod.c",line 3328,column 19,is_stmt,isa 0
        BANZ      $C$L498,AR3--         ; [CPU_] |3328| 
        ; branchcc occurs ; [] |3328| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3333,column 7,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_conf_write")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3333| 
        ; call occurs [#_conf_write] ; [] |3333| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3336,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3336| 
        B         $C$L503,NEQ           ; [CPU_] |3336| 
        ; branchcc occurs ; [] |3336| 
	.dwpsn	file "../Source/prod.c",line 3337,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3337| 
	.dwpsn	file "../Source/prod.c",line 3339,column 7,is_stmt,isa 0
        B         $C$L502,UNC           ; [CPU_] |3339| 
        ; branch occurs ; [] |3339| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3353,column 6,is_stmt,isa 0
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_conf_read")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3353| 
        ; call occurs [#_conf_read] ; [] |3353| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3356,column 6,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3356| 
        ; call occurs [#_ad7738_setcal] ; [] |3356| 
	.dwpsn	file "../Source/prod.c",line 3357,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3357| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3357| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3357| 
	.dwpsn	file "../Source/prod.c",line 3358,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3358| 
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3358| 
        ; call occurs [#_ad7738_resetvall] ; [] |3358| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3361,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3361| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3361| 
        ; call occurs [#_scia_puts] ; [] |3361| 
	.dwpsn	file "../Source/prod.c",line 3364,column 6,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_update_units")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3364| 
        ; call occurs [#_update_units] ; [] |3364| 
	.dwpsn	file "../Source/prod.c",line 3362,column 6,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |3362| 
	.dwpsn	file "../Source/prod.c",line 3366,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3366| 
        ; branch occurs ; [] |3366| 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3370,column 6,is_stmt,isa 0
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_conf_default")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3370| 
        ; call occurs [#_conf_default] ; [] |3370| 
	.dwpsn	file "../Source/prod.c",line 3373,column 6,is_stmt,isa 0
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3373| 
        ; call occurs [#_lcd_clear] ; [] |3373| 
	.dwpsn	file "../Source/prod.c",line 3374,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3374| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3374| 
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3374| 
        ; call occurs [#_lcd_puts] ; [] |3374| 
	.dwpsn	file "../Source/prod.c",line 3375,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3375| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3375| 
        ; call occurs [#_scia_puts] ; [] |3375| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3378,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3378| 
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_delay_us")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3378| 
        ; call occurs [#_delay_us] ; [] |3378| 
	.dwpsn	file "../Source/prod.c",line 3377,column 18,is_stmt,isa 0
        BANZ      $C$L501,AR3--         ; [CPU_] |3377| 
        ; branchcc occurs ; [] |3377| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3382,column 6,is_stmt,isa 0
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_conf_write")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3382| 
        ; call occurs [#_conf_write] ; [] |3382| 
        MOVZ      AR1,AL                ; [CPU_] |3382| 
	.dwpsn	file "../Source/prod.c",line 3383,column 6,is_stmt,isa 0
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3383| 
        ; call occurs [#_ad7738_setcal] ; [] |3383| 
	.dwpsn	file "../Source/prod.c",line 3384,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3384| 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3384| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3384| 
	.dwpsn	file "../Source/prod.c",line 3385,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3385| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3385| 
        ; call occurs [#_ad7738_resetvall] ; [] |3385| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3388,column 6,is_stmt,isa 0
        B         $C$L503,NEQ           ; [CPU_] |3388| 
        ; branchcc occurs ; [] |3388| 
	.dwpsn	file "../Source/prod.c",line 3389,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3389| 
$C$L502:    
        SPM       #0                    ; [CPU_] 
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3389| 
        ; call occurs [#_scia_puts] ; [] |3389| 
	.dwpsn	file "../Source/prod.c",line 3391,column 7,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |3391| 
	.dwpsn	file "../Source/prod.c",line 3392,column 6,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3392| 
        ; branch occurs ; [] |3392| 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3393,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3393| 
        SPM       #0                    ; [CPU_] 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3393| 
        ; call occurs [#_scia_puts] ; [] |3393| 
$C$L504:    
	.dwpsn	file "../Source/prod.c",line 3395,column 6,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3395| 
        ; call occurs [#_lcd_clear] ; [] |3395| 
	.dwpsn	file "../Source/prod.c",line 3396,column 6,is_stmt,isa 0
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_update_units")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3396| 
        ; call occurs [#_update_units] ; [] |3396| 
	.dwpsn	file "../Source/prod.c",line 3397,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3397| 
        ; branch occurs ; [] |3397| 
$C$L505:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2422| 
        B         $C$L625,LO            ; [CPU_] |2422| 
        ; branchcc occurs ; [] |2422| 
	.dwpsn	file "../Source/prod.c",line 2425,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2425| 
        CMPB      AL,#70                ; [CPU_] |2425| 
        B         $C$L509,EQ            ; [CPU_] |2425| 
        ; branchcc occurs ; [] |2425| 
        CMPB      AL,#80                ; [CPU_] |2425| 
        B         $C$L632,NEQ           ; [CPU_] |2425| 
        ; branchcc occurs ; [] |2425| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 2462,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2462| 
        MOVL      XAR0,#44              ; [CPU_] |2462| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2462| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2462| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2462| 
        MOVL      XAR4,XAR1             ; [CPU_] |2462| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_sprintf")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2462| 
        ; call occurs [#_sprintf] ; [] |2462| 
	.dwpsn	file "../Source/prod.c",line 2463,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2463| 
	.dwpsn	file "../Source/prod.c",line 2462,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2462| 
	.dwpsn	file "../Source/prod.c",line 2463,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2463| 
        MOV       AL,#1024              ; [CPU_] |2463| 
        MOVL      XAR5,XAR1             ; [CPU_] |2463| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2463| 
        ; call occurs [#_scia_getparam] ; [] |2463| 
	.dwpsn	file "../Source/prod.c",line 2464,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2464| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_atoi")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2464| 
        ; call occurs [#_atoi] ; [] |2464| 
        MOV       *-SP[61],AL           ; [CPU_] |2464| 
	.dwpsn	file "../Source/prod.c",line 2465,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2465| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2465| 
        ; call occurs [#_scia_puts] ; [] |2465| 
        MOV       AL,*-SP[61]           ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2467,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2467| 
        CMPB      AL,#2                 ; [CPU_] |2467| 
        B         $C$L508,HIS           ; [CPU_] |2467| 
        ; branchcc occurs ; [] |2467| 
	.dwpsn	file "../Source/prod.c",line 2471,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2471| 
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2471| 
        ; call occurs [#_scia_puts] ; [] |2471| 
        MOVZ      AR1,*-SP[61]          ; [CPU_] |2471| 
	.dwpsn	file "../Source/prod.c",line 2474,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2474| 
        MOVL      XAR0,#44              ; [CPU_] |2474| 
        DEC       *-SP[61]              ; [CPU_] |2474| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2474| 
        MOV       *-SP[3],AR1           ; [CPU_] |2474| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2474| 
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_sprintf")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2474| 
        ; call occurs [#_sprintf] ; [] |2474| 
        MOVL      XAR0,#44              ; [CPU_] |2474| 
	.dwpsn	file "../Source/prod.c",line 2475,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2475| 
	.dwpsn	file "../Source/prod.c",line 2474,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2474| 
	.dwpsn	file "../Source/prod.c",line 2475,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2475| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2475| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2475| 
        ; call occurs [#_scia_getparam] ; [] |2475| 
        MOVL      XAR0,#86              ; [CPU_] |2475| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2475| 
	.dwpsn	file "../Source/prod.c",line 2476,column 6,is_stmt,isa 0
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_atol")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2476| 
        ; call occurs [#_atol] ; [] |2476| 
        MOVL      XAR0,#86              ; [CPU_] |2476| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2476| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2476| 
	.dwpsn	file "../Source/prod.c",line 2477,column 6,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2477| 
        ; call occurs [#_scia_puts] ; [] |2477| 
	.dwpsn	file "../Source/prod.c",line 2478,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2478| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2478| 
        ; call occurs [#_scia_puts] ; [] |2478| 
	.dwpsn	file "../Source/prod.c",line 2479,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2479| 
        B         $C$L507,NEQ           ; [CPU_] |2479| 
        ; branchcc occurs ; [] |2479| 
	.dwpsn	file "../Source/prod.c",line 2480,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2480| 
	.dwpsn	file "../Source/prod.c",line 2481,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2481| 
        ; branch occurs ; [] |2481| 
$C$L507:    
	.dwpsn	file "../Source/prod.c",line 2483,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2483| 
        MOVL      XAR0,#44              ; [CPU_] |2483| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2483| 
        MOV       *-SP[3],AR1           ; [CPU_] |2483| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2483| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2483| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2483| 
        MOVL      XAR4,XAR1             ; [CPU_] |2483| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_sprintf")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2483| 
        ; call occurs [#_sprintf] ; [] |2483| 
        MOVL      XAR4,XAR1             ; [CPU_] |2483| 
	.dwpsn	file "../Source/prod.c",line 2485,column 6,is_stmt,isa 0
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2485| 
        ; call occurs [#_scia_puts] ; [] |2485| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2490,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2490| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2490| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[61]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2490| 
        ADDL      ACC,XAR6              ; [CPU_] |2490| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2490| 
        ADD       ACC,#201 << 4         ; [CPU_] |2490| 
        MOVL      XAR4,ACC              ; [CPU_] |2490| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2490| 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2494| 
        ; branch occurs ; [] |2494| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2469,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2469| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2469| 
        ; call occurs [#_scia_puts] ; [] |2469| 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |2461| 
        ; branch occurs ; [] |2461| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2432,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2432| 
        MOVL      XAR0,#44              ; [CPU_] |2432| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2432| 
        MOV       *-SP[3],#4096         ; [CPU_] |2432| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2432| 
        MOVL      XAR4,XAR1             ; [CPU_] |2432| 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_sprintf")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2432| 
        ; call occurs [#_sprintf] ; [] |2432| 
	.dwpsn	file "../Source/prod.c",line 2434,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2434| 
	.dwpsn	file "../Source/prod.c",line 2432,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2432| 
	.dwpsn	file "../Source/prod.c",line 2434,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2434| 
        MOV       AL,#1024              ; [CPU_] |2434| 
        MOVL      XAR5,XAR1             ; [CPU_] |2434| 
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2434| 
        ; call occurs [#_scia_getparam] ; [] |2434| 
	.dwpsn	file "../Source/prod.c",line 2435,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2435| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_atoi")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2435| 
        ; call occurs [#_atoi] ; [] |2435| 
        MOV       *-SP[51],AL           ; [CPU_] |2435| 
	.dwpsn	file "../Source/prod.c",line 2436,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2436| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2436| 
        ; call occurs [#_scia_puts] ; [] |2436| 
        MOV       AL,*-SP[51]           ; [CPU_] |2436| 
	.dwpsn	file "../Source/prod.c",line 2438,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2438| 
        ; branchcc occurs ; [] |2438| 
        CMP       AL,#4096              ; [CPU_] |2438| 
        B         $C$L513,GT            ; [CPU_] |2438| 
        ; branchcc occurs ; [] |2438| 
	.dwpsn	file "../Source/prod.c",line 2442,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2442| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2442| 
        ; call occurs [#_scia_puts] ; [] |2442| 
	.dwpsn	file "../Source/prod.c",line 2444,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2444| 
        MOVL      XAR0,#44              ; [CPU_] |2444| 
        MOV       AL,*-SP[51]           ; [CPU_] |2444| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2444| 
        MOV       *-SP[3],AL            ; [CPU_] |2444| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2444| 
        MOVL      XAR4,XAR1             ; [CPU_] |2444| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_sprintf")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2444| 
        ; call occurs [#_sprintf] ; [] |2444| 
        MOVL      XAR4,XAR1             ; [CPU_] |2444| 
	.dwpsn	file "../Source/prod.c",line 2446,column 6,is_stmt,isa 0
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2446| 
        ; call occurs [#_scia_puts] ; [] |2446| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2451,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2451| 
        MOVL      ACC,XAR4              ; [CPU_] |2451| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2451| 
        MOVL      XAR4,ACC              ; [CPU_] |2451| 
        MOV       AL,*-SP[51]           ; [CPU_] |2451| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2451| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2452,column 6,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2452| 
        ; call occurs [#_ad7738_setcal] ; [] |2452| 
	.dwpsn	file "../Source/prod.c",line 2453,column 6,is_stmt,isa 0
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2453| 
        ; call occurs [#_velf_rst] ; [] |2453| 
$C$L511:    
 clrc INTM
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2447,column 6,is_stmt,isa 0
        MOV       *-SP[52],#1           ; [CPU_] |2447| 
	.dwpsn	file "../Source/prod.c",line 2455,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2455| 
        ; branch occurs ; [] |2455| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2440,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2440| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2440| 
        ; call occurs [#_scia_puts] ; [] |2440| 
	.dwpsn	file "../Source/prod.c",line 2431,column 6,is_stmt,isa 0
        B         $C$L509,UNC           ; [CPU_] |2431| 
        ; branch occurs ; [] |2431| 
$C$L514:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2504,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2504| 
        B         $C$L625,LO            ; [CPU_] |2504| 
        ; branchcc occurs ; [] |2504| 
	.dwpsn	file "../Source/prod.c",line 2507,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2507| 
        CMPB      AL,#83                ; [CPU_] |2507| 
        B         $C$L625,NEQ           ; [CPU_] |2507| 
        ; branchcc occurs ; [] |2507| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2514,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2514| 
        MOVL      XAR0,#44              ; [CPU_] |2514| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2514| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2514| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2514| 
        MOVL      XAR4,XAR1             ; [CPU_] |2514| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_sprintf")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2514| 
        ; call occurs [#_sprintf] ; [] |2514| 
	.dwpsn	file "../Source/prod.c",line 2515,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2515| 
	.dwpsn	file "../Source/prod.c",line 2514,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2514| 
	.dwpsn	file "../Source/prod.c",line 2515,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2515| 
        MOV       AL,#1024              ; [CPU_] |2515| 
        MOVL      XAR5,XAR1             ; [CPU_] |2515| 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2515| 
        ; call occurs [#_scia_getparam] ; [] |2515| 
	.dwpsn	file "../Source/prod.c",line 2516,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2516| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_atoi")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2516| 
        ; call occurs [#_atoi] ; [] |2516| 
        MOV       *-SP[61],AL           ; [CPU_] |2516| 
	.dwpsn	file "../Source/prod.c",line 2517,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2517| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2517| 
        ; call occurs [#_scia_puts] ; [] |2517| 
        MOV       AL,*-SP[61]           ; [CPU_] |2517| 
	.dwpsn	file "../Source/prod.c",line 2519,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2519| 
        CMPB      AL,#4                 ; [CPU_] |2519| 
        B         $C$L531,HIS           ; [CPU_] |2519| 
        ; branchcc occurs ; [] |2519| 
	.dwpsn	file "../Source/prod.c",line 2523,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2523| 
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2523| 
        ; call occurs [#_scia_puts] ; [] |2523| 
        MOVL      XAR0,#62              ; [CPU_] |2523| 
	.dwpsn	file "../Source/prod.c",line 2527,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2527| 
	.dwpsn	file "../Source/prod.c",line 2523,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2523| 
	.dwpsn	file "../Source/prod.c",line 2527,column 11,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |2527| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2528,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2528| 
        MOVL      XAR0,#44              ; [CPU_] |2528| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2528| 
        MOV       *-SP[3],AL            ; [CPU_] |2528| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2528| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2528| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2528| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_sprintf")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2528| 
        ; call occurs [#_sprintf] ; [] |2528| 
        MOVL      XAR0,#44              ; [CPU_] |2528| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 7,is_stmt,isa 0
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2529| 
        ; call occurs [#_scia_puts] ; [] |2529| 
        MOV       AL,*-SP[51]           ; [CPU_] |2529| 
	.dwpsn	file "../Source/prod.c",line 2530,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2530| 
        B         $C$L517,GEQ           ; [CPU_] |2530| 
        ; branchcc occurs ; [] |2530| 
	.dwpsn	file "../Source/prod.c",line 2531,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2531| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2531| 
        ; call occurs [#_scia_puts] ; [] |2531| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2527,column 18,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |2527| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2527| 
        B         $C$L516,LT            ; [CPU_] |2527| 
        ; branchcc occurs ; [] |2527| 
	.dwpsn	file "../Source/prod.c",line 2534,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2534| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2534| 
        ; call occurs [#_scia_puts] ; [] |2534| 
	.dwpsn	file "../Source/prod.c",line 2535,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2535| 
        MOVL      XAR0,#44              ; [CPU_] |2535| 
	.dwpsn	file "../Source/prod.c",line 2534,column 6,is_stmt,isa 0
        MOV       AH,*-SP[61]           ; [CPU_] |2534| 
	.dwpsn	file "../Source/prod.c",line 2535,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2535| 
        MOV       *-SP[3],AH            ; [CPU_] |2535| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2535| 
        DEC       *-SP[61]              ; [CPU_] |2535| 
        MOV       *-SP[51],AH           ; [CPU_] |2535| 
        MOVL      XAR4,XAR1             ; [CPU_] |2535| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_sprintf")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2535| 
        ; call occurs [#_sprintf] ; [] |2535| 
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2535,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2535| 
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2537| 
        MOV       AL,#1024              ; [CPU_] |2537| 
        MOVL      XAR5,XAR1             ; [CPU_] |2537| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2537| 
        ; call occurs [#_scia_getparam] ; [] |2537| 
        MOVL      XAR4,XAR1             ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2538,column 6,is_stmt,isa 0
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_atoi")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2538| 
        ; call occurs [#_atoi] ; [] |2538| 
        MOVZ      AR1,AL                ; [CPU_] |2538| 
        CMPB      AL,#7                 ; [CPU_] |2538| 
        B         $C$L518,LO            ; [CPU_] |2538| 
        ; branchcc occurs ; [] |2538| 
	.dwpsn	file "../Source/prod.c",line 2541,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2541| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2541| 
        ; call occurs [#_scia_puts] ; [] |2541| 
	.dwpsn	file "../Source/prod.c",line 2540,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2540| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2544,column 6,is_stmt,isa 0
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2544| 
        ; call occurs [#_scia_puts] ; [] |2544| 
	.dwpsn	file "../Source/prod.c",line 2545,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2545| 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2545| 
        ; call occurs [#_scia_puts] ; [] |2545| 
	.dwpsn	file "../Source/prod.c",line 2546,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2546| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2546| 
        MOVB      AL,#3                 ; [CPU_] |2546| 
        MOV       T,*-SP[61]            ; [CPU_] |2546| 
        MPYU      ACC,T,AL              ; [CPU_] |2546| 
        ADDL      ACC,XAR6              ; [CPU_] |2546| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2546| 
        MOVL      XAR4,ACC              ; [CPU_] |2546| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2546| 
	.dwpsn	file "../Source/prod.c",line 2548,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2548| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2548| 
        CMPB      AL,#2                 ; [CPU_] |2548| 
        B         $C$L522,LOS           ; [CPU_] |2548| 
        ; branchcc occurs ; [] |2548| 
        MOV       AH,AL                 ; [CPU_] |2548| 
        ADDB      AH,#-3                ; [CPU_] |2548| 
        CMPB      AH,#1                 ; [CPU_] |2548| 
        B         $C$L521,LOS           ; [CPU_] |2548| 
        ; branchcc occurs ; [] |2548| 
        CMPB      AL,#5                 ; [CPU_] |2548| 
        B         $C$L519,EQ            ; [CPU_] |2548| 
        ; branchcc occurs ; [] |2548| 
        CMPB      AL,#6                 ; [CPU_] |2548| 
        B         $C$L527,NEQ           ; [CPU_] |2548| 
        ; branchcc occurs ; [] |2548| 
	.dwpsn	file "../Source/prod.c",line 2622,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2622| 
        MOV       AL,*-SP[51]           ; [CPU_] |2622| 
        MOVL      XAR0,#62              ; [CPU_] |2622| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2622| 
        MOV       *-SP[3],AL            ; [CPU_] |2622| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2622| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2622| 
        ADDL      ACC,XAR6              ; [CPU_] |2622| 
        MOVL      XAR4,ACC              ; [CPU_] |2622| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2622| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2622| 
	.dwpsn	file "../Source/prod.c",line 2625,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2625| 
        ; branch occurs ; [] |2625| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2603| 
        MOVL      XAR0,#44              ; [CPU_] |2603| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2603| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2603| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2603| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_sprintf")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2603| 
        ; call occurs [#_sprintf] ; [] |2603| 
        MOVL      XAR0,#44              ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2604,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2604,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2604| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2604| 
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2604| 
        ; call occurs [#_scia_getparam] ; [] |2604| 
        MOVL      XAR0,#86              ; [CPU_] |2604| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2605,column 8,is_stmt,isa 0
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_atoi")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2605| 
        ; call occurs [#_atoi] ; [] |2605| 
        MOVL      XAR0,#86              ; [CPU_] |2605| 
        MOV       *-SP[62],AL           ; [CPU_] |2605| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2606,column 8,is_stmt,isa 0
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2606| 
        ; call occurs [#_scia_puts] ; [] |2606| 
        MOV       AL,*-SP[62]           ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2608,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2608| 
        CMPB      AL,#4                 ; [CPU_] |2608| 
        B         $C$L520,HIS           ; [CPU_] |2608| 
        ; branchcc occurs ; [] |2608| 
	.dwpsn	file "../Source/prod.c",line 2612,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2612| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2612| 
        ; call occurs [#_scia_puts] ; [] |2612| 
	.dwpsn	file "../Source/prod.c",line 2614,column 7,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |2614| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2616| 
        MOVL      XAR0,#62              ; [CPU_] |2616| 
	.dwpsn	file "../Source/prod.c",line 2612,column 7,is_stmt,isa 0
        MOV       AL,*-SP[62]           ; [CPU_] |2612| 
	.dwpsn	file "../Source/prod.c",line 2614,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2614| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |2616| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2616| 
        MOV       *-SP[3],AL            ; [CPU_] |2616| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2616| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2616| 
        ADDL      ACC,XAR6              ; [CPU_] |2616| 
        MOVL      XAR4,ACC              ; [CPU_] |2616| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2616| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2616| 
        MOVB      AL,#1                 ; [CPU_] |2616| 
        ADD       AL,*-SP[62]           ; [CPU_] |2616| 
        MOV       *-SP[7],AL            ; [CPU_] |2616| 
	.dwpsn	file "../Source/prod.c",line 2619,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2619| 
        ; branch occurs ; [] |2619| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2610,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2610| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2610| 
        ; call occurs [#_scia_puts] ; [] |2610| 
	.dwpsn	file "../Source/prod.c",line 2602,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2602| 
        ; branch occurs ; [] |2602| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2560,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2560| 
        B         $C$L523,UNC           ; [CPU_] |2560| 
        ; branch occurs ; [] |2560| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2554,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2554| 
$C$L523:    
        MOV       *-SP[63],AL           ; [CPU_] |2554| 
        MOV       *-SP[52],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2565,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2565| 
        MOV       AL,*-SP[63]           ; [CPU_] |2565| 
        MOVL      XAR0,#44              ; [CPU_] |2565| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2565| 
        MOV       *-SP[3],AL            ; [CPU_] |2565| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2565| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_sprintf")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2565| 
        ; call occurs [#_sprintf] ; [] |2565| 
        MOVL      XAR0,#44              ; [CPU_] |2565| 
	.dwpsn	file "../Source/prod.c",line 2566,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2566| 
	.dwpsn	file "../Source/prod.c",line 2565,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2565| 
	.dwpsn	file "../Source/prod.c",line 2566,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2566| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2566| 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2566| 
        ; call occurs [#_scia_getparam] ; [] |2566| 
        MOVL      XAR0,#86              ; [CPU_] |2566| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2566| 
	.dwpsn	file "../Source/prod.c",line 2567,column 8,is_stmt,isa 0
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_atoi")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2567| 
        ; call occurs [#_atoi] ; [] |2567| 
        MOVL      XAR0,#86              ; [CPU_] |2567| 
        MOV       *-SP[62],AL           ; [CPU_] |2567| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2567| 
	.dwpsn	file "../Source/prod.c",line 2568,column 8,is_stmt,isa 0
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2568| 
        ; call occurs [#_scia_puts] ; [] |2568| 
        MOV       AL,*-SP[62]           ; [CPU_] |2568| 
	.dwpsn	file "../Source/prod.c",line 2570,column 9,is_stmt,isa 0
        B         $C$L530,EQ            ; [CPU_] |2570| 
        ; branchcc occurs ; [] |2570| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[62]           ; [CPU_] |2570| 
        B         $C$L530,LO            ; [CPU_] |2570| 
        ; branchcc occurs ; [] |2570| 
	.dwpsn	file "../Source/prod.c",line 2574,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2574| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2574| 
        ; call occurs [#_scia_puts] ; [] |2574| 
	.dwpsn	file "../Source/prod.c",line 2576,column 7,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |2576| 
	.dwpsn	file "../Source/prod.c",line 2574,column 7,is_stmt,isa 0
        MOV       AL,*-SP[62]           ; [CPU_] |2574| 
	.dwpsn	file "../Source/prod.c",line 2576,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2576| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2581,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2581| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2581| 
        MOV       AL,#1024              ; [CPU_] |2581| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2581| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2581| 
        ; call occurs [#_scia_getparam] ; [] |2581| 
        MOVL      XAR0,#86              ; [CPU_] |2581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2581| 
	.dwpsn	file "../Source/prod.c",line 2583,column 8,is_stmt,isa 0
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_atoi")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2583| 
        ; call occurs [#_atoi] ; [] |2583| 
        MOV       *-SP[52],AL           ; [CPU_] |2583| 
        CMPB      AL,#0                 ; [CPU_] |2583| 
        B         $C$L529,LT            ; [CPU_] |2583| 
        ; branchcc occurs ; [] |2583| 
        CMPB      AL,#6                 ; [CPU_] |2583| 
        B         $C$L529,GEQ           ; [CPU_] |2583| 
        ; branchcc occurs ; [] |2583| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2589,column 7,is_stmt,isa 0
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2589| 
        ; call occurs [#_scia_puts] ; [] |2589| 
	.dwpsn	file "../Source/prod.c",line 2590,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2590| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2590| 
        ; call occurs [#_scia_puts] ; [] |2590| 
        MOV       AL,*-SP[52]           ; [CPU_] |2590| 
	.dwpsn	file "../Source/prod.c",line 2593,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2593| 
        MOVL      XAR0,#62              ; [CPU_] |2593| 
	.dwpsn	file "../Source/prod.c",line 2591,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2591| 
	.dwpsn	file "../Source/prod.c",line 2593,column 7,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |2593| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2593| 
        MOV       *-SP[3],AL            ; [CPU_] |2593| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2593| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2593| 
        ADDL      ACC,XAR6              ; [CPU_] |2593| 
        MOVL      XAR4,ACC              ; [CPU_] |2593| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2593| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2593| 
        MOVB      AL,#1                 ; [CPU_] |2593| 
        ADD       AL,*-SP[62]           ; [CPU_] |2593| 
        MOV       *-SP[7],AL            ; [CPU_] |2593| 
        MOV       AL,*-SP[52]           ; [CPU_] |2593| 
        MOV       *-SP[8],AL            ; [CPU_] |2593| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2593| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2593| 
        MOVL      XAR4,XAR1             ; [CPU_] |2593| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_sprintf")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2593| 
        ; call occurs [#_sprintf] ; [] |2593| 
        MOVL      XAR4,XAR1             ; [CPU_] |2593| 
	.dwpsn	file "../Source/prod.c",line 2596,column 7,is_stmt,isa 0
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2596| 
        ; call occurs [#_scia_puts] ; [] |2596| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2628,column 6,is_stmt,isa 0
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2628| 
        ; call occurs [#_lcd_clear] ; [] |2628| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2629,column 6,is_stmt,isa 0
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_update_units")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2629| 
        ; call occurs [#_update_units] ; [] |2629| 
	.dwpsn	file "../Source/prod.c",line 2631,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2631| 
        ; branch occurs ; [] |2631| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2587,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2587| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2587| 
        ; call occurs [#_scia_puts] ; [] |2587| 
	.dwpsn	file "../Source/prod.c",line 2580,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2580| 
        ; branch occurs ; [] |2580| 
$C$L530:    
	.dwpsn	file "../Source/prod.c",line 2572,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2572| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2572| 
        ; call occurs [#_scia_puts] ; [] |2572| 
	.dwpsn	file "../Source/prod.c",line 2564,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2564| 
        ; branch occurs ; [] |2564| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 2521,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2521| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2521| 
        ; call occurs [#_scia_puts] ; [] |2521| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2513| 
        ; branch occurs ; [] |2513| 
$C$L532:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1611,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1611| 
        B         $C$L625,LO            ; [CPU_] |1611| 
        ; branchcc occurs ; [] |1611| 
	.dwpsn	file "../Source/prod.c",line 1616,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1616| 
        CMPB      AL,#86                ; [CPU_] |1616| 
        B         $C$L533,EQ            ; [CPU_] |1616| 
        ; branchcc occurs ; [] |1616| 
        CMPB      AL,#77                ; [CPU_] |1616| 
        B         $C$L533,EQ            ; [CPU_] |1616| 
        ; branchcc occurs ; [] |1616| 
        CMPB      AL,#83                ; [CPU_] |1616| 
        B         $C$L625,NEQ           ; [CPU_] |1616| 
        ; branchcc occurs ; [] |1616| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1619,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1619| 
        MOV       *-SP[51],AL           ; [CPU_] |1619| 
	.dwpsn	file "../Source/prod.c",line 1621,column 5,is_stmt,isa 0
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1621| 
        ; call occurs [#_lcd_clear] ; [] |1621| 
	.dwpsn	file "../Source/prod.c",line 1622,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1622| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1622| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1622| 
        ; call occurs [#_lcd_puts] ; [] |1622| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1628,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1628| 
        MOVL      XAR0,#44              ; [CPU_] |1628| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1628| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1628| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1628| 
        MOVL      XAR4,XAR1             ; [CPU_] |1628| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_sprintf")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1628| 
        ; call occurs [#_sprintf] ; [] |1628| 
	.dwpsn	file "../Source/prod.c",line 1629,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1629| 
	.dwpsn	file "../Source/prod.c",line 1628,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1628| 
	.dwpsn	file "../Source/prod.c",line 1629,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1629| 
        MOV       AL,#1024              ; [CPU_] |1629| 
        MOVL      XAR5,XAR1             ; [CPU_] |1629| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1629| 
        ; call occurs [#_scia_getparam] ; [] |1629| 
	.dwpsn	file "../Source/prod.c",line 1630,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1630| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_atoi")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1630| 
        ; call occurs [#_atoi] ; [] |1630| 
        MOV       *-SP[62],AL           ; [CPU_] |1630| 
	.dwpsn	file "../Source/prod.c",line 1631,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1631| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1631| 
        ; call occurs [#_scia_puts] ; [] |1631| 
        MOV       AL,*-SP[62]           ; [CPU_] |1631| 
	.dwpsn	file "../Source/prod.c",line 1633,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1633| 
        CMPB      AL,#4                 ; [CPU_] |1633| 
        B         $C$L590,HIS           ; [CPU_] |1633| 
        ; branchcc occurs ; [] |1633| 
	.dwpsn	file "../Source/prod.c",line 1637,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1637| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1637| 
        ; call occurs [#_scia_puts] ; [] |1637| 
	.dwpsn	file "../Source/prod.c",line 1638,column 5,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |1638| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1643,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1643| 
        MOVL      XAR0,#44              ; [CPU_] |1643| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1643| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1643| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1643| 
        MOVL      XAR4,XAR1             ; [CPU_] |1643| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_sprintf")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1643| 
        ; call occurs [#_sprintf] ; [] |1643| 
	.dwpsn	file "../Source/prod.c",line 1644,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1644| 
	.dwpsn	file "../Source/prod.c",line 1643,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1643| 
	.dwpsn	file "../Source/prod.c",line 1644,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1644| 
        MOV       AL,#1024              ; [CPU_] |1644| 
        MOVL      XAR5,XAR1             ; [CPU_] |1644| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1644| 
        ; call occurs [#_scia_getparam] ; [] |1644| 
	.dwpsn	file "../Source/prod.c",line 1645,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1645| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_atoi")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1645| 
        ; call occurs [#_atoi] ; [] |1645| 
        MOV       *-SP[61],AL           ; [CPU_] |1645| 
	.dwpsn	file "../Source/prod.c",line 1646,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1646| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1646| 
        ; call occurs [#_scia_puts] ; [] |1646| 
        MOV       AL,*-SP[61]           ; [CPU_] |1646| 
	.dwpsn	file "../Source/prod.c",line 1650,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1650| 
        CMPB      AL,#20                ; [CPU_] |1650| 
        B         $C$L589,HIS           ; [CPU_] |1650| 
        ; branchcc occurs ; [] |1650| 
	.dwpsn	file "../Source/prod.c",line 1654,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1654| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1654| 
        ; call occurs [#_scia_puts] ; [] |1654| 
	.dwpsn	file "../Source/prod.c",line 1658,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1658| 
        MOVL      XAR0,#92              ; [CPU_] |1658| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1658| 
	.dwpsn	file "../Source/prod.c",line 1654,column 5,is_stmt,isa 0
        MOV       AH,*-SP[61]           ; [CPU_] |1654| 
	.dwpsn	file "../Source/prod.c",line 1658,column 5,is_stmt,isa 0
        ADD       AL,*-SP[62]           ; [CPU_] |1658| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1658| 
        MOVL      XAR0,#44              ; [CPU_] |1658| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1658| 
        MOV       *-SP[3],AL            ; [CPU_] |1658| 
        MOV       *-SP[4],AH            ; [CPU_] |1658| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1658| 
        DEC       *-SP[61]              ; [CPU_] |1658| 
        MOV       *-SP[63],AH           ; [CPU_] |1658| 
        MOVL      XAR4,XAR1             ; [CPU_] |1658| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1658| 
        ; call occurs [#_sprintf] ; [] |1658| 
	.dwpsn	file "../Source/prod.c",line 1659,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1659| 
        MOVL      XAR4,XAR1             ; [CPU_] |1659| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1659| 
        ; call occurs [#_lcd_puts] ; [] |1659| 
	.dwpsn	file "../Source/prod.c",line 1663,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1663| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1663| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1663| 
        MOVL      XAR4,XAR1             ; [CPU_] |1663| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_sprintf")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1663| 
        ; call occurs [#_sprintf] ; [] |1663| 
	.dwpsn	file "../Source/prod.c",line 1664,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1664| 
        MOV       AL,#1024              ; [CPU_] |1664| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1664| 
        MOVL      XAR4,XAR1             ; [CPU_] |1664| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1664| 
        ; call occurs [#_scia_getparam] ; [] |1664| 
        CMPB      AL,#15                ; [CPU_] |1664| 
        B         $C$L536,LOS           ; [CPU_] |1664| 
        ; branchcc occurs ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1668,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1668| 
        MOVB      XAR0,#15              ; [CPU_] |1668| 
	.dwpsn	file "../Source/prod.c",line 1667,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1667| 
	.dwpsn	file "../Source/prod.c",line 1668,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1668| 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1670,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1670| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1670| 
        MOVL      XAR0,#86              ; [CPU_] |1670| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1670| 
        MOVB      AH,#1                 ; [CPU_] |1670| 
        ADD       AH,AL                 ; [CPU_] |1670| 
        MOVU      ACC,AH                ; [CPU_] |1670| 
        MOVL      XAR5,XAR1             ; [CPU_] |1670| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_memcpy")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1670| 
        ; call occurs [#_memcpy] ; [] |1670| 
        MOVL      XAR4,XAR1             ; [CPU_] |1670| 
	.dwpsn	file "../Source/prod.c",line 1671,column 5,is_stmt,isa 0
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1671| 
        ; call occurs [#_scia_puts] ; [] |1671| 
	.dwpsn	file "../Source/prod.c",line 1672,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1672| 
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1672| 
        ; call occurs [#_scia_puts] ; [] |1672| 
	.dwpsn	file "../Source/prod.c",line 1676,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1676| 
        MOVL      XAR0,#44              ; [CPU_] |1676| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1676| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1676| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1676| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_sprintf")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1676| 
        ; call occurs [#_sprintf] ; [] |1676| 
        MOVL      XAR0,#44              ; [CPU_] |1676| 
	.dwpsn	file "../Source/prod.c",line 1677,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1677| 
	.dwpsn	file "../Source/prod.c",line 1676,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1676| 
	.dwpsn	file "../Source/prod.c",line 1677,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1677| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1677| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1677| 
        ; call occurs [#_scia_getparam] ; [] |1677| 
        CMPB      AL,#15                ; [CPU_] |1677| 
        B         $C$L537,LOS           ; [CPU_] |1677| 
        ; branchcc occurs ; [] |1677| 
	.dwpsn	file "../Source/prod.c",line 1681,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1681| 
        MOVB      XAR0,#15              ; [CPU_] |1681| 
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1680| 
	.dwpsn	file "../Source/prod.c",line 1681,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1681| 
$C$L537:    
	.dwpsn	file "../Source/prod.c",line 1683,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1683| 
        MOVL      XAR0,#60              ; [CPU_] |1683| 
        MOVL      XAR5,XAR1             ; [CPU_] |1683| 
        ADD       AH,AL                 ; [CPU_] |1683| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1683| 
        MOVU      ACC,AH                ; [CPU_] |1683| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_memcpy")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1683| 
        ; call occurs [#_memcpy] ; [] |1683| 
        MOVL      XAR4,XAR1             ; [CPU_] |1683| 
	.dwpsn	file "../Source/prod.c",line 1684,column 5,is_stmt,isa 0
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1684| 
        ; call occurs [#_scia_puts] ; [] |1684| 
	.dwpsn	file "../Source/prod.c",line 1685,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1685| 
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1685| 
        ; call occurs [#_scia_puts] ; [] |1685| 
        MOVL      XAR0,#70              ; [CPU_] |1685| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1685| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1688,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1688| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] |1688| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1688| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1689,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1689| 
        MOVL      XAR0,#88              ; [CPU_] |1689| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1689| 
        MOV       *-SP[3],AL            ; [CPU_] |1689| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1689| 
        MOVL      XAR0,#88              ; [CPU_] |1689| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1689| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1689| 
        MOVL      XAR4,XAR1             ; [CPU_] |1689| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1689| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_sprintf")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1689| 
        ; call occurs [#_sprintf] ; [] |1689| 
	.dwpsn	file "../Source/prod.c",line 1688,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1688| 
        MOVL      XAR0,#91              ; [CPU_] |1688| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1688| 
        MOVL      XAR0,#91              ; [CPU_] |1688| 
        ADDB      AL,#1                 ; [CPU_] |1688| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1688| 
        CMPB      AL,#7                 ; [CPU_] |1688| 
        B         $C$L538,LT            ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
	.dwpsn	file "../Source/prod.c",line 1691,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1691| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1691| 
        MOVB      XAR1,#54              ; [CPU_] |1691| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1691| 
	.dwpsn	file "../Source/prod.c",line 1692,column 5,is_stmt,isa 0
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1692| 
        ; call occurs [#_scia_puts] ; [] |1692| 
	.dwpsn	file "../Source/prod.c",line 1693,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1693| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1693| 
        MOV       AL,#1024              ; [CPU_] |1693| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1693| 
        MOVL      XAR5,XAR1             ; [CPU_] |1693| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1693| 
        ; call occurs [#_scia_getparam] ; [] |1693| 
        MOVL      XAR4,XAR1             ; [CPU_] |1693| 
	.dwpsn	file "../Source/prod.c",line 1695,column 5,is_stmt,isa 0
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_atoi")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1695| 
        ; call occurs [#_atoi] ; [] |1695| 
        MOVB      XAR0,#42              ; [CPU_] |1695| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1695| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1695| 
	.dwpsn	file "../Source/prod.c",line 1697,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1697| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1697| 
        CMPB      AL,#6                 ; [CPU_] |1697| 
        B         $C$L539,GT            ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
        CMPB      AL,#6                 ; [CPU_] |1697| 
        B         $C$L542,EQ            ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
        CMPB      AL,#1                 ; [CPU_] |1697| 
        B         $C$L545,LOS           ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
        MOV       AH,AL                 ; [CPU_] |1697| 
        ADDB      AH,#-2                ; [CPU_] |1697| 
        CMPB      AH,#2                 ; [CPU_] |1697| 
        B         $C$L544,LOS           ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
        CMPB      AL,#5                 ; [CPU_] |1697| 
        B         $C$L543,EQ            ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
        B         $C$L540,UNC           ; [CPU_] |1697| 
        ; branch occurs ; [] |1697| 
$C$L539:    
        MOV       AH,AL                 ; [CPU_] |1697| 
        ADDB      AH,#-7                ; [CPU_] |1697| 
        CMPB      AH,#1                 ; [CPU_] |1697| 
        B         $C$L541,LOS           ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
        CMPB      AL,#15                ; [CPU_] |1697| 
        B         $C$L541,EQ            ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
$C$L540:    
	.dwpsn	file "../Source/prod.c",line 1719,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1719| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1719| 
	.dwpsn	file "../Source/prod.c",line 1720,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1720| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1720| 
        ; call occurs [#_scia_puts] ; [] |1720| 
	.dwpsn	file "../Source/prod.c",line 1721,column 6,is_stmt,isa 0
        B         $C$L546,UNC           ; [CPU_] |1721| 
        ; branch occurs ; [] |1721| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1716,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1716| 
	.dwpsn	file "../Source/prod.c",line 1717,column 6,is_stmt,isa 0
        B         $C$L546,UNC           ; [CPU_] |1717| 
        ; branch occurs ; [] |1717| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1711,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1711| 
	.dwpsn	file "../Source/prod.c",line 1712,column 6,is_stmt,isa 0
        B         $C$L546,UNC           ; [CPU_] |1712| 
        ; branch occurs ; [] |1712| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1708,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1708| 
	.dwpsn	file "../Source/prod.c",line 1709,column 6,is_stmt,isa 0
        B         $C$L546,UNC           ; [CPU_] |1709| 
        ; branch occurs ; [] |1709| 
$C$L544:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1705,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1705| 
	.dwpsn	file "../Source/prod.c",line 1706,column 6,is_stmt,isa 0
        B         $C$L546,UNC           ; [CPU_] |1706| 
        ; branch occurs ; [] |1706| 
$C$L545:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1700,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1700| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1723,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1723| 
        MOVL      XAR4,XAR7             ; [CPU_] |1723| 
        MOVB      XAR0,#43              ; [CPU_] |1723| 
        ADDB      XAR7,#42              ; [CPU_] |1723| 
        MOV       AL,*XAR7              ; [CPU_] |1723| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1723| 
	.dwpsn	file "../Source/prod.c",line 1724,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1724| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1724| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1724| 
        MOVL      XAR0,#86              ; [CPU_] |1724| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1724| 
	.dwpsn	file "../Source/prod.c",line 1726,column 5,is_stmt,isa 0
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1726| 
        ; call occurs [#_scia_puts] ; [] |1726| 
	.dwpsn	file "../Source/prod.c",line 1727,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1727| 
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1727| 
        ; call occurs [#_scia_puts] ; [] |1727| 
$C$L547:    
	.dwpsn	file "../Source/prod.c",line 1732,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1732| 
        MOVL      XAR5,XAR1             ; [CPU_] |1732| 
        MOV       AL,#1024              ; [CPU_] |1732| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1732| 
        ; call occurs [#_scia_getparam] ; [] |1732| 
        MOVL      XAR4,XAR1             ; [CPU_] |1732| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_strtod")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1733,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1733| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1733| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1733,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1733| 
	.dwpsn	file "../Source/prod.c",line 1735,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1735| 
        MOV       AH,#0                 ; [CPU_] |1735| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1735| 
        MOVL      ACC,XAR3              ; [CPU_] |1735| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1735| 
        ; call occurs [#FS$$CMP] ; [] |1735| 
        CMPB      AL,#0                 ; [CPU_] |1735| 
        B         $C$L588,EQ            ; [CPU_] |1735| 
        ; branchcc occurs ; [] |1735| 
	.dwpsn	file "../Source/prod.c",line 1739,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1739| 
        MOVB      XAR1,#142             ; [CPU_] |1739| 
        MOVL      XAR0,#86              ; [CPU_] |1739| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1739| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1740| 
        ; call occurs [#_scia_puts] ; [] |1740| 
	.dwpsn	file "../Source/prod.c",line 1741,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1741| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1741| 
        ; call occurs [#_scia_puts] ; [] |1741| 
        MOV       AL,*-SP[62]           ; [CPU_] |1741| 
	.dwpsn	file "../Source/prod.c",line 1743,column 5,is_stmt,isa 0
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_tagid")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1743| 
        ; call occurs [#_tagid] ; [] |1743| 
        MOVL      XAR0,#36              ; [CPU_] |1743| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1743| 
        MOVL      XAR4,XAR5             ; [CPU_] |1743| 
        ADDB      XAR4,#32              ; [CPU_] |1743| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1745| 
	.dwpsn	file "../Source/prod.c",line 1743,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1743| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1743| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1745| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1745| 
        MOV       *-SP[2],#0            ; [CPU_] |1745| 
        MOV       *-SP[1],#0            ; [CPU_] |1745| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1745| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1745| 
        MOVL      P,XAR4                ; [CPU_] |1745| 
        MOVL      ACC,XAR5              ; [CPU_] |1745| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1161, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1745| 
        ; call occurs [#ULL$$CMP] ; [] |1745| 
        CMPB      AL,#0                 ; [CPU_] |1745| 
        B         $C$L548,NEQ           ; [CPU_] |1745| 
        ; branchcc occurs ; [] |1745| 
	.dwpsn	file "../Source/prod.c",line 1746,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1746| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1746| 
	.dwpsn	file "../Source/prod.c",line 1747,column 5,is_stmt,isa 0
        B         $C$L549,UNC           ; [CPU_] |1747| 
        ; branch occurs ; [] |1747| 
$C$L548:    
	.dwpsn	file "../Source/prod.c",line 1748,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1748| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1748| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1748| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1748| 
$C$L549:    
        MOVL      XAR0,#44              ; [CPU_] |1748| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1748| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_sprintf")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1748| 
        ; call occurs [#_sprintf] ; [] |1748| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1750,column 5,is_stmt,isa 0
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1750| 
        ; call occurs [#_scia_puts] ; [] |1750| 
        MOV       AL,*-SP[51]           ; [CPU_] |1750| 
	.dwpsn	file "../Source/prod.c",line 1752,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1752| 
        B         $C$L563,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#83                ; [CPU_] |1752| 
        B         $C$L554,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#86                ; [CPU_] |1752| 
        B         $C$L618,NEQ           ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
	.dwpsn	file "../Source/prod.c",line 1757,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1757| 
        MOVB      AL,#40                ; [CPU_] |1757| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1757| 
        ; call occurs [#_lcd_puts] ; [] |1757| 
	.dwpsn	file "../Source/prod.c",line 1759,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1759| 
        MOVB      XAR0,#36              ; [CPU_] |1759| 
	.dwpsn	file "../Source/prod.c",line 1762,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1762| 
	.dwpsn	file "../Source/prod.c",line 1759,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1759| 
	.dwpsn	file "../Source/prod.c",line 1760,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1760| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1760| 
	.dwpsn	file "../Source/prod.c",line 1762,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1762| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1762| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1762| 
        MOVL      XAR0,#70              ; [CPU_] |1762| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1762| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1762| 
        MOV       ACC,AL << 1           ; [CPU_] |1762| 
        ADDL      ACC,XAR6              ; [CPU_] |1762| 
        MOVL      XAR4,ACC              ; [CPU_] |1762| 
        MOVL      XAR0,#44              ; [CPU_] |1762| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1762| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1762| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_sprintf")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1762| 
        ; call occurs [#_sprintf] ; [] |1762| 
        MOVL      XAR0,#44              ; [CPU_] |1762| 
	.dwpsn	file "../Source/prod.c",line 1764,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1764| 
	.dwpsn	file "../Source/prod.c",line 1762,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1762| 
	.dwpsn	file "../Source/prod.c",line 1764,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1764| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1764| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1764| 
        ; call occurs [#_scia_getparam] ; [] |1764| 
        MOVL      XAR0,#86              ; [CPU_] |1764| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1764,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1764| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_strtod")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1765,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1765| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1765,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1765| 
	.dwpsn	file "../Source/prod.c",line 1766,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1766| 
        MOV       AH,#0                 ; [CPU_] |1766| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1766| 
        MOVL      ACC,XAR6              ; [CPU_] |1766| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1766| 
        ; call occurs [#FS$$CMP] ; [] |1766| 
        CMPB      AL,#0                 ; [CPU_] |1766| 
        B         $C$L550,NEQ           ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
	.dwpsn	file "../Source/prod.c",line 1767,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1767| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1767| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1767| 
$C$L550:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1769| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1769| 
        ; call occurs [#_scia_puts] ; [] |1769| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1770| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1770| 
        ; call occurs [#_scia_puts] ; [] |1770| 
	.dwpsn	file "../Source/prod.c",line 1772,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1772| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1772| 
        MOVL      XAR5,XAR1             ; [CPU_] |1772| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1772| 
        ; call occurs [#_scia_getparam] ; [] |1772| 
	.dwpsn	file "../Source/prod.c",line 1775,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1775| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1775| 
        ; call occurs [#_scia_puts] ; [] |1775| 
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1778| 
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1779| 
        MOVB      ACC,#0                ; [CPU_] |1779| 
        SUBB      ACC,#1                ; [CPU_] |1779| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1779| 
        B         $C$L553,EQ            ; [CPU_] |1779| 
        ; branchcc occurs ; [] |1779| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1780,column 14,is_stmt,isa 0
        B         $C$L552,UNC           ; [CPU_] |1780| 
        ; branch occurs ; [] |1780| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1781,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1781| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_delay_us")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1781| 
        ; call occurs [#_delay_us] ; [] |1781| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1780,column 14,is_stmt,isa 0
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1780| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1780| 
        CMPB      AL,#0                 ; [CPU_] |1780| 
        B         $C$L551,EQ            ; [CPU_] |1780| 
        ; branchcc occurs ; [] |1780| 
	.dwpsn	file "../Source/prod.c",line 1784,column 7,is_stmt,isa 0
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1784| 
        ; call occurs [#_ad7738_getraw] ; [] |1784| 
	.dwpsn	file "../Source/prod.c",line 1785,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1785| 
        ADDL      XAR4,ACC              ; [CPU_] |1785| 
        MOVL      XAR0,#20              ; [CPU_] |1785| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1785| 
        MOVL      XAR0,#20              ; [CPU_] |1785| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1785| 
        ASR64     ACC:P,16              ; [CPU_] |1785| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1785| 
        MOVL      XAR0,#20              ; [CPU_] |1785| 
        ASR64     ACC:P,16              ; [CPU_] |1785| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1785| 
        MOVL      XAR0,#20              ; [CPU_] |1785| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1785| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1785| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1785| 
        MOVL      *-SP[32],P            ; [CPU_] |1785| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1785| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1779| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1779| 
        MOVB      ACC,#0                ; [CPU_] |1779| 
        SUBB      ACC,#1                ; [CPU_] |1779| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1779| 
        B         $C$L552,NEQ           ; [CPU_] |1779| 
        ; branchcc occurs ; [] |1779| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1787,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1787| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1787| 
        ; call occurs [#_scia_puts] ; [] |1787| 
	.dwpsn	file "../Source/prod.c",line 1789,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1789| 
        MOVL      XAR0,#52              ; [CPU_] |1789| 
        MOVL      ACC,XAR1              ; [CPU_] |1789| 
        ADDB      ACC,#96               ; [CPU_] |1789| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1789| 
        MOVL      XAR0,#40              ; [CPU_] |1789| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1789| 
        MOV       T,*-SP[62]            ; [CPU_] |1789| 
        MOVB      AL,#10                ; [CPU_] |1789| 
        MPYU      ACC,T,AL              ; [CPU_] |1789| 
        ADDL      ACC,XAR6              ; [CPU_] |1789| 
        ADDB      ACC,#42               ; [CPU_] |1789| 
        MOVL      XAR4,ACC              ; [CPU_] |1789| 
        MOVL      XAR0,#42              ; [CPU_] |1789| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1789| 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        B         $C$L561,UNC           ; [CPU_] |1791| 
        ; branch occurs ; [] |1791| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1874,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1874| 
        MOVB      AL,#40                ; [CPU_] |1874| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1874| 
        ; call occurs [#_lcd_puts] ; [] |1874| 
	.dwpsn	file "../Source/prod.c",line 1876,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1876| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1876| 
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1879| 
	.dwpsn	file "../Source/prod.c",line 1876,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1876| 
	.dwpsn	file "../Source/prod.c",line 1877,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1877| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1877| 
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1879| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1879| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1879| 
        MOVL      XAR0,#70              ; [CPU_] |1879| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1879| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1879| 
        MOV       ACC,AL << 1           ; [CPU_] |1879| 
        ADDL      ACC,XAR6              ; [CPU_] |1879| 
        MOVL      XAR4,ACC              ; [CPU_] |1879| 
        MOVL      XAR0,#44              ; [CPU_] |1879| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1879| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1879| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1879| 
        MOVL      XAR4,XAR1             ; [CPU_] |1879| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_sprintf")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1879| 
        ; call occurs [#_sprintf] ; [] |1879| 
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1882| 
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1879| 
	.dwpsn	file "../Source/prod.c",line 1882,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1882| 
        MOV       AL,#1024              ; [CPU_] |1882| 
        MOVL      XAR5,XAR1             ; [CPU_] |1882| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1882| 
        ; call occurs [#_scia_getparam] ; [] |1882| 
	.dwpsn	file "../Source/prod.c",line 1883,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1883| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1883| 
        ; call occurs [#_scia_puts] ; [] |1883| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_strtod")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1885,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1885| 
        MOV       AH,#0                 ; [CPU_] |1885| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1885| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1885| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1885| 
        ; call occurs [#FS$$CMP] ; [] |1885| 
        CMPB      AL,#0                 ; [CPU_] |1885| 
        B         $C$L555,NEQ           ; [CPU_] |1885| 
        ; branchcc occurs ; [] |1885| 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1886| 
        MOV       AH,#16314             ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1887,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1887| 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1887,column 7,is_stmt,isa 0
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1887| 
        ; call occurs [#_scia_puts] ; [] |1887| 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1889,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1889| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1889| 
        ; call occurs [#_scia_puts] ; [] |1889| 
	.dwpsn	file "../Source/prod.c",line 1891,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1891| 
        MOV       AL,#1024              ; [CPU_] |1891| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1891| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1891| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1891| 
        ; call occurs [#_scia_getparam] ; [] |1891| 
	.dwpsn	file "../Source/prod.c",line 1894,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1894| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1894| 
        ; call occurs [#_scia_puts] ; [] |1894| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1896,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1896| 
        MOV       *-SP[52],AL           ; [CPU_] |1896| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1897,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1897| 
        B         $C$L558,LEQ           ; [CPU_] |1897| 
        ; branchcc occurs ; [] |1897| 
	.dwpsn	file "../Source/prod.c",line 1899,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1899| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1899| 
        ; call occurs [#_shunt_switch] ; [] |1899| 
        MOV       *-SP[51],#49          ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1901,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1901| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_delay_us")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1901| 
        ; call occurs [#_delay_us] ; [] |1901| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1900,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1900| 
        MOVZ      AR0,AR6               ; [CPU_] |1900| 
        MOV       *-SP[51],AR6          ; [CPU_] |1900| 
        CMP       AR0,#-1               ; [CPU_] |1900| 
        B         $C$L557,NEQ           ; [CPU_] |1900| 
        ; branchcc occurs ; [] |1900| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1904,column 8,is_stmt,isa 0
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1904| 
        ; call occurs [#_maf_rst] ; [] |1904| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1906,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1906| 
        SPM       #0                    ; [CPU_] 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_delay_us")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1906| 
        ; call occurs [#_delay_us] ; [] |1906| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1909,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1909| 
	.dwpsn	file "../Source/prod.c",line 1910,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1910| 
	.dwpsn	file "../Source/prod.c",line 1909,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1909| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1909| 
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1911| 
	.dwpsn	file "../Source/prod.c",line 1910,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1910| 
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1911| 
        MOVB      ACC,#0                ; [CPU_] |1911| 
        SUBB      ACC,#1                ; [CPU_] |1911| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1911| 
        B         $C$L560,EQ            ; [CPU_] |1911| 
        ; branchcc occurs ; [] |1911| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 1912,column 15,is_stmt,isa 0
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1912| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1912| 
        CMPB      AL,#0                 ; [CPU_] |1912| 
        B         $C$L562,EQ            ; [CPU_] |1912| 
        ; branchcc occurs ; [] |1912| 
	.dwpsn	file "../Source/prod.c",line 1916,column 8,is_stmt,isa 0
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1916| 
        ; call occurs [#_ad7738_getraw] ; [] |1916| 
	.dwpsn	file "../Source/prod.c",line 1917,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1917| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1917| 
        ADDL      XAR4,ACC              ; [CPU_] |1917| 
        MOVL      XAR0,#18              ; [CPU_] |1917| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1917| 
        MOVL      XAR0,#18              ; [CPU_] |1917| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1917| 
        ASR64     ACC:P,16              ; [CPU_] |1917| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1917| 
        MOVL      XAR0,#18              ; [CPU_] |1917| 
        ASR64     ACC:P,16              ; [CPU_] |1917| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1917| 
        MOVL      XAR0,#18              ; [CPU_] |1917| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1917| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1917| 
        MOVL      XAR0,#18              ; [CPU_] |1917| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1917| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1917| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1917| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1911| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1911| 
        MOVB      ACC,#0                ; [CPU_] |1911| 
        SUBB      ACC,#1                ; [CPU_] |1911| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1911| 
        B         $C$L559,NEQ           ; [CPU_] |1911| 
        ; branchcc occurs ; [] |1911| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1896,column 18,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |1896| 
        ADDB      XAR1,#4               ; [CPU_] |1896| 
        MOV       AL,*-SP[52]           ; [CPU_] |1896| 
        CMPB      AL,#2                 ; [CPU_] |1896| 
        B         $C$L556,LT            ; [CPU_] |1896| 
        ; branchcc occurs ; [] |1896| 
	.dwpsn	file "../Source/prod.c",line 1921,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1921| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1921| 
        ; call occurs [#_shunt_switch] ; [] |1921| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1923,column 6,is_stmt,isa 0
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1923| 
        ; call occurs [#_maf_rst] ; [] |1923| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1926,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1926| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1926| 
        ; call occurs [#_scia_puts] ; [] |1926| 
	.dwpsn	file "../Source/prod.c",line 1928,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1928| 
        MOVB      AL,#10                ; [CPU_] |1928| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1928| 
        MOV       T,*-SP[62]            ; [CPU_] |1928| 
        MPYU      ACC,T,AL              ; [CPU_] |1928| 
        MOVL      XAR0,#88              ; [CPU_] |1928| 
        ADDL      ACC,XAR6              ; [CPU_] |1928| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1928| 
        MOV       AL,#16384             ; [CPU_] |1928| 
        MOV       AH,#17948             ; [CPU_] |1928| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1928| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1928| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1928| 
        ; call occurs [#FS$$MPY] ; [] |1928| 
        MOVL      XAR3,ACC              ; [CPU_] |1928| 
        MOVL      P,*-SP[28]            ; [CPU_] |1928| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1928| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1928| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1928| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1928| 
        ; call occurs [#LL$$TOFS] ; [] |1928| 
        MOVL      XAR0,#88              ; [CPU_] |1928| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1928| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1928| 
        MOVB      XAR1,#44              ; [CPU_] |1928| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1928| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1928| 
        ; call occurs [#FS$$MPY] ; [] |1928| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1928| 
        MOVL      ACC,XAR3              ; [CPU_] |1928| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1928| 
        ; call occurs [#FS$$DIV] ; [] |1928| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1928| 
        MOVB      XAR0,#96              ; [CPU_] |1928| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1928| 
	.dwpsn	file "../Source/prod.c",line 1930,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1930| 
        MOVL      ACC,XAR1              ; [CPU_] |1930| 
        ADDB      ACC,#96               ; [CPU_] |1930| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1930| 
        MOVL      XAR0,#88              ; [CPU_] |1930| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1930| 
        MOVL      XAR0,#42              ; [CPU_] |1930| 
        ADDB      XAR4,#42              ; [CPU_] |1930| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1930| 
$C$L561:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1930| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1930| 
        ; call occurs [#FS$$NEG] ; [] |1930| 
        MOVB      XAR0,#96              ; [CPU_] |1930| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1930| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1930| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1930| 
        ; call occurs [#FS$$MPY] ; [] |1930| 
        MOVL      XAR0,#88              ; [CPU_] |1930| 
        MOVL      P,*-SP[32]            ; [CPU_] |1930| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1930| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1930| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1930| 
        ; call occurs [#LL$$TOFS] ; [] |1930| 
        MOVL      XAR0,#88              ; [CPU_] |1930| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1930| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1930| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1930| 
        ; call occurs [#FS$$MPY] ; [] |1930| 
        MOVL      XAR6,ACC              ; [CPU_] |1930| 
        MOV       AL,#16384             ; [CPU_] |1930| 
        MOV       AH,#17948             ; [CPU_] |1930| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1930| 
        MOVL      ACC,XAR6              ; [CPU_] |1930| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1930| 
        ; call occurs [#FS$$DIV] ; [] |1930| 
        MOVB      XAR0,#118             ; [CPU_] |1930| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1930| 
	.dwpsn	file "../Source/prod.c",line 1932,column 6,is_stmt,isa 0
        B         $C$L577,UNC           ; [CPU_] |1932| 
        ; branch occurs ; [] |1932| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1913,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1913| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_delay_us")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1913| 
        ; call occurs [#_delay_us] ; [] |1913| 
	.dwpsn	file "../Source/prod.c",line 1912,column 15,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1912| 
        ; branch occurs ; [] |1912| 
$C$L563:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1795,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1795| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1800,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1800| 
        MOVL      XAR0,#44              ; [CPU_] |1800| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1800| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1800| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1800| 
        MOVL      XAR4,XAR1             ; [CPU_] |1800| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_sprintf")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1800| 
        ; call occurs [#_sprintf] ; [] |1800| 
	.dwpsn	file "../Source/prod.c",line 1801,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1801| 
	.dwpsn	file "../Source/prod.c",line 1800,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1800| 
	.dwpsn	file "../Source/prod.c",line 1801,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1801| 
        MOV       AL,#1024              ; [CPU_] |1801| 
        MOVL      XAR5,XAR1             ; [CPU_] |1801| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1801| 
        ; call occurs [#_scia_getparam] ; [] |1801| 
        MOVL      XAR4,XAR1             ; [CPU_] |1801| 
	.dwpsn	file "../Source/prod.c",line 1802,column 7,is_stmt,isa 0
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_atoi")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1802| 
        ; call occurs [#_atoi] ; [] |1802| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1802| 
        MOVB      XAR0,#46              ; [CPU_] |1802| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1802| 
        MOVL      XAR0,#86              ; [CPU_] |1802| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1802| 
	.dwpsn	file "../Source/prod.c",line 1803,column 7,is_stmt,isa 0
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1803| 
        ; call occurs [#_scia_puts] ; [] |1803| 
	.dwpsn	file "../Source/prod.c",line 1805,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1805| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1805| 
        CMPB      AL,#2                 ; [CPU_] |1805| 
        B         $C$L587,LT            ; [CPU_] |1805| 
        ; branchcc occurs ; [] |1805| 
        CMPB      AL,#12                ; [CPU_] |1805| 
        B         $C$L587,GT            ; [CPU_] |1805| 
        ; branchcc occurs ; [] |1805| 
	.dwpsn	file "../Source/prod.c",line 1810,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1810| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1810| 
        ; call occurs [#_scia_puts] ; [] |1810| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1812| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1812| 
        MOVL      XAR0,#44              ; [CPU_] |1812| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1812| 
        ADDB      XAR7,#46              ; [CPU_] |1812| 
        MOV       AL,*XAR7              ; [CPU_] |1812| 
        MOV       *-SP[3],AL            ; [CPU_] |1812| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1812| 
        MOVL      XAR4,XAR1             ; [CPU_] |1812| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_sprintf")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1812| 
        ; call occurs [#_sprintf] ; [] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1813| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 6,is_stmt,isa 0
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1813| 
        ; call occurs [#_lcd_puts] ; [] |1813| 
	.dwpsn	file "../Source/prod.c",line 1816,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1816,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1816| 
	.dwpsn	file "../Source/prod.c",line 1816,column 11,is_stmt,isa 0
        B         $C$L566,UNC           ; [CPU_] |1816| 
        ; branch occurs ; [] |1816| 
$C$L565:    
        MOV       AL,*-SP[52]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1817,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1817| 
        SUB       AL,*-SP[51]           ; [CPU_] |1817| 
        ADDB      AL,#1                 ; [CPU_] |1817| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1817| 
        ; call occurs [#I$$TOFS] ; [] |1817| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1817| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1817| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1817| 
        ; call occurs [#FS$$MPY] ; [] |1817| 
        MOVL      XAR0,#88              ; [CPU_] |1817| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1817| 
        MOV       AL,*-SP[51]           ; [CPU_] |1817| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1817| 
        ; call occurs [#I$$TOFS] ; [] |1817| 
        MOVL      XAR0,#88              ; [CPU_] |1817| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1817| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1817| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1817| 
        ; call occurs [#FS$$DIV] ; [] |1817| 
        MOVZ      AR6,*-SP[52]          ; [CPU_] |1817| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1817| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1817| 
        ADDL      ACC,XAR1              ; [CPU_] |1817| 
        MOVL      XAR4,ACC              ; [CPU_] |1817| 
        MOVB      XAR0,#48              ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1816,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1817,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1816,column 38,is_stmt,isa 0
        MOV       *-SP[52],AR6          ; [CPU_] |1816| 
$C$L566:    
	.dwpsn	file "../Source/prod.c",line 1816,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1816| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1816| 
        MOV       *-SP[51],AL           ; [CPU_] |1816| 
        CMP       AL,*-SP[52]           ; [CPU_] |1816| 
        B         $C$L565,GT            ; [CPU_] |1816| 
        ; branchcc occurs ; [] |1816| 
	.dwpsn	file "../Source/prod.c",line 1822,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |1822| 
        B         $C$L569,UNC           ; [CPU_] |1822| 
        ; branch occurs ; [] |1822| 
$C$L567:    
        MOVZ      AR6,*-SP[52]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1823,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1823| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1823| 
        MOVL      XAR0,#44              ; [CPU_] |1823| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1823| 
        ADDL      ACC,XAR1              ; [CPU_] |1823| 
        ADDB      ACC,#48               ; [CPU_] |1823| 
        MOVL      XAR1,ACC              ; [CPU_] |1823| 
        MOVB      AL,#1                 ; [CPU_] |1823| 
        ADD       AL,AR6                ; [CPU_] |1823| 
        MOV       *-SP[3],AL            ; [CPU_] |1823| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1823| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1823| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1823| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_sprintf")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1823| 
        ; call occurs [#_sprintf] ; [] |1823| 
        MOVL      XAR0,#44              ; [CPU_] |1823| 
	.dwpsn	file "../Source/prod.c",line 1825,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1825| 
	.dwpsn	file "../Source/prod.c",line 1823,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1823| 
	.dwpsn	file "../Source/prod.c",line 1825,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1825| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1825| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1825| 
        ; call occurs [#_scia_getparam] ; [] |1825| 
        CMPB      AL,#0                 ; [CPU_] |1825| 
        B         $C$L568,EQ            ; [CPU_] |1825| 
        ; branchcc occurs ; [] |1825| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_strtod")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1829,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1829| 
$C$L568:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1831,column 7,is_stmt,isa 0
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1831| 
        ; call occurs [#_scia_puts] ; [] |1831| 
	.dwpsn	file "../Source/prod.c",line 1832,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1832| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1832| 
        ; call occurs [#_scia_puts] ; [] |1832| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1822,column 38,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |1822| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] 
$C$L569:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1822,column 18,is_stmt,isa 0
        CMP       AL,*-SP[52]           ; [CPU_] |1822| 
        B         $C$L567,GT            ; [CPU_] |1822| 
        ; branchcc occurs ; [] |1822| 
	.dwpsn	file "../Source/prod.c",line 1838,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |1838| 
        B         $C$L574,UNC           ; [CPU_] |1838| 
        ; branch occurs ; [] |1838| 
$C$L570:    
        MOVZ      AR6,*-SP[52]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1839| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1839| 
        ADDL      ACC,XAR1              ; [CPU_] |1839| 
        ADDB      ACC,#48               ; [CPU_] |1839| 
        MOVL      XAR1,ACC              ; [CPU_] |1839| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1839| 
        MOVL      XAR0,#70              ; [CPU_] |1839| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1839| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1839| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1839| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1839| 
        ANDB      AL,#0x0f              ; [CPU_] |1839| 
        MOV       ACC,AL << 1           ; [CPU_] |1839| 
        ADDL      ACC,XAR7              ; [CPU_] |1839| 
        MOVL      XAR4,ACC              ; [CPU_] |1839| 
        MOVL      XAR0,#44              ; [CPU_] |1839| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1839| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1839| 
        MOVB      AL,#1                 ; [CPU_] |1839| 
        ADD       AL,AR6                ; [CPU_] |1839| 
        MOV       *-SP[7],AL            ; [CPU_] |1839| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1839| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_sprintf")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1839| 
        ; call occurs [#_sprintf] ; [] |1839| 
        MOVL      XAR0,#44              ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1843,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1843| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1843,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1843| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1843| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1843| 
        ; call occurs [#_scia_getparam] ; [] |1843| 
	.dwpsn	file "../Source/prod.c",line 1844,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1844| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1844| 
        ; call occurs [#_scia_puts] ; [] |1844| 
	.dwpsn	file "../Source/prod.c",line 1846,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1847| 
	.dwpsn	file "../Source/prod.c",line 1846,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1846,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1848,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1846,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1848,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1848| 
        MOVB      ACC,#0                ; [CPU_] |1848| 
        SUBB      ACC,#1                ; [CPU_] |1848| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1848| 
        B         $C$L573,EQ            ; [CPU_] |1848| 
        ; branchcc occurs ; [] |1848| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1849,column 15,is_stmt,isa 0
        B         $C$L572,UNC           ; [CPU_] |1849| 
        ; branch occurs ; [] |1849| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1850,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1850| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_delay_us")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1850| 
        ; call occurs [#_delay_us] ; [] |1850| 
$C$L572:    
	.dwpsn	file "../Source/prod.c",line 1849,column 15,is_stmt,isa 0
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1849| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1849| 
        CMPB      AL,#0                 ; [CPU_] |1849| 
        B         $C$L571,EQ            ; [CPU_] |1849| 
        ; branchcc occurs ; [] |1849| 
	.dwpsn	file "../Source/prod.c",line 1853,column 8,is_stmt,isa 0
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1853| 
        ; call occurs [#_ad7738_getraw] ; [] |1853| 
	.dwpsn	file "../Source/prod.c",line 1854,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1854| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1854| 
        ADDL      XAR4,ACC              ; [CPU_] |1854| 
        MOVL      XAR0,#16              ; [CPU_] |1854| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1854| 
        MOVL      XAR0,#16              ; [CPU_] |1854| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1854| 
        ASR64     ACC:P,16              ; [CPU_] |1854| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1854| 
        MOVL      XAR0,#16              ; [CPU_] |1854| 
        ASR64     ACC:P,16              ; [CPU_] |1854| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1854| 
        MOVL      XAR0,#16              ; [CPU_] |1854| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1854| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1854| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1854| 
        MOVL      *-SP[32],P            ; [CPU_] |1854| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1854| 
	.dwpsn	file "../Source/prod.c",line 1848,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1848| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1848| 
        MOVB      ACC,#0                ; [CPU_] |1848| 
        SUBB      ACC,#1                ; [CPU_] |1848| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1848| 
        B         $C$L572,NEQ           ; [CPU_] |1848| 
        ; branchcc occurs ; [] |1848| 
$C$L573:    
	.dwpsn	file "../Source/prod.c",line 1856,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1856| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1856| 
        ; call occurs [#_scia_puts] ; [] |1856| 
	.dwpsn	file "../Source/prod.c",line 1857,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1857| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1857| 
        MOV       *-SP[2],#0            ; [CPU_] |1857| 
        MOV       *-SP[1],#0            ; [CPU_] |1857| 
        MOVL      P,*-SP[32]            ; [CPU_] |1857| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1857| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1857| 
        ; call occurs [#LL$$DIV] ; [] |1857| 
        ADDB      XAR1,#24              ; [CPU_] |1857| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1857| 
	.dwpsn	file "../Source/prod.c",line 1838,column 38,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |1838| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1838,column 18,is_stmt,isa 0
        CMP       AL,*-SP[52]           ; [CPU_] |1838| 
        B         $C$L570,GT            ; [CPU_] |1838| 
        ; branchcc occurs ; [] |1838| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[62]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1861,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |1861| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L576,UNC           ; [CPU_] |1861| 
        ; branch occurs ; [] |1861| 
$C$L575:    
        MOV       AL,*-SP[52]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1862| 
        ADDL      XAR1,ACC              ; [CPU_] |1862| 
        MOVB      XAR0,#48              ; [CPU_] |1862| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1862| 
        MOVB      XAR0,#50              ; [CPU_] |1862| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1862| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1862| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1862| 
        ; call occurs [#FS$$SUB] ; [] |1862| 
        MOVL      XAR0,#88              ; [CPU_] |1862| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1862| 
        MOVB      XAR0,#74              ; [CPU_] |1862| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1862| 
        MOVB      XAR0,#72              ; [CPU_] |1862| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1862| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1862| 
        ; call occurs [#L$$TOFS] ; [] |1862| 
        MOVL      XAR0,#88              ; [CPU_] |1862| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1862| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1862| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1862| 
        ; call occurs [#FS$$DIV] ; [] |1862| 
        MOVL      XAR0,#42              ; [CPU_] |1862| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1862| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1862| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1862| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1862| 
        ; call occurs [#FS$$DIV] ; [] |1862| 
        MOVB      XAR0,#96              ; [CPU_] |1862| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1862| 
	.dwpsn	file "../Source/prod.c",line 1866,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1866| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1866| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1866| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1866| 
        ; call occurs [#FS$$MPY] ; [] |1866| 
        MOVL      XAR0,#88              ; [CPU_] |1866| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1866| 
        MOVB      XAR0,#72              ; [CPU_] |1866| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1866| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1866| 
        ; call occurs [#L$$TOFS] ; [] |1866| 
        MOVL      XAR0,#88              ; [CPU_] |1866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1866| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1866| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1866| 
        ; call occurs [#FS$$MPY] ; [] |1866| 
        MOVB      XAR0,#48              ; [CPU_] |1866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1866| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1866| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1866| 
        ; call occurs [#FS$$SUB] ; [] |1866| 
        MOVB      XAR0,#118             ; [CPU_] |1866| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1866| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1861,column 42,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |1861| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[51],AL           ; [CPU_] 
$C$L576:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1870,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1870| 
        CMP       AL,*-SP[52]           ; [CPU_] |1870| 
        B         $C$L575,GT            ; [CPU_] |1870| 
        ; branchcc occurs ; [] |1870| 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 1941,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1941| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1941| 
        MOV       AL,#1024              ; [CPU_] |1941| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1941| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1941| 
        ; call occurs [#_scia_getparam] ; [] |1941| 
	.dwpsn	file "../Source/prod.c",line 1944,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1944| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1944| 
        ; call occurs [#_scia_puts] ; [] |1944| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1946,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1946| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[52],AL           ; [CPU_] |1946| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 1947,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1947| 
        B         $C$L580,LEQ           ; [CPU_] |1947| 
        ; branchcc occurs ; [] |1947| 
	.dwpsn	file "../Source/prod.c",line 1949,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1949| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1949| 
        ; call occurs [#_shunt_switch] ; [] |1949| 
        MOV       *-SP[51],#49          ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1951,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1951| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_delay_us")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1951| 
        ; call occurs [#_delay_us] ; [] |1951| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |1951| 
	.dwpsn	file "../Source/prod.c",line 1950,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1950| 
        MOVZ      AR0,AR6               ; [CPU_] |1950| 
        MOV       *-SP[51],AR6          ; [CPU_] |1950| 
        CMP       AR0,#-1               ; [CPU_] |1950| 
        B         $C$L579,NEQ           ; [CPU_] |1950| 
        ; branchcc occurs ; [] |1950| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1954,column 7,is_stmt,isa 0
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1954| 
        ; call occurs [#_maf_rst] ; [] |1954| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1956,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1956| 
        SPM       #0                    ; [CPU_] 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_delay_us")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1956| 
        ; call occurs [#_delay_us] ; [] |1956| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 1959,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1959| 
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1960| 
	.dwpsn	file "../Source/prod.c",line 1959,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |1959| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1959| 
	.dwpsn	file "../Source/prod.c",line 1961,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1961| 
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1960| 
	.dwpsn	file "../Source/prod.c",line 1961,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1961| 
        MOVB      ACC,#0                ; [CPU_] |1961| 
        SUBB      ACC,#1                ; [CPU_] |1961| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1961| 
        B         $C$L582,EQ            ; [CPU_] |1961| 
        ; branchcc occurs ; [] |1961| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 1962,column 14,is_stmt,isa 0
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1962| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1962| 
        CMPB      AL,#0                 ; [CPU_] |1962| 
        B         $C$L586,EQ            ; [CPU_] |1962| 
        ; branchcc occurs ; [] |1962| 
	.dwpsn	file "../Source/prod.c",line 1966,column 7,is_stmt,isa 0
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1966| 
        ; call occurs [#_ad7738_getraw] ; [] |1966| 
	.dwpsn	file "../Source/prod.c",line 1967,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1967| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1967| 
        ADDL      XAR4,ACC              ; [CPU_] |1967| 
        MOVL      XAR0,#14              ; [CPU_] |1967| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1967| 
        MOVL      XAR0,#14              ; [CPU_] |1967| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1967| 
        ASR64     ACC:P,16              ; [CPU_] |1967| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1967| 
        MOVL      XAR0,#14              ; [CPU_] |1967| 
        ASR64     ACC:P,16              ; [CPU_] |1967| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1967| 
        MOVL      XAR0,#14              ; [CPU_] |1967| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |1967| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1967| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |1967| 
        MOVL      *+XAR3[0],P           ; [CPU_] |1967| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1967| 
	.dwpsn	file "../Source/prod.c",line 1961,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1961| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1961| 
        MOVB      ACC,#0                ; [CPU_] |1961| 
        SUBB      ACC,#1                ; [CPU_] |1961| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1961| 
        B         $C$L581,NEQ           ; [CPU_] |1961| 
        ; branchcc occurs ; [] |1961| 
$C$L582:    
	.dwpsn	file "../Source/prod.c",line 1969,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1969| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1969| 
        MOV       *-SP[2],#0            ; [CPU_] |1969| 
        MOV       *-SP[1],#0            ; [CPU_] |1969| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |1969| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |1969| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1969| 
        ; call occurs [#LL$$DIV] ; [] |1969| 
	.dwpsn	file "../Source/prod.c",line 1972,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1972| 
        MOVB      XAR0,#46              ; [CPU_] |1972| 
	.dwpsn	file "../Source/prod.c",line 1969,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |1969| 
	.dwpsn	file "../Source/prod.c",line 1971,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |1971| 
	.dwpsn	file "../Source/prod.c",line 1969,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1969| 
	.dwpsn	file "../Source/prod.c",line 1972,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1972| 
        CMPB      AL,#2                 ; [CPU_] |1972| 
        B         $C$L585,LEQ           ; [CPU_] |1972| 
        ; branchcc occurs ; [] |1972| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1973,column 7,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |1973| 
        ; branch occurs ; [] |1973| 
$C$L583:    
	.dwpsn	file "../Source/prod.c",line 1974,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |1974| 
$C$L584:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1973,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |1973| 
        B         $C$L585,HIS           ; [CPU_] |1973| 
        ; branchcc occurs ; [] |1973| 
        MOVB      AL,#1                 ; [CPU_] |1973| 
        ADD       AL,AR4                ; [CPU_] |1973| 
        MOVZ      AR5,AL                ; [CPU_] |1973| 
        MOV       ACC,AR5 << 1          ; [CPU_] |1973| 
        ADDL      ACC,XAR1              ; [CPU_] |1973| 
        MOVL      XAR6,ACC              ; [CPU_] |1973| 
        MOVB      XAR0,#72              ; [CPU_] |1973| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |1973| 
        MOVL      XAR0,#12              ; [CPU_] |1973| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1973| 
        MOVL      XAR0,#12              ; [CPU_] |1973| 
        ASR64     ACC:P,16              ; [CPU_] |1973| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1973| 
        MOVL      XAR0,#12              ; [CPU_] |1973| 
        ASR64     ACC:P,16              ; [CPU_] |1973| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1973| 
        MOVL      *-SP[4],P             ; [CPU_] |1973| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1973| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1973| 
        MOVL      P,*-SP[32]            ; [CPU_] |1973| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1247, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1973| 
        ; call occurs [#LL$$CMP] ; [] |1973| 
        CMPB      AL,#0                 ; [CPU_] |1973| 
        B         $C$L583,GT            ; [CPU_] |1973| 
        ; branchcc occurs ; [] |1973| 
$C$L585:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1977,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |1977| 
        ADDL      ACC,XAR1              ; [CPU_] |1977| 
        MOVL      XAR4,ACC              ; [CPU_] |1977| 
        MOVL      XAR0,#88              ; [CPU_] |1977| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1977| 
        MOVB      XAR0,#96              ; [CPU_] |1977| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1977| 
        MOVL      XAR0,#42              ; [CPU_] |1977| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1977| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1977| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1977| 
        ; call occurs [#FS$$MPY] ; [] |1977| 
        MOVL      XAR0,#36              ; [CPU_] |1977| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1977| 
        MOVL      P,*XAR3++             ; [CPU_] |1977| 
        MOVL      ACC,*XAR3++           ; [CPU_] |1977| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1977| 
        ; call occurs [#LL$$TOFS] ; [] |1977| 
        MOVL      XAR0,#36              ; [CPU_] |1977| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1977| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1977| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1977| 
        ; call occurs [#FS$$MPY] ; [] |1977| 
        MOVL      XAR0,#88              ; [CPU_] |1977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1977| 
        MOVB      XAR1,#118             ; [CPU_] |1977| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |1977| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1977| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1977| 
        ; call occurs [#FS$$ADD] ; [] |1977| 
        MOVL      XAR0,#38              ; [CPU_] |1977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1977| 
        MOVL      XAR0,#38              ; [CPU_] |1977| 
        MOVL      *XAR4++,ACC           ; [CPU_] |1977| 
	.dwpsn	file "../Source/prod.c",line 1946,column 17,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |1946| 
	.dwpsn	file "../Source/prod.c",line 1977,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1977| 
        MOV       AL,*-SP[52]           ; [CPU_] |1977| 
	.dwpsn	file "../Source/prod.c",line 1946,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1946| 
        B         $C$L578,LT            ; [CPU_] |1946| 
        ; branchcc occurs ; [] |1946| 
	.dwpsn	file "../Source/prod.c",line 1981,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1981| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1981| 
        ; call occurs [#_shunt_switch] ; [] |1981| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1983,column 5,is_stmt,isa 0
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1983| 
        ; call occurs [#_maf_rst] ; [] |1983| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1986,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1986| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1986| 
        ; call occurs [#_scia_puts] ; [] |1986| 
	.dwpsn	file "../Source/prod.c",line 1988,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |1988| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1988| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1988| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1988| 
        ; call occurs [#FS$$SUB] ; [] |1988| 
        MOVL      XAR0,#36              ; [CPU_] |1988| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1988| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1988| 
        MOVB      XAR0,#140             ; [CPU_] |1988| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1988| 
	.dwpsn	file "../Source/prod.c",line 1991,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |1991| 
        MOV       AL,#0                 ; [CPU_] |1991| 
        MOV       AH,#0                 ; [CPU_] |1991| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1991| 
	.dwpsn	file "../Source/prod.c",line 1992,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |1992| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1992| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1992| 
	.dwpsn	file "../Source/prod.c",line 1993,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |1993| 
        MOV       AL,#0                 ; [CPU_] |1993| 
        MOV       AH,#0                 ; [CPU_] |1993| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1993| 
	.dwpsn	file "../Source/prod.c",line 1994,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |1994| 
        MOV       AL,*-SP[62]           ; [CPU_] |1994| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1994| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1997,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1997| 
        MOVB      AL,#152               ; [CPU_] |1997| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1997| 
        MOV       T,*-SP[61]            ; [CPU_] |1997| 
        MOVL      XAR7,XAR4             ; [CPU_] |1997| 
        MPYU      ACC,T,AL              ; [CPU_] |1997| 
        ADDL      ACC,XAR6              ; [CPU_] |1997| 
        ADDB      ACC,#82               ; [CPU_] |1997| 
        MOVL      XAR5,ACC              ; [CPU_] |1997| 
        MOVL      XAR0,#42              ; [CPU_] |1997| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1997| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1997| 
        MOV       AL,*-SP[61]           ; [CPU_] |1997| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2000,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2000| 
	.dwpsn	file "../Source/prod.c",line 2002,column 5,is_stmt,isa 0
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2002| 
        ; call occurs [#_ad7738_setcal] ; [] |2002| 
        MOVL      XAR0,#78              ; [CPU_] |2002| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2002| 
	.dwpsn	file "../Source/prod.c",line 2003,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |2003| 
        MOVL      XAR1,ACC              ; [CPU_] |2003| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2003| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2003| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2003| 
	.dwpsn	file "../Source/prod.c",line 2004,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2004| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2004| 
        ; call occurs [#_ad7738_resetvall] ; [] |2004| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2007,column 5,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2007| 
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2007| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2007| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2007| 
        MOVL      XAR0,#44              ; [CPU_] |2007| 
        MOV       *-SP[3],AL            ; [CPU_] |2007| 
        MOV       AL,*-SP[63]           ; [CPU_] |2007| 
        MOV       *-SP[4],AL            ; [CPU_] |2007| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2007| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2007| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_sprintf")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2007| 
        ; call occurs [#_sprintf] ; [] |2007| 
        MOVL      XAR4,XAR1             ; [CPU_] |2007| 
	.dwpsn	file "../Source/prod.c",line 2009,column 5,is_stmt,isa 0
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2009| 
        ; call occurs [#_scia_puts] ; [] |2009| 
        MOV       AL,*-SP[61]           ; [CPU_] |2009| 
	.dwpsn	file "../Source/prod.c",line 2010,column 5,is_stmt,isa 0
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2010| 
        ; call occurs [#_print_sensor] ; [] |2010| 
	.dwpsn	file "../Source/prod.c",line 2015,column 5,is_stmt,isa 0
        B         $C$L527,UNC           ; [CPU_] |2015| 
        ; branch occurs ; [] |2015| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 1963,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1963| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_delay_us")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1963| 
        ; call occurs [#_delay_us] ; [] |1963| 
	.dwpsn	file "../Source/prod.c",line 1962,column 14,is_stmt,isa 0
        B         $C$L581,UNC           ; [CPU_] |1962| 
        ; branch occurs ; [] |1962| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1807,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1807| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1807| 
        ; call occurs [#_scia_puts] ; [] |1807| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1799| 
        ; branch occurs ; [] |1799| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1737,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1737| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1737| 
        ; call occurs [#_scia_puts] ; [] |1737| 
	.dwpsn	file "../Source/prod.c",line 1731,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1731| 
        ; branch occurs ; [] |1731| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1652,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1652| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1652| 
        ; call occurs [#_scia_puts] ; [] |1652| 
	.dwpsn	file "../Source/prod.c",line 1642,column 5,is_stmt,isa 0
        B         $C$L535,UNC           ; [CPU_] |1642| 
        ; branch occurs ; [] |1642| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1635,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1635| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1635| 
        ; call occurs [#_scia_puts] ; [] |1635| 
	.dwpsn	file "../Source/prod.c",line 1627,column 5,is_stmt,isa 0
        B         $C$L534,UNC           ; [CPU_] |1627| 
        ; branch occurs ; [] |1627| 
$C$L591:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1349,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1349| 
        B         $C$L625,LO            ; [CPU_] |1349| 
        ; branchcc occurs ; [] |1349| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1353,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1353| 
        CMPB      AL,#67                ; [CPU_] |1353| 
        B         $C$L592,EQ            ; [CPU_] |1353| 
        ; branchcc occurs ; [] |1353| 
        CMPB      AL,#68                ; [CPU_] |1353| 
        B         $C$L625,NEQ           ; [CPU_] |1353| 
        ; branchcc occurs ; [] |1353| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1358,column 5,is_stmt,isa 0
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_atoi")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1358| 
        ; call occurs [#_atoi] ; [] |1358| 
        MOV       *-SP[62],AL           ; [CPU_] |1358| 
	.dwpsn	file "../Source/prod.c",line 1360,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1360| 
        CMPB      AL,#4                 ; [CPU_] |1360| 
        B         $C$L625,HIS           ; [CPU_] |1360| 
        ; branchcc occurs ; [] |1360| 
	.dwpsn	file "../Source/prod.c",line 1365,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1365| 
        MOV       AH,#0                 ; [CPU_] |1365| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1366,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1366| 
        MOV       AH,#0                 ; [CPU_] |1366| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1366| 
        MOV       AL,*-SP[63]           ; [CPU_] |1366| 
	.dwpsn	file "../Source/prod.c",line 1367,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1367| 
        B         $C$L596,LOS           ; [CPU_] |1367| 
        ; branchcc occurs ; [] |1367| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1367,column 10,is_stmt,isa 0
        MOV       *-SP[51],#3           ; [CPU_] |1367| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1368,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1368| 
        CMPB      AL,#88                ; [CPU_] |1368| 
        B         $C$L594,NEQ           ; [CPU_] |1368| 
        ; branchcc occurs ; [] |1368| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[51]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_strtod")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1370,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1370| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1373,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1373| 
        B         $C$L595,NEQ           ; [CPU_] |1373| 
        ; branchcc occurs ; [] |1373| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[51]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_strtod")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1375,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1375| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1367,column 17,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |1367| 
        MOV       AL,*-SP[63]           ; [CPU_] |1367| 
        ADDB      XAR1,#1               ; [CPU_] |1367| 
        CMP       AL,*-SP[51]           ; [CPU_] |1367| 
        B         $C$L593,HI            ; [CPU_] |1367| 
        ; branchcc occurs ; [] |1367| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1380,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1363,column 5,is_stmt,isa 0
        DEC       *-SP[62]              ; [CPU_] |1363| 
	.dwpsn	file "../Source/prod.c",line 1380,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1380| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1380| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1380| 
        ; call occurs [#FS$$CMP] ; [] |1380| 
        CMPB      AL,#0                 ; [CPU_] |1380| 
        B         $C$L625,EQ            ; [CPU_] |1380| 
        ; branchcc occurs ; [] |1380| 
	.dwpsn	file "../Source/prod.c",line 1384,column 5,is_stmt,isa 0
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1384| 
        ; call occurs [#_lcd_clear] ; [] |1384| 
	.dwpsn	file "../Source/prod.c",line 1385,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1385| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1385| 
        MOVL      XAR0,#44              ; [CPU_] |1385| 
        ADD       AL,*-SP[62]           ; [CPU_] |1385| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1385| 
        MOVZ      AR1,AL                ; [CPU_] |1385| 
        MOV       *-SP[63],AL           ; [CPU_] |1385| 
        MOV       *-SP[3],AL            ; [CPU_] |1385| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1385| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_sprintf")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1385| 
        ; call occurs [#_sprintf] ; [] |1385| 
        MOVL      XAR0,#44              ; [CPU_] |1385| 
	.dwpsn	file "../Source/prod.c",line 1386,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1386| 
	.dwpsn	file "../Source/prod.c",line 1385,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1385| 
	.dwpsn	file "../Source/prod.c",line 1386,column 5,is_stmt,isa 0
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1386| 
        ; call occurs [#_lcd_puts] ; [] |1386| 
	.dwpsn	file "../Source/prod.c",line 1387,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1387| 
        MOVL      XAR0,#44              ; [CPU_] |1387| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1387| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1387| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1387| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1387| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_sprintf")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1387| 
        ; call occurs [#_sprintf] ; [] |1387| 
        MOVL      XAR0,#44              ; [CPU_] |1387| 
	.dwpsn	file "../Source/prod.c",line 1388,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1388| 
	.dwpsn	file "../Source/prod.c",line 1387,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1387| 
	.dwpsn	file "../Source/prod.c",line 1388,column 5,is_stmt,isa 0
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1388| 
        ; call occurs [#_lcd_puts] ; [] |1388| 
	.dwpsn	file "../Source/prod.c",line 1389,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1389| 
        MOVL      XAR0,#44              ; [CPU_] |1389| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1389| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1389| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1389| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1389| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_sprintf")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1389| 
        ; call occurs [#_sprintf] ; [] |1389| 
        MOVL      XAR0,#44              ; [CPU_] |1389| 
	.dwpsn	file "../Source/prod.c",line 1390,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1390| 
	.dwpsn	file "../Source/prod.c",line 1389,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1389| 
	.dwpsn	file "../Source/prod.c",line 1390,column 5,is_stmt,isa 0
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1390| 
        ; call occurs [#_lcd_puts] ; [] |1390| 
	.dwpsn	file "../Source/prod.c",line 1392,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1392| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1392| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1392| 
        MOVL      XAR0,#38              ; [CPU_] |1392| 
        ADDB      ACC,#1                ; [CPU_] |1392| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1392| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1392| 
        CMPB      AL,#67                ; [CPU_] |1392| 
        B         $C$L619,EQ            ; [CPU_] |1392| 
        ; branchcc occurs ; [] |1392| 
        CMPB      AL,#68                ; [CPU_] |1392| 
        B         $C$L625,NEQ           ; [CPU_] |1392| 
        ; branchcc occurs ; [] |1392| 
	.dwpsn	file "../Source/prod.c",line 1445,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1445| 
        MOV       AH,#16672             ; [CPU_] |1445| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1445| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1445| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1445| 
        ; call occurs [#FS$$CMP] ; [] |1445| 
        CMPB      AL,#0                 ; [CPU_] |1445| 
        B         $C$L618,GT            ; [CPU_] |1445| 
        ; branchcc occurs ; [] |1445| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1445| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1445| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1445| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1445| 
        ; call occurs [#FS$$CMP] ; [] |1445| 
        CMPB      AL,#0                 ; [CPU_] |1445| 
        B         $C$L618,LT            ; [CPU_] |1445| 
        ; branchcc occurs ; [] |1445| 
        MOV       AL,#0                 ; [CPU_] |1445| 
        MOV       AH,#16672             ; [CPU_] |1445| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1445| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1445| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1445| 
        ; call occurs [#FS$$CMP] ; [] |1445| 
        CMPB      AL,#0                 ; [CPU_] |1445| 
        B         $C$L618,GT            ; [CPU_] |1445| 
        ; branchcc occurs ; [] |1445| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1445| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1445| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1445| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1445| 
        ; call occurs [#FS$$CMP] ; [] |1445| 
        CMPB      AL,#0                 ; [CPU_] |1445| 
        B         $C$L618,LT            ; [CPU_] |1445| 
        ; branchcc occurs ; [] |1445| 
	.dwpsn	file "../Source/prod.c",line 1453,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1453| 
        MOVB      AL,#0                 ; [CPU_] |1453| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1453| 
        ; call occurs [#_lcd_puts] ; [] |1453| 
	.dwpsn	file "../Source/prod.c",line 1455,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1455| 
        MOVL      XAR0,#44              ; [CPU_] |1455| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1455| 
        MOV       *-SP[3],AR1           ; [CPU_] |1455| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1455| 
        MOVL      XAR4,XAR1             ; [CPU_] |1455| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_sprintf")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1455| 
        ; call occurs [#_sprintf] ; [] |1455| 
        MOVL      XAR4,XAR1             ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1458,column 6,is_stmt,isa 0
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1458| 
        ; call occurs [#_scia_puts] ; [] |1458| 
	.dwpsn	file "../Source/prod.c",line 1459,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1459| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1459| 
        ; call occurs [#_scia_puts] ; [] |1459| 
	.dwpsn	file "../Source/prod.c",line 1460,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1460| 
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1460| 
        ; call occurs [#_dac_setmode] ; [] |1460| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[62]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[62]           ; [CPU_] 
        MOV       *-SP[52],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[51],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1463,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1463| 
	.dwpsn	file "../Source/prod.c",line 1464,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1464| 
        MOV       AH,#0                 ; [CPU_] |1464| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1464| 
        MOVL      ACC,XAR1              ; [CPU_] |1464| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1464| 
        ; call occurs [#FS$$CMP] ; [] |1464| 
        CMPB      AL,#0                 ; [CPU_] |1464| 
        B         $C$L598,GEQ           ; [CPU_] |1464| 
        ; branchcc occurs ; [] |1464| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1464| 
        MOVL      XAR0,#88              ; [CPU_] |1464| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1464| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1464| 
        B         $C$L599,UNC           ; [CPU_] |1464| 
        ; branch occurs ; [] |1464| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1464| 
        MOVL      XAR0,#88              ; [CPU_] |1464| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1464| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1464| 
$C$L599:    
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1464| 
        ; call occurs [#FS$$MPY] ; [] |1464| 
        MOVL      XAR0,#88              ; [CPU_] |1464| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1464| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1464| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1464| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1464| 
        ; call occurs [#FS$$ADD] ; [] |1464| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1464| 
        ; call occurs [#FS$$TOLL] ; [] |1464| 
	.dwpsn	file "../Source/prod.c",line 1470,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1470| 
	.dwpsn	file "../Source/prod.c",line 1464,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1464| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1464| 
	.dwpsn	file "../Source/prod.c",line 1470,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1470| 
        CMP64     ACC:P                 ; [CPU_] |1470| 
        B         $C$L601,LEQ           ; [CPU_] |1470| 
        ; branchcc occurs ; [] |1470| 
	.dwpsn	file "../Source/prod.c",line 1472,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1472| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1472| 
        MOV       *-SP[2],#0            ; [CPU_] |1472| 
        MOV       *-SP[1],#0            ; [CPU_] |1472| 
        MOVL      P,*-SP[32]            ; [CPU_] |1472| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1472| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1291, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1472| 
        ; call occurs [#LL$$CMP] ; [] |1472| 
        CMPB      AL,#0                 ; [CPU_] |1472| 
        B         $C$L600,GEQ           ; [CPU_] |1472| 
        ; branchcc occurs ; [] |1472| 
	.dwpsn	file "../Source/prod.c",line 1475,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1475| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1475| 
        MOV       AL,*-SP[32]           ; [CPU_] |1475| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1475| 
        B         $C$L602,UNC           ; [CPU_] |1475| 
        ; branch occurs ; [] |1475| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1473,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1473| 
	.dwpsn	file "../Source/prod.c",line 1474,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1474| 
        ; branch occurs ; [] |1474| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1471,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1471| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1478,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1478| 
        MOVL      XAR0,#44              ; [CPU_] |1478| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1478| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1478| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1478| 
        MOVL      XAR4,XAR1             ; [CPU_] |1478| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_sprintf")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1478| 
        ; call occurs [#_sprintf] ; [] |1478| 
        MOVL      XAR4,XAR1             ; [CPU_] |1478| 
	.dwpsn	file "../Source/prod.c",line 1479,column 7,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1479| 
        ; call occurs [#_scia_puts] ; [] |1479| 
	.dwpsn	file "../Source/prod.c",line 1480,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1480| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1480| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1483,column 8,is_stmt,isa 0
        MOV       AH,*-SP[52]           ; [CPU_] |1483| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1483| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1483| 
        ; call occurs [#_mcbsp_xmit] ; [] |1483| 
	.dwpsn	file "../Source/prod.c",line 1484,column 8,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1484| 
        ; call occurs [#_latch_dac] ; [] |1484| 
	.dwpsn	file "../Source/prod.c",line 1487,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1487| 
        MOVL      XAR4,XAR1             ; [CPU_] |1487| 
        MOVL      XAR5,XAR1             ; [CPU_] |1487| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1487| 
        ; call occurs [#_scia_getparam] ; [] |1487| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1489,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1489| 
        CMPB      AL,#45                ; [CPU_] |1489| 
        B         $C$L604,EQ            ; [CPU_] |1489| 
        ; branchcc occurs ; [] |1489| 
        CMPB      AL,#83                ; [CPU_] |1489| 
        B         $C$L609,EQ            ; [CPU_] |1489| 
        ; branchcc occurs ; [] |1489| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1496,column 8,is_stmt,isa 0
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_atoi")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1496| 
        ; call occurs [#_atoi] ; [] |1496| 
        CMPB      AL,#0                 ; [CPU_] |1496| 
	.dwpsn	file "../Source/prod.c",line 1498,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1498| 
	.dwpsn	file "../Source/prod.c",line 1501,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1501| 
        CMPB      AH,#43                ; [CPU_] |1501| 
        B         $C$L605,EQ            ; [CPU_] |1501| 
        ; branchcc occurs ; [] |1501| 
	.dwpsn	file "../Source/prod.c",line 1508,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1508| 
        B         $C$L608,NEQ           ; [CPU_] |1508| 
        ; branchcc occurs ; [] |1508| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1510,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1510| 
        B         $C$L606,HI            ; [CPU_] |1510| 
        ; branchcc occurs ; [] |1510| 
	.dwpsn	file "../Source/prod.c",line 1511,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1511| 
	.dwpsn	file "../Source/prod.c",line 1512,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1512| 
        ; branch occurs ; [] |1512| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1503,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1503| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1503| 
        MOV       AH,#65535             ; [CPU_] |1503| 
        SUB       AH,AL                 ; [CPU_] |1503| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1503| 
        B         $C$L607,HIS           ; [CPU_] |1503| 
        ; branchcc occurs ; [] |1503| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1506,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1506| 
        B         $C$L608,UNC           ; [CPU_] |1506| 
        ; branch occurs ; [] |1506| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1504,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1504| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1482,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1482| 
        B         $C$L603,NEQ           ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1518,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1518| 
        MOVL      XAR0,#86              ; [CPU_] |1518| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1518| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1518| 
        MOVL      XAR0,#86              ; [CPU_] |1518| 
        MOV       AL,*XAR7              ; [CPU_] |1518| 
        MOV       *-SP[3],AL            ; [CPU_] |1518| 
        ADDB      XAR7,#1               ; [CPU_] |1518| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1518| 
        MOVL      XAR0,#44              ; [CPU_] |1518| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1518| 
        MOVL      XAR4,XAR1             ; [CPU_] |1518| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_sprintf")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1518| 
        ; call occurs [#_sprintf] ; [] |1518| 
        MOVL      XAR4,XAR1             ; [CPU_] |1518| 
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1519| 
        ; call occurs [#_scia_puts] ; [] |1519| 
	.dwpsn	file "../Source/prod.c",line 1462,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |1462| 
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1519| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1519| 
	.dwpsn	file "../Source/prod.c",line 1462,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1462| 
        SUBB      XAR6,#1               ; [CPU_U] |1462| 
        ADDB      ACC,#2                ; [CPU_] |1462| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1462| 
        MOVZ      AR0,AR6               ; [CPU_] |1462| 
        MOV       *-SP[51],AR6          ; [CPU_] |1462| 
        CMP       AR0,#-1               ; [CPU_] |1462| 
        B         $C$L597,NEQ           ; [CPU_] |1462| 
        ; branchcc occurs ; [] |1462| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1522,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1522| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1522| 
        ; call occurs [#FS$$TOU] ; [] |1522| 
        MOV       *-SP[33],AL           ; [CPU_] |1522| 
	.dwpsn	file "../Source/prod.c",line 1524,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1524| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1524| 
        ; call occurs [#_scia_puts] ; [] |1524| 
	.dwpsn	file "../Source/prod.c",line 1525,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1525| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1525| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1525| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1525| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1528,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1528| 
        MOV       AH,*-SP[52]           ; [CPU_] |1528| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1528| 
        ; call occurs [#_mcbsp_xmit] ; [] |1528| 
	.dwpsn	file "../Source/prod.c",line 1529,column 7,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1529| 
        ; call occurs [#_latch_dac] ; [] |1529| 
        MOVL      XAR0,#86              ; [CPU_] |1529| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1529| 
	.dwpsn	file "../Source/prod.c",line 1532,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1532| 
        MOVL      XAR4,XAR5             ; [CPU_] |1532| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1532| 
        ; call occurs [#_scia_getparam] ; [] |1532| 
	.dwpsn	file "../Source/prod.c",line 1537,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1537| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1537| 
        CMPB      AL,#83                ; [CPU_] |1537| 
        B         $C$L615,EQ            ; [CPU_] |1537| 
        ; branchcc occurs ; [] |1537| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1540,column 7,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_atoi")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1540| 
        ; call occurs [#_atoi] ; [] |1540| 
        CMPB      AL,#0                 ; [CPU_] |1540| 
	.dwpsn	file "../Source/prod.c",line 1545,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1545| 
	.dwpsn	file "../Source/prod.c",line 1542,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1542| 
	.dwpsn	file "../Source/prod.c",line 1545,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1545| 
        CMPB      AH,#43                ; [CPU_] |1545| 
        B         $C$L611,EQ            ; [CPU_] |1545| 
        ; branchcc occurs ; [] |1545| 
	.dwpsn	file "../Source/prod.c",line 1552,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1552| 
        B         $C$L614,NEQ           ; [CPU_] |1552| 
        ; branchcc occurs ; [] |1552| 
	.dwpsn	file "../Source/prod.c",line 1554,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1554| 
        B         $C$L612,HI            ; [CPU_] |1554| 
        ; branchcc occurs ; [] |1554| 
	.dwpsn	file "../Source/prod.c",line 1555,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1555| 
	.dwpsn	file "../Source/prod.c",line 1556,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1556| 
        ; branch occurs ; [] |1556| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1547,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1547| 
        SUB       AH,AL                 ; [CPU_] |1547| 
        CMP       AH,*-SP[33]           ; [CPU_] |1547| 
        B         $C$L613,HIS           ; [CPU_] |1547| 
        ; branchcc occurs ; [] |1547| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1550,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1550| 
        B         $C$L614,UNC           ; [CPU_] |1550| 
        ; branch occurs ; [] |1550| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1548,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1548| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1527,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1527| 
        B         $C$L610,NEQ           ; [CPU_] |1527| 
        ; branchcc occurs ; [] |1527| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1562,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1562| 
        MOV       AL,*-SP[33]           ; [CPU_] |1562| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1562| 
        MOV       *-SP[3],AL            ; [CPU_] |1562| 
        MOVL      XAR4,XAR1             ; [CPU_] |1562| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_sprintf")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1562| 
        ; call occurs [#_sprintf] ; [] |1562| 
        MOVL      XAR4,XAR1             ; [CPU_] |1562| 
	.dwpsn	file "../Source/prod.c",line 1563,column 6,is_stmt,isa 0
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1563| 
        ; call occurs [#_scia_puts] ; [] |1563| 
	.dwpsn	file "../Source/prod.c",line 1566,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1566| 
        MOV       AH,#0                 ; [CPU_] |1566| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1566| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1566| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1566| 
        ; call occurs [#FS$$CMP] ; [] |1566| 
        CMPB      AL,#0                 ; [CPU_] |1566| 
        B         $C$L616,LT            ; [CPU_] |1566| 
        ; branchcc occurs ; [] |1566| 
	.dwpsn	file "../Source/prod.c",line 1572,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1572| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1572| 
        ; call occurs [#U$$TOFS] ; [] |1572| 
        MOVL      XAR1,ACC              ; [CPU_] |1572| 
        MOV       AL,*-SP[35]           ; [CPU_] |1572| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1572| 
        ; call occurs [#U$$TOFS] ; [] |1572| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1572| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1572| 
        ; call occurs [#FS$$SUB] ; [] |1572| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1572| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1572| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1572| 
        ; call occurs [#FS$$DIV] ; [] |1572| 
        MOVL      XAR0,#88              ; [CPU_] |1572| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1572| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1572| 
	.dwpsn	file "../Source/prod.c",line 1574,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1574| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1574| 
        ; call occurs [#U$$TOFS] ; [] |1574| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1574| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1574| 
        ; call occurs [#FS$$SUB] ; [] |1574| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1574| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1574| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1574| 
        ; call occurs [#FS$$DIV] ; [] |1574| 
        MOVL      XAR0,#88              ; [CPU_] |1574| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1574| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1574| 
        B         $C$L617,UNC           ; [CPU_] |1574| 
        ; branch occurs ; [] |1574| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1567,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1567| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1567| 
        ; call occurs [#U$$TOFS] ; [] |1567| 
        MOVL      XAR1,ACC              ; [CPU_] |1567| 
        MOV       AL,*-SP[35]           ; [CPU_] |1567| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1567| 
        ; call occurs [#U$$TOFS] ; [] |1567| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1567| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1567| 
        ; call occurs [#FS$$SUB] ; [] |1567| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1567| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1567| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1567| 
        ; call occurs [#FS$$DIV] ; [] |1567| 
        MOVL      XAR0,#88              ; [CPU_] |1567| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1567| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1567| 
	.dwpsn	file "../Source/prod.c",line 1569,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1569| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1569| 
        ; call occurs [#U$$TOFS] ; [] |1569| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1569| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1569| 
        ; call occurs [#FS$$SUB] ; [] |1569| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1569| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1569| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1569| 
        ; call occurs [#FS$$DIV] ; [] |1569| 
        MOVL      XAR0,#88              ; [CPU_] |1569| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1569| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1569| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1577,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1577| 
	.dwpsn	file "../Source/prod.c",line 1579,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1579| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1579| 
        ; call occurs [#_dac_setmode] ; [] |1579| 
	.dwpsn	file "../Source/prod.c",line 1581,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1581| 
        MOVL      XAR0,#88              ; [CPU_] |1581| 
        MOV       AL,*-SP[63]           ; [CPU_] |1581| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1581| 
        MOV       *-SP[3],AL            ; [CPU_] |1581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1581| 
        MOVL      XAR0,#44              ; [CPU_] |1581| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1581| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1581| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1581| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1581| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1581| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1581| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1581| 
        MOVL      XAR4,XAR1             ; [CPU_] |1581| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_sprintf")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1581| 
        ; call occurs [#_sprintf] ; [] |1581| 
        MOVL      XAR4,XAR1             ; [CPU_] |1581| 
	.dwpsn	file "../Source/prod.c",line 1585,column 6,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1585| 
        ; call occurs [#_scia_puts] ; [] |1585| 
	.dwpsn	file "../Source/prod.c",line 1587,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1587| 
	.dwpsn	file "../Source/prod.c",line 1588,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1588| 
        ; branch occurs ; [] |1588| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1447,column 7,is_stmt,isa 0
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1447| 
        ; call occurs [#_lcd_clear] ; [] |1447| 
	.dwpsn	file "../Source/prod.c",line 1448,column 7,is_stmt,isa 0
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_update_units")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1448| 
        ; call occurs [#_update_units] ; [] |1448| 
	.dwpsn	file "../Source/prod.c",line 1449,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1449| 
        ; branch occurs ; [] |1449| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1397| 
        MOVB      AL,#0                 ; [CPU_] |1397| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1397| 
        ; call occurs [#_lcd_puts] ; [] |1397| 
	.dwpsn	file "../Source/prod.c",line 1399,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1399| 
        MOVL      XAR0,#44              ; [CPU_] |1399| 
        MOV       AL,*-SP[63]           ; [CPU_] |1399| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1399| 
        MOV       *-SP[3],AL            ; [CPU_] |1399| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1399| 
        MOVL      XAR4,XAR1             ; [CPU_] |1399| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_sprintf")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1399| 
        ; call occurs [#_sprintf] ; [] |1399| 
        MOVL      XAR4,XAR1             ; [CPU_] |1399| 
	.dwpsn	file "../Source/prod.c",line 1402,column 6,is_stmt,isa 0
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1402| 
        ; call occurs [#_scia_puts] ; [] |1402| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[51],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1415,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1415| 
        MOVL      XAR0,#42              ; [CPU_] |1415| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1415| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1415| 
        MOVL      XAR0,#44              ; [CPU_] |1415| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1415| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1415| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1415| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_sprintf")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1415| 
        ; call occurs [#_sprintf] ; [] |1415| 
        MOVL      XAR0,#44              ; [CPU_] |1415| 
	.dwpsn	file "../Source/prod.c",line 1418,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1418| 
	.dwpsn	file "../Source/prod.c",line 1415,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1415| 
	.dwpsn	file "../Source/prod.c",line 1418,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1418| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1418| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1418| 
        ; call occurs [#_scia_getparam] ; [] |1418| 
	.dwpsn	file "../Source/prod.c",line 1419,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1419| 
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1419| 
        ; call occurs [#_scia_puts] ; [] |1419| 
	.dwpsn	file "../Source/prod.c",line 1422,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1422| 
	.dwpsn	file "../Source/prod.c",line 1421,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1421| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1421| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1421| 
	.dwpsn	file "../Source/prod.c",line 1423,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1423| 
	.dwpsn	file "../Source/prod.c",line 1422,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1422| 
	.dwpsn	file "../Source/prod.c",line 1423,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1423| 
        MOVB      ACC,#0                ; [CPU_] |1423| 
        SUBB      ACC,#1                ; [CPU_] |1423| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1423| 
        B         $C$L622,EQ            ; [CPU_] |1423| 
        ; branchcc occurs ; [] |1423| 
        MOV       AL,*-SP[62]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1424,column 15,is_stmt,isa 0
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1424| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1424| 
        CMPB      AL,#0                 ; [CPU_] |1424| 
        B         $C$L624,EQ            ; [CPU_] |1424| 
        ; branchcc occurs ; [] |1424| 
	.dwpsn	file "../Source/prod.c",line 1427,column 8,is_stmt,isa 0
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1427| 
        ; call occurs [#_ad7738_getraw] ; [] |1427| 
	.dwpsn	file "../Source/prod.c",line 1428,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1428| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1428| 
        ADDL      XAR4,ACC              ; [CPU_] |1428| 
        MOVL      XAR0,#10              ; [CPU_] |1428| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1428| 
        MOVL      XAR0,#10              ; [CPU_] |1428| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1428| 
        ASR64     ACC:P,16              ; [CPU_] |1428| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1428| 
        MOVL      XAR0,#10              ; [CPU_] |1428| 
        ASR64     ACC:P,16              ; [CPU_] |1428| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1428| 
        MOVL      XAR0,#10              ; [CPU_] |1428| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1428| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1428| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1428| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1428| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1428| 
	.dwpsn	file "../Source/prod.c",line 1423,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1423| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1423| 
        MOVB      ACC,#0                ; [CPU_] |1423| 
        SUBB      ACC,#1                ; [CPU_] |1423| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1423| 
        B         $C$L621,NEQ           ; [CPU_] |1423| 
        ; branchcc occurs ; [] |1423| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1431,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1431| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1431| 
        ; call occurs [#_scia_puts] ; [] |1431| 
	.dwpsn	file "../Source/prod.c",line 1414,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |1414| 
        MOVL      XAR0,#42              ; [CPU_] |1414| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1414| 
        MOVL      XAR0,#42              ; [CPU_] |1414| 
        SUBB      XAR6,#1               ; [CPU_U] |1414| 
        ADDB      ACC,#2                ; [CPU_] |1414| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1414| 
        MOVZ      AR0,AR6               ; [CPU_] |1414| 
        MOV       *-SP[51],AR6          ; [CPU_] |1414| 
        ADDB      XAR1,#4               ; [CPU_] |1414| 
        CMP       AR0,#-1               ; [CPU_] |1414| 
        B         $C$L620,NEQ           ; [CPU_] |1414| 
        ; branchcc occurs ; [] |1414| 
	.dwpsn	file "../Source/prod.c",line 1434,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1434| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1434| 
        MOVB      AL,#10                ; [CPU_] |1434| 
        MOV       T,*-SP[62]            ; [CPU_] |1434| 
        MPYU      ACC,T,AL              ; [CPU_] |1434| 
        ADDL      ACC,XAR6              ; [CPU_] |1434| 
        MOVL      XAR1,ACC              ; [CPU_] |1434| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1434| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1434| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1434| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1434| 
        ; call occurs [#FS$$SUB] ; [] |1434| 
        MOVL      XAR6,ACC              ; [CPU_] |1434| 
        MOV       AL,#16384             ; [CPU_] |1434| 
        MOV       AH,#17948             ; [CPU_] |1434| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1434| 
        MOVL      ACC,XAR6              ; [CPU_] |1434| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1434| 
        ; call occurs [#FS$$MPY] ; [] |1434| 
        MOVL      XAR0,#88              ; [CPU_] |1434| 
        MOVL      P,*-SP[28]            ; [CPU_] |1434| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1434| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1434| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1434| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1434| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1434| 
        ; call occurs [#LL$$TOFS] ; [] |1434| 
        MOVL      XAR0,#88              ; [CPU_] |1434| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1434| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1434| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1434| 
        ; call occurs [#FS$$DIV] ; [] |1434| 
        MOVB      XAR0,#44              ; [CPU_] |1434| 
	.dwpsn	file "../Source/prod.c",line 1437,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1437| 
	.dwpsn	file "../Source/prod.c",line 1434,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1434| 
	.dwpsn	file "../Source/prod.c",line 1437,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1437| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1437| 
        MOV       AL,*-SP[63]           ; [CPU_] |1437| 
        MOV       *-SP[3],AL            ; [CPU_] |1437| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1437| 
        MOVL      XAR0,#44              ; [CPU_] |1437| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1437| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1437| 
        MOVL      XAR4,XAR1             ; [CPU_] |1437| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_sprintf")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1437| 
        ; call occurs [#_sprintf] ; [] |1437| 
        MOVL      XAR4,XAR1             ; [CPU_] |1437| 
	.dwpsn	file "../Source/prod.c",line 1439,column 6,is_stmt,isa 0
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1439| 
        ; call occurs [#_scia_puts] ; [] |1439| 
	.dwpsn	file "../Source/prod.c",line 1440,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1440| 
$C$L623:    
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1440| 
        ; call occurs [#_scia_puts] ; [] |1440| 
	.dwpsn	file "../Source/prod.c",line 1595,column 5,is_stmt,isa 0
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1595| 
        ; call occurs [#_lcd_clear] ; [] |1595| 
	.dwpsn	file "../Source/prod.c",line 1596,column 5,is_stmt,isa 0
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_update_units")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1596| 
        ; call occurs [#_update_units] ; [] |1596| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1599,column 5,is_stmt,isa 0
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1599| 
        ; call occurs [#_ad7738_setcal] ; [] |1599| 
        MOVL      XAR0,#78              ; [CPU_] |1599| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1599| 
	.dwpsn	file "../Source/prod.c",line 1600,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |1600| 
        MOVL      XAR1,ACC              ; [CPU_] |1600| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1600| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1600| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1600| 
	.dwpsn	file "../Source/prod.c",line 1601,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1601| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1601| 
        ; call occurs [#_ad7738_resetvall] ; [] |1601| 
	.dwpsn	file "../Source/prod.c",line 1603,column 5,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |1603| 
        ; branch occurs ; [] |1603| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1425,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1425| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("_delay_us")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1425| 
        ; call occurs [#_delay_us] ; [] |1425| 
	.dwpsn	file "../Source/prod.c",line 1424,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1424| 
        ; branch occurs ; [] |1424| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3554,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3554| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3554| 
        ; call occurs [#_scia_puts] ; [] |3554| 
        MOVL      XAR0,#86              ; [CPU_] |3554| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3554| 
	.dwpsn	file "../Source/prod.c",line 3555,column 5,is_stmt,isa 0
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3555| 
        ; call occurs [#_scia_puts] ; [] |3555| 
	.dwpsn	file "../Source/prod.c",line 3556,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3556| 
	.dwpsn	file "../Source/prod.c",line 3557,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3557| 
        ; branch occurs ; [] |3557| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3515,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3515| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3515| 
        ; call occurs [#_scia_puts] ; [] |3515| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3519,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3519| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_delay_us")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3519| 
        ; call occurs [#_delay_us] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3517,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3517| 
        ; branchcc occurs ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3522,column 5,is_stmt,isa 0
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_reboot")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3522| 
        ; call occurs [#_reboot] ; [] |3522| 
	.dwpsn	file "../Source/prod.c",line 3523,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3523| 
        ; branch occurs ; [] |3523| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3499| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3499| 
        ; call occurs [#_scia_puts] ; [] |3499| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3503,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3503| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_delay_us")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3503| 
        ; call occurs [#_delay_us] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3501,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3501| 
        ; branchcc occurs ; [] |3501| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3507,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3507| 
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3506| 
	.dwpsn	file "../Source/prod.c",line 3507,column 5,is_stmt,isa 0
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3507| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3507| 
	.dwpsn	file "../Source/prod.c",line 3511,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3511| 
        ; branch occurs ; [] |3511| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3410,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3410| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3410| 
        ; call occurs [#_scia_puts] ; [] |3410| 
	.dwpsn	file "../Source/prod.c",line 3412,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3412| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3412| 
        ; call occurs [#_scia_puts] ; [] |3412| 
	.dwpsn	file "../Source/prod.c",line 3413,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3413| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3413| 
        ; call occurs [#_scia_puts] ; [] |3413| 
	.dwpsn	file "../Source/prod.c",line 3415,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3415| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3415| 
        ; call occurs [#_scia_puts] ; [] |3415| 
	.dwpsn	file "../Source/prod.c",line 3416,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3416| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3416| 
        ; call occurs [#_scia_puts] ; [] |3416| 
	.dwpsn	file "../Source/prod.c",line 3417,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3417| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3417| 
        ; call occurs [#_scia_puts] ; [] |3417| 
	.dwpsn	file "../Source/prod.c",line 3418,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3418| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3418| 
        ; call occurs [#_scia_puts] ; [] |3418| 
	.dwpsn	file "../Source/prod.c",line 3420,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3420| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3420| 
        ; call occurs [#_scia_puts] ; [] |3420| 
	.dwpsn	file "../Source/prod.c",line 3421,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3421| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3421| 
        ; call occurs [#_scia_puts] ; [] |3421| 
	.dwpsn	file "../Source/prod.c",line 3422,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3422| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3422| 
        ; call occurs [#_scia_puts] ; [] |3422| 
	.dwpsn	file "../Source/prod.c",line 3423,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3423| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3423| 
        ; call occurs [#_scia_puts] ; [] |3423| 
	.dwpsn	file "../Source/prod.c",line 3424,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3424| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3424| 
        ; call occurs [#_scia_puts] ; [] |3424| 
	.dwpsn	file "../Source/prod.c",line 3425,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3425| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3425| 
        ; call occurs [#_scia_puts] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3426,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3426| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3426| 
        ; call occurs [#_scia_puts] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3428,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3428| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3428| 
        ; call occurs [#_scia_puts] ; [] |3428| 
	.dwpsn	file "../Source/prod.c",line 3430,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3430| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3432,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3432| 
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3432| 
        ; call occurs [#_scia_puts] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3434,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3434| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3434| 
        ; call occurs [#_scia_puts] ; [] |3434| 
	.dwpsn	file "../Source/prod.c",line 3435,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3435| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3435| 
        ; call occurs [#_scia_puts] ; [] |3435| 
	.dwpsn	file "../Source/prod.c",line 3436,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3436| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3436| 
        ; call occurs [#_scia_puts] ; [] |3436| 
	.dwpsn	file "../Source/prod.c",line 3437,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3437| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3437| 
        ; call occurs [#_scia_puts] ; [] |3437| 
	.dwpsn	file "../Source/prod.c",line 3439,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3439| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3439| 
        ; call occurs [#_scia_puts] ; [] |3439| 
	.dwpsn	file "../Source/prod.c",line 3440,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3440| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3440| 
        ; call occurs [#_scia_puts] ; [] |3440| 
	.dwpsn	file "../Source/prod.c",line 3441,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3441| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3441| 
        ; call occurs [#_scia_puts] ; [] |3441| 
	.dwpsn	file "../Source/prod.c",line 3442,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3442| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3442| 
        ; call occurs [#_scia_puts] ; [] |3442| 
	.dwpsn	file "../Source/prod.c",line 3443,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3443| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3443| 
        ; call occurs [#_scia_puts] ; [] |3443| 
	.dwpsn	file "../Source/prod.c",line 3445,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3445| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3445| 
        ; call occurs [#_scia_puts] ; [] |3445| 
	.dwpsn	file "../Source/prod.c",line 3446,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3446| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3446| 
        ; call occurs [#_scia_puts] ; [] |3446| 
	.dwpsn	file "../Source/prod.c",line 3448,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3448| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3448| 
        ; call occurs [#_scia_puts] ; [] |3448| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3450| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3451,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3451| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3451| 
        ; call occurs [#_scia_puts] ; [] |3451| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3453| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3455| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3457| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3459| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3460| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3462,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3462| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
	.dwpsn	file "../Source/prod.c",line 3463,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3463| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3463| 
        ; call occurs [#_scia_puts] ; [] |3463| 
	.dwpsn	file "../Source/prod.c",line 3464,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3464| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3464| 
        ; call occurs [#_scia_puts] ; [] |3464| 
	.dwpsn	file "../Source/prod.c",line 3465,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3465| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3465| 
        ; call occurs [#_scia_puts] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3466,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3466| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3466| 
        ; call occurs [#_scia_puts] ; [] |3466| 
	.dwpsn	file "../Source/prod.c",line 3467,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3467| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3467| 
        ; call occurs [#_scia_puts] ; [] |3467| 
	.dwpsn	file "../Source/prod.c",line 3468,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3468| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3468| 
        ; call occurs [#_scia_puts] ; [] |3468| 
	.dwpsn	file "../Source/prod.c",line 3469,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3469| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3469| 
        ; call occurs [#_scia_puts] ; [] |3469| 
	.dwpsn	file "../Source/prod.c",line 3480,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3480| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3480| 
        ; call occurs [#_scia_puts] ; [] |3480| 
	.dwpsn	file "../Source/prod.c",line 3482,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3482| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3482| 
        ; call occurs [#_scia_puts] ; [] |3482| 
	.dwpsn	file "../Source/prod.c",line 3484,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3484| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3484| 
        ; call occurs [#_scia_puts] ; [] |3484| 
	.dwpsn	file "../Source/prod.c",line 3486,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3486| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3486| 
        ; call occurs [#_scia_puts] ; [] |3486| 
	.dwpsn	file "../Source/prod.c",line 3488,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3488| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3488| 
        ; call occurs [#_scia_puts] ; [] |3488| 
	.dwpsn	file "../Source/prod.c",line 3493,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3493| 
$C$L631:    
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3493| 
        ; call occurs [#_scia_puts] ; [] |3493| 
$C$L632:    
        MOV       AL,*-SP[52]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3561,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3561| 
        ; branchcc occurs ; [] |3561| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3562,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3562| 
        SPM       #0                    ; [CPU_] 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3562| 
        ; call occurs [#_scia_puts] ; [] |3562| 
$C$L634:    
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[51],#11          ; [CPU_] 
        SUBB      XAR4,#50              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L635:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 602,column 4,is_stmt,isa 0
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_spi_recv")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_spi_recv            ; [CPU_] |602| 
        ; call occurs [#_spi_recv] ; [] |602| 
        MOV       *XAR1++,AL            ; [CPU_] |602| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |602| 
	.dwpsn	file "../Source/prod.c",line 600,column 14,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |600| 
        MOVZ      AR0,AR6               ; [CPU_] |600| 
        MOV       *-SP[51],AR6          ; [CPU_] |600| 
        CMP       AR0,#-1               ; [CPU_] |600| 
        B         $C$L635,NEQ           ; [CPU_] |600| 
        ; branchcc occurs ; [] |600| 
	.dwpsn	file "../Source/prod.c",line 607,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |607| 
        TBIT      AL,#4                 ; [CPU_] |607| 
        B         $C$L636,TC            ; [CPU_] |607| 
        ; branchcc occurs ; [] |607| 
	.dwpsn	file "../Source/prod.c",line 609,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |609| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |609| 
        ; call occurs [#_ad7738_resettare] ; [] |609| 
	.dwpsn	file "../Source/prod.c",line 610,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |610| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |610| 
        ; call occurs [#_ad7738_resetpeak] ; [] |610| 
	.dwpsn	file "../Source/prod.c",line 611,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |611| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |611| 
        ; call occurs [#_ad7738_resetvall] ; [] |611| 
$C$L636:    
	.dwpsn	file "../Source/prod.c",line 689,column 3,is_stmt,isa 0
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |689| 
        ; call occurs [#_ad7738_monrdy] ; [] |689| 
        CMPB      AL,#0                 ; [CPU_] |689| 
        B         $C$L662,EQ            ; [CPU_] |689| 
        ; branchcc occurs ; [] |689| 
	.dwpsn	file "../Source/prod.c",line 691,column 4,is_stmt,isa 0
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |691| 
        ; call occurs [#_ad7738_monclr] ; [] |691| 
        MOVL      XAR0,#84              ; [CPU_] |691| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |691| 
	.dwpsn	file "../Source/prod.c",line 694,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |694| 
        CMPB      AL,#3                 ; [CPU_] |694| 
        B         $C$L637,GT            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        CMPB      AL,#3                 ; [CPU_] |694| 
        B         $C$L643,EQ            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        CMPB      AL,#0                 ; [CPU_] |694| 
        B         $C$L647,EQ            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        CMPB      AL,#1                 ; [CPU_] |694| 
        B         $C$L646,EQ            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        CMPB      AL,#2                 ; [CPU_] |694| 
        B         $C$L645,EQ            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        B         $C$L659,UNC           ; [CPU_] |694| 
        ; branch occurs ; [] |694| 
$C$L637:    
        CMPB      AL,#4                 ; [CPU_] |694| 
        B         $C$L642,EQ            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        CMPB      AL,#5                 ; [CPU_] |694| 
        B         $C$L638,EQ            ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
        CMPB      AL,#6                 ; [CPU_] |694| 
        B         $C$L659,NEQ           ; [CPU_] |694| 
        ; branchcc occurs ; [] |694| 
	.dwpsn	file "../Source/prod.c",line 749,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |749| 
        MOVL      XAR0,#46              ; [CPU_] |749| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |749| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |749| 
	.dwpsn	file "../Source/prod.c",line 750,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |750| 
        ; branch occurs ; [] |750| 
$C$L638:    
	.dwpsn	file "../Source/prod.c",line 744,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |744| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |744| 
        ; call occurs [#_ad7738_getlimitst] ; [] |744| 
	.dwpsn	file "../Source/prod.c",line 745,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |745| 
        B         $C$L640,NTC           ; [CPU_] |745| 
        ; branchcc occurs ; [] |745| 
        TBIT      AL,#0                 ; [CPU_] |745| 
        B         $C$L639,NTC           ; [CPU_] |745| 
        ; branchcc occurs ; [] |745| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |745| 
        B         $C$L641,UNC           ; [CPU_] |745| 
        ; branch occurs ; [] |745| 
$C$L639:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |745| 
        B         $C$L641,UNC           ; [CPU_] |745| 
        ; branch occurs ; [] |745| 
$C$L640:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |745| 
$C$L641:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |745| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |745| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |745| 
	.dwpsn	file "../Source/prod.c",line 747,column 5,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |747| 
        ; branch occurs ; [] |747| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 716,column 5,is_stmt,isa 0
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |716| 
        ; call occurs [#_ad7738_getmon] ; [] |716| 
        MOVL      XAR0,#84              ; [CPU_] |716| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |716| 
	.dwpsn	file "../Source/prod.c",line 718,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |718| 
        B         $C$L644,UNC           ; [CPU_] |718| 
        ; branch occurs ; [] |718| 
$C$L643:    
	.dwpsn	file "../Source/prod.c",line 711,column 5,is_stmt,isa 0
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |711| 
        ; call occurs [#_ad7738_getmon] ; [] |711| 
        MOVL      XAR0,#84              ; [CPU_] |711| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |711| 
	.dwpsn	file "../Source/prod.c",line 712,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |712| 
$C$L644:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |712| 
        ADDL      XAR4,ACC              ; [CPU_] |712| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |712| 
	.dwpsn	file "../Source/prod.c",line 713,column 5,is_stmt,isa 0
        B         $C$L649,UNC           ; [CPU_] |713| 
        ; branch occurs ; [] |713| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 706,column 5,is_stmt,isa 0
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |706| 
        ; call occurs [#_ad7738_getvall] ; [] |706| 
	.dwpsn	file "../Source/prod.c",line 708,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |708| 
        ; branch occurs ; [] |708| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 701,column 5,is_stmt,isa 0
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |701| 
        ; call occurs [#_ad7738_getpeak] ; [] |701| 
	.dwpsn	file "../Source/prod.c",line 703,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |703| 
        ; branch occurs ; [] |703| 
$C$L647:    
	.dwpsn	file "../Source/prod.c",line 696,column 5,is_stmt,isa 0
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |696| 
        ; call occurs [#_ad7738_getmon] ; [] |696| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] |696| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |696| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 697,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |697| 
        ADDL      XAR4,ACC              ; [CPU_] |697| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |697| 
$C$L649:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |697| 
	.dwpsn	file "../Source/prod.c",line 721,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |721| 
        CMPB      AL,#3                 ; [CPU_] |721| 
        B         $C$L650,GT            ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
        CMPB      AL,#3                 ; [CPU_] |721| 
        B         $C$L652,EQ            ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
        CMPB      AL,#0                 ; [CPU_] |721| 
        B         $C$L655,EQ            ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
        CMPB      AL,#1                 ; [CPU_] |721| 
        B         $C$L654,EQ            ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
        CMPB      AL,#2                 ; [CPU_] |721| 
        B         $C$L653,EQ            ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
        B         $C$L659,UNC           ; [CPU_] |721| 
        ; branch occurs ; [] |721| 
$C$L650:    
        CMPB      AL,#4                 ; [CPU_] |721| 
        B         $C$L651,EQ            ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
        CMPB      AL,#5                 ; [CPU_] |721| 
        B         $C$L659,NEQ           ; [CPU_] |721| 
        ; branchcc occurs ; [] |721| 
	.dwpsn	file "../Source/prod.c",line 738,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |738| 
	.dwpsn	file "../Source/prod.c",line 739,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |739| 
        ; branch occurs ; [] |739| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 735,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |735| 
	.dwpsn	file "../Source/prod.c",line 736,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |736| 
        ; branch occurs ; [] |736| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 732,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |732| 
	.dwpsn	file "../Source/prod.c",line 733,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |733| 
        ; branch occurs ; [] |733| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |729| 
	.dwpsn	file "../Source/prod.c",line 730,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |730| 
        ; branch occurs ; [] |730| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 726,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |726| 
	.dwpsn	file "../Source/prod.c",line 727,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |727| 
        ; branch occurs ; [] |727| 
$C$L655:    
	.dwpsn	file "../Source/prod.c",line 723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |723| 
$C$L656:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |723| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |723| 
$C$L657:    
        MOVL      *-SP[4],ACC           ; [CPU_] |723| 
$C$L658:    
        MOVL      XAR0,#44              ; [CPU_] |723| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |723| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_sprintf")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |723| 
        ; call occurs [#_sprintf] ; [] |723| 
$C$L659:    
        MOV       T,*-SP[59]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 754,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |754| 
        MPYB      ACC,T,#20             ; [CPU_] |754| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |754| 
        ADDB      AL,#7                 ; [CPU_] |754| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |754| 
        ; call occurs [#_lcd_puts] ; [] |754| 
	.dwpsn	file "../Source/prod.c",line 757,column 4,is_stmt,isa 0
        INC       *-SP[59]              ; [CPU_] |757| 
	.dwpsn	file "../Source/prod.c",line 754,column 4,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |754| 
	.dwpsn	file "../Source/prod.c",line 757,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |757| 
        B         $C$L660,HIS           ; [CPU_] |757| 
        ; branchcc occurs ; [] |757| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |757| 
        B         $C$L661,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L660:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 758,column 5,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |758| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L661:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 767,column 3,is_stmt,isa 0
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |767| 
        ; call occurs [#_ad7738_tempstart] ; [] |767| 
        CMPB      AL,#0                 ; [CPU_] |767| 
        B         $C$L663,NEQ           ; [CPU_] |767| 
        ; branchcc occurs ; [] |767| 
	.dwpsn	file "../Source/prod.c",line 772,column 8,is_stmt,isa 0
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |772| 
        ; call occurs [#_ad7738_tempread] ; [] |772| 
        CMPB      AL,#0                 ; [CPU_] |772| 
        B         $C$L664,EQ            ; [CPU_] |772| 
        ; branchcc occurs ; [] |772| 
	.dwpsn	file "../Source/prod.c",line 773,column 4,is_stmt,isa 0
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |773| 
        ; call occurs [#_ds1820read] ; [] |773| 
        MOVL      XAR0,#46              ; [CPU_] |773| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |773| 
	.dwpsn	file "../Source/prod.c",line 774,column 4,is_stmt,isa 0
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |774| 
        ; call occurs [#_ad7738_settemp] ; [] |774| 
        B         $C$L664,UNC           ; [CPU_] |774| 
        ; branch occurs ; [] |774| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 768,column 4,is_stmt,isa 0
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |768| 
        ; call occurs [#_ds1820start] ; [] |768| 
$C$L664:    
	.dwpsn	file "../Source/prod.c",line 781,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |781| 
        MOVB      XAR0,#36              ; [CPU_] |781| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |781| 
        B         $C$L669,EQ            ; [CPU_] |781| 
        ; branchcc occurs ; [] |781| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |781| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |781| 
        CMPB      AL,#0                 ; [CPU_] |781| 
        B         $C$L669,EQ            ; [CPU_] |781| 
        ; branchcc occurs ; [] |781| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 782,column 4,is_stmt,isa 0
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |782| 
        ; call occurs [#_tagdetect] ; [] |782| 
        CMPB      AL,#0                 ; [CPU_] |782| 
        B         $C$L665,NEQ           ; [CPU_] |782| 
        ; branchcc occurs ; [] |782| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 805,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |805| 
        MOV       *+XAR4[0],#0          ; [CPU_] |805| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |805| 
	.dwpsn	file "../Source/prod.c",line 807,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |807| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |807| 
        MOVL      XAR4,ACC              ; [CPU_] |807| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |807| 
        B         $C$L667,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
	.dwpsn	file "../Source/prod.c",line 808,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |808| 
	.dwpsn	file "../Source/prod.c",line 809,column 6,is_stmt,isa 0
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |809| 
        ; call occurs [#_lcd_clear] ; [] |809| 
	.dwpsn	file "../Source/prod.c",line 810,column 6,is_stmt,isa 0
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_update_units")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |810| 
        ; call occurs [#_update_units] ; [] |810| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 811,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |811| 
        B         $C$L667,UNC           ; [CPU_] |811| 
        ; branch occurs ; [] |811| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 784,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |784| 
        B         $C$L666,NEQ           ; [CPU_] |784| 
        ; branchcc occurs ; [] |784| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 787,column 6,is_stmt,isa 0
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_matchTag")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |787| 
        ; call occurs [#_matchTag] ; [] |787| 
        MOVL      XAR0,#80              ; [CPU_] |787| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |787| 
        MOVL      XAR0,#9               ; [CPU_] |787| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |787| 
	.dwpsn	file "../Source/prod.c",line 788,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |788| 
        B         $C$L666,EQ            ; [CPU_] |788| 
        ; branchcc occurs ; [] |788| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 791,column 7,is_stmt,isa 0
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |791| 
        ; call occurs [#_maf_rst] ; [] |791| 
	.dwpsn	file "../Source/prod.c",line 792,column 7,is_stmt,isa 0
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |792| 
        ; call occurs [#_ad7738_setcal] ; [] |792| 
        MOVL      XAR0,#78              ; [CPU_] |792| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |792| 
	.dwpsn	file "../Source/prod.c",line 793,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[62]          ; [CPU_] |793| 
        MOVL      XAR1,ACC              ; [CPU_] |793| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |793| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |793| 
        ; call occurs [#_ad7738_resetpeak] ; [] |793| 
	.dwpsn	file "../Source/prod.c",line 794,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |794| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |794| 
        ; call occurs [#_ad7738_resetvall] ; [] |794| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 797,column 7,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |797| 
        ; call occurs [#_lcd_clear] ; [] |797| 
	.dwpsn	file "../Source/prod.c",line 798,column 7,is_stmt,isa 0
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_update_units")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |798| 
        ; call occurs [#_update_units] ; [] |798| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 799,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |799| 
$C$L666:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 802,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |802| 
$C$L667:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 816,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |816| 
        ADDB      AL,#1                 ; [CPU_] |816| 
        MOV       *+FP[AR0],AL          ; [CPU_] |816| 
        CMPB      AL,#4                 ; [CPU_] |816| 
        B         $C$L668,HIS           ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |816| 
        ADDB      ACC,#1                ; [CPU_] |816| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |816| 
        B         $C$L669,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L668:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 817,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |817| 
        MOV       *+FP[AR0],#0          ; [CPU_] |817| 
$C$L669:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 825,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |825| 
        CMPB      AL,#1                 ; [CPU_] |825| 
        B         $C$L687,NEQ           ; [CPU_] |825| 
        ; branchcc occurs ; [] |825| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        B         $C$L687,EQ            ; [CPU_] |825| 
        ; branchcc occurs ; [] |825| 
	.dwpsn	file "../Source/prod.c",line 828,column 4,is_stmt,isa 0
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |828| 
        ; call occurs [#_prod_getavail] ; [] |828| 
        MOVL      XAR6,ACC              ; [CPU_] |828| 
        MOV       T,*-SP[55]            ; [CPU_] |828| 
        MPY       P,T,*-SP[56]          ; [CPU_] |828| 
        MOVU      ACC,PL                ; [CPU_] |828| 
        CMPL      ACC,XAR6              ; [CPU_] |828| 
        B         $C$L672,LOS           ; [CPU_] |828| 
        ; branchcc occurs ; [] |828| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        B         $C$L672,NEQ           ; [CPU_] |828| 
        ; branchcc occurs ; [] |828| 
	.dwpsn	file "../Source/prod.c",line 898,column 11,is_stmt,isa 0
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |898| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |898| 
        CMPB      AL,#0                 ; [CPU_] |898| 
        B         $C$L670,NEQ           ; [CPU_] |898| 
        ; branchcc occurs ; [] |898| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 906,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |906| 
        B         $C$L687,EQ            ; [CPU_] |906| 
        ; branchcc occurs ; [] |906| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |907| 
	.dwpsn	file "../Source/prod.c",line 910,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |910| 
	.dwpsn	file "../Source/prod.c",line 912,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |912| 
        MOVB      XAR0,#36              ; [CPU_] |912| 
	.dwpsn	file "../Source/prod.c",line 910,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |910| 
	.dwpsn	file "../Source/prod.c",line 911,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |911| 
	.dwpsn	file "../Source/prod.c",line 912,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |912| 
        MOVL      XAR0,#80              ; [CPU_] |912| 
        MOV       *+XAR4[2],AL          ; [CPU_] |912| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |912| 
	.dwpsn	file "../Source/prod.c",line 916,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |916| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 914,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |914| 
	.dwpsn	file "../Source/prod.c",line 916,column 5,is_stmt,isa 0
        B         $C$L686,UNC           ; [CPU_] |916| 
        ; branch occurs ; [] |916| 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 900,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |900| 
        MOV       *+XAR4[0],#0          ; [CPU_] |900| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 902,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |902| 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |901| 
	.dwpsn	file "../Source/prod.c",line 902,column 10,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |902| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L671:    
	.dwpsn	file "../Source/prod.c",line 903,column 6,is_stmt,isa 0
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |903| 
        ; call occurs [#_ad7738_getlimitst] ; [] |903| 
        MOV       *XAR1++,AL            ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 902,column 17,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |902| 
	.dwpsn	file "../Source/prod.c",line 903,column 6,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 902,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |902| 
        B         $C$L671,LT            ; [CPU_] |902| 
        ; branchcc occurs ; [] |902| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 905,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |905| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 906,column 4,is_stmt,isa 0
        B         $C$L686,UNC           ; [CPU_] |906| 
        ; branch occurs ; [] |906| 
$C$L672:    
        MOV       AL,*-SP[55]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 835,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |835| 
        MOVL      XAR0,#88              ; [CPU_] |835| 
	.dwpsn	file "../Source/prod.c",line 833,column 5,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |833| 
	.dwpsn	file "../Source/prod.c",line 835,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |835| 
        MOV       *+XAR4[0],#0          ; [CPU_] |835| 
	.dwpsn	file "../Source/prod.c",line 841,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |841| 
	.dwpsn	file "../Source/prod.c",line 836,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |836| 
        MOV       AL,*-SP[56]           ; [CPU_] |836| 
	.dwpsn	file "../Source/prod.c",line 837,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |837| 
        MOV       AL,*-SP[63]           ; [CPU_] |837| 
	.dwpsn	file "../Source/prod.c",line 838,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |838| 
        MOV       *+XAR4[3],AL          ; [CPU_] |838| 
        MOV       AL,*-SP[63]           ; [CPU_] |838| 
	.dwpsn	file "../Source/prod.c",line 839,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |839| 
        MOV       *+XAR4[4],AL          ; [CPU_] |839| 
        MOV       AL,*-SP[54]           ; [CPU_] |839| 
	.dwpsn	file "../Source/prod.c",line 840,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |840| 
        MOV       AH,*-SP[53]           ; [CPU_] |840| 
	.dwpsn	file "../Source/prod.c",line 841,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |841| 
        MOV       *+XAR4[6],AL          ; [CPU_] |841| 
        MOV       AL,AH                 ; [CPU_] |841| 
        ADDB      AL,#1                 ; [CPU_] |841| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 841,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |841| 
	.dwpsn	file "../Source/prod.c",line 843,column 5,is_stmt,isa 0
        B         $C$L683,UNC           ; [CPU_] |843| 
        ; branch occurs ; [] |843| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 844,column 6,is_stmt,isa 0
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |844| 
        ; call occurs [#_prod_getnext] ; [] |844| 
	.dwpsn	file "../Source/prod.c",line 846,column 7,is_stmt,isa 0
        DEC       *-SP[63]              ; [CPU_] |846| 
        B         $C$L683,NEQ           ; [CPU_] |846| 
        ; branchcc occurs ; [] |846| 
        MOV       AL,*-SP[55]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 848,column 6,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |848| 
	.dwpsn	file "../Source/prod.c",line 852,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |852| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 851,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |851| 
        MOV       *-SP[62],AL           ; [CPU_] |851| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 853,column 7,is_stmt,isa 0
        AND       AL,*-SP[54]           ; [CPU_] |853| 
        B         $C$L676,EQ            ; [CPU_] |853| 
        ; branchcc occurs ; [] |853| 
	.dwpsn	file "../Source/prod.c",line 854,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |854| 
        MOVL      XAR0,#88              ; [CPU_] |854| 
        ADDL      ACC,XAR4              ; [CPU_] |854| 
        MOVL      XAR3,ACC              ; [CPU_] |854| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |854| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 857,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |857| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 855,column 21,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |855| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 856,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |856| 
        ANDB      AL,#0xff              ; [CPU_] |856| 
        MOV       *XAR5++,AL            ; [CPU_] |856| 
	.dwpsn	file "../Source/prod.c",line 857,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |857| 
        LSR       AL,8                  ; [CPU_] |857| 
        MOV       *XAR5++,AL            ; [CPU_] |857| 
	.dwpsn	file "../Source/prod.c",line 855,column 21,is_stmt,isa 0
        BANZ      $C$L675,AR0--         ; [CPU_] |855| 
        ; branchcc occurs ; [] |855| 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 852,column 18,is_stmt,isa 0
        MOV       AL,*-SP[62]           ; [CPU_] |852| 
        ADDB      XAR7,#1               ; [CPU_] |852| 
	.dwpsn	file "../Source/prod.c",line 861,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |861| 
        MOV       *-SP[62],AL           ; [CPU_] |861| 
	.dwpsn	file "../Source/prod.c",line 852,column 18,is_stmt,isa 0
        BANZ      $C$L674,AR6--         ; [CPU_] |852| 
        ; branchcc occurs ; [] |852| 
	.dwpsn	file "../Source/prod.c",line 864,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |864| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 865,column 7,is_stmt,isa 0
        AND       AL,*-SP[54]           ; [CPU_] |865| 
        B         $C$L679,EQ            ; [CPU_] |865| 
        ; branchcc occurs ; [] |865| 
	.dwpsn	file "../Source/prod.c",line 866,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |866| 
        MOVL      XAR0,#88              ; [CPU_] |866| 
        ADDL      ACC,XAR4              ; [CPU_] |866| 
        ADDB      ACC,#8                ; [CPU_] |866| 
        MOVL      XAR3,ACC              ; [CPU_] |866| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |866| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 869,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |869| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 867,column 21,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |867| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 868,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |868| 
        ANDB      AL,#0xff              ; [CPU_] |868| 
        MOV       *XAR5++,AL            ; [CPU_] |868| 
	.dwpsn	file "../Source/prod.c",line 869,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |869| 
        LSR       AL,8                  ; [CPU_] |869| 
        MOV       *XAR5++,AL            ; [CPU_] |869| 
	.dwpsn	file "../Source/prod.c",line 867,column 21,is_stmt,isa 0
        BANZ      $C$L678,AR0--         ; [CPU_] |867| 
        ; branchcc occurs ; [] |867| 
$C$L679:    
	.dwpsn	file "../Source/prod.c",line 864,column 18,is_stmt,isa 0
        MOV       AL,*-SP[62]           ; [CPU_] |864| 
        ADDB      XAR7,#1               ; [CPU_] |864| 
	.dwpsn	file "../Source/prod.c",line 873,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |873| 
        MOV       *-SP[62],AL           ; [CPU_] |873| 
	.dwpsn	file "../Source/prod.c",line 864,column 18,is_stmt,isa 0
        BANZ      $C$L677,AR6--         ; [CPU_] |864| 
        ; branchcc occurs ; [] |864| 
	.dwpsn	file "../Source/prod.c",line 849,column 6,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |849| 
	.dwpsn	file "../Source/prod.c",line 876,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |876| 
        SETC      SXM                   ; [CPU_] 
$C$L680:    
        MOV       AL,*-SP[62]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 877,column 7,is_stmt,isa 0
        AND       AL,*-SP[54]           ; [CPU_] |877| 
        B         $C$L682,EQ            ; [CPU_] |877| 
        ; branchcc occurs ; [] |877| 
	.dwpsn	file "../Source/prod.c",line 878,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |878| 
        MOVL      XAR0,#88              ; [CPU_] |878| 
        ADDL      ACC,XAR4              ; [CPU_] |878| 
        ADDB      ACC,#12               ; [CPU_] |878| 
        MOVL      XAR6,ACC              ; [CPU_] |878| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |878| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 881,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |881| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 879,column 21,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |879| 
$C$L681:    
	.dwpsn	file "../Source/prod.c",line 880,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |880| 
        ANDB      AL,#0xff              ; [CPU_] |880| 
        MOV       *XAR5++,AL            ; [CPU_] |880| 
	.dwpsn	file "../Source/prod.c",line 881,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |881| 
        LSR       AL,8                  ; [CPU_] |881| 
        MOV       *XAR5++,AL            ; [CPU_] |881| 
	.dwpsn	file "../Source/prod.c",line 879,column 21,is_stmt,isa 0
        BANZ      $C$L681,AR0--         ; [CPU_] |879| 
        ; branchcc occurs ; [] |879| 
$C$L682:    
        MOV       AL,*-SP[62]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 876,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 885,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |885| 
        MOV       *-SP[62],AL           ; [CPU_] |885| 
	.dwpsn	file "../Source/prod.c",line 876,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |876| 
        CMPB      AL,#2                 ; [CPU_] |876| 
        B         $C$L680,LT            ; [CPU_] |876| 
        ; branchcc occurs ; [] |876| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 843,column 12,is_stmt,isa 0
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |843| 
        ; call occurs [#_prod_getavail] ; [] |843| 
        TEST      ACC                   ; [CPU_] |843| 
        B         $C$L684,EQ            ; [CPU_] |843| 
        ; branchcc occurs ; [] |843| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        CMP       AL,*-SP[51]           ; [CPU_] |843| 
        B         $C$L673,HI            ; [CPU_] |843| 
        ; branchcc occurs ; [] |843| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 889,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |889| 
        MOV       AL,*-SP[51]           ; [CPU_] |889| 
        MOV       *+XAR4[2],AL          ; [CPU_] |889| 
        MOV       AL,*-SP[57]           ; [CPU_] |889| 
	.dwpsn	file "../Source/prod.c",line 891,column 5,is_stmt,isa 0
        B         $C$L685,EQ            ; [CPU_] |891| 
        ; branchcc occurs ; [] |891| 
	.dwpsn	file "../Source/prod.c",line 892,column 6,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |892| 
$C$L685:    
	.dwpsn	file "../Source/prod.c",line 895,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |895| 
$C$L686:    
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |895| 
        ; call occurs [#_scia_send_bin] ; [] |895| 
$C$L687:    
	.dwpsn	file "../Source/prod.c",line 930,column 4,is_stmt,isa 0
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |930| 
        ; call occurs [#_scia_rx_getcmds] ; [] |930| 
        CMPB      AL,#0                 ; [CPU_] |930| 
        B         $C$L634,EQ            ; [CPU_] |930| 
        ; branchcc occurs ; [] |930| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 936,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |936| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |936| 
        ; call occurs [#_scia_rx_getcmd] ; [] |936| 
        MOV       *-SP[63],AL           ; [CPU_] |936| 
        CMPB      AL,#0                 ; [CPU_] |936| 
        B         $C$L634,EQ            ; [CPU_] |936| 
        ; branchcc occurs ; [] |936| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 953,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |953| 
        B         $C$L322,EQ            ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
	.dwpsn	file "../Source/prod.c",line 3566,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3566| 
        B         $C$L634,NEQ           ; [CPU_] |3566| 
        ; branchcc occurs ; [] |3566| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3566| 
        B         $C$L634,LO            ; [CPU_] |3566| 
        ; branchcc occurs ; [] |3566| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3592,column 4,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3592| 
	.dwpsn	file "../Source/prod.c",line 3589,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3589| 
	.dwpsn	file "../Source/prod.c",line 3592,column 4,is_stmt,isa 0
        MOV       *+FP[AR0],#2          ; [CPU_] |3592| 
	.dwpsn	file "../Source/prod.c",line 3593,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3593| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3593| 
	.dwpsn	file "../Source/prod.c",line 3600,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3600| 
	.dwpsn	file "../Source/prod.c",line 3593,column 4,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |3593| 
	.dwpsn	file "../Source/prod.c",line 3600,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3600| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |3600| 
        CMPB      AL,#146               ; [CPU_] |3600| 
        B         $C$L695,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#146               ; [CPU_] |3600| 
        B         $C$L232,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#54                ; [CPU_] |3600| 
        B         $C$L691,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#54                ; [CPU_] |3600| 
        B         $C$L726,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#36                ; [CPU_] |3600| 
        B         $C$L689,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#36                ; [CPU_] |3600| 
        B         $C$L287,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#33                ; [CPU_] |3600| 
        B         $C$L688,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#33                ; [CPU_] |3600| 
        B         $C$L303,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#16                ; [CPU_] |3600| 
        B         $C$L743,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        MOV       AH,AL                 ; [CPU_] |3600| 
        ADDB      AH,#-17               ; [CPU_] |3600| 
        CMPB      AH,#1                 ; [CPU_] |3600| 
        B         $C$L742,LOS           ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#32                ; [CPU_] |3600| 
        B         $C$L738,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L688:    
        CMPB      AL,#34                ; [CPU_] |3600| 
        B         $C$L298,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#35                ; [CPU_] |3600| 
        B         $C$L295,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L689:    
        CMPB      AL,#51                ; [CPU_] |3600| 
        B         $C$L690,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#51                ; [CPU_] |3600| 
        B         $C$L731,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#48                ; [CPU_] |3600| 
        B         $C$L281,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#49                ; [CPU_] |3600| 
        B         $C$L256,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#50                ; [CPU_] |3600| 
        B         $C$L733,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L690:    
        CMPB      AL,#52                ; [CPU_] |3600| 
        B         $C$L729,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#53                ; [CPU_] |3600| 
        B         $C$L728,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L691:    
        CMPB      AL,#71                ; [CPU_] |3600| 
        B         $C$L693,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#71                ; [CPU_] |3600| 
        B         $C$L252,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#68                ; [CPU_] |3600| 
        B         $C$L692,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#65                ; [CPU_] |3600| 
        B         $C$L711,GEQ           ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#55                ; [CPU_] |3600| 
        B         $C$L719,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#56                ; [CPU_] |3600| 
        B         $C$L715,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#57                ; [CPU_] |3600| 
        B         $C$L713,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L692:    
        CMPB      AL,#69                ; [CPU_] |3600| 
        B         $C$L710,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#70                ; [CPU_] |3600| 
        B         $C$L703,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L693:    
        CMPB      AL,#132               ; [CPU_] |3600| 
        B         $C$L694,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#132               ; [CPU_] |3600| 
        B         $C$L310,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#72                ; [CPU_] |3600| 
        B         $C$L245,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#130               ; [CPU_] |3600| 
        B         $C$L240,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#131               ; [CPU_] |3600| 
        B         $C$L311,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L694:    
        CMPB      AL,#144               ; [CPU_] |3600| 
        B         $C$L236,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#145               ; [CPU_] |3600| 
        B         $C$L235,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L695:    
        CMPB      AL,#169               ; [CPU_] |3600| 
        B         $C$L699,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#169               ; [CPU_] |3600| 
        B         $C$L168,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#161               ; [CPU_] |3600| 
        B         $C$L697,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#161               ; [CPU_] |3600| 
        B         $C$L195,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#150               ; [CPU_] |3600| 
        B         $C$L696,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#150               ; [CPU_] |3600| 
        B         $C$L225,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#147               ; [CPU_] |3600| 
        B         $C$L231,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#148               ; [CPU_] |3600| 
        B         $C$L230,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#149               ; [CPU_] |3600| 
        B         $C$L229,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L696:    
        CMPB      AL,#153               ; [CPU_] |3600| 
        B         $C$L216,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#160               ; [CPU_] |3600| 
        B         $C$L211,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L697:    
        CMPB      AL,#166               ; [CPU_] |3600| 
        B         $C$L698,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#166               ; [CPU_] |3600| 
        B         $C$L183,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#162               ; [CPU_] |3600| 
        B         $C$L190,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#163               ; [CPU_] |3600| 
        B         $C$L186,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#165               ; [CPU_] |3600| 
        B         $C$L185,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L698:    
        CMPB      AL,#167               ; [CPU_] |3600| 
        B         $C$L180,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#168               ; [CPU_] |3600| 
        B         $C$L177,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L699:    
        CMPB      AL,#195               ; [CPU_] |3600| 
        B         $C$L701,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#195               ; [CPU_] |3600| 
        B         $C$L143,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#192               ; [CPU_] |3600| 
        B         $C$L700,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#192               ; [CPU_] |3600| 
        B         $C$L160,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#170               ; [CPU_] |3600| 
        B         $C$L164,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#186               ; [CPU_] |3600| 
        B         $C$L308,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#187               ; [CPU_] |3600| 
        B         $C$L307,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L700:    
        CMPB      AL,#193               ; [CPU_] |3600| 
        B         $C$L153,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#194               ; [CPU_] |3600| 
        B         $C$L150,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L701:    
        CMPB      AL,#210               ; [CPU_] |3600| 
        B         $C$L702,GT            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#210               ; [CPU_] |3600| 
        B         $C$L79,EQ             ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#196               ; [CPU_] |3600| 
        B         $C$L115,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#197               ; [CPU_] |3600| 
        B         $C$L91,EQ             ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#198               ; [CPU_] |3600| 
        B         $C$L80,EQ             ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L702:    
        CMPB      AL,#211               ; [CPU_] |3600| 
        B         $C$L306,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        CMPB      AL,#240               ; [CPU_] |3600| 
        B         $C$L305,EQ            ; [CPU_] |3600| 
        ; branchcc occurs ; [] |3600| 
        B         $C$L317,UNC           ; [CPU_] |3600| 
        ; branch occurs ; [] |3600| 
$C$L703:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4264,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4264| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4264| 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4266,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4266| 
        ANDB      AL,#0xff              ; [CPU_] |4266| 
        MOV       *XAR1++,AL            ; [CPU_] |4266| 
	.dwpsn	file "../Source/prod.c",line 4267,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4267| 
        LSR       AL,8                  ; [CPU_] |4267| 
        MOV       *XAR1++,AL            ; [CPU_] |4267| 
	.dwpsn	file "../Source/prod.c",line 4265,column 17,is_stmt,isa 0
        BANZ      $C$L704,AR6--         ; [CPU_] |4265| 
        ; branchcc occurs ; [] |4265| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       *-SP[51],#3           ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4267,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4267| 
        ADDB      AL,#8                 ; [CPU_] |4267| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4267| 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4273,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4273| 
        MOV       AH,#0                 ; [CPU_] |4273| 
        MOVL      XAR0,#88              ; [CPU_] |4273| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4273| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4273| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4273| 
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4273| 
        ; call occurs [#FS$$CMP] ; [] |4273| 
        CMPB      AL,#0                 ; [CPU_] |4273| 
        B         $C$L706,NEQ           ; [CPU_] |4273| 
        ; branchcc occurs ; [] |4273| 
	.dwpsn	file "../Source/prod.c",line 4272,column 6,is_stmt,isa 0
        MOV       *-SP[63],#128         ; [CPU_] |4272| 
        B         $C$L707,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4274,column 7,is_stmt,isa 0
        MOV       *-SP[63],#129         ; [CPU_] |4274| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4276,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4276| 
        MOV       AH,#0                 ; [CPU_] |4276| 
        MOVL      XAR0,#88              ; [CPU_] |4276| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4276| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4276| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4276| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4276| 
        ; call occurs [#FS$$CMP] ; [] |4276| 
        CMPB      AL,#0                 ; [CPU_] |4276| 
        B         $C$L708,EQ            ; [CPU_] |4276| 
        ; branchcc occurs ; [] |4276| 
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4277,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4277| 
        MOV       *-SP[63],AL           ; [CPU_] |4277| 
$C$L708:    
	.dwpsn	file "../Source/prod.c",line 4279,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4279| 
        MOVL      XAR0,#88              ; [CPU_] |4279| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4279| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4279| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4279| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4279| 
        ; call occurs [#FS$$CMP] ; [] |4279| 
        CMPB      AL,#0                 ; [CPU_] |4279| 
        B         $C$L709,EQ            ; [CPU_] |4279| 
        ; branchcc occurs ; [] |4279| 
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4280,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4280| 
        MOV       *-SP[63],AL           ; [CPU_] |4280| 
$C$L709:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4282,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4282| 
        MOV       *XAR1++,AL            ; [CPU_] |4282| 
	.dwpsn	file "../Source/prod.c",line 4271,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |4271| 
	.dwpsn	file "../Source/prod.c",line 4282,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4282| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4282| 
	.dwpsn	file "../Source/prod.c",line 4271,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4271| 
        SUBB      XAR6,#1               ; [CPU_U] |4271| 
        ADDB      ACC,#10               ; [CPU_] |4271| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4271| 
        MOVZ      AR0,AR6               ; [CPU_] |4271| 
        MOV       *-SP[51],AR6          ; [CPU_] |4271| 
        CMP       AR0,#-1               ; [CPU_] |4271| 
        B         $C$L705,NEQ           ; [CPU_] |4271| 
        ; branchcc occurs ; [] |4271| 
        B         $C$L745,UNC           ; [CPU_] |4271| 
        ; branch occurs ; [] |4271| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4257,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4257| 
        MOV       AH,#16672             ; [CPU_] |4257| 
        MOVL      XAR0,#46              ; [CPU_] |4257| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4257| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4257| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4257| 
        ; call occurs [#FS$$MPY] ; [] |4257| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4257| 
        ; call occurs [#FS$$TOU] ; [] |4257| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4257| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4258| 
        LSR       AL,8                  ; [CPU_] |4258| 
	.dwpsn	file "../Source/prod.c",line 4257,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4258| 
        MOV       *+FP[AR0],#4          ; [CPU_] |4258| 
	.dwpsn	file "../Source/prod.c",line 4260,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4260| 
        ; branch occurs ; [] |4260| 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4239,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4239| 
        MOV       AH,#16672             ; [CPU_] |4239| 
        MOVL      XAR0,#46              ; [CPU_] |4239| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4239| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4239| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4239| 
        ; call occurs [#FS$$MPY] ; [] |4239| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4239| 
        ; call occurs [#FS$$TOU] ; [] |4239| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4239| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4239| 
	.dwpsn	file "../Source/prod.c",line 4240,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4239,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4239| 
	.dwpsn	file "../Source/prod.c",line 4240,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4242,column 5,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4242| 
        ; call occurs [#_ad7738_getmon] ; [] |4242| 
	.dwpsn	file "../Source/prod.c",line 4243,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4243| 
        MOV       AH,#18371             ; [CPU_] |4243| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4243| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4243| 
        ADDL      ACC,XAR4              ; [CPU_] |4243| 
        SUBB      ACC,#130              ; [CPU_] |4243| 
        MOVL      XAR4,ACC              ; [CPU_] |4243| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4243| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4243| 
        ; call occurs [#FS$$MPY] ; [] |4243| 
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4243| 
        ; call occurs [#FS$$TOL] ; [] |4243| 
	.dwpsn	file "../Source/prod.c",line 4244,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4244| 
	.dwpsn	file "../Source/prod.c",line 4243,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4243| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4243| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4243| 
	.dwpsn	file "../Source/prod.c",line 4244,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4244| 
	.dwpsn	file "../Source/prod.c",line 4247,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4247| 
	.dwpsn	file "../Source/prod.c",line 4244,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4244| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4247,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#8          ; [CPU_] |4247| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L712:    
	.dwpsn	file "../Source/prod.c",line 4246,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4246| 
        ANDB      AL,#0xff              ; [CPU_] |4246| 
        MOV       *XAR4++,AL            ; [CPU_] |4246| 
	.dwpsn	file "../Source/prod.c",line 4247,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4247| 
        LSR       AL,8                  ; [CPU_] |4247| 
        MOV       *XAR4++,AL            ; [CPU_] |4247| 
	.dwpsn	file "../Source/prod.c",line 4245,column 17,is_stmt,isa 0
        BANZ      $C$L712,AR6--         ; [CPU_] |4245| 
        ; branchcc occurs ; [] |4245| 
        B         $C$L745,UNC           ; [CPU_] |4245| 
        ; branch occurs ; [] |4245| 
$C$L713:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4226,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4226| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      AL,#4                 ; [CPU_] |4226| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4226| 
	.dwpsn	file "../Source/prod.c",line 4225,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4225| 
        MOV       *-SP[51],AL           ; [CPU_] |4225| 
$C$L714:    
	.dwpsn	file "../Source/prod.c",line 4226,column 6,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4226| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4226| 
        MOV       *XAR1++,AL            ; [CPU_] |4226| 
	.dwpsn	file "../Source/prod.c",line 4225,column 17,is_stmt,isa 0
        INC       *-SP[51]              ; [CPU_] |4225| 
	.dwpsn	file "../Source/prod.c",line 4226,column 6,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4226| 
	.dwpsn	file "../Source/prod.c",line 4225,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4225| 
        B         $C$L714,LT            ; [CPU_] |4225| 
        ; branchcc occurs ; [] |4225| 
        B         $C$L745,UNC           ; [CPU_] |4225| 
        ; branch occurs ; [] |4225| 
$C$L715:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4203,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4203| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4203| 
        MOVL      XAR7,ACC              ; [CPU_] |4203| 
        MOV       AL,*+XAR7[0]          ; [CPU_] |4203| 
        MOV       *XAR4++,AL            ; [CPU_] |4203| 
	.dwpsn	file "../Source/prod.c",line 4204,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4204| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4204| 
        MOVL      XAR7,ACC              ; [CPU_] |4204| 
        MOV       AL,*+XAR7[0]          ; [CPU_] |4204| 
        MOV       *XAR4++,AL            ; [CPU_] |4204| 
	.dwpsn	file "../Source/prod.c",line 4205,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4205| 
        ADD       ACC,#199 << 4         ; [CPU_] |4205| 
        MOVL      XAR7,ACC              ; [CPU_] |4205| 
        MOV       AL,*+XAR7[0]          ; [CPU_] |4205| 
	.dwpsn	file "../Source/prod.c",line 4207,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4207| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4205,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4205| 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4209,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4209| 
        ANDB      AL,#0xff              ; [CPU_] |4209| 
        MOV       *XAR4++,AL            ; [CPU_] |4209| 
	.dwpsn	file "../Source/prod.c",line 4210,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4210| 
        LSR       AL,8                  ; [CPU_] |4210| 
        MOV       *XAR4++,AL            ; [CPU_] |4210| 
	.dwpsn	file "../Source/prod.c",line 4208,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR0--         ; [CPU_] |4208| 
        ; branchcc occurs ; [] |4208| 
	.dwpsn	file "../Source/prod.c",line 4213,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR6             ; [CPU_] |4213| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L718:    
	.dwpsn	file "../Source/prod.c",line 4215,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4215| 
        ANDB      AL,#0xff              ; [CPU_] |4215| 
        MOV       *XAR4++,AL            ; [CPU_] |4215| 
	.dwpsn	file "../Source/prod.c",line 4216,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4216| 
        LSR       AL,8                  ; [CPU_] |4216| 
        MOV       *XAR4++,AL            ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4214,column 18,is_stmt,isa 0
        BANZ      $C$L718,AR0--         ; [CPU_] |4214| 
        ; branchcc occurs ; [] |4214| 
	.dwpsn	file "../Source/prod.c",line 4202,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4202| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4204,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4204| 
        ADDB      AL,#11                ; [CPU_] |4204| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4204| 
        MOVZ      AR0,AR3               ; [CPU_] |4204| 
	.dwpsn	file "../Source/prod.c",line 4202,column 17,is_stmt,isa 0
        ADDB      XAR6,#8               ; [CPU_] |4202| 
        ADDB      XAR1,#8               ; [CPU_] |4202| 
        ADDB      XAR5,#8               ; [CPU_] |4202| 
        SUBB      XAR0,#1               ; [CPU_U] |4202| 
        MOVZ      AR3,AR0               ; [CPU_] |4202| 
        CMP       AR0,#-1               ; [CPU_] |4202| 
        B         $C$L716,NEQ           ; [CPU_] |4202| 
        ; branchcc occurs ; [] |4202| 
        B         $C$L745,UNC           ; [CPU_] |4202| 
        ; branch occurs ; [] |4202| 
$C$L719:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       *-SP[51],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4149,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4149| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4149| 
        MOVL      XAR6,ACC              ; [CPU_] |4149| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4149| 
        MOV       *XAR4++,AL            ; [CPU_] |4149| 
	.dwpsn	file "../Source/prod.c",line 4150,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4150| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4150| 
        MOVL      XAR6,ACC              ; [CPU_] |4150| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4150| 
	.dwpsn	file "../Source/prod.c",line 4154,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4154| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4150,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4150| 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4161,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4161| 
        ANDB      AL,#0xff              ; [CPU_] |4161| 
        MOV       *XAR4++,AL            ; [CPU_] |4161| 
	.dwpsn	file "../Source/prod.c",line 4162,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4162| 
        LSR       AL,8                  ; [CPU_] |4162| 
        MOV       *XAR4++,AL            ; [CPU_] |4162| 
	.dwpsn	file "../Source/prod.c",line 4160,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4160| 
        ; branchcc occurs ; [] |4160| 
	.dwpsn	file "../Source/prod.c",line 4167,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4167| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4174,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4174| 
        ANDB      AL,#0xff              ; [CPU_] |4174| 
        MOV       *XAR4++,AL            ; [CPU_] |4174| 
	.dwpsn	file "../Source/prod.c",line 4175,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4175| 
        LSR       AL,8                  ; [CPU_] |4175| 
        MOV       *XAR4++,AL            ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4173,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4173| 
        ; branchcc occurs ; [] |4173| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4180,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4180| 
        ANDB      AL,#0xff              ; [CPU_] |4180| 
        MOV       *XAR4++,AL            ; [CPU_] |4180| 
	.dwpsn	file "../Source/prod.c",line 4181,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4181| 
        LSR       AL,8                  ; [CPU_] |4181| 
        MOV       *XAR4++,AL            ; [CPU_] |4181| 
	.dwpsn	file "../Source/prod.c",line 4179,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4179| 
        ; branchcc occurs ; [] |4179| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4186,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4186| 
        ANDB      AL,#0xff              ; [CPU_] |4186| 
        MOV       *XAR4++,AL            ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4187,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4187| 
        LSR       AL,8                  ; [CPU_] |4187| 
        MOV       *XAR4++,AL            ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4185,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4185| 
        ; branchcc occurs ; [] |4185| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L725:    
	.dwpsn	file "../Source/prod.c",line 4192,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4192| 
        ANDB      AL,#0xff              ; [CPU_] |4192| 
        MOV       *XAR4++,AL            ; [CPU_] |4192| 
	.dwpsn	file "../Source/prod.c",line 4193,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4193| 
        LSR       AL,8                  ; [CPU_] |4193| 
        MOV       *XAR4++,AL            ; [CPU_] |4193| 
	.dwpsn	file "../Source/prod.c",line 4191,column 18,is_stmt,isa 0
        BANZ      $C$L725,AR0--         ; [CPU_] |4191| 
        ; branchcc occurs ; [] |4191| 
	.dwpsn	file "../Source/prod.c",line 4148,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4148| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4148| 
        MOVL      XAR0,#88              ; [CPU_] |4148| 
        ADDB      ACC,#12               ; [CPU_] |4148| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4148| 
        MOVL      ACC,XT                ; [CPU_] |4148| 
        MOVL      XAR0,#91              ; [CPU_] |4148| 
        ADDB      ACC,#12               ; [CPU_] |4148| 
        MOVL      XT,ACC                ; [CPU_] |4148| 
        MOVL      ACC,P                 ; [CPU_] |4148| 
        ADDB      ACC,#12               ; [CPU_] |4148| 
        MOVL      P,ACC                 ; [CPU_] |4148| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4148| 
	.dwpsn	file "../Source/prod.c",line 4150,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4150| 
        ADDB      AL,#22                ; [CPU_] |4150| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4150| 
        MOVZ      AR0,*-SP[51]          ; [CPU_] |4150| 
	.dwpsn	file "../Source/prod.c",line 4148,column 17,is_stmt,isa 0
        ADDB      XAR7,#12              ; [CPU_] |4148| 
        ADDB      XAR1,#12              ; [CPU_] |4148| 
        ADDB      XAR5,#12              ; [CPU_] |4148| 
        SUBB      XAR0,#1               ; [CPU_U] |4148| 
        MOV       *-SP[51],AR0          ; [CPU_] |4148| 
        CMP       AR0,#-1               ; [CPU_] |4148| 
        B         $C$L720,NEQ           ; [CPU_] |4148| 
        ; branchcc occurs ; [] |4148| 
        B         $C$L745,UNC           ; [CPU_] |4148| 
        ; branch occurs ; [] |4148| 
$C$L726:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4141| 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      AL,#12                ; [CPU_] |4141| 
        MOVB      XAR6,#3               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4141| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4139,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4139| 
        MOV       *XAR4++,AL            ; [CPU_] |4139| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4140| 
        MOV       *XAR4++,AL            ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4138,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4138| 
	.dwpsn	file "../Source/prod.c",line 4141,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4138,column 17,is_stmt,isa 0
        BANZ      $C$L727,AR6--         ; [CPU_] |4138| 
        ; branchcc occurs ; [] |4138| 
        B         $C$L745,UNC           ; [CPU_] |4138| 
        ; branch occurs ; [] |4138| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4129,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4129| 
        MOVB      XAR0,#36              ; [CPU_] |4129| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4129| 
        MOVL      XAR0,#80              ; [CPU_] |4129| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4129| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4129| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4131| 
        MOV       *+FP[AR0],#7          ; [CPU_] |4131| 
        NOP       ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4130,column 17,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4130| 
        ; branch occurs ; [] |4130| 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4115,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4115| 
        MOVB      XAR0,#38              ; [CPU_] |4115| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4115| 
        MOVB      XAR6,#1               ; [CPU_] 
        AND       AH,AL,#0x00ff         ; [CPU_] |4115| 
	.dwpsn	file "../Source/prod.c",line 4116,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4116| 
	.dwpsn	file "../Source/prod.c",line 4115,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4115| 
	.dwpsn	file "../Source/prod.c",line 4116,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4116| 
	.dwpsn	file "../Source/prod.c",line 4115,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4115| 
	.dwpsn	file "../Source/prod.c",line 4116,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4116| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4116| 
	.dwpsn	file "../Source/prod.c",line 4121,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4121| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOV       *+FP[AR0],#8          ; [CPU_] |4121| 
$C$L730:    
	.dwpsn	file "../Source/prod.c",line 4120,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4120| 
        ANDB      AL,#0xff              ; [CPU_] |4120| 
        MOV       *XAR4++,AL            ; [CPU_] |4120| 
	.dwpsn	file "../Source/prod.c",line 4121,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4121| 
        LSR       AL,8                  ; [CPU_] |4121| 
        MOV       *XAR4++,AL            ; [CPU_] |4121| 
	.dwpsn	file "../Source/prod.c",line 4119,column 17,is_stmt,isa 0
        BANZ      $C$L730,AR6--         ; [CPU_] |4119| 
        ; branchcc occurs ; [] |4119| 
        B         $C$L745,UNC           ; [CPU_] |4119| 
        ; branch occurs ; [] |4119| 
$C$L731:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4105,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4105| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR4,#42              ; [CPU_] 
        ADDB      AL,#4                 ; [CPU_] |4105| 
        MOVB      XAR6,#3               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4105| 
$C$L732:    
        MOV       AL,*+XAR4[0]          ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4104,column 17,is_stmt,isa 0
        ADDB      XAR4,#10              ; [CPU_] |4104| 
	.dwpsn	file "../Source/prod.c",line 4105,column 6,is_stmt,isa 0
        MOV       *XAR5++,AL            ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4104,column 17,is_stmt,isa 0
        BANZ      $C$L732,AR6--         ; [CPU_] |4104| 
        ; branchcc occurs ; [] |4104| 
        B         $C$L745,UNC           ; [CPU_] |4104| 
        ; branch occurs ; [] |4104| 
$C$L733:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4088,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4088| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L735:    
	.dwpsn	file "../Source/prod.c",line 4090,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4090| 
        ANDB      AL,#0xff              ; [CPU_] |4090| 
        MOV       *XAR4++,AL            ; [CPU_] |4090| 
	.dwpsn	file "../Source/prod.c",line 4091,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4091| 
        LSR       AL,8                  ; [CPU_] |4091| 
        MOV       *XAR4++,AL            ; [CPU_] |4091| 
	.dwpsn	file "../Source/prod.c",line 4089,column 18,is_stmt,isa 0
        BANZ      $C$L735,AR0--         ; [CPU_] |4089| 
        ; branchcc occurs ; [] |4089| 
	.dwpsn	file "../Source/prod.c",line 4087,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4087| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4087| 
        ADDB      XAR5,#2               ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4091,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4091| 
        ADDB      AL,#4                 ; [CPU_] |4091| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4091| 
	.dwpsn	file "../Source/prod.c",line 4087,column 17,is_stmt,isa 0
        BANZ      $C$L734,AR6--         ; [CPU_] |4087| 
        ; branchcc occurs ; [] |4087| 
	.dwpsn	file "../Source/prod.c",line 4096,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4096| 
        MOVL      ACC,XAR5              ; [CPU_] |4096| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4096| 
        MOVL      XAR6,ACC              ; [CPU_] |4096| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4096| 
        ANDB      AL,#0xff              ; [CPU_] |4096| 
        MOV       *XAR4++,AL            ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4097,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4097| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4097| 
        MOVL      XAR5,ACC              ; [CPU_] |4097| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4097| 
        LSR       AL,8                  ; [CPU_] |4097| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4097| 
$C$L736:    
        MOVL      XAR0,#91              ; [CPU_] |4097| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4097| 
        ADDB      AL,#2                 ; [CPU_] |4097| 
$C$L737:    
        MOVL      XAR0,#91              ; [CPU_] |4097| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4097| 
	.dwpsn	file "../Source/prod.c",line 4100,column 5,is_stmt,isa 0
        B         $C$L745,UNC           ; [CPU_] |4100| 
        ; branch occurs ; [] |4100| 
$C$L738:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3742,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3742| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3742| 
        MOVZ      AR4,AR4               ; [CPU_] |3742| 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3744,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3744| 
        ANDB      AL,#0xff              ; [CPU_] |3744| 
        MOV       *XAR1++,AL            ; [CPU_] |3744| 
	.dwpsn	file "../Source/prod.c",line 3745,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3745| 
        LSR       AL,8                  ; [CPU_] |3745| 
        MOV       *XAR1++,AL            ; [CPU_] |3745| 
	.dwpsn	file "../Source/prod.c",line 3743,column 17,is_stmt,isa 0
        BANZ      $C$L739,AR6--         ; [CPU_] |3743| 
        ; branchcc occurs ; [] |3743| 
	.dwpsn	file "../Source/prod.c",line 3749,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3749| 
        ANDB      AL,#0xff              ; [CPU_] |3749| 
	.dwpsn	file "../Source/prod.c",line 3750,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3750| 
	.dwpsn	file "../Source/prod.c",line 3749,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3749| 
	.dwpsn	file "../Source/prod.c",line 3750,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3750| 
        LSR       AL,8                  ; [CPU_] |3750| 
        MOV       *XAR1++,AL            ; [CPU_] |3750| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3750| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L740:    
	.dwpsn	file "../Source/prod.c",line 3754,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3754| 
        ANDB      AL,#0xff              ; [CPU_] |3754| 
        MOV       *XAR1++,AL            ; [CPU_] |3754| 
	.dwpsn	file "../Source/prod.c",line 3755,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3755| 
        LSR       AL,8                  ; [CPU_] |3755| 
        MOV       *XAR1++,AL            ; [CPU_] |3755| 
	.dwpsn	file "../Source/prod.c",line 3753,column 17,is_stmt,isa 0
        BANZ      $C$L740,AR6--         ; [CPU_] |3753| 
        ; branchcc occurs ; [] |3753| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3759,column 5,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_strlen")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3759| 
        ; call occurs [#_strlen] ; [] |3759| 
	.dwpsn	file "../Source/prod.c",line 3760,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3760| 
        MOV       *+XAR1[0],AL          ; [CPU_] |3760| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |3760| 
	.dwpsn	file "../Source/prod.c",line 3745,column 6,is_stmt,isa 0
        ADDB      AH,#11                ; [CPU_] |3745| 
        MOVL      XAR0,#91              ; [CPU_] |3745| 
	.dwpsn	file "../Source/prod.c",line 3761,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3761| 
	.dwpsn	file "../Source/prod.c",line 3745,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |3745| 
	.dwpsn	file "../Source/prod.c",line 3761,column 17,is_stmt,isa 0
        B         $C$L745,EQ            ; [CPU_] |3761| 
        ; branchcc occurs ; [] |3761| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3760,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3760| 
	.dwpsn	file "../Source/prod.c",line 3761,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3761| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3762,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3762| 
        MOVL      XAR0,#91              ; [CPU_] |3762| 
        MOV       *XAR1++,AH            ; [CPU_] |3762| 
	.dwpsn	file "../Source/prod.c",line 3761,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3761| 
	.dwpsn	file "../Source/prod.c",line 3762,column 6,is_stmt,isa 0
        MOV       AH,*+FP[AR0]          ; [CPU_] |3762| 
        ADDB      AH,#1                 ; [CPU_] |3762| 
        MOVL      XAR0,#91              ; [CPU_] |3762| 
	.dwpsn	file "../Source/prod.c",line 3761,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3761| 
	.dwpsn	file "../Source/prod.c",line 3762,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |3762| 
	.dwpsn	file "../Source/prod.c",line 3761,column 17,is_stmt,isa 0
        B         $C$L741,HI            ; [CPU_] |3761| 
        ; branchcc occurs ; [] |3761| 
        B         $C$L745,UNC           ; [CPU_] |3761| 
        ; branch occurs ; [] |3761| 
$C$L742:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3728,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3728| 
        MOVL      XAR0,#66              ; [CPU_] |3728| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3728| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3728| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3728| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3728| 
	.dwpsn	file "../Source/prod.c",line 3731,column 5,is_stmt,isa 0
        B         $C$L744,UNC           ; [CPU_] |3731| 
        ; branch occurs ; [] |3731| 
$C$L743:    
	.dwpsn	file "../Source/prod.c",line 3722,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3722| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3722| 
$C$L744:    
        MOVL      XAR0,#91              ; [CPU_] |3722| 
        MOV       *+FP[AR0],#3          ; [CPU_] |3722| 
$C$L745:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5713,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5713| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5713| 
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5713| 
        ; call occurs [#_scia_send_bin] ; [] |5713| 
	.dwpsn	file "../Source/prod.c",line 5715,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5715| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5715| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5715| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5715| 
        CMPB      AL,#240               ; [CPU_] |5715| 
        B         $C$L634,NEQ           ; [CPU_] |5715| 
        ; branchcc occurs ; [] |5715| 
	.dwpsn	file "../Source/prod.c",line 5716,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5716| 
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_delay_us")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5716| 
        ; call occurs [#_delay_us] ; [] |5716| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5717,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5717| 
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5717| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5717| 
        B         $C$L634,UNC           ; [CPU_] |5717| 
        ; branch occurs ; [] |5717| 
	.dwattr $C$DW$269, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$269, DW_AT_TI_end_line(0x1674)
	.dwattr $C$DW$269, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$269

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1462	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1462, DW_AT_name("get_fattime")
	.dwattr $C$DW$1462, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1462, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1462, DW_AT_external
	.dwattr $C$DW$1462, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1462, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1462, DW_AT_TI_begin_line(0x74)
	.dwattr $C$DW$1462, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1462, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 116,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 116 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 120,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 120 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 121 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 122 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |120| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |120| 
        MOVL      ACC,P                 ; [CPU_] |120| 
        SFR       ACC,1                 ; [CPU_] |120| 
        MOVL      P,ACC                 ; [CPU_] |120| 
        MOV       AL,@_rtc              ; [CPU_] |120| 
        SUB       AL,#1980              ; [CPU_] |120| 
        MOV       ACC,AL << 4           ; [CPU_] |120| 
        OR        ACC,@_rtc+1           ; [CPU_] |120| 
        LSL       ACC,5                 ; [CPU_] |120| 
        OR        ACC,@_rtc+2           ; [CPU_] |120| 
        LSL       ACC,5                 ; [CPU_] |120| 
        OR        ACC,@_rtc+4           ; [CPU_] |120| 
        LSL       ACC,6                 ; [CPU_] |120| 
        OR        ACC,@_rtc+5           ; [CPU_] |120| 
        LSL       ACC,5                 ; [CPU_] |120| 
        OR        AL,PL                 ; [CPU_] |120| 
        OR        AH,PH                 ; [CPU_] |120| 
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1462, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1462, DW_AT_TI_end_line(0x7b)
	.dwattr $C$DW$1462, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1462

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec  4 2019",0
	.align	2
$C$FSL62:	.string	"09:57:22",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_conf_default
	.global	_ad7738_resetlimit
	.global	_configCAN
	.global	_ad7738_resettare
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_lcd_puts
	.global	_ad7738_setcal
	.global	_ad7738_resetpeak
	.global	_lcd_dputs
	.global	_ad7738_monclr
	.global	_ad7738_init
	.global	_maf_rst
	.global	_ds1820start
	.global	_dac_setmode
	.global	_velf_rst
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_METHOD
	.global	_latch_dac
	.global	_delay_us
	.global	_UNITS
	.global	_BITMAP
	.global	_BAUD
	.global	_mcbsp_xmit
	.global	_LPV
	.global	_InitPieVectTable
	.global	_ad7738_settemp
	.global	_INTERFACE
	.global	_gpio_init
	.global	_extio_init
	.global	_led_init
	.global	_lcd_init
	.global	_led_set
	.global	_lcd_clear
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_ssr_set
	.global	_sys_init
	.global	_uart_set_dir
	.global	_tagdetect
	.global	_secureRamFuncs_runstart
	.global	_secureRamFuncs_loadend
	.global	_port4004
	.global	_port400e
	.global	_Flash28_API_LoadStart
	.global	_Flash28_API_RunStart
	.global	_Flash28_API_LoadEnd
	.global	_secureRamFuncs_loadstart
	.global	_scia_getparam
	.global	_scia_send_bin
	.global	_spi_recv
	.global	_conf_write
	.global	_conf_read
	.global	_ad7738_rawrdy
	.global	_sprintf
	.global	_atoi
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_scia_puts
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_getlimitst
	.global	_ad7738_monrdy
	.global	_ad7738_tempstart
	.global	_ad7738_getlimitchgd
	.global	_strlen
	.global	_strtod
	.global	_ds1820read
	.global	_atol
	.global	_Flash_CallbackPtr
	.global	_prod_getavail
	.global	_prod_getnext
	.global	_Flash_CPUScaleFactor
	.global	_ad7738_getraw
	.global	_ad7738_getmon
	.global	_ad7738_getvall
	.global	_ad7738_getpeak
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1464	.dwtag  DW_TAG_member
	.dwattr $C$DW$1464, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1464, DW_AT_name("fs_type")
	.dwattr $C$DW$1464, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1464, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1464, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1465	.dwtag  DW_TAG_member
	.dwattr $C$DW$1465, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1465, DW_AT_name("drv")
	.dwattr $C$DW$1465, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1465, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1465, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1466	.dwtag  DW_TAG_member
	.dwattr $C$DW$1466, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1466, DW_AT_name("csize")
	.dwattr $C$DW$1466, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1466, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1466, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1467	.dwtag  DW_TAG_member
	.dwattr $C$DW$1467, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1467, DW_AT_name("n_fats")
	.dwattr $C$DW$1467, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1467, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1467, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1468	.dwtag  DW_TAG_member
	.dwattr $C$DW$1468, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1468, DW_AT_name("wflag")
	.dwattr $C$DW$1468, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1468, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1468, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1469	.dwtag  DW_TAG_member
	.dwattr $C$DW$1469, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1469, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1469, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1469, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1469, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1470	.dwtag  DW_TAG_member
	.dwattr $C$DW$1470, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1470, DW_AT_name("id")
	.dwattr $C$DW$1470, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1470, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1470, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1471	.dwtag  DW_TAG_member
	.dwattr $C$DW$1471, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1471, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1471, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1471, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1471, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1472	.dwtag  DW_TAG_member
	.dwattr $C$DW$1472, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1472, DW_AT_name("last_clust")
	.dwattr $C$DW$1472, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1472, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1472, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1473	.dwtag  DW_TAG_member
	.dwattr $C$DW$1473, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1473, DW_AT_name("free_clust")
	.dwattr $C$DW$1473, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1473, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1473, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1474	.dwtag  DW_TAG_member
	.dwattr $C$DW$1474, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1474, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1474, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1474, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1474, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1475	.dwtag  DW_TAG_member
	.dwattr $C$DW$1475, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1475, DW_AT_name("cdir")
	.dwattr $C$DW$1475, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1475, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1475, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1476	.dwtag  DW_TAG_member
	.dwattr $C$DW$1476, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1476, DW_AT_name("n_fatent")
	.dwattr $C$DW$1476, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1476, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1476, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1477	.dwtag  DW_TAG_member
	.dwattr $C$DW$1477, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1477, DW_AT_name("fsize")
	.dwattr $C$DW$1477, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1477, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1477, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1478	.dwtag  DW_TAG_member
	.dwattr $C$DW$1478, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1478, DW_AT_name("fatbase")
	.dwattr $C$DW$1478, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1478, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1478, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1479	.dwtag  DW_TAG_member
	.dwattr $C$DW$1479, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1479, DW_AT_name("dirbase")
	.dwattr $C$DW$1479, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1479, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1479, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1480	.dwtag  DW_TAG_member
	.dwattr $C$DW$1480, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1480, DW_AT_name("database")
	.dwattr $C$DW$1480, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1480, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1480, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1481	.dwtag  DW_TAG_member
	.dwattr $C$DW$1481, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1481, DW_AT_name("winsect")
	.dwattr $C$DW$1481, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1481, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1481, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1482	.dwtag  DW_TAG_member
	.dwattr $C$DW$1482, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1482, DW_AT_name("win")
	.dwattr $C$DW$1482, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1482, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1482, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1483	.dwtag  DW_TAG_member
	.dwattr $C$DW$1483, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1483, DW_AT_name("fs")
	.dwattr $C$DW$1483, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1483, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1483, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1484	.dwtag  DW_TAG_member
	.dwattr $C$DW$1484, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1484, DW_AT_name("id")
	.dwattr $C$DW$1484, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1484, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1484, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1485	.dwtag  DW_TAG_member
	.dwattr $C$DW$1485, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1485, DW_AT_name("flag")
	.dwattr $C$DW$1485, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1485, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1485, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1486	.dwtag  DW_TAG_member
	.dwattr $C$DW$1486, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1486, DW_AT_name("pad1")
	.dwattr $C$DW$1486, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1486, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1486, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1487	.dwtag  DW_TAG_member
	.dwattr $C$DW$1487, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1487, DW_AT_name("fptr")
	.dwattr $C$DW$1487, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1487, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1487, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1488	.dwtag  DW_TAG_member
	.dwattr $C$DW$1488, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1488, DW_AT_name("fsize")
	.dwattr $C$DW$1488, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1488, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1488, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1489	.dwtag  DW_TAG_member
	.dwattr $C$DW$1489, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1489, DW_AT_name("org_clust")
	.dwattr $C$DW$1489, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1489, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1489, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1490	.dwtag  DW_TAG_member
	.dwattr $C$DW$1490, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1490, DW_AT_name("curr_clust")
	.dwattr $C$DW$1490, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1490, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1490, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1491	.dwtag  DW_TAG_member
	.dwattr $C$DW$1491, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1491, DW_AT_name("dsect")
	.dwattr $C$DW$1491, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1491, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1491, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1492	.dwtag  DW_TAG_member
	.dwattr $C$DW$1492, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1492, DW_AT_name("dir_sect")
	.dwattr $C$DW$1492, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1492, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1492, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1493	.dwtag  DW_TAG_member
	.dwattr $C$DW$1493, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1493, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1493, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1493, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1493, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1494, DW_AT_name("cltbl")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1495, DW_AT_name("buf")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1496, DW_AT_name("year")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("month")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("mday")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1499, DW_AT_name("wday")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1500, DW_AT_name("hour")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1501, DW_AT_name("min")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1502, DW_AT_name("sec")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1503, DW_AT_name("adc")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1504, DW_AT_name("adw")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1505, DW_AT_name("pos")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1506, DW_AT_name("vel")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1507, DW_AT_name("ci")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1508, DW_AT_name("bslope")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1509, DW_AT_name("tcx")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1510, DW_AT_name("tcy")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1511, DW_AT_name("tcz")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1512	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1512, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1513, DW_AT_name("what")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1514, DW_AT_name("ch")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1515, DW_AT_name("dslopep")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1516, DW_AT_name("dslopen")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1517, DW_AT_name("dint")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1518, DW_AT_name("gain")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1519, DW_AT_name("offset")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1520	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1520, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1521, DW_AT_name("what")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1522, DW_AT_name("ch")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1523, DW_AT_name("adec")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1524	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1524, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1525, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1525, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1525, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1526, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1526, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1526, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1527, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1527, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1527, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1528, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1528, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1528, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1529, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1529, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1529, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1530, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1530, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1530, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1531, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1531, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1531, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1532, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1532, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1532, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1533, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1533, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1533, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1534, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1534, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1534, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1535, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1535, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1535, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1536, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1536, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1536, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1537, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1537, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1537, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1538, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1538, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1538, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1539, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1539, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1539, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1540, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1540, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1540, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1541, DW_AT_name("all")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1542, DW_AT_name("bit")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1543, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1543, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1543, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1544, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1544, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1544, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1545, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1545, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1545, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1546, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1546, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1547, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1547, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1548, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1548, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1548, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1549, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1549, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1549, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1550, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1550, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1550, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1551, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1551, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1552, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1552, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1553, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1553, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1554, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1554, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1556, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1556, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1557, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1557, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1557, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("all")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1560, DW_AT_name("bit")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1574, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1574, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1575, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1575, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1575, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("all")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1578, DW_AT_name("bit")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("all")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1596, DW_AT_name("bit")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("all")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1614, DW_AT_name("bit")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("all")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1632, DW_AT_name("bit")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("all")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1650, DW_AT_name("bit")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("all")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1668, DW_AT_name("bit")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("rsvd1")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("rsvd2")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("all")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1676, DW_AT_name("bit")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("rsvd1")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("rsvd2")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("all")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1684, DW_AT_name("bit")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("rsvd1")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("rsvd2")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("all")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1692, DW_AT_name("bit")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("rsvd1")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("rsvd2")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("all")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1700, DW_AT_name("bit")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("rsvd1")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("all")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1706, DW_AT_name("bit")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1708, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1708, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("rsvd1")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("all")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1712, DW_AT_name("bit")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("rsvd1")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("all")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1718, DW_AT_name("bit")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("rsvd1")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("all")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1724, DW_AT_name("bit")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("all")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1742, DW_AT_name("bit")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("all")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1760, DW_AT_name("bit")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("all")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1778, DW_AT_name("bit")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("all")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1796, DW_AT_name("bit")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("rsvd1")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("rsvd2")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("all")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1802, DW_AT_name("bit")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("rsvd1")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("rsvd2")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("all")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1808, DW_AT_name("bit")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("rsvd1")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("rsvd2")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("all")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1814, DW_AT_name("bit")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("rsvd1")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("rsvd2")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("all")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1820, DW_AT_name("bit")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1821, DW_AT_name("GPADAT")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1822, DW_AT_name("GPASET")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1823, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1824, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1825, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1826, DW_AT_name("GPBSET")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1827, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1828, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1829, DW_AT_name("rsvd1")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1830, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1831, DW_AT_name("GPDSET")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1832, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1833, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1834, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1835, DW_AT_name("GPESET")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1836, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1837, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1838, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1839, DW_AT_name("GPFSET")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1840, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1841, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1842, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1843, DW_AT_name("GPGSET")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1844, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1845, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1846, DW_AT_name("rsvd2")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1847	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1847)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("what")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("ch")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("limit")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1851, DW_AT_name("limits")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1852, DW_AT_name("limitr")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1853	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1853, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1854, DW_AT_name("usn")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1855, DW_AT_name("uname")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1856, DW_AT_name("rxdir")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("baud")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1858, DW_AT_name("tagiden")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1859, DW_AT_name("tarepersist")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1860, DW_AT_name("filter")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1861, DW_AT_name("diffwin")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1862, DW_AT_name("ch")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1863, DW_AT_name("sensor")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1864, DW_AT_name("vfd")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1865, DW_AT_name("dac")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1866, DW_AT_name("lim")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1867, DW_AT_name("velfilter")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1868, DW_AT_name("cntperin")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1869, DW_AT_name("magic")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1870	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1870)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1871, DW_AT_name("ssn")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1872, DW_AT_name("slbl")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1873, DW_AT_name("tagid")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1874, DW_AT_name("method")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1875, DW_AT_name("date")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1876, DW_AT_name("range")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1877, DW_AT_name("unit")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1878, DW_AT_name("ounit")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1879, DW_AT_name("ufactor")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1880, DW_AT_name("points")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1881, DW_AT_name("mass")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1882, DW_AT_name("adc")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1883, DW_AT_name("slope")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1884, DW_AT_name("intercept")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1885, DW_AT_name("shunt")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1886, DW_AT_name("base")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1887, DW_AT_name("tare")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1888, DW_AT_name("dacgain")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1889, DW_AT_name("dacoff")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1890, DW_AT_name("ch")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1891	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1891, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1892	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1892)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1893	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1893, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1894	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$6)

$C$DW$T$172	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$172, DW_AT_type(*$C$DW$1894)


$C$DW$T$173	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$173, DW_AT_type(*$C$DW$T$172)
	.dwattr $C$DW$T$173, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$173, DW_AT_byte_size(0x101)
$C$DW$1895	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1895, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$173

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)


$C$DW$T$195	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$195, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$T$195, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$195, DW_AT_byte_size(0x0c)
$C$DW$1896	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1896, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$195

$C$DW$1897	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$10)

$C$DW$T$197	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$1897)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1898	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$36)

$C$DW$1899	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$1898)

$C$DW$T$295	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$295, DW_AT_type(*$C$DW$1899)

$C$DW$1900	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$36)

$C$DW$T$296	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$296, DW_AT_type(*$C$DW$1900)


$C$DW$T$297	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$T$296)
	.dwattr $C$DW$T$297, DW_AT_language(DW_LANG_C)
$C$DW$1901	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$297


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1902	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1902, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$302	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$302, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$302, DW_AT_byte_size(0x03)
$C$DW$1903	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1903, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$302

$C$DW$T$303	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$303, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$303, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1904	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1904, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1905	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1905, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1906	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1906, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1907	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$12)

$C$DW$T$325	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$325, DW_AT_type(*$C$DW$1907)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1908	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$90)

$C$DW$T$328	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$328, DW_AT_type(*$C$DW$1908)


$C$DW$T$329	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$329, DW_AT_type(*$C$DW$T$328)
	.dwattr $C$DW$T$329, DW_AT_language(DW_LANG_C)
$C$DW$1909	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$329

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$344	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$344, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$344, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$344, DW_AT_byte_size(0x08)
$C$DW$1910	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1910, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$344

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1911	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1911, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1912	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1912, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1913	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1913, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1914	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1914, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$363	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$363, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$363, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$363, DW_AT_byte_size(0x06)
$C$DW$1915	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1915, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$363

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1916	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1916, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1917	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1917, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$349	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$349, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$349, DW_AT_address_class(0x20)

$C$DW$1918	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$5)

$C$DW$T$176	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$1918)

$C$DW$T$177	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$177, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$T$177, DW_AT_address_class(0x20)


$C$DW$T$364	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$364, DW_AT_type(*$C$DW$T$177)
	.dwattr $C$DW$T$364, DW_AT_language(DW_LANG_C)
$C$DW$1919	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$364


$C$DW$T$365	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$365, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$365, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$365, DW_AT_byte_size(0x400)
$C$DW$1920	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1920, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$365


$C$DW$T$370	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$370, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$370, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$370, DW_AT_byte_size(0x08)
$C$DW$1921	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1921, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$370


$C$DW$T$371	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$371, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$371, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$371, DW_AT_byte_size(0x64)
$C$DW$1922	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1922, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$371


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$372, DW_AT_byte_size(0x40)
$C$DW$1923	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1923, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$372

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1924	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1924, DW_AT_name("AL")
	.dwattr $C$DW$1924, DW_AT_location[DW_OP_reg0]

$C$DW$1925	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1925, DW_AT_name("AH")
	.dwattr $C$DW$1925, DW_AT_location[DW_OP_reg1]

$C$DW$1926	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1926, DW_AT_name("PL")
	.dwattr $C$DW$1926, DW_AT_location[DW_OP_reg2]

$C$DW$1927	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1927, DW_AT_name("PH")
	.dwattr $C$DW$1927, DW_AT_location[DW_OP_reg3]

$C$DW$1928	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1928, DW_AT_name("SP")
	.dwattr $C$DW$1928, DW_AT_location[DW_OP_reg20]

$C$DW$1929	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1929, DW_AT_name("XT")
	.dwattr $C$DW$1929, DW_AT_location[DW_OP_reg21]

$C$DW$1930	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1930, DW_AT_name("T")
	.dwattr $C$DW$1930, DW_AT_location[DW_OP_reg22]

$C$DW$1931	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1931, DW_AT_name("ST0")
	.dwattr $C$DW$1931, DW_AT_location[DW_OP_reg23]

$C$DW$1932	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1932, DW_AT_name("ST1")
	.dwattr $C$DW$1932, DW_AT_location[DW_OP_reg24]

$C$DW$1933	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1933, DW_AT_name("PC")
	.dwattr $C$DW$1933, DW_AT_location[DW_OP_reg25]

$C$DW$1934	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1934, DW_AT_name("RPC")
	.dwattr $C$DW$1934, DW_AT_location[DW_OP_reg26]

$C$DW$1935	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1935, DW_AT_name("FP")
	.dwattr $C$DW$1935, DW_AT_location[DW_OP_reg28]

$C$DW$1936	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1936, DW_AT_name("DP")
	.dwattr $C$DW$1936, DW_AT_location[DW_OP_reg29]

$C$DW$1937	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1937, DW_AT_name("SXM")
	.dwattr $C$DW$1937, DW_AT_location[DW_OP_reg30]

$C$DW$1938	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1938, DW_AT_name("PM")
	.dwattr $C$DW$1938, DW_AT_location[DW_OP_reg31]

$C$DW$1939	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1939, DW_AT_name("OVM")
	.dwattr $C$DW$1939, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1940	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1940, DW_AT_name("PAGE0")
	.dwattr $C$DW$1940, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1941	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1941, DW_AT_name("AMODE")
	.dwattr $C$DW$1941, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1942	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1942, DW_AT_name("INTM")
	.dwattr $C$DW$1942, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1943	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1943, DW_AT_name("IFR")
	.dwattr $C$DW$1943, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1944	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1944, DW_AT_name("IER")
	.dwattr $C$DW$1944, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1945	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1945, DW_AT_name("V")
	.dwattr $C$DW$1945, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1946	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1946, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1946, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1947	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1947, DW_AT_name("VOL")
	.dwattr $C$DW$1947, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1948	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1948, DW_AT_name("AR0")
	.dwattr $C$DW$1948, DW_AT_location[DW_OP_reg4]

$C$DW$1949	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1949, DW_AT_name("XAR0")
	.dwattr $C$DW$1949, DW_AT_location[DW_OP_reg5]

$C$DW$1950	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1950, DW_AT_name("AR1")
	.dwattr $C$DW$1950, DW_AT_location[DW_OP_reg6]

$C$DW$1951	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1951, DW_AT_name("XAR1")
	.dwattr $C$DW$1951, DW_AT_location[DW_OP_reg7]

$C$DW$1952	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1952, DW_AT_name("AR2")
	.dwattr $C$DW$1952, DW_AT_location[DW_OP_reg8]

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("XAR2")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg9]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("AR3")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg10]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("XAR3")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_reg11]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("AR4")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_reg12]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("XAR4")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg13]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("AR5")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg14]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("XAR5")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg15]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("AR6")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_reg16]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("XAR6")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_reg17]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("AR7")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_reg18]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("XAR7")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

